{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "572a1d45-edf0-4ff7-a892-bcf224ea6cf1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "41dbb8da-b311-4354-b0d8-44118b0c0ed1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6cbd3bb-d7b9-4bda-a9c1-05bc2e5dc654",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e98fada8-ff8d-447a-be74-ebcf31c13701"
                }
              }
            ]
          },
          {
            "id": "043fe81b-98f8-48df-a8e9-ee1f6d1a30a2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbe81806-80ff-43a7-bc40-5f506822cef3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21cabe25-aa52-4679-b87c-72f016ee7224"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "084a688a-1df2-425e-9634-65aa1970f6ca",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4502c2f6-b607-4906-aab0-dc6a1762a1eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d20e1d19-71d7-464b-b98a-82785b5af13d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29d91e0e-8571-4c19-8cda-4c5ffcdb4feb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e2ee1d9-f00e-4503-b40b-3c8d47fdbb6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4aafb81f-4e04-4504-87ad-ad03997e1db1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72f6444d-d434-4298-b59a-591953290c6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7be45b1-ce3e-4399-be58-a070b0beeb5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca55b38c-01e3-4e46-95bd-3d55d90a29d0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3058d47c-ea75-4c82-b060-d534d6df9b93",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "04daa2fa-995e-4218-a60e-f50ad7ca9b12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "308c77a4-5f92-40f3-ae43-ac4908678bbb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8396dfa7-f507-4909-a019-dd2d48f9f358"
            }
          }
        ]
      },
      {
        "id": "ba3d6559-f2c5-41e9-9fdb-6fcdb1c2c09c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8ebba9a2-2603-4fd0-a8d5-cbf2b10eea59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef9338e6-792c-45ea-b64d-329ea2e1bf2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84e4d270-208b-407a-9168-98581f02e708",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb7d7c-ab34-43c5-be02-dc0c7a1fa198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84160dc1-1e2d-4be6-a217-cca04263db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aed8c5-1f4a-4242-999c-58f35cbd1a13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40b4468-e022-45ef-a64d-c567c5d0bfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4c987fb-b530-4b2f-84f3-f280e7597177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2301b66-6717-4cc9-b8ea-80e113bf0138",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcb8311-ff27-473b-bbba-4c1c8d7aa199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f360370b-b52b-4018-a4b6-8af59ea77e16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c3a6b2e-5091-4c24-9b40-2acbbff06456",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d403c82-f7cd-4a13-8ad7-1012ef5b6f13",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e59650-9338-4bef-a88b-acfb11caba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c663fb1-230d-40f0-8ace-8e324932c1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b7320-a1d8-4ce0-9642-fb4d26a20d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c95a3b-4390-48ad-afda-40e6df951927"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c105610a-664a-46fe-b0f7-a79a3ff6441d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80800800-78cd-4d67-a514-6ca37f29a097",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afaa7097-b5d8-4c61-8b4b-9cda95d85448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c99e1fca-7e41-4683-9a4f-fc432cdd302e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c728b725-8e3e-460a-939f-32be9a5689a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "19c30cec-d6f9-4b86-9f2a-779040e54d8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f55cac61-2333-428b-8e4c-84e9b285e2c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48ccb023-1da4-45ea-8d1b-ff1a7d6b711f"
            }
          }
        ]
      },
      {
        "id": "b81b8eb5-6887-4c08-b472-8c2606c01751",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0d80200a-1be6-4edf-8837-5ff2d378cd7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff57ba44-ae0a-454b-9ae8-0e41b9c80988",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "82149c99-cc41-4391-96e2-cef680ad137b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4547aa7-8308-440f-ab7e-7f1e8b4d0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f99a0c-176b-498b-a412-ae2d7c30e245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a301b50-8f03-4928-a039-9b4bd2bdd311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7317e363-5cd3-4154-9827-87e884971140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3a0253-d7ee-454f-ab3c-4a36e3fd33d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d11aae-6cdf-41c8-8c2f-2da56af0bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4de9215-2330-403f-be4d-517069842f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca50786-0425-4cd2-aabe-f877560d3eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eab495c-09fb-40ce-85f0-c5be52f720df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b3e836-1a35-4c80-a9c8-79fd7fc61a48",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be5e66e-affd-4401-86a4-5ef04ebb6b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4217ff47-4a82-4b4c-aac8-5a41da133e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4954230e-4675-46da-9667-7c167f5642ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4b1c93d-a286-4cd5-bd36-bc52170bb645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb576144-c915-4638-b1f6-9ca63f220a4f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b355a32b-cfd8-46c6-b2b2-d7d99744700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52165c1-3165-4800-a630-0cbd93602eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcfbc65-e982-4b81-b419-149b877f2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e002b0d4-41b2-4de6-9bfe-cc573612e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c805428-3587-4b9f-a94c-18beaad4c942",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8e8dc8-4d08-4996-b1d1-18e715ad8eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40deb1b3-fbf1-4d4b-bd53-e236ae19223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62e4015-5f84-41a3-a1c5-96d7f3847289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f7f107a-3151-4eab-9810-f896b2237788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f20878-b52c-47bc-a824-f5c461089ec0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccbcf94-ca89-489a-9a41-adae9d3caaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ef72f8-eac8-4cfc-ab29-6274929a3309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea7f1b-422e-4376-8446-95902ba41add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b041ba-fb84-4141-b922-43fa2f5f12ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aba40cf-dc6c-4443-84aa-f2dc5e07a197",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bd2e20-395b-4d96-aa32-f8ddceeb6204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28c0481-1e0c-4190-a1cb-b073fa065754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f1f26-6862-42e4-9b31-3dfa1584a4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fedab6e7-c1a1-4b7b-8582-694b8c438371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba81cd-1657-462a-b17c-8fdaea2c6185",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490bc30a-9ae2-49a8-92c3-7e9f05dd4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535c5b89-b9e5-47de-b36e-b92cdbc16585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6affe508-dbcc-4c98-b05b-81759b6dc4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9abc2d5-b0a6-4c10-9a63-4ba54f1cdb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e791c6-dbe7-44b8-8f1b-eb7e011bda57",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4cd106-23ae-459f-98b0-cea3bfad4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd125597-d6c9-494b-a808-d61a84f0c23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89384e55-a44e-4555-969d-ff13ee1ccc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0047604-ca4e-4991-8a97-c0ec3c61b121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c07773-b6c1-4ec9-805f-be1a8af80f08",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3edb525-7097-4edd-b73e-847e265e0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de71134-e8cd-4401-a8b3-4c04913699f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd978b9-ade5-4e70-92d7-e00c170d7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69a54140-fc5d-4ee8-b9e7-38896b672f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94c1396-a89c-4a07-9782-ab90ec0461b2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6494a32-4bf7-426d-b06a-b3982a46cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd45d27-3e03-4655-82bd-a39c6393bb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d1887-315b-45b6-9e75-2d41fe751332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc96c5e-1e09-4332-ba4d-0d4dbb23e446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c68e40a-c510-4632-844a-2e9f775c21e1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef281230-ef11-4e6d-9e22-cb3be0577b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7830a8ca-7cef-49cb-bfb0-389db67a6e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5084425f-fe90-40ca-9607-40d790637553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ddf71ce-24ec-4f2b-9c33-b22afd4d3bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f19beb-cff2-4d09-a135-231657c44b40",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606fd31e-af44-4da5-921c-24aaf0d8f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7862b42d-b294-4f33-9fe0-1daa982f969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c08de0-a1f5-44d3-9494-4a4a4dbbcc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09aa4e2d-9545-41fa-871b-67e578135ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff209222-4734-4327-987f-91102f71b7c0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22068fa2-6bc2-4ae3-9a5b-7df87b941700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c635bb2c-47ad-4f29-8018-9ce2be953590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d293f1de-4db8-4004-aec6-5b5fedb09d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b593a6-4acd-4402-b31c-f15accdf6e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c58088b-62fc-479b-be81-9b621baa105a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f054dafe-9ffa-42d2-acf5-5496c4c65c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94685935-5703-42d4-86b7-677073f8f269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed435783-1bbd-4d1d-8ef1-0efc85be32f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66d0b88c-8e80-40e8-bb0d-0d44f6e4ae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc7cba1-66f8-42f0-9517-b6ca8bb771e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac135b2-9aab-4989-b514-07c7cb3546fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c5ab07-bea4-42f6-bc0f-3a1c8d165d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4ae330-fb57-4eb6-b766-043feb9455b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11bbe893-9c7b-446f-a5c5-22c92529773d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eabff6-a9ca-4b67-84d5-e56e2cdee65a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea8d034-c19c-4fba-a761-9ca5e3b26548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcd920f-24ce-4c67-952e-911796f85c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1138cf-a49b-4dfd-9c3b-a1b51adfe3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a56673-88d0-4305-b973-51f674d4e669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9f3cf5-a8ab-4b3f-be5d-bc08180b4250",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b535c6-5f3e-4aa6-b5f0-83f53df335e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3688af1-4843-4567-a306-d7f6b66b4e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499fecfe-4c4d-445d-a956-3b3115e35152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb0a663-5eae-4e22-8a49-bb7bac87bdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4005d27-e35d-4f1f-b947-f5a133a79f6d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a3b96-84ac-47b9-9dd7-a18c7034d069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801cf5fc-b43e-4228-a7aa-b0852543c037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e606052-7a4b-470e-8ee0-7203a7eedcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddf91c7-9023-4925-85cc-6162f315ae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135cebf-d787-487f-88ed-581a46a4e2e1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05675f1f-aa07-43fc-91a2-58ce1e63eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf284470-355c-4ee3-b387-c87361edc1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2dc76-2047-461e-a748-57f5e7a471e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4adec8b-bcb4-45dc-9127-86ed5adf3731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66de2edf-43dd-4285-81fc-f1e546427b46",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ef47e0-e6a6-4df3-a5dc-1ea20fca263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d66f47-a261-431e-b0cb-ae368a4d878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eda84b-f61f-40f6-8a1f-dce718d57bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32431392-fd25-41fb-8ac8-85d0eb1c04c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2f84de-d538-4bb6-bdef-f37d23775d83",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319cf32e-31b7-4eaf-acd5-e1f2e9e53820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd37ce4-834b-482d-a774-b8dbc28fde1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb256b4-9fa2-4137-b969-0447b670c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c35dff-8682-4b15-99b5-8e706ac5de07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d51d884-7ca8-4e72-b0a1-7439213cb3f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12829d05-19a4-4089-8d99-b888cc6a31ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e21d385-056b-48e8-b33e-9a10009cce52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042c91e6-2b1d-4303-aa16-f4efd40fa677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e14525ed-afb2-412f-9b28-92bb65f4ccd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e93adce-46b7-4385-9bbb-13d7f0950fc8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c555d87-e862-44d2-a7ee-8f44f0729046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95952839-db7e-4a16-8bd3-22ce956414ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbf0bb4-b383-4128-9cbb-9a7711fb187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f67a4e8-361a-4375-a2ff-567862c57708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00073d07-6384-4696-b5cb-1e5d3d3c1a1a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3cb84-15bd-4144-9631-50b61b9ef0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e99b9db-a760-48fa-b229-a47fadf7f890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabace71-fd24-4af1-ba82-fd21041560d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b10d47-4cdb-4cbd-a65f-96a635f51773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa001e4-451b-450d-9eea-216af7bc250e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb791c1-433f-4375-9681-aaac6d706a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7319527d-2231-4c6c-b95c-eea7b7cf2be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3054c25-f048-43de-9913-9f55f3a7c309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "637070b8-fd18-4d20-bf57-c5c6fddb26ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaf6fec-be7c-4771-8cea-cafbbe17ef5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c31533a-1bf2-4ab2-b0f6-cac4268e922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d1b34f-983f-4176-8622-f5e1bc5cb69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28de3787-aba3-45e8-91df-4d91ec2853f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb9f4d2-fc5c-467f-9e97-c761b03483ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779d4293-77a0-4320-921e-e07b13ab0c32",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c80094-66f7-4c57-8cc7-dbd2bc1188a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e436bde5-fd73-4219-9c6f-78a6b770de6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cc9f44-ae0e-4508-94d8-c171c5abd616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94f589b-65e3-4b9a-a855-61941c726660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecff6b6-f57f-4ed2-a351-07cec16d566d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a997cf98-28e4-4af1-a89f-f28c71888897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1414fe02-8b84-4627-a93d-3f40d8431f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1914f98-50be-4717-a422-fa9129fb9e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed699a2-4f1a-4f21-8b77-8a7ef9169529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3be8c7-3d48-4d18-a59d-de66f380c39f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616bac93-1233-45cc-a4d4-067259d9c938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6a5c9e-cefe-49e4-87fa-621ab149b5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2155a00-3f1b-462b-93eb-795a0f11b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39adabd-b4c1-4caa-946d-d0d12c8730fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a3f862-304b-421d-844d-f37e8815ff86",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7878c-0403-4dd5-be76-67dabf570e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991f10ab-4854-477e-bad8-ccaed0708d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e1d97f-9a04-428e-8bdd-2b48a7c7252c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4197a05-4b66-4d56-ba0a-2c3a58099026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1d58b1-0cb9-4283-888a-bd458e935fb6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c966a6-aa9b-4e39-a496-744e9f753c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b729eb-52e8-4f55-a4fb-ee19835df1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4278f547-ddff-4aa2-9569-ec18834c4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec547fa8-4f07-40ac-be73-56261ee4669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ef534-57be-48e5-9792-cfd2c4ec2df1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a659c-fdd8-42f7-b6f0-39b914500dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d547d6e1-3cb0-4e90-9e29-f258b9268ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853ddd2a-634f-498d-8f21-76ae010ca52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "238a9ced-5135-4517-a7fe-481fc6ece256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b18780-925c-4890-910f-eaa1130ad14b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7b26a7-21a0-4643-87d9-9c1773cdd552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b876bb-a386-41d0-af17-17f48a0c79ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12c1dce-6412-44f2-922f-a69238442d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7baddb77-8a0d-470e-b816-18bfb30f7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c404c4-91a2-4486-951e-42e021fd04aa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9754d1-b81d-4c61-9834-ea853d13f299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71201d43-02fa-45e4-bbe7-d52fcb2d062a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe23bee3-1a27-4f7e-8d4d-2da9bf9a4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a621c3d8-1aae-4840-88c5-a3afbd98a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081aa196-eb42-4d90-8c63-1226fef83659",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d7548-2c6e-4023-933f-0ab104f33341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fbc1ff8-216f-4636-be69-5efed93e3820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8dfd0b-32f9-4683-9afa-c608474e8fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d40904a4-b9cf-4ae2-98ed-54e88301f9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c34679c-1f7d-45a8-8c84-19ae29c187ad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef308e6d-bc9f-4c85-ab04-84724c8f0918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11cb26c-a604-48cc-9df1-d8026290b276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4d5c7c-e6a4-4817-a23c-72aac75a861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c78681-5880-4002-8740-214b42a69055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e014f3-a2de-41ae-9eb1-e5aa076ff81e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2eab85-a798-430d-867e-2f1d67a73c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49273980-07fe-4008-afc8-7d9ec477e178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d2a077-d052-427c-852d-e571f2be52d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8855a653-0c6e-4d93-a968-1b8dc69ba3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cedd5cf-a278-4257-a257-f847bb5a89e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6f6ad6-50e8-4938-a37b-c9cf40a8141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40236d3-56b4-4e56-9f41-582b1825b56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2d6be9-2dbc-4d24-9014-0fd00b4a8f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "510c786e-0043-4e53-8570-1e760bbaf4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67283b70-6d7a-4a48-9d62-96aae83799fe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f5d25a-0457-4487-a933-5c11e59c1436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f257d590-fdcc-422d-8556-02d0ee9f0158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5cb1f0-b53e-4c92-aee9-72e6f4ea169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "509a55c7-230c-4f7f-b783-fb7cb0a9025a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0d8896-1b2c-4dc9-9da3-cf1f43e66508",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5362dd2-5c38-4c1b-9f58-9fa826ceb74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc95591-62c5-4042-a0c3-423bfbd4e263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c29e03-6962-47d3-a211-c8e8581c5b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "554a9f10-6fc9-4084-a415-d7c049c59518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8ec98c-060b-4984-a568-f92ad841c85f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f35165-5b6b-4df4-b08e-52a7168978da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446340d8-9537-4f09-b7a9-8fcf7b06c6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72875e69-d197-4590-8734-f4d17d0758bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b15f84c7-ce3e-4d03-a2d3-ec7bd08051e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a45138e-bc89-43d2-b87b-a72fdf9598c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5434418-7f88-41f8-90dd-39512b5f5f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c9ec3b-8dd8-45be-afa6-54798f5ab87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2d7bdd-4acd-44c4-816a-2d29e8d4176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "188e3a70-6d92-40c3-af1e-3a4de5bff95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b39209d-6606-48ae-85e6-7524e6f00972",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bfb59a-86e0-40b6-9db4-d03837ea2f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a872a1a7-83fe-4f5a-b9eb-12ec2bbd8841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0df473-64de-482c-8ce7-5054f5076fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f77c710-5897-4fce-a93e-a82528928533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ea2a36-d3e5-4f30-9e1b-895c40f9b6f1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091e8677-9fb3-42e8-a08c-6ea299acb612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b008f1-9a5e-4daf-b672-e8beb28a7b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3366383-dcde-48ee-9ce9-777a8a5d223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26076449-4517-429c-a2ef-ff06df25a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551759b3-4541-4f79-9f2c-33a8700ac3aa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02de40d-ed28-45dc-99e5-e9164e01052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0523557-1b86-443d-9536-e9eb94ff8f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f0ba9f-5308-4369-911d-1fd799d2d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b3c9c1-db88-46da-82bb-ec84bf530778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf056539-f0bf-4f20-a6ed-c9264abebaa3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6105d6f2-93a5-4ac4-9515-8ed438c0e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05fb067-3e32-47f0-b985-2476f1001b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5dfe13-316c-4604-919f-a304c9f286db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f9c262-3d95-44f5-8a26-c0778a3e6b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53516e7-adf7-495a-8873-77bc1317ecac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b422dcd9-097b-4fa2-a24f-bbfb2030b9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f38455-2572-428c-9927-2b3c648d7be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da49b43-75cf-446b-bb9f-2b919c0b1798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ac825f-36a9-45bd-8435-07a1c4ed796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d408a7-d614-482e-92a8-75280d90be4a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f0b21a-2f90-4ca8-ad6e-588868b2fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63781403-3e4e-44d0-bb68-866a5c5fec92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab94801e-4e78-4b17-9a2c-15ecd2616dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aecff4-f8e3-4ce8-9545-6b70aafbd1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338effeb-65ea-466c-9686-42b828ffd7a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009233a3-26dd-4544-89b6-b53b20a72b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55d0681-43a1-4ccd-b73f-001649462fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad30cb6-104e-4d5c-880f-9debc5f0084e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c342f9-714d-4545-9f11-2d75f28dca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83818644-a013-41e4-8f69-1318f0b5366f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b9883-8be8-40ba-a6f8-804fdb8e2917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b57206f-e891-4d57-abff-6df6fc5331a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33bd896-4e34-4bd6-84fc-812889e962af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6866c56b-f096-43d3-afa2-767a9f64adac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb39fccc-0d0d-4549-ae68-9ffe6b44af70",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c434df3-db07-425c-85c6-ff74e575bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf5eca-7c4a-4680-946b-8120e418cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23f8f4f-3714-4d3b-86c6-588a3bd851a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16eb02c-d095-4673-9f3c-2d19aab7cd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183043d7-85b1-4b62-b3d3-e6221f047416",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79104d-45fb-44c9-ad13-b5644a4a2ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aaf241-2129-4d58-b872-27bc065004ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f38ebaf-e242-48ae-952c-8eead1fd4d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52566b3-8943-470e-a140-74e2ffc5a5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e59c7-eaa2-4563-a944-ae8796b06281",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d9f9af-484e-4c41-9639-0cd285ecdef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cfcf4e-59e9-4610-a5dc-58cd5bd43e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867ead7d-eba3-483b-85e0-283cbcb1ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64dedab8-c871-4ad6-9291-6b11499b12ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b66a8-d554-4783-8552-db316af48dcb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0fbcea-3c6b-4d38-91d9-02b26e22df2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a45008d-b35b-4d69-a879-a35ee61a9c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490f80a6-f3c3-4131-aefb-2ffe9c6cba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "879daf82-9ba2-4835-8bbc-b348bc490065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913d117-f32e-4111-90d8-ae493655d5c6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bb0800-98a6-4d6f-95e8-c5e463d70976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc6eaf3-2757-4470-ad78-eed6ba1e4964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d825e4-8fdf-4376-93df-5bf15b6badcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8b672604-aaee-4b44-b177-ccb30b118131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c3d93c-2aa7-4491-a41a-6dcb531d392c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc45b23b-d750-4c38-b863-4bf927d036e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2370d32-0ff1-45e0-81b2-4bf5f44e2882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e459d00-3abd-42c7-8586-0a84a9ff7608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "055f3678-2492-4c69-9c17-e760478445cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec671a4-9917-4b97-9fbf-9c9da30df25c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19462804-6ef4-4de8-908c-b02b48ebd1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3b55fe-45fb-46d3-84f6-09a5c87d6964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1a4f94-83db-4fbb-928d-37f95cab45a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "085aaf0a-da61-4599-bd8e-41d33b47e968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc07b69-3460-4761-abd5-57d057972656",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ea6877-dde3-4b8c-a97c-259c1e7e34c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e46f03-3e87-455d-9111-33b0d75f1089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c28558-ce77-4d85-892e-41e53a3e61bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe70a904-97e7-4319-a339-de64bf71a190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf8dc27-95c9-473b-b88f-e84db72355a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc7369-4cbb-45e6-b039-815290f484e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a937dd9-3d75-4dec-86b4-3d90e6a880ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c9c78-cc02-4eaa-aca6-7da7b83bbfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8634ba85-1a14-4177-8f10-6de76a2acbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f67561e-d8ed-4514-ac41-0642200c27dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f49cd-ff64-41ff-b9f4-61bcfcf434d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2815d9-c75b-4c18-a617-5607ed0bae60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c7c013-b55b-49a0-bdab-1126ea830adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d08789f4-7161-4d0e-9b77-cf3d16473766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd14265-5d62-4bce-91d8-19571da5d303",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689528c1-d976-4ca3-9786-eda885b395db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f310add-2985-45f9-aaa9-c08523e95174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61dd246-a6e8-4f60-8240-d5e85d1b9cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74cb3e4-413b-421f-ae66-2644bd8df1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ef37c9-82f9-4ebf-b4b7-79c5010b5701",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d554e82-eeea-477e-a373-a10492fa7347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b198f30f-2e3f-4ee7-8c68-b01014f20eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78a283e-08b5-43ef-97ea-ebc0b7a4cf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0012f7-e0e1-46dd-8c78-aa5ba67a0673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b83491-78d8-445d-bc2d-70da8aaed1bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb452b-0986-483e-bd36-ebb1306e6c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143e1cb7-1cf9-42dc-a5da-ff1606a687d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424ae56e-1128-45d1-b9a7-75d381fd652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a2ef8b-8ffa-4df6-b665-520ec3d01a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336ac156-ce7d-4f3f-ae2d-2898f564717d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922f76d9-4d77-4561-a418-a4db612e5583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b570b6-8ffc-4296-8a00-c173258f6859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af4fa72-98df-424b-b6c8-974414152b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac035962-2b01-4fb7-9e4e-2e1843f73beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773163cb-8999-4a3a-aaa5-647032674c59",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171e9842-256b-48ca-be63-4e59281ed463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda81f5d-9d55-4bcc-9681-f660fa728a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd30830-7d0c-4870-8cdd-8eea67f68b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "950c5947-a2de-4d1e-8657-5274e46fbd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964cbd15-8378-4f53-9e4e-4cba8393a2cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0643a59-42e8-4912-b749-4038d0e3b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae34be1-9e24-452c-ab27-a75607aca532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d22756-7641-4dcf-99fc-3b943a4505c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6dd949-7a4c-4743-b90e-cfb932d7b643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfeae07-77c2-4211-88bf-6bb5707175a6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d23b95-36a5-47db-b08c-510c691aadc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc959cb9-cb46-4d28-887b-85871ffb04d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf39262-086d-4e77-9cf6-563d3a2090a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e53d0796-f9aa-49b6-8eae-c0eb7093be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a50db0-10ba-4bf1-a633-8d5ed37abe92",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ae1066-e051-4d55-a7df-a4dfe8eca7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6153616-2d7c-4583-b51f-c6ac5112d0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323d2bb2-e402-4cb9-8592-6696d35f07f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8061c2-85a4-4c2a-b602-e8347075f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8ed0d0-e93a-45e4-9884-dbf926fad5bd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a7ce5-ad97-4da7-892b-4c3c9d5e92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6b465a-79b7-4062-a1d9-a172bb026e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825360b3-0a8e-4aef-a346-8d066fd643b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79f6a77-8d03-4ce5-b909-80189753e714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f2686f-8334-4a18-8f5a-0d9911565f88",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea4aae1-6bb2-4a42-8e08-84367f023252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe49c0e-4c44-44a2-b062-f75232f4d6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56f1bad-7365-4f95-97a6-af5135122be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbd60de-8bac-4890-b4b2-9adc20774bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4421977f-4d68-40a3-9bf5-0e21b60bc877",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f24fa8-02eb-4e71-b196-9df9687e3b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9543a63f-846d-4dcd-ac8f-145692ad9d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82acb0ca-76de-4ffd-838d-898c41d852db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac142d9d-7241-40e4-b526-23cb83e09bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef3b786-f5c5-4239-9cf1-854cb544e7ea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e6a336-c16e-4849-87e2-cab9dce4f61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f99f78-5494-4432-ae91-210597e5bb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f90e20-2c61-49f5-8bea-b3205df38f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af685f58-c567-4e13-bc85-c43e52e9ffdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c6cfe-b74a-4088-ac25-3f297a18cedb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0cc00-6d70-453c-8ea6-3420de5ce238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cc9119-48e8-4f2f-b4d3-52234a1a8e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee05e6e-ab1d-4d70-b022-7c7781d9f59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5516ed46-280f-4aec-b91c-09fed1f6217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52a7513-b77f-4df1-b085-684bb5b09d76",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2488a0fc-2e8a-4634-b2f5-78e2ced8f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c77504-6502-4c45-b4b6-f1bcd18eb0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a30334-8697-431c-84a6-8aa3ac44fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41de054e-1885-467f-96e2-b7700cca7c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752306f1-a613-460e-93eb-4ad35f41fdc3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e5948e-5f99-4caa-ac80-ea8f65ae8a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf917b2-ceb5-4425-99cb-12d131f53c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c4e3f4-6609-40ad-80a8-2cd7e4f54c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01248c27-261b-4827-aa29-ca8341ec3dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a73ee2-e69b-4730-b95e-806c6e438179",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aa1139-66f2-451b-a4a6-f8093d71560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b6c4bb-1ffe-42c5-a4fa-6787768d1e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e125c13-8b5d-4471-a656-9fb01e63654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da0ddbe-a10e-435d-b305-3f2c29be65e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1606d42-dc6d-4b25-ad05-634dfad3b65e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cd6366-332d-4a29-a3e3-dc2de81feca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0522227-2db5-4515-9336-8ce6f32ef0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5488dc-04bd-4446-b3c9-23c96c39a17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d914f075-1248-4f81-a7e1-4ae1a2a67ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22920b8f-56aa-4f79-a0de-c0ea6fa6fbd7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f556965e-3cb5-4636-a106-0320e0cab946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0a3e55-bc11-42d0-bec2-927a5f999472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4cf2c0-929b-4b31-b619-59d2bbd86dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc6d7a7-88b5-4d88-bccf-dc7728f56251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de712695-9419-44f6-8c11-479c2e0580b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c8bbc-ba30-490c-81d8-ae6158112041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93872368-3dee-4382-a0fe-c077a0f3b8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbdfd58-5d00-4e8c-b243-b9c9d3f417d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98796102-7b0d-476b-a7c5-1269ec72c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7d6a33-0914-4b28-99ca-bb0f6d98808d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9fc980-4536-4a14-8f22-774e323d4b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a0ebe8-e2bc-4173-9250-064a104f6aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a069d-cfd6-4b4a-8464-caaef3e4610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "661365eb-b625-4a43-8678-ad6d41046e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a557e-2a27-4641-bbbf-36f669ef57ae",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f3390b-0012-453e-b913-fc5929071a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e331b06-da65-4bbc-b65a-3ed15d298c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c7c28b-9668-4f0f-bad1-f2c08a164401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "451f12d7-932f-40c2-aada-270cb266d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b2075f-0c95-4082-9423-488fa9f8926e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbc0396-60f8-46df-bceb-878240a03629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f5c27f-9889-449c-9175-bc5ca00130a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29b9f99-6621-4974-a533-4638378bd34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4832af9-1c85-46bd-a3a1-43e6e326af19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155eed3-90d4-4144-bd6c-dac8bcd0cf6e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68b086-c27c-4e25-9cef-5bc609b9f71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e017a5-1bb2-45ec-81e6-eed4032db392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980d5e59-42d8-477a-80b6-04e5acf424a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbf57f3-4cfe-431b-9f49-c7b30885de1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8582a3-ca6d-473f-9d38-18d0be6dec02",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd2b73-eba2-4f38-9ac7-f1e8283a5203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c262a3-f667-4c8d-81fb-eeb2df549ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360e36aa-fab3-4001-b101-66c097daa3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c175f552-2a2b-4e62-b942-7c5d55b2afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8bfc88-38e8-424e-9fd3-c0face5f35a8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a070a9d-58fa-4b1e-8c0a-403503a5292e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73038b9-f8df-4134-b082-05ed0cb0e1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ece6f1f-0063-4b64-a291-5c6f3c737d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3bf134-aad2-4594-9848-78e81a55ab2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bb8d05-f535-4f37-9195-2a716aa64e60",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07fb836-2f50-415e-8d35-237c98034046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c728126-e7f3-4aab-91d5-cfd9d7d8c87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec10adb-469a-4a7e-9152-65b1aa022e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a20b1e89-a6bb-4db3-9a02-0dfb5b5e912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9da8ad0-dea0-4ac7-a9c0-87e3c7bd1830",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a41fd6-8135-4cab-bed3-d62ae7912393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7264cf8a-ef1a-436d-b3e7-36f9a589c13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4e8b51-fc0a-4ee1-a756-c55f52f1fe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d540d6-e151-43af-91c0-092d621793b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23754e5-5a81-4805-bb6e-68117668e107",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106a121d-70e8-446a-9d87-ef4e45cded00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a8fb10-c823-4e03-be61-dbeccc6922b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0cf773-b02e-42c6-ba43-06ef36e84a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f249eb4-3093-4ef6-a667-e41330367029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e9bd24-2d97-4875-8242-484722e43c38",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad28bc-0c6b-4af7-9417-48fecb775e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6478ba-d2e8-494a-8e31-392ff885168c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8138e1ef-53d6-4d3b-9017-d0b06e78194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62900221-2d8a-42c7-895a-ef96acd85be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be251428-574c-4537-9cd3-51d73448c98f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc649dc1-fb6e-4bc3-afee-d086814d21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf497dbd-ecdf-43d8-a6a7-b78663a40b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8485999e-10a0-4ac3-9c17-7ec51c02bf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0049205c-675b-4bf2-9494-82b6ebe06dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63df7f-c21d-4c1c-b5fd-08c8e535296e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b35e6c2-5998-4ce7-b89c-87ffd94cc380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2ab622d7-3e1e-4ddc-9bac-7290e5fbd87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615ffe28-576d-4cf3-bf36-7c82088f0b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b548905e-7162-41a5-a917-1e1c6b65e6bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7156c053-74a1-4118-a6da-7fc1ce95542c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34561388-50e3-4f9e-ae23-79054881b11c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d86ef3-91fe-4c89-b8ae-302b5ed186ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dcdb183-fc1e-40e4-a514-06a6c745c4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03adde3-8367-44df-aa42-5696ec635a92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11c279e5-7948-49ca-a136-e378aaa61dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3658c3fc-c2d9-46b4-8385-d097de1c545c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "117ba183-f1eb-4e9e-a0bc-7ce4478336dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8ecf92-da02-4469-ad53-874097c063d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91ae39b4-5138-47f6-998f-c9d61388c58f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62d09316-c40d-4b79-a2b5-ff09879937d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36f9eb1f-6df1-4070-a58d-cdd18e67b6ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c62a1f9-eedd-468c-b7fa-21833055ccca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11d04db2-bd0c-42c8-a135-51e7b09f77b4"
                }
              }
            ]
          },
          {
            "id": "0914e324-0e3f-45a2-8ed3-b91d54b7c1e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "687b03ea-c7ae-47e4-9d6d-c250463af802",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f1a2b77-c49c-470a-a500-dec03c191cec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7fd4b8a-4018-41bb-808d-f405ad040d57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f9a36f2-951d-4ce6-b2b9-80c7017afe7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "060c092b-d147-494d-a65c-1d989da0ce84"
                    }
                  }
                ]
              },
              {
                "id": "1d13b392-44de-4b28-bcfa-4c7eb8bfc4c0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11be64f3-4733-4019-b063-67fabfb2d723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bcef700-7859-4499-9112-4d5978858ee3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f61559d-ef15-4e2a-8fcc-a7eb57741421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8747838-9e7c-4003-b331-2a48504746f4"
                    }
                  }
                ]
              },
              {
                "id": "faeff65e-9f43-4e7d-8d7c-6c71e2e1986f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "488b1ddc-c400-49d6-ab31-1bd0bb34b351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13ae7723-e7e0-4a9d-8596-54f5986d650b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3c7b94f-b2a7-4f6c-895b-26395e113331",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92529987-1ec3-4acd-8e88-c66b08afae6e"
                    }
                  }
                ]
              },
              {
                "id": "ff921545-c42f-40c6-b3d2-c86a157e81fd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7868fd36-2d5b-425b-b2ec-a7042aa41b98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e237f308-38e4-4644-b4e0-9a9946505151"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b81d842-42a7-49c8-a2ac-3942beea4f89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "22b70742-234b-4ef3-9926-239646bed095"
                    }
                  }
                ]
              },
              {
                "id": "b6f6d55a-fccd-42df-bad2-9d4ca43212ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d4259cc-c8ea-43e0-b108-949f09f8f30f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f6031ae-171d-4cc5-b238-fa79c5e055b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d7ce713-32c2-40e6-a4c2-6423c9460263",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "45fd3580-4b71-4297-b61d-471b2ed1d76c"
                    }
                  }
                ]
              },
              {
                "id": "c739443a-10f1-46e0-98cc-75a445f55344",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a6646c9-def2-4d73-a886-60ee5bd84b85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3fdcbcc-e51c-4100-a658-26d917cccbf9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f713dca5-572d-4d00-85f2-4ee53ffffe72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46771193-d4d0-444b-b80a-ec7f024bbc7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51af7ecf-d604-427f-b262-33b0083010b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03ab99e5-87ba-45d2-9a40-9fb5721923dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "316cc5b2-9f66-4308-8a04-d55dd9c94203",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "328ca8cc-b3be-4a05-b33b-b635f2fbab37"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ae13203-83f6-46d6-a31c-7d107abd7c77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8dfb447-88d7-46a3-96bf-5ccd64caa7c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f55e90b0-eb7f-4445-af8f-41cf6656a8e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0612699a-dc26-4691-bc6d-18d24841d9e4"
            }
          }
        ]
      },
      {
        "id": "d55bd647-e464-496a-8cd0-d44311b49109",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4fb2984d-353c-4fd5-9a6c-3fa7e0441465",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a8144cd-0754-4b88-97fc-c365621b66cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9764b8a-f490-4828-afbb-7f8b0a09873b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527eb372-d641-47a0-a543-019c32255dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d66ad82-466c-4c49-b6c9-99986f2096de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413dfb8c-f0c9-4431-bbaa-c137f019b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e1c986-e0f7-43eb-990e-64b26773960e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050cce2d-0d6d-4839-bccd-2d9f77834487",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10491132-a86d-4d07-9ac9-f15882a3f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c743cd-7371-48be-aca7-2168642c965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf046dfe-6332-4003-b7cf-5d1063d28991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10269111-a375-429c-ade7-dbf78a3ee5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72efb81f-55f6-49ff-81e7-6ff4e21367b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c3d699-60e9-49a5-856f-8f1a57e6fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0db147d-b200-4602-bc37-d48d5c48a6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af6087-a3a2-4a46-8371-241bb85998a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0670d722-7d55-439c-bfb7-bdae72a22be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8d72c7-e7af-47ae-84b2-a399ec25ed36",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e57b6-1838-4ca1-9387-ae6c704da20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194b7abf-7105-40b3-b88c-115fe20ab7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0af361b-0824-4e95-bc49-0db308182816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9978354-84ec-4c8e-b441-4d0d5ba7bf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2fd794-d07f-4110-a83c-2747b0c2d69d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9aa963-9ad7-403e-b275-1a76d36e77f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0d95b1-ed2c-4537-95a7-3b4804c18a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efdac56-7158-4c7a-9e72-023ce3f822de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea9a2aa-434d-4813-8ec2-c1478accc49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee629ae-8237-43be-ad4b-9cc8a1269cd1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9b354-f8a6-4c66-981c-7eb91be3a323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c95ad-d1d8-4d88-8693-9547233bb319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b39e68-2321-4374-b988-974963982ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "756bafde-e5a1-4cb7-9518-0eb0ab160c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f574f-0d58-4158-ae6c-29e113616e93",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f93a29-9120-4189-80cd-fba5e5fac40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62330364-0537-40eb-b0d1-4a1bb7adedc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e8f895-fd4f-445b-a031-32188319b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf9f2ae-fe19-4b8f-9a3e-d0c971448573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8d2ee-733b-4823-ba28-6f9510640f5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc06d2d-20d7-4d58-9707-c3fbf761fa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e75baf-6e32-481a-893d-414b7dd9dbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869f4127-5d3e-45fd-8e8d-565cc2d8d2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "076a773a-2a5e-46b3-9c06-4c3c30e84d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d637faa6-2d59-4be2-95a0-b07492b01ec4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d1f1bb-dfba-4b20-95fe-b2a693373aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56593091-3b66-4eba-b254-c1cf61b6df71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d52f7bb-6201-4c83-b764-1bf88874490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cced1a0-4a3d-42a1-90ac-4570f9904003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f89ddfb-76d5-461a-8bd8-8421601c3b97",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab5d2fa-3030-4c4b-ad8f-412f5046da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c426af91-7ab3-4c25-951c-b9655defef10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a40aa-99d3-4614-bc19-4e3d3725b71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bca3229-73dc-425b-ae8f-19bff0f64396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47f670e-658d-438c-99f3-7e6b6cc43b0a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6662243-775d-4a34-9497-83859790d054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73acc3c-a68d-41c6-9b80-2921d501ccb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdc7711-63d7-4de8-bc76-1efd0ff447d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db935b49-61a9-494b-87f9-e7634694fc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963002ca-a034-474e-a474-75e984144df0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f384b5e6-592f-4131-ac56-8954b2eb2c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77022605-a127-44d7-9b8a-e4c12495cc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff24e256-d4ef-4c36-9a2c-0d3cb50ffb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8875f6-8774-4a0b-b659-47787ef31d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b55df-d42b-47ca-a1ba-ed619b347f54",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dd363e-9975-4a14-b97a-0755feaa3ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f3f737-abd8-401d-a42f-00347372d699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a80001f-afbb-48eb-bc26-1de9428e652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c40c7af-9182-4ee3-afb3-30969138cfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e487c588-4c9f-42bc-8463-7b7a1f7c458e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cdbcd0-69ab-45e2-b343-47f8ad7e1c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072d8cda-1e00-41e7-ae84-a8d7be7ea46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eec8ab-863c-4567-b04e-b5ed025fad80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "998ddafd-0795-4dc7-ac04-a47b18dd6856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b61648-fd49-4ddf-81f2-a2d22d4f9024",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9ba06c-7036-4601-b3f1-6367b6ccdfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4740ee45-e3e7-487c-a268-2c7da1f3b266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1ffe5-6b9b-409d-8669-f3ec9d093841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65cffa61-63f3-472c-af20-0d4acbb89001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28efa11d-8fae-4dce-9607-9a1450529c74",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9704eab3-fc6a-406d-895e-687274a1d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd3f8b2-1243-4343-bba7-a123bd2e2f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a880b4-c0af-42e1-9654-a3834ddd2807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab469ff-85ad-412d-b85a-53b057bc7bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c866a2-b394-4ac5-a954-22f8cb9cb108",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d778cb-689b-4ca0-a55c-2cb931c371ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cceda84-6e62-41b2-9753-9aef989d1ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854199e-2bfd-4aec-aac4-b1da051cbf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e42ca26-d54e-4831-84c4-ead18c0a152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f7cb5b-5248-4d89-a7e2-78a849e065c4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edc5f8f-8421-4a31-ab21-7742030f2c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ff8c0a-5674-4239-bbe3-2d6e543ef3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0706c6e8-b456-459b-ad44-349975c30596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99eee7e7-9e18-42d0-8d10-b8ed1809d060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77991dd9-f719-41ce-9df1-bbcf4b40b460",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097cd7e1-c078-466e-adaf-ed0a0f9ef34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9485f47-310d-45c5-a55b-e90f2a82db32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e70f59-66d0-45a6-8c4e-0a89677cc44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44442406-5d3c-4bf1-9e41-2d626df4b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee8e536-3c1a-4aca-94e6-b701b89da03f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b231985f-9ebd-4b66-9780-536539dfb8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8149159e-204a-41a2-b235-eaf510ec861c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fc3efc-bd7a-4600-8f88-4a3cbe0eb449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67af907b-a259-4e73-8c6d-1451a3fe8213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ad592-81a5-4e4c-b61e-8e074a69d65b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581f335-25a3-4cdf-beb3-f89b3e263d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92493e9-0dc9-4934-b210-b57fd5cf190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c7cd3d-76f6-41b5-bd83-7419fa41cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0335d3-38f4-4c2a-94a8-884afd5e9925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4695c88-8900-40ab-b092-f59d5ea0fd38",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790cba88-8090-486d-a576-ee14b236cb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37c19cf-7885-4935-a66a-488035db9c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c84da-1662-4010-ba9f-1e7082a398eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6913dca2-30a6-40d7-a8cc-b3ac1967ddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac28a3b6-3a20-4255-ae30-bba1341c9cbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5f163a-fb96-4378-ad59-4479a6cce76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1b8191-b0cc-4588-87c9-c0855f73a726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc41823-4796-4ce2-91f8-46739ecb73c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21769b56-f774-49df-945c-e3d8f9ea584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c2e52-bab2-49b3-94ef-2b4d4c6baf27",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1580369b-42e4-4845-8b57-c7d8452d37a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695a476d-b076-4125-8ded-b127d60a84ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3814aab-94a4-4d84-b4db-e625d122a106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4afc0cf5-d18e-4c51-b7d5-bc99efa78520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf43dc2e-959b-476c-9133-5d33749e159b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ace5afd-af27-4a9f-8000-cc6f6958650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19231ed4-bb5f-45b5-903b-72911a24de4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03179a3-8232-4e2d-908a-d078620188ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46817702-8180-4c94-9f5a-950a1cd49082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa368b3e-c36b-44f8-82af-cf1617251f8b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453c2f35-2418-4069-8ab1-c19413b62fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea017351-bca5-40c3-b5c1-dd60f9e8a42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89723382-8fef-413d-bef2-901d99d20060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87888c3a-d97e-42a9-be48-b683e028b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a47c4a-ec0e-47f4-88f1-6c9b90e7971a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c19a3-41c8-47cb-bcbe-fa9f43361623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6670b9f1-d332-486c-b15a-f7a166bceac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe555745-8352-4942-a82c-219257f237c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4af940-09fa-430a-8bc7-655180e19763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b73c2-f87a-4610-832a-8a2c2f28b7a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62787ce4-201d-421c-9bd9-f0b48eef7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17e3138-9792-4c5c-a21c-d9d8662e0210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428e5961-b4a4-4b8b-8fd4-2e8c2d4c99e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312a2647-0ead-4bb0-ae6f-1911958a19cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5827a995-461b-4481-a69b-ff82eaa6a6b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be711e5-3b61-4be9-a077-21368f1b4924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9624962-3a89-4a00-a4e6-0525d15d0125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc37d0-45cf-45cf-9520-09e06bfae64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7da786a-d838-48fd-aa30-4457bdd2bc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae4164-8c69-4840-91a5-57dc299716cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ec2f59-5e25-4dad-84fd-786667d54ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2401021-397b-4fab-be48-67ce07032014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a7bd96-3493-41d4-8c54-4fffc9ac7f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c916dfa-9359-4627-b4af-3b1fe25f81a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b7a783-90b3-4e27-8ca3-3aab6d3c3ae0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b0dc4-90b9-4b14-89db-d82c103d1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6270602d-2ee5-4b6a-a364-7fcea378862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d59e86-a0da-4e30-ab74-a83252ab544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2966b00a-dcdb-4d9a-9c5f-e4b5dd6f7be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ca821d-d233-465e-a9b5-1a704bce270a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b2aab3-1d03-4e03-a5b5-3d78f207f77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23882528-8758-4255-b5ae-fbba0b53db7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d6bbe8-0062-4a41-bbd1-c67d0db5405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d0a493-85bc-4a52-9f29-8ee51c3a8937"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22f061ce-d4f1-4c70-b464-b3810804459a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7186f19b-045f-4887-8b18-31b8aec51bae",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa39214c-1d8c-4d11-ba84-344f3c4109c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "215c89ad-327e-40b6-9b59-372c4726b8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b760d9a8-df36-499b-b2c7-36ca75f7c7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72910203-3594-480a-b5b2-8af45a85e93d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b193ab-f483-491c-a9a6-de37e5bd0bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e38efb0-f34b-40ff-8078-25ade3931d67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84360862-5760-4018-9a47-600af578a7c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c22bec1d-a0df-49b1-a633-fb1fda9731ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f42f976-da71-4441-b180-6305e579cbd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc828c5a-bcc1-490f-8329-8fd0bd8e9aa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e67955b-8091-467b-9526-4a0b884b6fd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d35ff1-6d98-4409-97ec-ea30131fc60c"
            }
          }
        ]
      },
      {
        "id": "b3cc6956-2edd-4535-aaef-1e7cde05aaf7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "aacfd801-2442-4f84-b1b0-484f46bbe1e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d8fc054-5f1c-413e-8149-d3909bff5939",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a77ded56-7d09-4d81-a63e-9711557b7dad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691ebc93-31e2-4a13-8c3d-efbd90b5b342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb92530-2287-43e9-b4e6-cb6211584790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642dd5b8-611c-4548-931e-6fe66f689c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dc50ee-08a9-4daa-bae4-48c7e4ad26ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7149dd63-5a51-4dbf-a151-d57901908c58",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be51e84a-7c10-411a-ae37-393092fcb50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02d8069-c3d5-4e1c-82d6-65b68e295743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6f5d1f-2271-4ff2-b8ba-74d7a95f5a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e793ecce-3ddb-4ade-9537-a9e9b93a4b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74546e8-43b3-45d7-836c-ebb0f9e538d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7e53b5-935a-473e-8e90-1d7e304aa96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f58d71-978e-48f1-8c88-158dfd26b6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29a18a2-4574-4efc-a8a2-b65149045f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5dc366-c979-4c7d-b44d-32e811be62ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68817e3e-5994-4784-8e08-1e40fe3290b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c41d029-a483-4978-a632-8e916187910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbeab67d-f50d-4392-9764-5b56f63e126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00392311-8c2c-440e-87a7-7b8a3de2ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45547f3b-51f8-4479-8a96-63d48841d3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248fb01d-9a9e-49c7-a1c5-51ad42ced25e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eb1561-3e77-4b97-8b41-4eed2b78b984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1821487c-7b81-474b-8dab-fec2c7568031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c596f34-85cc-48c0-8a40-3350f713200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5eda56e-a7ce-457c-806b-6b3b72493d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106cc5a3-d851-41e5-91a6-f1564c8758dc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8597a292-fcc1-42b1-b3b8-835629a2d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24022dbe-5015-4b26-bb43-54d53e56c956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b98ae-d178-4285-9233-b771749fe437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b02ba5f-507b-4866-8530-c1e545c78b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9bde86-e1b7-4e5f-94d8-832576a9c289",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b67e3-29fe-4227-9a4b-dbc17d27f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34214c8-86b4-47ab-84da-34ffb5cc88fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e31cf7-564c-4f7d-bdbd-434f06291619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7571b280-5379-4755-ac55-1b73b3bad0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951cc64-9669-4e46-8327-99127079b10e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0723b74f-6013-44d9-b285-23a7c9186d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e71ec9-53e6-4aa3-b6c6-49727924e1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98962b15-4562-45aa-b197-d0eb244d8fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd55caec-cf25-45ba-9269-931aa752b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9d1177-992a-472b-82f2-0b8168875816",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b12e6-ba4a-4bbc-aee8-6416a0b00afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d5b5d7-ec81-43b4-8dff-7fd4cfaa5cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c0c1c5-be84-4f4c-b011-6269a15b7e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62783c4-7e5d-452b-85a0-79c7cf2c91d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742033f5-0227-46d0-b2d3-3d5353c39870",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c86e82-60b4-4d00-80e7-8034f4ec4ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062606d2-b5a0-4d71-95bd-c42ac9d0b8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdd3c1f-850d-4c17-a974-1937bded29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede63081-5475-4db8-b1f9-5fe67f1fc0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88982310-43fb-492d-8de7-181c4fedabae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b9df5-20c7-465f-b0ed-fc71844bdb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f50eaf-3c28-41f7-8825-095e58af7059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a973d808-c813-4371-a44b-2f5f7ef1c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a494392-178f-48fb-949d-95c9b01ac5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ff06d7-f645-480f-9822-5454a3c724b2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58412f36-9b5e-47ac-bf7e-833b27674973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547fff83-5bf9-47a4-97f2-4a72b4a565c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29438a8-8a25-4774-a1eb-4a6385e7ff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "825f4eeb-12cb-491e-9fcc-015dd940c107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ef1500-ee87-4343-b6b6-bcdf2421197a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b391a34-b76e-4903-9fd2-cc4158059795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cc0299-8f06-42c5-9113-8962fd0c13ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4bc877-4721-4fc2-9c47-60599049bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b1b3f3-acb3-4f75-8d69-883a2cb9c57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ed73f3-14f2-4a3e-8dfa-fa2cbec84211",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e07cd5-7c3b-4f0e-a1f9-967f38fcca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1305a9dd-5dcb-46ee-95b3-68a18a7fddb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bd69dd-c1dd-4fba-b7c3-f192ffa220cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfc114a-8e49-4ee2-afeb-b0c278f5f0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ccd52c-aa2d-43f5-9f01-bfd8d2140bb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbde5db-e66c-4475-b94d-03eccde44a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f237c6-8910-4b6b-9531-fa870d2899fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d9946-a961-430e-8df9-bc034d789238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1539f9-2352-4025-82dc-e41e20d89aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9271f0ea-f04c-42e0-9a1a-17365be7a8cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1db0b1-5889-4f48-bc82-ace5398dcf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28476fb-f0b2-4025-a543-8588e71cfbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f71b4d3-a439-465e-b472-460d856b1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ebe655-83d5-4bb8-8800-f92d3044c50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fe2a4f-2d3f-4663-97b2-61111d0dd04e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53b2d57-76f7-4da7-b4eb-7d31a7dffc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a23493-e14e-44e9-b3ca-58665d9b4a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd76261-348f-4a36-9b9e-24eea55325cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a6078-ac81-4734-8fdf-dab68d5602dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042bf4be-2608-451b-b458-5ebb7dcf64ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e40eda-8e21-4f1c-a529-f4d56fd8dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbae226f-f018-4b55-84fb-4e8ddd7f311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1df679-a00f-49f8-ad74-ed5506add1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "648a7a12-adc0-41c4-9352-6fcb3384c80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36498144-ba85-460d-ad51-31e32a56855c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1216c0ea-8864-4408-9fa3-68cc6eb730de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df28d4e-9670-459d-a184-adc315497853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da22da1-063b-4356-a50a-da1e92a91fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a49cab-2006-4ba1-8e97-1023cb9abd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951abc8f-046a-47f9-9eba-f656c46fe438",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d602d7-2da0-4ebb-a116-7139817f2dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aedec1e-1ef3-49bf-b849-3d7d9620f714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c55034a-5481-4a8c-85a3-6e38d638c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca03cb54-757a-4f9e-9a7a-507b88e309f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45075d87-700f-4c27-b681-05055e69b77f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea16c55-033c-4fd9-903c-45ca470fa6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c83b534-80bd-4f55-ae52-2bbed02f5478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f03bd77-a53d-49a4-8153-fd6ac2784727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdd6ed6-5192-40c4-9947-cacc615437a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73e066-7c79-4ce0-9890-ca4442568790",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e63f1-25c7-4375-8c72-1f7b4cd91109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef289be8-6940-414f-bbb7-aad76fae7d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab7e4f9-a616-4f2a-8e90-bc8c9bccb07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e4a67a-bc82-41d5-878e-a0f1146dc0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dcbf31-a80e-41ad-bf2f-e64c405695d6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e255a3b3-9484-4c83-87e4-aa5ed7c4c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bb7b84-3ebf-44ed-b506-5a001497eaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9827cde1-87fb-469f-aa2d-c528e9bd4494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e796b803-d51a-479a-84d3-e8b6965d44e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f3030-a726-49e1-bb2a-077e08b395cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0edfce6-8ca5-473f-b76b-63507e9c7cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39fd152-4056-41af-8bf1-edeb44e5697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00832e0f-cc1f-42b3-bb72-2c166294f7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd06d9aa-55f7-4eab-8d37-79e78ae8bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d16811-0175-426f-812e-047d17b289e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f0fcd2-d3ce-41a7-8c3f-3850843cf461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81dc11d-b0fa-432d-934c-c049e34d29b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71225a5f-8ed9-4a97-89fd-6ca5e7142b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a79a80-edf9-48d9-81bc-68a0195113a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c65c212-a97c-438d-9c6e-af14647d0a4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02554e36-5943-4fe2-87d6-ba3315e35ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fa2553-9c82-4000-bbae-f6aae1bc05ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd0cdeb-f1a0-4234-8bf4-125098630e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099fa7eb-c887-4800-896c-654923d91279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91008bbd-5e32-4759-bec0-7fa72ffc811f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f48612-40ac-4445-9de1-64fca26cade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965e79c8-21f4-49b8-9a38-9ab2e3f126d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f107d5-26b9-4ce7-be49-e3af4852dcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5516c236-f6ae-4249-80d0-b707e392a5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8784f1e9-4fe8-4b4f-b3c6-4ee96e6328f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80903677-8da2-4cb7-9967-27ffb0ce7952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9d8d99-5e09-4f3e-badf-35799fb2d821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e3feba-64ac-4c01-b847-ebcd26314073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43130817-9539-4e41-98a9-650664bba11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75a1b5a-2612-421e-b0d0-1b0ed689a411",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58438822-5224-43e2-b624-b323317bca2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d637a03-ac29-4668-af21-72aa4a37c935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf525dd8-f4fa-459e-a2e1-13d40f873afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d206bdf-4d76-450d-804f-039d85cd4c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1c69fb-e569-48c4-b979-ca5bcac33ea2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0b69f9-9bdc-4018-8a02-2c439d705c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20f16ed-e151-4f02-b085-843c753ec4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee1bc95-407e-4c7f-aae0-10778a35afe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf12ea3d-aa3a-46a3-88b0-71ac69cda439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f564edd2-39db-4776-9a2d-4e02feb5742f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc5d898-f3f5-4414-a636-79fa0f2d9921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c9ec42-99b7-4ed3-acb4-616cae5ba3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0e58fe-d8c4-444e-8360-9007640add86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfc9512-03b4-41f4-a6d5-164215d070d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5406077c-f4ae-439e-bb56-2437be2f6036",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b29a89-2cb3-4df0-a90e-b2070cd38eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a986b4e9-1202-4563-89f8-0e197c462b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e676adb-01db-43fa-8e3f-0ff89ebce201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b84456a1-2cfb-4c03-8076-564c506523e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bff5edf-89ad-47fb-9d6e-d7b2cbdc83b3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79f8054-a203-43fb-bb04-a23f9233f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8926d9de-52c4-4484-bdff-84763c9e2763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e02c4-4194-4a88-a2d0-eaac24c2f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09671dc3-103b-4043-b1ba-6ddbd0c994af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c3412-5c03-41d0-a9d9-4052427a8990",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8faaa4-c8c7-4d83-82a6-cd0e78766b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc266d7-0462-49b3-ac7f-069baaadf0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6d2bab-4880-489e-87eb-b8a390ea21b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c27ff9-9abd-422f-a9e7-34b354c00e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a726dcd-833d-4a3e-b82f-a39639e536ca",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2400d456-f3e1-400a-8cdf-02c048c0a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5089897f-c975-49bd-b1ea-25705b24ddda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b839ad59-2af7-4ec1-95b1-787e1d6e7ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4826a06-1450-40b9-9100-3f4a00b62820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd31805-c3cc-4aff-892f-4d74f8046941",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b78b62-203e-4939-86b8-c32aa7ecf87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb73495-cd80-425c-8d89-dd59bfba8371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d678848-b50f-4605-a74a-618e505165f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c665e1-607c-452f-82b2-c2bb336a29b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a311fd2-ce0d-4717-ac45-45070ed78110",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21860456-cad7-4ccc-9f21-852fb6a18a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5388fe-8edf-4531-95cd-33b2822681f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707dbac-7d5f-4678-a239-91a469d0b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6648f9dc-fee3-45ea-93dd-c10f23a12e91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "726a81c5-c408-48bb-a790-c1213be64dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4e5f81d-ec61-4fcf-8aee-a25cce8e03a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1600c349-12fb-4811-8d53-246b932d6b56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "449c1fc2-90d4-4f5e-ac30-db113d801d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9cf8c7-0549-4b87-a256-35c9d7d28476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f57f7183-5aa4-44ed-86a3-9fee3ea0f1ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f259b6-eb18-4a3f-8b8d-e8a40b4fad98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6321eb67-f622-468c-8985-024db481cb19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7efda630-1c05-4c5c-93fd-69f603292668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d067e884-ef6a-4921-a764-4e39800efc65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80c9ddd2-96f0-427b-b009-a0af4a040486",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae8f65a1-5294-4808-91a2-9aa4a3500e30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d41729b6-3260-43ca-b1fc-a3c48882663e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d271fb99-b90d-4c53-b57a-214c94510773"
            }
          }
        ]
      },
      {
        "id": "627f6c16-6ff0-4849-a682-d220adb9124a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c1b5015f-28c8-4b37-b7c4-90a5370ee559",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93ec3f6f-89d5-4343-a923-0e09b2e8944a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a72c6e90-d7bd-451b-a51b-6cbe9edfe190",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f766f18-85b3-4477-a069-b5b0d6dc5762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d67abb-9145-4351-bf75-f40fef75d9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caab7a25-32c5-47d8-9e2c-53c14428eb4b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df953ed-babd-4a7e-a7aa-cda8d4bc86d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c91c14d-c492-423d-b9b7-c3941b4acc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9f58a3-2e14-4a18-8038-1eddd879ffb9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb28d1-2051-4734-a176-6a4d1409e5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de722338-521e-4f22-a414-9478fcb98bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97c1915-7581-4981-aaef-a54695b081e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1f22d1-063f-46d4-9ca8-0c60ede02c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286ec974-4708-4eba-9a18-bdb85ff1a65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84aac3d-f318-459d-8ff8-7c9ffda23e00",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d981f6-8491-4324-81bb-c749428650f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c2dbec-3958-45b3-818d-f49ebccc0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d382b92-7b77-4102-93ac-45d31ead1b45",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaa8858-7a3d-4745-933d-189977c73a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d150aa83-8b6e-49f3-a67c-6b6849fcb8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a46dc6-c8bd-4c82-8fe5-e1b1dece28d7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef95a23-e50f-495c-b380-8c06cca0efc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b02bc43-3673-477e-bd1a-886b71394fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edb499a-9eda-48eb-8e2e-ea9352bf40d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9567b473-3331-4247-8ff7-893e9fea4fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af73e6f6-8635-4410-948b-3c15fcd3e5c8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5ddfef-a471-4532-b784-976dd526c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5978c3-aa16-4420-b4da-901edfae1a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b3d3e9-a054-4d9d-97f6-9ce8260c71ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf016ef4-ae2a-4c75-b4c9-78894b4c39b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dd1b5f-6cbd-4c56-8c3e-964e5a4fe6d2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26878524-18ce-4496-a4c9-927a0acf6159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96dc1a9-3120-45c7-ba72-ad9c0c509c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf8d3c9-3801-40cc-9c60-353764a8a474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9816b5b5-1574-4ca7-abc8-0fae30a36b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3c15fd-d90d-44cb-bd09-9fefc3e980d4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311c8c20-4fb9-4fe3-91b2-29e18f233e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b761c4-d5d9-4057-8d53-4f7c532c4c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d997edfe-a031-4100-aaf4-526bcfe9b8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87335252-536f-4dd0-9d21-3f9bc9c0f5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447285a6-65ae-45d0-a399-5fa148cde83b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9db7bd-cb59-4540-980e-6e0915382a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d079b86-58d8-4177-9f83-8be7e181be2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5988da6-e3d1-4f14-b638-ea823fd6bb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aab9b2-c031-4454-ad7b-94a35dc5699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54184cc-4721-409b-a6da-d823dc0b9300",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc248ff-d3d7-4b79-87ea-897ca53fb3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705553ee-978b-4b54-b625-4bd351e6b1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57633e2a-b81c-4948-b8cd-5b3a3577f141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746c476c-ae46-43f6-a81d-e179b17ad3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ba5fd-1bc3-4ee0-bbad-eb8a5613ef89",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17b9572-bff4-44b8-a9a9-13f7b1c63cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6bc25e-d9ba-422f-bc01-2c9eef7c75d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a8e7b-6568-4713-9e19-d2389f77cee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d306e35f-a0ed-4cbe-aa8f-2b7caf2043ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c310cc-c49b-4517-bd7a-83ed5b99bb79",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977cf4bb-6588-4f00-b93a-c2ca344ec803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08f3a0b-0083-45a5-9048-bd8e5cac4591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa2d2d-a160-4306-b7e2-a5ef6ce6656b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fc2d99-c9a0-49ec-a6cd-cc915d2cfe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042c1830-7381-4c6e-af02-2cfd555d2c25",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92044090-3505-43fa-84d1-29a8695c7460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ddf499-da23-4f85-8168-a6646de54670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50977b50-4c91-4904-9ff8-b094a6c9916d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bacdcd-d159-4e60-b055-4687c3944cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c124f219-b6f8-4f07-8b2b-be50f93ff433",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e9f852-e176-46f3-b822-7b73b56dc105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fe71fe-8bd3-42e8-8897-37b8d755de88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc97ef5-02fb-45ec-9aab-cdb5503cc30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ed1de2-682b-4e01-af0f-4186c83cdda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a880046b-fd39-40cb-81df-4deffac3d7c7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617848db-0ffc-46e6-ae14-f7ae1119c1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dda3d00-a07e-46e8-9d7f-9b44539515be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650cd178-a962-4332-a854-3b23da644aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115a6ac1-4c40-46bd-9b81-d3bf501c995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f41317a-8f5d-4a17-afbf-985ae8b4a75a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6509c43d-aea5-4add-8913-bb01f8aa099d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0975d4d0-f507-41ea-afd5-301a865a9510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa443795-085f-4a82-810d-1e1873ee5308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c52881-07d1-40db-83c1-3b173655f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98a13ca-c707-4d44-b815-75e974ee25be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693eb4f0-d9bf-41eb-9e9c-a6b7ec99657b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecc963f-3b8c-43f3-9f2b-860a79244697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367bcbf1-f493-4f32-aa4d-136538b4869e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5415bc41-6817-418a-85cd-525e8c1c14a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e029bdb-3a63-4708-8d93-d07e30ae731c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f3eff-40e4-490c-adb4-a02aad12977c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b472344-1031-4239-8021-48508e276b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe6f598-6ab7-43cb-84ca-6162c3fdbd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ebe5a8-4cf6-4ef9-9514-ccb635eb4fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f2f306-d39c-4ec2-a2dd-b8b3f71ab0d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec39ef07-619a-4b38-9f41-391c79aa3375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bd219e-dd9f-4204-b100-236aea78c271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d31d16-2fd4-444d-b892-550e6c32590c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b182e737-19d0-4e26-94ea-8a0f8b99a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8252b1e2-ad30-44e8-90db-7b577a338c37",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d48ebf-d394-4bfa-a4a1-13b1364375f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbd9348-f2ef-4c7d-a145-f00a7ec470f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9314e134-4f75-461b-8634-38e9f67278b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0219506-e071-4932-9098-db92544b2b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166126dc-d4e3-46df-a186-699544cde37f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b53bbc-0d5c-467e-9878-8020d2f06283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42988525-a0f8-4a60-a2bb-e8f6d8f61e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363a9ec8-e71f-4d0d-ad5a-d78ec1cff420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf126c7f-183d-4872-b8be-8808d4e2bc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9453459-d420-4414-9b35-64a67d71a049",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2350fdc9-637f-4020-9142-f911eba56605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862e66ac-a2c2-466d-8fb9-14d9e1868de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c21763d-a41f-4efd-b7e0-83e52bfc474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f598b39-4c88-4e63-9921-e6a097f7f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3f079-c9d5-403a-80ec-ca2660ba5fa7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0cb060-b8d3-4cd3-bc92-481054d13165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6220b667-ed7b-4bd2-b1e1-6c59236cfa0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6dba34-c23b-4c3d-a55a-cb7b81d6b4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1c9d1-499e-48ac-b72e-73d4e3ba8cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03936461-ae06-479a-b390-01500c8686c9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221adec9-ba9f-4d60-9036-b06e2ec9c5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b96eacd-5ad9-4271-bb02-ba87457d8cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d2253e-7cde-464d-bcb8-bccd188389f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240614f6-4da9-4f38-ba20-40673f8d5040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f4869-3452-4df8-85bf-40dab0be8f36",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a02873f-1659-4fab-adf9-7aaf6f9ea6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91583547-b233-4180-b22c-7c6755b86ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3277f6-2241-42f0-b84c-52fbf471a9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddd6974-0678-441c-8fa1-bc6bb540cc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d7c3b5-cc22-47fc-892a-7f6a4d382302",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbf14ca-f657-45db-a81f-645cfe4cf769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348f921b-2880-4fa6-b7f7-6794dd224ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e38905b-b779-4de8-9a26-544bb70f099f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030be923-0ad7-4740-9b35-3926c3158994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2976e0b-cae5-421d-a423-0b1e33b4b069",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5fb029-1ba5-4956-a43a-ee0e9ed16461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093a0232-941c-4fd0-bef7-0568187563cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb5e070-556b-4482-8844-675356506768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021f03f1-79d3-4a9c-bb58-c562fb52de7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2098c8-b003-4b42-bddb-5a002ed0c67c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d45b1-70d4-4db2-8cb9-fc0fb0e06b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea21994b-c40e-4b56-a69f-2459b6e562dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997cf1d6-d655-413e-8516-702320c605b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2844d9e5-2a54-4cdb-9c85-3308762c21d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11565c2-7038-4e4b-bed7-a923fcbbf735",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb32ff-c831-4edf-b214-641bbbfa529c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f2aee0-6573-4885-ac0a-645bbe475ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcec3d6-1989-4ba1-8af4-69774a44473c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d26a90c-a024-4454-8b70-a6f53e2ba0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d86c62-f141-4d6d-b2c3-43c53d929c6a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777fea7d-8256-4d2d-8337-8b4724b5c241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da1ace4-402c-4c3c-8ca2-8d81649b860a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7881ad0-adf0-4048-bd2e-76e29fb11082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c440d867-c956-4c87-b009-7500bf1ac3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3fe4f0-b4df-484c-aacd-be1084e7c9d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c3dd8-2a29-4199-8191-f671ecdf978d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8eba16b-4460-410f-82db-de37807e7441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2179535f-9ba7-4378-bfbb-2ce9665deaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb788bfb-b8b7-4fb0-b785-69c084b8aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1265d55-029f-4677-ae4a-425cf8c01cfc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6221e627-efcd-4d45-b8c4-fcde8ced8b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15532cb-fc0c-4d89-b95c-d6c6ec1618c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eef904-9891-49d0-93c2-67a9e92c2ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a90b43-252e-4f1d-b2e3-bf3d48eae110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901196d5-ac7b-4a61-9ab4-2ed3ed745e29",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66f0577-3d9e-40df-8307-e39f789d59c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc47706-76e4-4cc6-9e7e-775e4823c8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f264af-ed70-499f-b36e-fa0998ffe3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4328c425-8712-4967-8f20-5b90a4d557f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add41853-dd16-4c34-8670-6bd78c41168b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc90876-3b88-42e7-976c-a37debac6d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d4ee80-7fa1-4160-b867-423663b9ac9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5629b6-705c-4a7c-bd54-f78e37de2c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c07f5ee-7965-4427-a8d2-f622dd31f97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62ff4c8-0aa5-4ef0-b8cd-4ea0cb93af4e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39f4289-0cae-4536-a4f7-b3345493be2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9d262a-af9d-40cb-9189-77a3e52d5f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439c1db-4bf5-4c7e-8da6-5b10a4f8a3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413160f6-d374-48b6-877b-ae05a776e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09063ad-9a99-421d-a27d-90057de375aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7d9f0e-76da-4d14-a26d-87cee352dbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb8ecec-baed-4249-b170-d156ea1d9943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b86b23-643c-4cb0-b249-f4baa82d6e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884c9682-77d0-4401-91ed-a372d790c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d582c59-bc32-4011-be06-a43733fde719",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e88327-dd17-40ec-b320-5fdf675d428b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71684815-797a-4f42-9394-154beeae803e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5a2dfb-2b93-44bf-bdb1-c0d18d8083e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471dd73e-3b24-41f4-8124-f2f19556efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0b2f48-6e99-45ad-a3c1-8f80f0d2af52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c441ca6a-6f2f-490b-8e9e-7e0b712d2e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8cc9cb-37fe-4dac-bbf7-150bf4929128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba5b06-e6e3-466d-bb0c-8ccfabfdb550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bedc12-1b11-47b1-b350-a62400e44149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56619949-a80c-4ebf-bcbf-20bb7930bcda",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726a8751-0569-4635-9135-a87a6802a66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbf278a-4aad-4dc3-bf72-b35dc28948c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ba8289-f70b-44f9-ad00-e44c8abc7e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c176a1e0-2882-44a7-8b6d-57fd1c969996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5ca2a-b3c9-4440-ac88-6e41b77a875c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be74622-aba3-4226-a2cc-09616baa8e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4130538f-5744-450f-bf86-e481d670904a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfad11e2-eed4-404a-a016-4b55de96984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d66ca8-4e6b-4ae0-827c-55b09c001ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099a4d02-619f-4579-aa26-5692c940dc8d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dfa7f2-4d6e-48f8-9968-0653d1909dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d50068d-7e4f-4b63-8fe4-f5e04ad48b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0de7b7-fb4f-4a75-8cd2-440b3a024f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6031e168-a8fc-4d23-ae43-0fc9d68989a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a9d079-3505-4e36-96cb-fe768c1d3878",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ebed9d-4351-42e9-b575-d5aefa49ae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce813d79-dfdb-4e1f-964b-8b709c7a0c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abd68ca-d159-43ac-aaab-e43aff21d733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a800778b-c6a3-4530-9ddc-4b308b7eff2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef7f8e7-efbb-4b7e-87e9-3f6c802e0e1f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd98b1-d8e5-486a-a683-b19e6e7b5058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84004d62-a656-433f-b6b5-ee7ad6d8b2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1845201-905c-4b7e-83c4-c9fa665aa9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3a39a0-0c2e-40d3-b82a-e845cbffe10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd7a362-ebbc-44a8-aa87-47d8362940f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80431b8-e3b8-4831-b1e0-99dbc4170928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d2a088-2f1e-4c16-9fa6-346d887e77ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e31609-af4f-4227-b3af-66b4207936c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97780358-4ec0-486d-be59-c7fa10f9e402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90067a9a-8301-43e5-8c37-eee1f38c19c0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11ca8ce-ef6b-412c-8dfc-0481b2f1b3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3420be7-5809-48b1-a27d-dd3d285f8986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb1c70-46cf-4cb5-af7b-12eaf9b65102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cedc92c-a373-4d31-ab6c-0b6384e032c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e443f32-d0ea-475b-9976-b83ef471a4d5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eda4446-5839-4f84-b2f4-83af3012802c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d942af-910a-401c-8b06-19e7e3184705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6652265f-2c46-4c90-9f38-fc06b7a818c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61a597d-d8fc-4e6d-80f1-0ada1190cf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b686cfd-895c-4a72-89f5-74352e978eaa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db0d74e-668b-4359-934a-3b9baa9fd38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f1971e-8a6c-4a3b-9c05-f942aa435832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50bfce8-2d54-48ac-aa56-cc0c2472e175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd58332-23a9-43c4-8fd6-084582902de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9db7671-1b1b-42d0-adc4-b3f9be86602a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a52fb-e198-4ce9-983a-3f459672f83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddee4015-a801-4fae-b6b0-038dcb3ce026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ddc69-8a88-4729-9a8f-5c8faca22120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7534a425-3abc-4557-b2bb-82d1c67cf396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6af668-f307-4d09-af58-a381e898f3c8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7410c4ff-8398-4241-a5cd-a6ef52a85dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4dbcaf-9f55-407f-9afe-3ce1f6e4c577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf289f1-03c9-49ba-9f8b-1f0772ea6f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d825f4ce-77be-485f-ba7d-957407aa2f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191eb146-6d72-40b9-96b5-de944f934680",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bdb05e-725b-49c0-917a-a9d715006630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb22a76d-9df1-466e-89dc-771f412ca0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1a43d3-d603-478a-bc1d-d91e0444a8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af776ca-1bec-42ec-8303-672c9e2ce85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e057baae-6ca1-4614-8c8e-f01df0e30c56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b09024-3ac5-44ae-b8df-e21f066a89e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d197c964-ba74-499f-a0d5-7fc2e842321e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429a70d5-09d2-46f8-b549-1f1c5e1074fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54518c2e-0274-4d4c-a270-b92e14bbcb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3d42c4-e7e0-4d7d-acaa-7d39da05ffc5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f660c5-d3ec-40e6-a7d7-a0166cf57023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4715923e-e930-4b7c-add2-cc860f8ba1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675aa9fd-a95f-4e6b-8e63-6a9deebc7d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7e09ba-a796-43e3-86db-556c47e9d0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6857c68-123a-4cd5-a200-263c4a45a99b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220c4983-4d27-4dcf-aa4a-51e27749a9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15d86e5-8fa3-4fe7-b45a-cb43213de51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddf1992-0733-433f-8202-c041c239e8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ad4791-2fc2-4228-b0bf-71a10e50f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d92254-e138-4b9f-8cdc-5897a2b60150",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f30c6f2-d175-4ece-8909-ce1844a1b5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b86553-fe7e-4421-9e08-51ae38990bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eeaf760-3e3e-4213-a125-b36f7a8a469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddf71e4-dde3-47a4-baf6-653222d6d228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec7b9b-656d-47fd-94f9-f99d4fa69f82",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156f8a6f-8618-432a-8af0-039a0a56c092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdabbc68-426d-4ffd-b394-89cc550d867e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2623b850-2798-47fc-936f-f935ee5d1ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b44e70-c39e-468b-aa90-9577eaaed86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdcfd08-a83d-4005-8f0a-e64db1729b1a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736527af-03b9-40a4-85aa-e9d392355072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d47ae0-eebf-4bff-b5b2-5c4ac21ad153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6239e8-dbf7-4ebe-a45c-bfa1c75bc1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac65487-3820-4c15-a13a-55cdee236da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0338c2-fae5-41e2-b266-b6f34e1ba74b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa2ca7-16de-43a8-b2ed-549ed53062e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006febd5-0056-401a-97ce-f043b147cf8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14f100d-f74f-4555-9292-3513ceaf60db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de0462-4556-49da-9403-537ef1c138b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034759fa-22b3-49e2-84df-b784ef09d3ad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b445186-7b26-4d94-aa7b-2f940d33454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8a6232-daf1-4015-9942-eb185f083152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784735e-4182-4bde-9e7e-b5b8cc43c59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5483c168-51d1-4c72-89e3-c99664d9f3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66085a2-e200-4c49-afa2-f71dbf73ae07",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0823270-e524-4d18-924c-1795831743f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a3ca3-838f-46e0-a2ad-63a8f1bf4dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7f668-c745-4b89-a346-9b66ed225176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb237f0-884c-4bcb-be67-62b7defda65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ab9561-ed8e-44f5-b448-f3335051163f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb33e9cb-61ec-4918-a4ae-475ad9a770ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708406d6-e8c9-4158-bdb8-68a3e471979b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6986cd24-4d83-4315-a196-0c5310beb5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03bcb18-0381-4b02-80df-bf994eff86fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72062501-6181-4252-bee5-182236f7c778",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac9758a-8c7c-4ad5-a3f2-6176954218d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab874ac0-fe3d-49a1-aff4-bf696225861d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7339bb1-9f88-4ac0-b4fb-ede0d0fe6ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d96d65f-8e4d-4236-8cf1-789dca578358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a3b0bf-3811-4ec9-b9dc-bbe35fdcb539",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276fab52-0e1b-4788-9b44-6aada92b3067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3883cd3-bb11-4ff5-8f54-43a585b0a3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b30443f-f52c-40de-a478-9fd68dffacdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caade68b-dd74-4480-9605-b2087452ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252a0e1b-eb7b-4d7e-a760-0b9f98caf1bd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ad4318-4483-4902-b5f2-3ae250ab7dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e128b128-4b88-4da8-b533-9f054d489d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed18f9b8-9508-4ade-9804-31a2bf8352a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6f89de-ba19-45d7-abde-fb7dfd1b4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab769e-c7cf-4823-b80d-ac9d515bf551",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7ac87d-0e4c-454a-bd1b-990323cba20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856a88b6-0670-46b1-98ab-9146754298ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63de471-ea71-4b23-87b1-af1d341c9fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792bec93-429a-486f-a5bb-045cb7c5168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff6f94-f4c4-485f-9d16-d49d31443829",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9f3019-2b66-412f-8d8d-3974c7bc9d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3611bf-349a-41ad-9c85-9c494ad6f532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643ac47a-4ab8-42ea-b57f-bccea95e83cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffe9c24-e973-48e4-ac3c-d110f0fccf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983cc9d7-7a60-4098-ba5b-d4bae196d97f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba95d6ed-9d62-4879-afa9-35604425e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9175481-6bd6-4aa0-b66c-9e42cdf5f990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027b502-cfa9-43ec-a462-d09b4cac19bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bff1d3-adeb-4506-be80-5319751af0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514b7bc3-df49-4edc-b1e3-d76a2b5bc715",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b41c67-201a-4a96-82d1-d7eb614ef968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772a84ca-dbe6-4a64-b85f-49c36a5502d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da5e30d-21fa-43bc-b49c-9aab6d33e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4172c5-1298-4433-a200-a74c3bf63889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0898195d-cf0c-4908-8202-3aa8905dcee4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd1f04-c4f6-454e-aafe-0de91c4bab92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf21989b-ba8f-409b-9e83-71f87e815bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2596bd96-b3d8-4771-a23a-d1c247be0414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86699f08-b9b1-4a60-ad8e-00b2645d743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f28150-db50-4925-a04c-e44447e62fb0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133877cd-3e3e-40e2-ab22-8b8e400c3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53662a53-37ac-4a99-831c-8b5e7df02854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521017f5-bcaf-4425-827a-ba9e8d58b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8575686-6b55-4aa9-b3ff-f3f26511de5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a29564-615c-4602-af7f-5ab9631dede3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8d7c07-8423-46ce-a1aa-36cb7cb9ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a6224c-b9e4-46f4-ab0e-dc27755ccb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb6883f-3e74-414f-8d8c-6bd2328be6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672b400d-1986-47e0-9961-355cd3172ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd42f44-ab9b-4ef3-919f-c59b42fe48b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c8bac4-e1be-4c5b-86f8-a689673cade3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979424a9-cc6c-4152-bc54-6d0314014550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2314cc-eb84-4d08-9f62-3f0bb37babdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e64f7a4-9bef-4826-9517-122650161897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2672d3-33fb-4463-a635-25f04bab8836",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950854f-0367-4330-bd9e-d0795a0f07be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f422420-14ff-4083-a2dd-d40e314d9055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbaf6e0-b97a-4c39-b2f8-32c8db9f6a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b940581-41b0-44aa-a1b8-c6c255bafa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046f5149-6ec6-4cc5-813c-6f3a20223049",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ecc4ea-e84e-46ac-86cd-07f7e2dded47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c35adec-e981-4789-b7b1-7085d8b46940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822fb753-0416-4098-9001-f88e9143aeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107dbbda-4a87-4f3c-81bc-2b212a59317d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d881b0-4443-4214-8173-c9c768e40329",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8706055-989c-4edd-aa12-b4509105ae60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ab038a-2dac-4170-870f-0c1dd5c07cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c51794-c173-455a-87fa-6145e4f7bf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa10104-3a2e-4790-9ba6-894332c88abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7828ad50-498c-485c-b362-025a426b31d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f0bb04-75be-49fe-8e9c-c38a804b700c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c618a0f-304d-442b-9c5e-64b3f7e816b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935cd266-fbfe-4511-9b7f-1e6c5613849c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d6a9ed-8121-490c-b278-65b44096a569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdccc9df-9041-4e49-84d1-f895b360e327",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0eb29b-b279-41d5-97b8-d577ce000ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e62583-0d79-4582-92cb-3a7f275a1335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed7854d-0fa0-4cc5-a988-b1b9b77f08eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7f0c44-cf43-43a1-9309-bced8d666b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c24fa-32b2-4498-81bd-2b6035bd49a1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61efca7c-144d-420b-bb30-3e671a88ae4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f4e1a4-d988-4dc6-9b9e-af4930e16df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aac5d7-9c9e-49e7-b383-dc2c95761c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24cae67-50f3-4190-92a2-2fb2feccf49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694f0262-9336-474e-aa2d-597be35f9611",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b6618-3cf3-4bed-8294-7179de9daba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f1493d-a258-4777-82ad-c907a5d4e1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8e4d3d-95bf-4053-9c5f-14429eaf231e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b8e1fb-967d-46cd-bdd9-c3254d49c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5072b6-ddc9-471e-a0a2-53d2120bc538",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0191fc83-be6b-4878-ac7f-f9fd0c176b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a18e626c-f38b-4d28-bdcf-548991b267ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed815a3-9f3f-4804-91ea-4d3f95127322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb0c7a3-b18f-4d3b-8391-8be339c8f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3b785-119e-4967-b281-339d18678d4b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4882ca9f-f79f-40cc-81e7-0994b3b82350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841dda4f-82de-48af-a2e1-db046dec5c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3523cf2d-cb96-4c29-8497-57c33d82514c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfc82e8-d35e-4e5c-bd7e-84a821c5acb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1af21bf-f77e-4d6f-8e33-06e4612afcca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f4fe23-909a-41cf-a1a9-f9c330d4df0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435efc95-0999-4467-90ea-263009c55811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd19a49-6722-4998-97d3-9aa5c6514850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4e09fa-eead-4e2c-b7e1-bd9d4f31d434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549673ec-1e51-4987-8e3a-1fda273603d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197e87bc-420a-4a3b-aaad-6a13fa484533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcd9de8-a990-4e7c-bd81-e91120559823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c05d260-2c1b-44bd-a948-a619173a6097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f6f704-2677-482f-b84b-03ff84bf8dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab54f942-f737-4418-87f3-66dbb60d29fe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5982f387-671a-45cb-a6d7-b6e1ad0c9d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b6510f-33ba-49ee-bcf4-c2a7591bb854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1078e1-146e-4055-897e-9c006c2c0de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f0b8a6-07bd-4cb7-922b-8948281cf30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5175588e-7b27-4a74-b7c3-fa4515e9f307",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14c7d47-2839-4e1a-9b52-47d4642e4c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a37109af-db39-45e8-8dfd-ca8be2d64954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99af6766-2ed2-460a-9fba-36d4febf70a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fce87cb-f0e9-496e-974f-1762205627ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d3cc64-2204-4c39-b07d-d1bef18599cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0404622-1222-4312-a823-2abcf3cf38e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7e2ca6-884d-4909-98b6-4647d55c049c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60de7e4-2780-4647-857d-78cf5e4747dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f2fc51-6a05-4448-b351-b3babfd00685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b09cf6-8ee0-48e4-9413-55e22ef395ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356542aa-91c2-4a49-a159-3b48790e499e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c0fba4-91f8-43d7-8da1-f9b3cecfcc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76a0b6f-fed0-4aed-8f0a-ff842183fb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffe92a8-4993-4456-b9d4-4c638578489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c048a89-0062-43bb-8be6-45657eed2cb6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa58f51-8cfc-48b8-a599-b9f66980de8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974206be-a3b6-41ef-b2b2-f1a8610473aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dea60f-ac0f-439d-ae1e-77c9b17d75aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9bed8f-7c8a-432b-8610-254705d576cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a7e4b-09f4-4f96-9725-0561664d7b8c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fb1526-cc7f-4858-9253-ba57547a9957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e508709-f763-4ca3-b5f5-ed56ee9079ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a175b980-e745-4dae-bbfb-ca5292886b06",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb240bf-2626-4936-a27f-5c6c5cfea12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaeffb5-6feb-4ae1-b4dd-ea368d677246",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e084f-d864-4fa2-a787-dd032e3fa975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb954b0-ea6e-4a36-bae6-48d8d0b70a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01525ea3-8189-424e-a40d-4238169dafa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d24d897-f48c-46b6-be6c-db80f642a6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e564df4-6799-4b6f-a654-51b3542cd096",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b6fc3c-020b-41fa-a8d3-d5b49d9ee76d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da3bccd-b3af-417c-b9ef-05e6454aee26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573491f4-9c15-4438-a7b0-5449d36fc708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c9c936-197e-4fe3-a5af-ff27281695c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34b4a05-b6d4-4b52-a4cf-82ddb04be6ad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1543070-b48f-4911-8248-b46d1025984d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18e9185-1453-47f0-9551-c6106520cfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aeedd6-23f6-41bf-bd16-a95f6b2e2287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b889ef-1065-4421-b0f0-0540700f0f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0ab87d-843b-4026-9547-6929427c18a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe46e8f9-e255-4992-b0f1-65503fd81fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6624d007-26d0-4fc2-9cc1-290d2cc0a28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15a4a4b-e816-441c-87ee-e4549eaa13cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143e767c-16e7-4e03-a447-5abc03ad1948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f1bf6b-09c3-4cb4-8dbf-851534851f1c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c96d3-6a51-444f-b63e-21b2f286cf21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18c2e6a-e6b7-4519-8ace-b256b9996b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb5820-bd5a-4ec2-96b1-09cd44dddf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef5cdf2-f48e-40e5-862b-f4d583555a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9245f6b5-9506-4c43-9c91-86337c30c57b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97c36b5-0b2f-4ed1-ab4f-98b92918fccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff95738d-3e68-48a9-a9b8-934bef5f0657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c257ed-34fd-41aa-8609-12856f0725cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8dc04b-d7f9-474e-b4eb-bc4e860d4ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9cdfbf-7eeb-498a-8e06-b7ef636972be",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bbf26f-1ec5-48ea-ab7f-1a47f3be073d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7713faba-5c7b-406d-a5a4-66574d98f8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2336c2f-fbbe-4d67-a318-934f60f17c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736ec1a6-fa7f-4a6a-badf-3267b0bada02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e3e9891-0e98-4d64-bc0a-75e9efa389b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88bc77a4-48eb-4cfc-a6bf-3d3acef2035a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1f28a21-452d-4ec2-bc5d-5b766c1edc1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afffa62b-8cef-4b57-b4ae-324448f4831a"
                    }
                  }
                ]
              },
              {
                "id": "77f919ae-96c6-4ad6-b8d1-23602aba5dbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbc42c65-bb6e-4781-9a07-fb1c82e28394",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d60b99-d9fe-4282-957a-fba8c52cbe08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "53e6592d-4e68-41f3-8b1d-60e08c87bc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fb4f73-e3d9-4fb7-a448-0b54e3c04f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a23d03e-0c43-4a4c-90b9-b077369952a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e7e045-276e-4a10-bfab-9961e64a574d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccbe17a4-7144-40d7-841e-5a9dacf66a19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df1d875-0c46-4fe4-9658-e02753926161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "386588cb-7aee-4dfa-ad54-d3784b306821"
                    }
                  }
                ]
              },
              {
                "id": "382f713a-a902-44d6-b8c7-b6f28d7b91ce",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee23aa3e-febc-4bf0-9084-ec5522ebf23f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f4b151-154a-4a34-9dfe-847b6c05472e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f5446e9d-4332-4392-a3c0-227fcad74a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3bea6c-a388-43a7-938c-23246bcc9fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433d30d1-cbd6-4742-893b-7e50eeebc243"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f10dc92a-07d2-46e3-9cfe-876b7a4985c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a27c999b-b10b-4b76-a60a-d0105c5fb29f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cd280c-bc62-43f2-b07a-cf07defc5d36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "575a90fc-aca9-4d0c-9773-571b60847641"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db8e2382-4ab9-4d23-983f-168560425dd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c4b911-3ec9-4264-8cbd-f9f6c30d274b"
                    }
                  }
                ]
              },
              {
                "id": "8d0ae988-6ad3-4960-abf7-07fd154cb63d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55880c15-e840-4f0e-a72c-f6176ef12741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35bc6fe6-2f1b-48b9-a316-87b3dc15d18d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca6bdf11-d69e-4f54-9f7e-a15f06d7498a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e66b8e9d-e9f8-43a1-9d33-0c731ab60ba8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12333cc1-c8c1-4fd0-ad1b-d85ebffb264f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db43c179-3fa2-4af5-83b4-83d6fa824404"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2886239f-ed75-4ccd-8442-7e27f766879b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c3305b7-4feb-430e-b355-e54a26064296"
            }
          }
        ]
      },
      {
        "id": "ffcf0531-59a2-45b6-a810-033dc120a268",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "434040a5-ffe2-4a83-9513-075a96cb8c2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e94c10be-a882-42ee-b782-a805803dbac9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ead7a83-6652-4ec6-854b-abb62b8f6229",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67440fd-b3f7-416d-85ba-2768b568f94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98d2694c-1259-484b-a435-9ca5310feca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd257fd3-d097-4b87-bb1a-0dbf5a933ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "897a7926-49bc-4f85-9a95-06e5421cda65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99152f1f-4bcb-4607-bf8b-7251247f4e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "385619d8-97a3-4d42-badc-2d86aeb10cd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2041da7d-25e9-46e8-9d1c-fe0f57eb8917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4e26f55-beab-42a5-95e8-1829f4ddd87a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54bd68ec-07bf-4c10-a6a6-eb13425e326f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d9adacc3-558b-47fa-a89b-86c556c3c323"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30a757cc-ecc4-4352-9b96-3997f8a9f254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd54fab7-07df-4fb0-ae54-b06b43e7e322"
            }
          }
        ]
      },
      {
        "id": "3a5c93f9-3077-463f-a476-1b68382e2c37",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7d789950-4088-4e2a-a019-c3cc863891db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b20b3c2a-a27a-4a74-ab35-a457a4146152",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21d31e7a-988c-469e-bcde-c45822444930",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca48ac12-acbf-4480-b7cc-f0ae62336bcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3508e18c-7fe9-4d72-b267-4fda067c67f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e352f9-3e16-46db-b12f-d438dc439232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2efabe31-5cdb-48fe-b79c-577bf9eb63af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28e514f4-c587-4819-91fa-032e6903334f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac80b6db-3d3f-4317-a02e-0f5d22dc6ab8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3275f30-a3c6-4b2a-91de-4b34e8be0a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd568f70-68a5-4852-9861-89ff68971d75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a7cacf-6d14-4e6a-a065-b5b180dd5571",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "492b767c-b548-4685-96d9-c1c18992bf70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2fb94f9-ea2f-4151-b41f-561f99e26694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a0c3389-4d5f-4d79-b336-57c2219cc7a7"
            }
          }
        ]
      },
      {
        "id": "a94e0f71-7078-4d1c-8d3d-39e9fef57007",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "17572f9e-91a7-41c0-95cc-4abe995fef22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8f3dc43-f2f4-47e5-8593-81e15366a477",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3f68edc-47e6-4e23-ac83-37de8cca9372",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af762a9c-a645-42fd-a2bb-ccc180d5dc7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5044baa-3681-4cc8-b6f4-3a9186873aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b0915c-7db6-4af9-8b2d-f3b7bdea8797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea6f2cb8-95c4-4ae5-a27e-5aa6dca978ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c0b7477-d3dd-4c73-af15-c4894e300b82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2c25f2a-f0e2-4d70-a853-09823ce5842c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76bb37c1-657f-4258-8e86-32d820a06389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42064265-04b4-482e-86b1-ce8553cc58db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c3f5f79-2181-447a-968b-e78218dd5877",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ace6347b-5c5b-43ec-897c-3d716957bed7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee3140f1-b38a-497c-8547-a4424f96912d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbb0d1a2-3af2-45d8-bcdf-1dddac27e5b5"
            }
          }
        ]
      },
      {
        "id": "57b25f60-9188-4961-b228-7e5810f85b93",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab16aef6-5017-4458-8b8b-6dfd8272d55a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5779ab62-4f70-4ce6-ad12-a44f78ab1257",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8a8203cd-8d3c-4806-9327-656f875e5426",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e16325b5-fa81-40bd-a211-99a5e3636c34",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54a18e86-7c38-4ffb-b40d-9eac72f31dbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.22887323943658,
      "responseMin": 14,
      "responseMax": 374,
      "responseSd": 27.334529267571185,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696120708105,
      "completed": 1696120730569
    },
    "executions": [
      {
        "id": "41dbb8da-b311-4354-b0d8-44118b0c0ed1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2382e599-fdcc-487d-bfdb-8f5cecc8e549",
          "httpRequestId": "bc34f9e7-eed0-466b-878a-cfefbf080387"
        },
        "item": {
          "id": "41dbb8da-b311-4354-b0d8-44118b0c0ed1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f5af5b19-9b4d-452a-8d4b-231a5f774c57",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "043fe81b-98f8-48df-a8e9-ee1f6d1a30a2",
        "cursor": {
          "ref": "38a3f096-9ebf-46f1-b183-7184a6b1654e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2887aa3e-3443-4032-9f40-a5e5a52ff509"
        },
        "item": {
          "id": "043fe81b-98f8-48df-a8e9-ee1f6d1a30a2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "198f5a00-d328-4837-a290-b86bb085eac7",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "d20e1d19-71d7-464b-b98a-82785b5af13d",
        "cursor": {
          "ref": "cc4df34c-8877-4136-ab33-5815c4f14bb8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b13092a-a0ee-424b-a445-f1dcda5c046a"
        },
        "item": {
          "id": "d20e1d19-71d7-464b-b98a-82785b5af13d",
          "name": "did_json"
        },
        "response": {
          "id": "72222ef2-80b4-4fd2-b9f3-d9fc6fbf6629",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e4d270-208b-407a-9168-98581f02e708",
        "cursor": {
          "ref": "64bc2508-f702-494a-b668-0a8fd5da2e3b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7167c806-938b-4bf2-bfdc-5154626ec96e"
        },
        "item": {
          "id": "84e4d270-208b-407a-9168-98581f02e708",
          "name": "did:invalid"
        },
        "response": {
          "id": "245c10d4-3798-4020-aaf7-3f2c82f02fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e4d270-208b-407a-9168-98581f02e708",
        "cursor": {
          "ref": "64bc2508-f702-494a-b668-0a8fd5da2e3b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7167c806-938b-4bf2-bfdc-5154626ec96e"
        },
        "item": {
          "id": "84e4d270-208b-407a-9168-98581f02e708",
          "name": "did:invalid"
        },
        "response": {
          "id": "245c10d4-3798-4020-aaf7-3f2c82f02fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aed8c5-1f4a-4242-999c-58f35cbd1a13",
        "cursor": {
          "ref": "6a825143-9c40-43ad-a4bc-fec9487b10f7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cd9ed7fb-771a-4a74-aede-f2d7c5e044c2"
        },
        "item": {
          "id": "13aed8c5-1f4a-4242-999c-58f35cbd1a13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0fbc1132-ab52-48eb-9591-bd90eb1cda8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2301b66-6717-4cc9-b8ea-80e113bf0138",
        "cursor": {
          "ref": "ac13637e-8bc0-44c3-ae62-8cb94f6615c6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "20ba1549-3177-44d4-8b85-29f050eb346a"
        },
        "item": {
          "id": "d2301b66-6717-4cc9-b8ea-80e113bf0138",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b359964d-64ad-4ddd-90d1-f99012bed84c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d403c82-f7cd-4a13-8ad7-1012ef5b6f13",
        "cursor": {
          "ref": "c160cab5-b757-4bad-bf01-1e155be6ad43",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5fb85733-23e0-4b98-ad6f-1fc45b94eb29"
        },
        "item": {
          "id": "4d403c82-f7cd-4a13-8ad7-1012ef5b6f13",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a97e09f5-da47-4735-9d8f-d3d3d26815c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80800800-78cd-4d67-a514-6ca37f29a097",
        "cursor": {
          "ref": "a77ce920-4d56-4b5a-88a0-a5a8f4e1891f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c29c90ec-36e7-4164-9a16-f749e3f29d57"
        },
        "item": {
          "id": "80800800-78cd-4d67-a514-6ca37f29a097",
          "name": "identifiers"
        },
        "response": {
          "id": "4982a382-5911-485b-ae00-50332412b342",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82149c99-cc41-4391-96e2-cef680ad137b",
        "cursor": {
          "ref": "a96f8b1c-270b-4d3a-81ae-694d88b6bb2d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c8a462a-2db3-481b-96b4-1b31102b6235"
        },
        "item": {
          "id": "82149c99-cc41-4391-96e2-cef680ad137b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3d4304b-103f-4b53-9ac1-eb688be222f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3a0253-d7ee-454f-ab3c-4a36e3fd33d7",
        "cursor": {
          "ref": "4cfca666-cd6b-42af-b0a2-fe4f2da37e0a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9ac939c1-8363-4e4c-a7ce-0f7eb177c3cf"
        },
        "item": {
          "id": "6d3a0253-d7ee-454f-ab3c-4a36e3fd33d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7de95026-fc07-4553-b7c6-a93b944421de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b3e836-1a35-4c80-a9c8-79fd7fc61a48",
        "cursor": {
          "ref": "b2ef91dd-6a2a-4167-a53a-afbac5803089",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb1a2bed-f6f2-493e-98a4-e66e710b3d2d"
        },
        "item": {
          "id": "a2b3e836-1a35-4c80-a9c8-79fd7fc61a48",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4720d778-816a-4713-b783-be6becc160ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb576144-c915-4638-b1f6-9ca63f220a4f",
        "cursor": {
          "ref": "7f8c7385-daba-4f09-a933-82512770da30",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "07a17d9b-391a-432f-ae50-3f0ec465083d"
        },
        "item": {
          "id": "cb576144-c915-4638-b1f6-9ca63f220a4f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d73d451b-90d8-4585-b2fc-d91a81bb1c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c805428-3587-4b9f-a94c-18beaad4c942",
        "cursor": {
          "ref": "f26a6fe8-79fb-4816-8993-33feec20c31c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "85cce279-cd63-4b54-86d5-cf2910e0f8c6"
        },
        "item": {
          "id": "6c805428-3587-4b9f-a94c-18beaad4c942",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05c7228f-5f19-4df2-a58e-ae09628584d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f20878-b52c-47bc-a824-f5c461089ec0",
        "cursor": {
          "ref": "499f1932-0915-49f8-9518-3bc277de9e9f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "513dc38f-e6d9-4749-9985-293d9cd887ee"
        },
        "item": {
          "id": "64f20878-b52c-47bc-a824-f5c461089ec0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64cd5756-ee16-4c4b-86eb-3b8fdaf3b1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aba40cf-dc6c-4443-84aa-f2dc5e07a197",
        "cursor": {
          "ref": "6983b5ba-df99-4725-9c57-c97347659596",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1fe7a32e-6c88-499d-96b2-cf17393f21cb"
        },
        "item": {
          "id": "7aba40cf-dc6c-4443-84aa-f2dc5e07a197",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "58d59a40-7e32-44ed-867b-b4e76538243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba81cd-1657-462a-b17c-8fdaea2c6185",
        "cursor": {
          "ref": "67e0f483-823a-4674-af75-5c97433e9dcd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "45b1d749-21b6-4d29-b635-a0c1d1ce2296"
        },
        "item": {
          "id": "2dba81cd-1657-462a-b17c-8fdaea2c6185",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7bd97748-1a3a-48db-8964-4dbcd337d594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e791c6-dbe7-44b8-8f1b-eb7e011bda57",
        "cursor": {
          "ref": "9259315a-2d2e-4096-bff2-d4c0556b3c7d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a76f4c11-1915-4c03-9c3b-f2b305e547a2"
        },
        "item": {
          "id": "57e791c6-dbe7-44b8-8f1b-eb7e011bda57",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "81e8aa24-be76-47da-9cdb-ec72820531cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c07773-b6c1-4ec9-805f-be1a8af80f08",
        "cursor": {
          "ref": "22825c1b-f862-48fc-895a-177ab2990863",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "94141070-8af5-4d89-bd1c-8bbad5072b95"
        },
        "item": {
          "id": "f0c07773-b6c1-4ec9-805f-be1a8af80f08",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05974e29-4b42-458e-bae6-f1a5b56a7d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94c1396-a89c-4a07-9782-ab90ec0461b2",
        "cursor": {
          "ref": "0f1a3b3c-3b8c-44b9-9ec9-4fec528cd9d8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d7db9546-13f8-4f41-8bfd-4abafde2fafb"
        },
        "item": {
          "id": "e94c1396-a89c-4a07-9782-ab90ec0461b2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bee2a9af-ec38-40dc-8e7c-1deb20732760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c68e40a-c510-4632-844a-2e9f775c21e1",
        "cursor": {
          "ref": "ce57daf6-1550-420f-84b3-1c4b40086d78",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ecc44105-021e-47ff-a97b-9705c1116018"
        },
        "item": {
          "id": "5c68e40a-c510-4632-844a-2e9f775c21e1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0a5265e9-ad7c-4bc2-a665-3cc6546c2f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f19beb-cff2-4d09-a135-231657c44b40",
        "cursor": {
          "ref": "118c93d7-6d53-4f42-9174-0218df8e5481",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a27fc5b5-c5cc-4ec1-8776-82ec796f3c29"
        },
        "item": {
          "id": "53f19beb-cff2-4d09-a135-231657c44b40",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ab2deb76-281d-4acc-9b4f-5c88821f95ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff209222-4734-4327-987f-91102f71b7c0",
        "cursor": {
          "ref": "e4cdbd8b-a553-4fd0-a915-da431315442e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "81c30b51-6e37-4868-bfea-f3d0c343b73f"
        },
        "item": {
          "id": "ff209222-4734-4327-987f-91102f71b7c0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29b1204d-f103-4bda-9f19-0c9feb761b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c58088b-62fc-479b-be81-9b621baa105a",
        "cursor": {
          "ref": "4a984682-8d1f-42ea-afdf-d742eb976207",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "12f14bac-73dc-40fe-9d90-a941cb732dab"
        },
        "item": {
          "id": "7c58088b-62fc-479b-be81-9b621baa105a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2b0db19d-7e62-4304-a893-6fc5ca38f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc7cba1-66f8-42f0-9517-b6ca8bb771e9",
        "cursor": {
          "ref": "4bb40ebc-7bd6-40fc-81f8-b39e2ab33cb1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "defb00a4-668a-45ff-b31f-5a8e056f4a55"
        },
        "item": {
          "id": "ccc7cba1-66f8-42f0-9517-b6ca8bb771e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1eaaeecb-54e9-437e-845e-3f89368c396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eabff6-a9ca-4b67-84d5-e56e2cdee65a",
        "cursor": {
          "ref": "00f5f817-ad8c-4c29-9f1b-19b67a83b5eb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "987f422f-ceaa-43d6-b1c8-3d5c7cbea082"
        },
        "item": {
          "id": "11eabff6-a9ca-4b67-84d5-e56e2cdee65a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "925ba00f-68f2-49f5-ae95-dadc120a6531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9f3cf5-a8ab-4b3f-be5d-bc08180b4250",
        "cursor": {
          "ref": "5fe4b6aa-8244-4793-bb27-15977cf190d5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b692b7b-228b-4960-8c07-8ec00d784345"
        },
        "item": {
          "id": "da9f3cf5-a8ab-4b3f-be5d-bc08180b4250",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "216bcd7f-b687-4484-9db5-e0e91cd1edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4005d27-e35d-4f1f-b947-f5a133a79f6d",
        "cursor": {
          "ref": "281aa3e4-7af6-44c5-8ca7-373a86fb4b97",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3641cf40-a089-4f5c-9d11-3044413cff78"
        },
        "item": {
          "id": "b4005d27-e35d-4f1f-b947-f5a133a79f6d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "17830af2-30c3-4e88-b397-4e6d7a37d97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135cebf-d787-487f-88ed-581a46a4e2e1",
        "cursor": {
          "ref": "6f549988-8910-4836-8dd8-553b24d1a150",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "262d580d-cdda-4685-983f-a2d88aeade40"
        },
        "item": {
          "id": "5135cebf-d787-487f-88ed-581a46a4e2e1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "76e48d0e-032a-479f-8d97-4b5b7d4810eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66de2edf-43dd-4285-81fc-f1e546427b46",
        "cursor": {
          "ref": "707e1a80-fd5f-4732-a047-4cceb719f99b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d8769d1d-f204-41c2-a9d7-7731b2633cdb"
        },
        "item": {
          "id": "66de2edf-43dd-4285-81fc-f1e546427b46",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e934c386-a01a-49ad-a824-303470529ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2f84de-d538-4bb6-bdef-f37d23775d83",
        "cursor": {
          "ref": "a39162ac-e686-439f-ac47-bd7719038962",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d7935bde-d82a-4a74-b4c3-3555f66956bd"
        },
        "item": {
          "id": "1a2f84de-d538-4bb6-bdef-f37d23775d83",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "032d336b-edc0-48e8-9fdc-b9308a076042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d51d884-7ca8-4e72-b0a1-7439213cb3f5",
        "cursor": {
          "ref": "8de59d00-a3d3-43e5-96d9-8cd2cf886ff4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a1e6b444-1018-4b7a-9d97-aed494d7acab"
        },
        "item": {
          "id": "3d51d884-7ca8-4e72-b0a1-7439213cb3f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db5eb3c0-5690-4cdf-8d52-37c5de7d1c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e93adce-46b7-4385-9bbb-13d7f0950fc8",
        "cursor": {
          "ref": "4c2708b5-e764-4b99-858c-89a7c36afdd8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "25bc7165-97a8-461a-8354-91cf3b4f9209"
        },
        "item": {
          "id": "4e93adce-46b7-4385-9bbb-13d7f0950fc8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2a448d12-51d2-4d7e-b52a-bc9d8dbc7b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00073d07-6384-4696-b5cb-1e5d3d3c1a1a",
        "cursor": {
          "ref": "0d34860e-6576-4104-8197-0c6754d14480",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2bcb3940-366a-4709-b818-87ede4813200"
        },
        "item": {
          "id": "00073d07-6384-4696-b5cb-1e5d3d3c1a1a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "37b2f48a-86d7-4683-a67f-38b4f96ceadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa001e4-451b-450d-9eea-216af7bc250e",
        "cursor": {
          "ref": "a6998233-b9b6-4c0b-bbf5-51757178d96c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e6aa9c97-ecc7-4b8d-b864-fc1b60ab8bb3"
        },
        "item": {
          "id": "ffa001e4-451b-450d-9eea-216af7bc250e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d8b28ac-cb58-49d6-b67d-54b82451e5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaf6fec-be7c-4771-8cea-cafbbe17ef5a",
        "cursor": {
          "ref": "dbe30f82-3eeb-4c58-aa5c-b6968544c25a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "795be3bf-728c-42b3-959c-11bd05d19782"
        },
        "item": {
          "id": "ccaf6fec-be7c-4771-8cea-cafbbe17ef5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2180cc39-8f88-4898-bec4-5c42bb18a9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d4293-77a0-4320-921e-e07b13ab0c32",
        "cursor": {
          "ref": "545283bb-7c70-4531-9885-267b03a42552",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "626731be-93a5-419b-9497-41c9ae9feffc"
        },
        "item": {
          "id": "779d4293-77a0-4320-921e-e07b13ab0c32",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bc7e2390-f18a-4a36-8edd-69133c5e411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecff6b6-f57f-4ed2-a351-07cec16d566d",
        "cursor": {
          "ref": "d1e305d0-d08b-4c94-a728-16ea89295cb4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3254014d-7ba3-4a0e-8937-48394fb4f9f0"
        },
        "item": {
          "id": "2ecff6b6-f57f-4ed2-a351-07cec16d566d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "96cdf24c-ff2b-4493-9941-465a28d05786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3be8c7-3d48-4d18-a59d-de66f380c39f",
        "cursor": {
          "ref": "4db1aca0-cdf7-4284-89c6-995fcd0b84b4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "901a9a2e-596c-4f81-bbb3-aea969b521ba"
        },
        "item": {
          "id": "8f3be8c7-3d48-4d18-a59d-de66f380c39f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a293c89d-5f38-4c14-9683-1ed8e0fda60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a3f862-304b-421d-844d-f37e8815ff86",
        "cursor": {
          "ref": "6319afd3-0aa2-4160-9f98-9ede62f2b188",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5f527a4-a7fc-439e-995b-abbf29d98b75"
        },
        "item": {
          "id": "87a3f862-304b-421d-844d-f37e8815ff86",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1ce147f6-c0e6-4455-b4de-a9c0425e8dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1d58b1-0cb9-4283-888a-bd458e935fb6",
        "cursor": {
          "ref": "b25eb285-b8bf-4308-ba3c-ecafd55745ac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10710d2d-23c4-4a8e-ab7e-fa444b350d11"
        },
        "item": {
          "id": "5c1d58b1-0cb9-4283-888a-bd458e935fb6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "796bec6f-c4bc-4d8d-9e43-e97d13971ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ef534-57be-48e5-9792-cfd2c4ec2df1",
        "cursor": {
          "ref": "4b0b53c8-15ea-44f3-a6a1-8bf726628b48",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f081a9a4-e360-41b8-98c0-4f7e831a0d12"
        },
        "item": {
          "id": "c32ef534-57be-48e5-9792-cfd2c4ec2df1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fcedc310-f01b-4e71-98b6-142070be8465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b18780-925c-4890-910f-eaa1130ad14b",
        "cursor": {
          "ref": "a73e9a4b-a470-493a-a061-a4832f382452",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b43fc5f-3c19-4922-b6c1-e846d18fd576"
        },
        "item": {
          "id": "b2b18780-925c-4890-910f-eaa1130ad14b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4374d080-f3bd-47c9-be22-53c307fe54ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c404c4-91a2-4486-951e-42e021fd04aa",
        "cursor": {
          "ref": "c6de172a-cabb-4b5b-84f0-ca517a1917b0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b61d4ba1-3958-4677-92ab-66cba91aedf0"
        },
        "item": {
          "id": "01c404c4-91a2-4486-951e-42e021fd04aa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0caacb8d-d65e-4246-aab1-f70600206e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081aa196-eb42-4d90-8c63-1226fef83659",
        "cursor": {
          "ref": "c7c1f87e-3b4d-405f-9846-f6bc9b76c7f6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "35f4f72f-56f3-4499-8426-abb0b433b4f2"
        },
        "item": {
          "id": "081aa196-eb42-4d90-8c63-1226fef83659",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7caefa15-f2a7-465c-8866-1ffab74a9c0e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c34679c-1f7d-45a8-8c84-19ae29c187ad",
        "cursor": {
          "ref": "72e1fc60-316d-41d4-ac65-27e06eb81ee1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "77d2b605-411b-4234-952d-2d5453ce3ab7"
        },
        "item": {
          "id": "9c34679c-1f7d-45a8-8c84-19ae29c187ad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f4fbfc3b-3a7f-46f5-9b16-f38b5b490c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e014f3-a2de-41ae-9eb1-e5aa076ff81e",
        "cursor": {
          "ref": "39f1377a-8478-4642-af36-9fb9945a64e8",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0afa7dfa-e045-4959-88c4-bcb93b17a0cf"
        },
        "item": {
          "id": "67e014f3-a2de-41ae-9eb1-e5aa076ff81e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf6f2189-549f-4cc4-87fa-22a009da5fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cedd5cf-a278-4257-a257-f847bb5a89e0",
        "cursor": {
          "ref": "bb695865-88ef-4a80-83ce-8a54c9224d20",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fac4ab9b-0c33-471a-9e63-cd3df0f6c227"
        },
        "item": {
          "id": "5cedd5cf-a278-4257-a257-f847bb5a89e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3453e5fd-d012-41cd-8144-c07dcfd13640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67283b70-6d7a-4a48-9d62-96aae83799fe",
        "cursor": {
          "ref": "d3a895f6-62e7-4130-9b90-0781d4e63d43",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ba83453b-d9d8-4dc8-95ed-36bca708ffbe"
        },
        "item": {
          "id": "67283b70-6d7a-4a48-9d62-96aae83799fe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cc185274-08dc-45ca-9158-bbd83a913bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0d8896-1b2c-4dc9-9da3-cf1f43e66508",
        "cursor": {
          "ref": "81c883b2-dd62-47f9-bf9e-18daff6f6c6d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bb52ee47-2f37-4efb-900e-1c5273105874"
        },
        "item": {
          "id": "cd0d8896-1b2c-4dc9-9da3-cf1f43e66508",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7181e33c-199b-4d88-8a9d-7ef68ef3df26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8ec98c-060b-4984-a568-f92ad841c85f",
        "cursor": {
          "ref": "f3819f1a-1234-461f-8da4-137d7659b68a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fa2ac793-75b0-49c4-aa9c-4d183fd7a2c4"
        },
        "item": {
          "id": "9e8ec98c-060b-4984-a568-f92ad841c85f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c1e10270-af65-4f88-a546-30c69a273eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a45138e-bc89-43d2-b87b-a72fdf9598c5",
        "cursor": {
          "ref": "0a8830b8-8f11-4e7b-bd66-776e6c534abc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c37c013-a350-4fd2-a6ad-608199abf395"
        },
        "item": {
          "id": "3a45138e-bc89-43d2-b87b-a72fdf9598c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "702239be-b2c2-49aa-9c29-010d51efd9df",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b39209d-6606-48ae-85e6-7524e6f00972",
        "cursor": {
          "ref": "54e66dbd-0d7b-4296-8ff7-41b06ce1f48e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1fd78466-bfbf-4b96-ad84-30e53c2f3f9e"
        },
        "item": {
          "id": "6b39209d-6606-48ae-85e6-7524e6f00972",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1791874c-a996-4cb6-9f36-b2075a9fd2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ea2a36-d3e5-4f30-9e1b-895c40f9b6f1",
        "cursor": {
          "ref": "5b887e1a-e23a-403a-b7e6-39054152bc87",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f9f6a061-e21a-4625-9cde-1c6bf093a6d6"
        },
        "item": {
          "id": "83ea2a36-d3e5-4f30-9e1b-895c40f9b6f1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "69d58cab-20e3-433b-9a65-7fa824cef03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551759b3-4541-4f79-9f2c-33a8700ac3aa",
        "cursor": {
          "ref": "67a9b9bc-e7f4-4dee-b70d-5fcd178fbd7e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "afe92c86-50e1-43d5-9a5e-887646f8e635"
        },
        "item": {
          "id": "551759b3-4541-4f79-9f2c-33a8700ac3aa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "718e31d3-b266-4c23-a07f-edee5bfcf126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf056539-f0bf-4f20-a6ed-c9264abebaa3",
        "cursor": {
          "ref": "3f26641c-e37c-48d8-97e1-94e6d6c5b35d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1dff77f4-c13e-4987-bb04-2fb4933f91f6"
        },
        "item": {
          "id": "cf056539-f0bf-4f20-a6ed-c9264abebaa3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7794443-df26-4d6d-b179-bcf4d228fa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53516e7-adf7-495a-8873-77bc1317ecac",
        "cursor": {
          "ref": "9fe25927-1163-461c-9373-b1c9544647eb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1b1c57b2-f2ea-49f1-88f4-026ff81d4b9c"
        },
        "item": {
          "id": "c53516e7-adf7-495a-8873-77bc1317ecac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9640f434-97b0-4764-8e90-fc66b37f21d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d408a7-d614-482e-92a8-75280d90be4a",
        "cursor": {
          "ref": "c408cc1e-10f9-48a3-bafc-5469a4e5673a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5074dfae-36e9-466e-a3aa-d5b9e74e92f3"
        },
        "item": {
          "id": "08d408a7-d614-482e-92a8-75280d90be4a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2dc65513-7044-4ae8-9051-5a3823c93cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338effeb-65ea-466c-9686-42b828ffd7a5",
        "cursor": {
          "ref": "191a95e9-c2a0-46cd-926f-6acf6e519ca9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f0f9bf7c-ddab-40d6-b2f9-2475ad200b22"
        },
        "item": {
          "id": "338effeb-65ea-466c-9686-42b828ffd7a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58f17edb-421a-4820-b515-91145f1fb349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83818644-a013-41e4-8f69-1318f0b5366f",
        "cursor": {
          "ref": "ffc5d3e8-8d83-4973-88b0-fb31616d5d4e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0a0a1a35-a42f-45b1-ace1-99d89fe1d30b"
        },
        "item": {
          "id": "83818644-a013-41e4-8f69-1318f0b5366f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8baae483-e5f4-4ba9-88d8-2094a84e5073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39fccc-0d0d-4549-ae68-9ffe6b44af70",
        "cursor": {
          "ref": "813ec7c7-2faf-4ac4-9254-377c967cfc2c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e94fac55-b7ff-4555-9892-9d25127bfa4d"
        },
        "item": {
          "id": "bb39fccc-0d0d-4549-ae68-9ffe6b44af70",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4057d227-4e6e-4237-8775-3ce5c9c756c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183043d7-85b1-4b62-b3d3-e6221f047416",
        "cursor": {
          "ref": "2e78a91f-ac7a-4f42-a81a-cb4c2b7f3d9f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "694af255-69ec-4af8-b14a-5f1f54b104e2"
        },
        "item": {
          "id": "183043d7-85b1-4b62-b3d3-e6221f047416",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be5f9b9d-238e-4f82-8007-6443de6ad225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e59c7-eaa2-4563-a944-ae8796b06281",
        "cursor": {
          "ref": "0647b3e8-0f9f-4403-98fc-8849055ab476",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "013ce049-4af7-4323-87fa-28841b66af3a"
        },
        "item": {
          "id": "bb6e59c7-eaa2-4563-a944-ae8796b06281",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "04256d64-b324-4567-8b02-99a8a5a229df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b66a8-d554-4783-8552-db316af48dcb",
        "cursor": {
          "ref": "bb943a13-5135-459b-86a6-a940ea891bb0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6fd2b01f-2209-41f0-a011-b667f518adee"
        },
        "item": {
          "id": "f58b66a8-d554-4783-8552-db316af48dcb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "24639ad8-fea8-4719-a2ee-0f2f652eb3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913d117-f32e-4111-90d8-ae493655d5c6",
        "cursor": {
          "ref": "400eab87-7732-4ca1-bc5d-87a3fd3bb3f3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c3b16d02-4e19-48d5-99e5-f5d5e2828f4f"
        },
        "item": {
          "id": "5913d117-f32e-4111-90d8-ae493655d5c6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "432df08e-c180-48fe-ad45-db6ecd417a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c3d93c-2aa7-4491-a41a-6dcb531d392c",
        "cursor": {
          "ref": "1e796849-1965-4550-8587-c26590b20a3e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0dabe1ac-ab80-4e5d-a649-8753076147b3"
        },
        "item": {
          "id": "c7c3d93c-2aa7-4491-a41a-6dcb531d392c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6907cf5c-2464-40e6-9520-0a2e73a76b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec671a4-9917-4b97-9fbf-9c9da30df25c",
        "cursor": {
          "ref": "29ee910d-3ea9-43a0-98ce-a5a1937aaddf",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7141a81-230b-4559-a980-2869f267b51f"
        },
        "item": {
          "id": "1ec671a4-9917-4b97-9fbf-9c9da30df25c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9b2d7c1-c28f-407c-bc6b-c2522bf40723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc07b69-3460-4761-abd5-57d057972656",
        "cursor": {
          "ref": "5c48cd49-a091-4719-81ce-ace0f1bb3a64",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2cb452a5-141d-4cc7-8bea-e41ba6b4eaff"
        },
        "item": {
          "id": "9fc07b69-3460-4761-abd5-57d057972656",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f08bfe8d-1811-40dd-b185-285cc6aa31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf8dc27-95c9-473b-b88f-e84db72355a7",
        "cursor": {
          "ref": "c0603429-848c-4cd6-a330-0dd414185006",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f58e9eaf-12d2-41cc-af2a-cdc7f894b0a4"
        },
        "item": {
          "id": "cdf8dc27-95c9-473b-b88f-e84db72355a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b682c5f4-a90e-47fc-8135-7fd88ecf5fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f67561e-d8ed-4514-ac41-0642200c27dd",
        "cursor": {
          "ref": "390d2ac0-1e14-4714-8e28-d698e61f151d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7a9125c-b0c0-48b4-ace6-9bc0421a5ae0"
        },
        "item": {
          "id": "7f67561e-d8ed-4514-ac41-0642200c27dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ea30817e-5571-468e-844d-bbb10e7b5cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd14265-5d62-4bce-91d8-19571da5d303",
        "cursor": {
          "ref": "651a3cd8-22ff-4ead-bb6d-df902feb7a66",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "779e407f-4a27-4310-93ed-16164b34ce92"
        },
        "item": {
          "id": "4fd14265-5d62-4bce-91d8-19571da5d303",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "502c9f93-228d-41ee-b19c-426e24a0a2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ef37c9-82f9-4ebf-b4b7-79c5010b5701",
        "cursor": {
          "ref": "f8646ea7-8a30-4cfa-bd04-99c5284a9e35",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5624386c-34ca-44fb-aa7d-393975ac8c99"
        },
        "item": {
          "id": "18ef37c9-82f9-4ebf-b4b7-79c5010b5701",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bc3175fc-7c9d-4493-a683-7c5d556bf81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b83491-78d8-445d-bc2d-70da8aaed1bd",
        "cursor": {
          "ref": "da279da6-ba55-4f4f-87e5-efe29e94d608",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c926fcfe-53c0-4787-a756-3a44d2c67a1c"
        },
        "item": {
          "id": "d4b83491-78d8-445d-bc2d-70da8aaed1bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ec28b3eb-5dcc-4949-9894-7dcba931351b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336ac156-ce7d-4f3f-ae2d-2898f564717d",
        "cursor": {
          "ref": "d4654b0d-01d6-406b-937b-e56aa5913cd3",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "841f044e-c13b-462b-b56e-3c1c847b1298"
        },
        "item": {
          "id": "336ac156-ce7d-4f3f-ae2d-2898f564717d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c5120511-bc4f-4372-ac9d-0ac487e9866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773163cb-8999-4a3a-aaa5-647032674c59",
        "cursor": {
          "ref": "72a883e3-d2e6-4568-a085-3a8e88f55a88",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6ae418e7-a6e8-414d-8b04-53fb4cdfbc44"
        },
        "item": {
          "id": "773163cb-8999-4a3a-aaa5-647032674c59",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5a7a4bc7-4935-43ea-86c2-8f413801395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964cbd15-8378-4f53-9e4e-4cba8393a2cf",
        "cursor": {
          "ref": "d0e24539-a398-4ae8-9e46-0d32cfbd3dbd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "27e0958e-a1bc-4668-80f0-a027e4f5be06"
        },
        "item": {
          "id": "964cbd15-8378-4f53-9e4e-4cba8393a2cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7ea05d9-2126-4ef2-b16c-d38646608857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfeae07-77c2-4211-88bf-6bb5707175a6",
        "cursor": {
          "ref": "3f1bcc5b-f8f0-4b3e-bf6d-08807d854dcd",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5400991c-5554-40d1-a5fb-2823967e0816"
        },
        "item": {
          "id": "9cfeae07-77c2-4211-88bf-6bb5707175a6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5193b3d5-64ff-4e2c-b5bf-3f66ed67761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a50db0-10ba-4bf1-a633-8d5ed37abe92",
        "cursor": {
          "ref": "8e3a776c-8a92-40d5-be3e-5d71ce02e70e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51e5ace7-0bec-4dc1-b5a5-14bc1bc9a7eb"
        },
        "item": {
          "id": "65a50db0-10ba-4bf1-a633-8d5ed37abe92",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "07817407-dd15-435a-aaa3-e3dc5b69639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8ed0d0-e93a-45e4-9884-dbf926fad5bd",
        "cursor": {
          "ref": "ca51a3cd-55a2-4f64-883e-1881b26c275f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "37422538-9de6-4312-bfba-3e1f29e82d51"
        },
        "item": {
          "id": "ee8ed0d0-e93a-45e4-9884-dbf926fad5bd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4aa6427d-5508-4ff1-9b71-bc212ff947dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f2686f-8334-4a18-8f5a-0d9911565f88",
        "cursor": {
          "ref": "c6681e2e-46bd-4452-b162-b8d2b29e701e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9bdb1fb8-d0fd-47cc-b3e6-617963f4d149"
        },
        "item": {
          "id": "61f2686f-8334-4a18-8f5a-0d9911565f88",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08d027fd-7de1-428c-ba10-a98afe46a629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4421977f-4d68-40a3-9bf5-0e21b60bc877",
        "cursor": {
          "ref": "7d7f5fe9-46c0-4061-ae3d-392d1bdeef98",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a52a4f4a-c0c4-4c95-a1fc-25961eb0386f"
        },
        "item": {
          "id": "4421977f-4d68-40a3-9bf5-0e21b60bc877",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4f69096c-7863-4e20-ad09-f958df744a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef3b786-f5c5-4239-9cf1-854cb544e7ea",
        "cursor": {
          "ref": "117ebeb8-14ec-4e23-8378-f62901d3f7f9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad730aa2-fb6d-415c-bad5-8b120816977d"
        },
        "item": {
          "id": "8ef3b786-f5c5-4239-9cf1-854cb544e7ea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ec1e86b8-ca2f-4d00-a48c-a5a0d7dc2e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c6cfe-b74a-4088-ac25-3f297a18cedb",
        "cursor": {
          "ref": "40671656-922e-46e0-92b8-f107936b003b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0b53b9e7-2664-4888-8bb8-766d31c6d7de"
        },
        "item": {
          "id": "641c6cfe-b74a-4088-ac25-3f297a18cedb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "adb935f8-afaf-4787-98db-6e0f57b08045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52a7513-b77f-4df1-b085-684bb5b09d76",
        "cursor": {
          "ref": "9dc14c13-65b8-49f8-8481-f8428168d174",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f83dae43-d0ce-48c4-8811-7d851de1005d"
        },
        "item": {
          "id": "d52a7513-b77f-4df1-b085-684bb5b09d76",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f49ee2a6-3111-4360-80eb-f536fc617540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752306f1-a613-460e-93eb-4ad35f41fdc3",
        "cursor": {
          "ref": "6e819929-304e-458b-a7ce-b068a278c969",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "922da2f7-a2ef-496a-ae6c-1a30a45adc0f"
        },
        "item": {
          "id": "752306f1-a613-460e-93eb-4ad35f41fdc3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "141c7926-6fd0-400d-959a-a0e73ae23d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a73ee2-e69b-4730-b95e-806c6e438179",
        "cursor": {
          "ref": "a3ea0f97-7dd0-4e87-9f77-1aabc65fe9af",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "64b2bb3d-7429-4db6-8124-cf4453f744e4"
        },
        "item": {
          "id": "65a73ee2-e69b-4730-b95e-806c6e438179",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "578d5c63-e05e-41b4-946c-b73f16561e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1606d42-dc6d-4b25-ad05-634dfad3b65e",
        "cursor": {
          "ref": "b2514189-494f-48c4-86c0-155ea93a0db0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "313a48dd-f2b0-474e-9296-41e90f66eaca"
        },
        "item": {
          "id": "c1606d42-dc6d-4b25-ad05-634dfad3b65e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e216de0-5112-45a7-ba3f-872c2532096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22920b8f-56aa-4f79-a0de-c0ea6fa6fbd7",
        "cursor": {
          "ref": "b221d698-2256-4b41-a611-8e19dd1c80c5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b14717b4-ea9c-485b-9730-68098b08ba86"
        },
        "item": {
          "id": "22920b8f-56aa-4f79-a0de-c0ea6fa6fbd7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "12ae9a1e-0634-4481-a11f-788ccfd3bac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de712695-9419-44f6-8c11-479c2e0580b0",
        "cursor": {
          "ref": "3a25eaec-63d4-4946-a842-82f3ee042de0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "199c6a05-b087-44a2-8cf5-c9e0e4eef2db"
        },
        "item": {
          "id": "de712695-9419-44f6-8c11-479c2e0580b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a45bc5d8-283e-4c8c-a10a-bab7ab8b3d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7d6a33-0914-4b28-99ca-bb0f6d98808d",
        "cursor": {
          "ref": "95a9ede8-ff55-4779-8720-d6411b679e89",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ced2613-dfc9-4863-b589-c25f52320f59"
        },
        "item": {
          "id": "2f7d6a33-0914-4b28-99ca-bb0f6d98808d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f20f18a-1c8a-404f-b944-3753b7cbc3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a557e-2a27-4641-bbbf-36f669ef57ae",
        "cursor": {
          "ref": "b447e423-d998-47f6-82c0-b201e78c9e36",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1098f5fc-8bb6-415c-bb36-056d66b05660"
        },
        "item": {
          "id": "7a7a557e-2a27-4641-bbbf-36f669ef57ae",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a678e109-d586-4089-8bd8-dc663238c8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b2075f-0c95-4082-9423-488fa9f8926e",
        "cursor": {
          "ref": "d0864cb6-5f22-4a17-b140-e721d6296a23",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "77592ff4-7fec-48b7-8a75-b127a9f07099"
        },
        "item": {
          "id": "73b2075f-0c95-4082-9423-488fa9f8926e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3aecf8a0-c953-41a6-8a82-5601ecd06e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155eed3-90d4-4144-bd6c-dac8bcd0cf6e",
        "cursor": {
          "ref": "deb58aa5-40db-4c6d-aabe-d4a0f92aba76",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b04f83b0-b343-4ac1-82d5-77b13b302213"
        },
        "item": {
          "id": "d155eed3-90d4-4144-bd6c-dac8bcd0cf6e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99212561-cc90-471d-bb12-e2850af14220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8582a3-ca6d-473f-9d38-18d0be6dec02",
        "cursor": {
          "ref": "bf9519a4-fd55-4087-a649-57f91086d6bf",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "49cd95fc-40fa-4efc-828f-4d1b72a13968"
        },
        "item": {
          "id": "ae8582a3-ca6d-473f-9d38-18d0be6dec02",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3203f97d-69b7-4529-ae97-4888d96ab4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8bfc88-38e8-424e-9fd3-c0face5f35a8",
        "cursor": {
          "ref": "f53cadbb-0d0b-45c3-b596-3d546c915942",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4ef10870-9a61-4a6e-b642-0fe07ecb96f0"
        },
        "item": {
          "id": "6b8bfc88-38e8-424e-9fd3-c0face5f35a8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "60aab921-a203-46fa-9a4e-eb5955d42314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bb8d05-f535-4f37-9195-2a716aa64e60",
        "cursor": {
          "ref": "af3b1571-5ac4-4e3d-97aa-626155cec33a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1baf051b-805b-43f0-bdc0-c58a5301ede3"
        },
        "item": {
          "id": "d3bb8d05-f535-4f37-9195-2a716aa64e60",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6b251170-b5ef-4cb1-a5f3-719f835347c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9da8ad0-dea0-4ac7-a9c0-87e3c7bd1830",
        "cursor": {
          "ref": "a5fdb1fe-b9f3-4dbb-a06d-7039dae721b6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4f5819fa-7b71-4966-b61f-2a04fe38e242"
        },
        "item": {
          "id": "b9da8ad0-dea0-4ac7-a9c0-87e3c7bd1830",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6ec256f4-dd5b-487a-babf-307c367cf7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23754e5-5a81-4805-bb6e-68117668e107",
        "cursor": {
          "ref": "89b56395-fcb8-487c-ae9e-9170be3af236",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b278b781-0fd3-4b33-9f43-1dcd7dba6e29"
        },
        "item": {
          "id": "a23754e5-5a81-4805-bb6e-68117668e107",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b89d0800-596f-43ea-aabb-87eed3e31958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9bd24-2d97-4875-8242-484722e43c38",
        "cursor": {
          "ref": "b95ad43f-7939-4e68-ad60-abe7dd281ba8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7f0ededb-61cd-473e-9efe-3b40b81b6a36"
        },
        "item": {
          "id": "14e9bd24-2d97-4875-8242-484722e43c38",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1fc9390d-e297-4f18-904f-e131c6e13f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be251428-574c-4537-9cd3-51d73448c98f",
        "cursor": {
          "ref": "02ed1012-ca10-458d-8bc6-195b576ea5ac",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "22874e13-cd66-4394-967a-f7276ee4a1c8"
        },
        "item": {
          "id": "be251428-574c-4537-9cd3-51d73448c98f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37b4569f-33f3-4f45-bbf3-2a1a55468350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63df7f-c21d-4c1c-b5fd-08c8e535296e",
        "cursor": {
          "ref": "76cc5e03-97b7-40cf-8b1d-1d9882deb44e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "961d1b77-c523-4907-bb41-bf1d9fa968d6"
        },
        "item": {
          "id": "cc63df7f-c21d-4c1c-b5fd-08c8e535296e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dda8c52d-5c6e-41e3-ae42-1412f31ccb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34561388-50e3-4f9e-ae23-79054881b11c",
        "cursor": {
          "ref": "206c1163-3357-4dde-8102-8937b1e99927",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7301085f-927c-46cf-af43-635fe3befac5"
        },
        "item": {
          "id": "34561388-50e3-4f9e-ae23-79054881b11c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac110de3-264e-4c22-9bfc-1f4d082fbf53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b03ea-c7ae-47e4-9d6d-c250463af802",
        "cursor": {
          "ref": "e2f04632-ecba-4e31-82bf-f01695691ffd",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9ba41152-d7aa-4e02-bf5d-b2f0fc81ccde"
        },
        "item": {
          "id": "687b03ea-c7ae-47e4-9d6d-c250463af802",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0588b84b-f312-409f-9101-ad54fc1c19a5",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d13b392-44de-4b28-bcfa-4c7eb8bfc4c0",
        "cursor": {
          "ref": "cde9265a-f66f-4118-9844-0565bcc6c267",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a25fa0bb-dd2b-42a3-951e-1bd7766f20d2"
        },
        "item": {
          "id": "1d13b392-44de-4b28-bcfa-4c7eb8bfc4c0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "33adbe16-a98b-49bf-8959-40dad28b6f8e",
          "status": "Created",
          "code": 201,
          "responseTime": 215,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeff65e-9f43-4e7d-8d7c-6c71e2e1986f",
        "cursor": {
          "ref": "e08f9807-c5ae-44a4-8246-2bc6fe89dda9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "46687865-cf7d-4693-86f3-2d830aa9da70"
        },
        "item": {
          "id": "faeff65e-9f43-4e7d-8d7c-6c71e2e1986f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1ae878d-abd7-4ebc-b7f6-c4835288d647",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff921545-c42f-40c6-b3d2-c86a157e81fd",
        "cursor": {
          "ref": "3fef1da2-0ba7-4093-b1dc-d29299156194",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9513b12d-35e0-49b9-b781-69a844bc5be7"
        },
        "item": {
          "id": "ff921545-c42f-40c6-b3d2-c86a157e81fd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "14a38c4d-6b0a-4666-b0a8-5f3f907a1174",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f6d55a-fccd-42df-bad2-9d4ca43212ad",
        "cursor": {
          "ref": "051f346d-a544-4f05-972e-7af218206795",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f7e5e938-096c-4e76-a732-405cdad3950f"
        },
        "item": {
          "id": "b6f6d55a-fccd-42df-bad2-9d4ca43212ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "17685001-7dd2-4cf4-a6b3-53e56f63c485",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c739443a-10f1-46e0-98cc-75a445f55344",
        "cursor": {
          "ref": "429ffdb6-afbb-4599-ba62-1c7dc97f3bb1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "60219858-8191-49da-a016-a0f15b506b78"
        },
        "item": {
          "id": "c739443a-10f1-46e0-98cc-75a445f55344",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b7ce5a6b-82f0-4198-9e2e-2c43e28ccebd",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9764b8a-f490-4828-afbb-7f8b0a09873b",
        "cursor": {
          "ref": "2283e02d-3aea-49cb-893b-8354abee8fd6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f6e843c2-6aaf-444b-b022-86e13aef0b97"
        },
        "item": {
          "id": "d9764b8a-f490-4828-afbb-7f8b0a09873b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "83a06a0b-be48-4191-a5ec-4484c5ecea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050cce2d-0d6d-4839-bccd-2d9f77834487",
        "cursor": {
          "ref": "df6cc3b6-75bd-446f-beff-95a43c775a92",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "07854677-dd88-402c-ae3d-959c1f6a8f21"
        },
        "item": {
          "id": "050cce2d-0d6d-4839-bccd-2d9f77834487",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "41ee5332-4219-49ec-852c-4ba26cab7e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efb81f-55f6-49ff-81e7-6ff4e21367b9",
        "cursor": {
          "ref": "b218707b-e3bf-4a47-aa69-b1cd13580d17",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "23e8eeba-5d79-491e-b9fc-eae2a4089ddb"
        },
        "item": {
          "id": "72efb81f-55f6-49ff-81e7-6ff4e21367b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f0982c9-dc79-4eab-a294-a6921fa7b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8d72c7-e7af-47ae-84b2-a399ec25ed36",
        "cursor": {
          "ref": "73c05c40-69b7-4dd7-8628-b64063877486",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "42e1bcd5-894c-4aa2-a138-9f637d49fe54"
        },
        "item": {
          "id": "5c8d72c7-e7af-47ae-84b2-a399ec25ed36",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5467f58e-7104-4b4b-a2e2-e8549c42780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2fd794-d07f-4110-a83c-2747b0c2d69d",
        "cursor": {
          "ref": "2e2d795b-d10b-4966-baf3-b8310729e6e5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b8fa466f-c2fb-4f63-84b2-84ebaad54109"
        },
        "item": {
          "id": "dc2fd794-d07f-4110-a83c-2747b0c2d69d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f15b653b-7193-4662-82f6-3173d8d30971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee629ae-8237-43be-ad4b-9cc8a1269cd1",
        "cursor": {
          "ref": "c1e8c4c2-2a15-479c-9229-d25b1a683362",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9a941919-a552-47ae-b6a4-2be5bb8ce66b"
        },
        "item": {
          "id": "6ee629ae-8237-43be-ad4b-9cc8a1269cd1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b04a3238-39ec-4144-bf7c-fbbadf35941d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f574f-0d58-4158-ae6c-29e113616e93",
        "cursor": {
          "ref": "b6fd1358-9118-4aee-8623-e3f764d9caed",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e76e4ae-3419-43c9-bd6a-bf37acb7026d"
        },
        "item": {
          "id": "f64f574f-0d58-4158-ae6c-29e113616e93",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7f67490-50a6-44ec-b427-b87ec113ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8d2ee-733b-4823-ba28-6f9510640f5c",
        "cursor": {
          "ref": "b7d430d6-e2f2-42cf-882c-aa78d5c45f5e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d126ee08-1f8a-4419-97aa-ae35d190e406"
        },
        "item": {
          "id": "58b8d2ee-733b-4823-ba28-6f9510640f5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ba4862aa-bc84-45de-9fc5-5af943d8bc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d637faa6-2d59-4be2-95a0-b07492b01ec4",
        "cursor": {
          "ref": "23601f02-bc1f-4ad4-9607-15626b745a59",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31027839-011f-4c05-9cc0-e24ffa573a98"
        },
        "item": {
          "id": "d637faa6-2d59-4be2-95a0-b07492b01ec4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc8969fb-9bd0-40a6-9eb3-d48646b8e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f89ddfb-76d5-461a-8bd8-8421601c3b97",
        "cursor": {
          "ref": "7d7c93e4-41a6-43fa-87f7-773bf47d0f49",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49b7850d-a8a2-494f-8601-2f005d512967"
        },
        "item": {
          "id": "3f89ddfb-76d5-461a-8bd8-8421601c3b97",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "26857a63-a106-4e7d-a414-7f5286137c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47f670e-658d-438c-99f3-7e6b6cc43b0a",
        "cursor": {
          "ref": "08eb5bef-686e-4925-8860-3fb79a60a11a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "872f233f-a6cb-4e97-99a2-aa6ced0f285f"
        },
        "item": {
          "id": "a47f670e-658d-438c-99f3-7e6b6cc43b0a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1afd196-2960-41cd-9980-f4cdd4d5eabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963002ca-a034-474e-a474-75e984144df0",
        "cursor": {
          "ref": "bc2db832-b70c-40c7-bf02-d1ec0f5c2eb9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7fd1a8a2-fe00-41fe-8b3b-69fb57f0d349"
        },
        "item": {
          "id": "963002ca-a034-474e-a474-75e984144df0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d9d83cc5-b9ba-47d3-bec0-53600747bcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b55df-d42b-47ca-a1ba-ed619b347f54",
        "cursor": {
          "ref": "1dd303da-779e-474a-9536-43e64512c6c4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "44d951d8-a232-4d09-b75c-65df4f7fd0c1"
        },
        "item": {
          "id": "792b55df-d42b-47ca-a1ba-ed619b347f54",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83931869-eb78-4b76-bed6-f0cd52250491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e487c588-4c9f-42bc-8463-7b7a1f7c458e",
        "cursor": {
          "ref": "e16497e3-16a2-41d2-9e4b-076a990ac574",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c185bfcd-5ff9-4b37-b7b2-11aa9c2eac4a"
        },
        "item": {
          "id": "e487c588-4c9f-42bc-8463-7b7a1f7c458e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c88eb811-c807-4602-bfaf-eb90404856dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b61648-fd49-4ddf-81f2-a2d22d4f9024",
        "cursor": {
          "ref": "68d7b43b-2f37-4baf-8cc5-923015a699ab",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "074d8ef8-0ffa-455b-8103-2ec87baa872d"
        },
        "item": {
          "id": "95b61648-fd49-4ddf-81f2-a2d22d4f9024",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "766ed396-6e4a-4dc7-a4be-39d04a779e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28efa11d-8fae-4dce-9607-9a1450529c74",
        "cursor": {
          "ref": "3849e4ef-6436-4391-95ba-f5d035fac6b8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1c82008c-7678-4a07-a62d-eb3a48e0210e"
        },
        "item": {
          "id": "28efa11d-8fae-4dce-9607-9a1450529c74",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "87743283-f934-4590-9b0c-18b63e7654bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c866a2-b394-4ac5-a954-22f8cb9cb108",
        "cursor": {
          "ref": "17f2ce08-7051-42b2-9158-3c1f555cba5c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "673f88b7-1fdf-4dc7-abf6-f77bcbe81e88"
        },
        "item": {
          "id": "82c866a2-b394-4ac5-a954-22f8cb9cb108",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2dc66d50-c3b1-44f7-b316-86beab8d9890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f7cb5b-5248-4d89-a7e2-78a849e065c4",
        "cursor": {
          "ref": "0486fb99-f50b-4579-9a36-c6664e5aeec4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c9475ff6-4947-4c1b-8d9c-238044f90618"
        },
        "item": {
          "id": "c4f7cb5b-5248-4d89-a7e2-78a849e065c4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f20a448-53b8-4c71-aca5-2009305bd91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77991dd9-f719-41ce-9df1-bbcf4b40b460",
        "cursor": {
          "ref": "8d8190e6-0f5e-455b-8675-9a03c9343ca0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99e51a27-a89a-49c3-9f66-945f4550b6d7"
        },
        "item": {
          "id": "77991dd9-f719-41ce-9df1-bbcf4b40b460",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5d352114-b699-49fd-9299-b98d9eae65f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8e536-3c1a-4aca-94e6-b701b89da03f",
        "cursor": {
          "ref": "5ffdb03d-af41-46c3-b43e-433b404a0e1f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6cd76bed-9258-493a-9901-3069571c5509"
        },
        "item": {
          "id": "eee8e536-3c1a-4aca-94e6-b701b89da03f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ed02296e-5bbb-464c-b02a-4645398b1821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ad592-81a5-4e4c-b61e-8e074a69d65b",
        "cursor": {
          "ref": "f98a5857-0e32-433a-be7d-082e65339899",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1b3c5cb4-39b7-40c8-bb56-f7117a468923"
        },
        "item": {
          "id": "ea4ad592-81a5-4e4c-b61e-8e074a69d65b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "19930f82-8ac1-43da-b699-181637b5678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4695c88-8900-40ab-b092-f59d5ea0fd38",
        "cursor": {
          "ref": "c65aba52-759a-4bf8-b3bb-2e5d88d52160",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "81d619ff-8828-4237-ae62-7cf07b3612f0"
        },
        "item": {
          "id": "e4695c88-8900-40ab-b092-f59d5ea0fd38",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e4f99560-0ebd-4711-ae67-92198286a294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac28a3b6-3a20-4255-ae30-bba1341c9cbf",
        "cursor": {
          "ref": "be1a8490-c490-4516-8612-84818a62c43b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a0f71754-12cf-4076-b0a1-569e2adc6c73"
        },
        "item": {
          "id": "ac28a3b6-3a20-4255-ae30-bba1341c9cbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6c922170-4f70-449a-9612-657b019d39c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c2e52-bab2-49b3-94ef-2b4d4c6baf27",
        "cursor": {
          "ref": "6067fb23-4c47-46bb-a37b-1a0d84621ca4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "54a1dd5b-edbb-44cf-ad57-b58dd87b645e"
        },
        "item": {
          "id": "1f3c2e52-bab2-49b3-94ef-2b4d4c6baf27",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cc5afe54-25ab-4f7c-8887-8c4269d5ad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf43dc2e-959b-476c-9133-5d33749e159b",
        "cursor": {
          "ref": "1b16b55e-624e-44c8-8aaa-95b16a6f67c7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "684f0c51-eb6c-463d-b776-ef0c0a94442c"
        },
        "item": {
          "id": "bf43dc2e-959b-476c-9133-5d33749e159b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a78345e-4339-487d-8942-86f2b9cf23f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa368b3e-c36b-44f8-82af-cf1617251f8b",
        "cursor": {
          "ref": "659e2ce6-a9fb-459c-9e8a-d5a55e8cbb60",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0ee00074-a387-46f7-8f1e-b46c4423c25f"
        },
        "item": {
          "id": "aa368b3e-c36b-44f8-82af-cf1617251f8b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f7f0c688-a43f-4575-8bc3-a574095859d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a47c4a-ec0e-47f4-88f1-6c9b90e7971a",
        "cursor": {
          "ref": "0644d387-195a-44c6-9dd7-67c774cf08e3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4dac33f5-70eb-420e-b002-86a4002bfda0"
        },
        "item": {
          "id": "b8a47c4a-ec0e-47f4-88f1-6c9b90e7971a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "46699021-3ea3-49a8-a819-5c3636281597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b73c2-f87a-4610-832a-8a2c2f28b7a5",
        "cursor": {
          "ref": "6092deed-7ed3-405b-b3cb-060ad2f585e0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5fad2a30-7ffd-49ff-8b22-e84fe279200d"
        },
        "item": {
          "id": "794b73c2-f87a-4610-832a-8a2c2f28b7a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16bdcdb1-130e-435e-9c9c-95044b5f58d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5827a995-461b-4481-a69b-ff82eaa6a6b8",
        "cursor": {
          "ref": "cca8682e-656d-4234-945a-e2117d45429b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7577ba7-b84c-4c0d-99b9-040d3104caae"
        },
        "item": {
          "id": "5827a995-461b-4481-a69b-ff82eaa6a6b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efb3dca0-0f05-4efb-bb82-d6eb05114c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae4164-8c69-4840-91a5-57dc299716cd",
        "cursor": {
          "ref": "3bea5b10-8ffa-4f5e-b2b6-132a9cfd448a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b325822-7c86-47cf-9f28-eb4eff52112c"
        },
        "item": {
          "id": "47ae4164-8c69-4840-91a5-57dc299716cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0467bcc4-c778-4b05-90d9-3f3ebd1bbdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b7a783-90b3-4e27-8ca3-3aab6d3c3ae0",
        "cursor": {
          "ref": "a8336b9b-eddd-45dd-866d-e407ed720598",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e7d7ade2-73ed-453b-9ff9-854927c1e417"
        },
        "item": {
          "id": "d1b7a783-90b3-4e27-8ca3-3aab6d3c3ae0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2084844d-f5ca-4f5a-b200-e3b0d0290bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ca821d-d233-465e-a9b5-1a704bce270a",
        "cursor": {
          "ref": "04e0ee7f-7ae1-4e83-bb56-5fb71d68e67b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3ed22780-aa55-4da1-b919-4b3c1cb53a7d"
        },
        "item": {
          "id": "34ca821d-d233-465e-a9b5-1a704bce270a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6933b1e-5f59-4a4f-93af-310b7753b67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186f19b-045f-4887-8b18-31b8aec51bae",
        "cursor": {
          "ref": "e23bd7be-bac2-484b-afac-c1d2002612b0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19efb4e2-6b60-4b39-b990-1a6468fe3dca"
        },
        "item": {
          "id": "7186f19b-045f-4887-8b18-31b8aec51bae",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aec202de-44cb-4468-a1a2-0d600e77b21e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ded56-7d09-4d81-a63e-9711557b7dad",
        "cursor": {
          "ref": "a134d7b4-3600-4c60-9bfb-f93eadc0ce42",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd224dfe-dbb3-4652-88ff-27b05d8023cd"
        },
        "item": {
          "id": "a77ded56-7d09-4d81-a63e-9711557b7dad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c8b390f5-1a31-4a91-9363-c1b5a4d122e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7149dd63-5a51-4dbf-a151-d57901908c58",
        "cursor": {
          "ref": "d4e5dadc-4461-4ec6-b692-734634197b44",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6a307946-101a-44a1-b2ea-8edaa9b5e885"
        },
        "item": {
          "id": "7149dd63-5a51-4dbf-a151-d57901908c58",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8a2537e-c871-46f7-9d61-23c8f44cac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74546e8-43b3-45d7-836c-ebb0f9e538d3",
        "cursor": {
          "ref": "23e58505-ded0-4eb4-8bd7-fa83d6b2594b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a437a9ba-96e7-4704-beb4-f22f77d41086"
        },
        "item": {
          "id": "f74546e8-43b3-45d7-836c-ebb0f9e538d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cf9e90e4-f760-4a88-a55b-4d76ef03846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68817e3e-5994-4784-8e08-1e40fe3290b3",
        "cursor": {
          "ref": "b23852a3-63e6-4202-913a-7f11af7e3e28",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "572e6832-06a3-4e3c-9f1c-f291273323fc"
        },
        "item": {
          "id": "68817e3e-5994-4784-8e08-1e40fe3290b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "11b77ae9-6994-4f25-8b19-8a9d39d5eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248fb01d-9a9e-49c7-a1c5-51ad42ced25e",
        "cursor": {
          "ref": "de04097f-5950-454c-a69a-7f619d0351f6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "baf469a8-f80e-45ab-9ede-812214153d71"
        },
        "item": {
          "id": "248fb01d-9a9e-49c7-a1c5-51ad42ced25e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ff72af81-a851-49b3-92fd-2e70d81ceb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106cc5a3-d851-41e5-91a6-f1564c8758dc",
        "cursor": {
          "ref": "2e1b5bfd-dc42-4592-ad30-b23198563cc5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "88989a1f-d5b8-4018-a413-181e39a9590f"
        },
        "item": {
          "id": "106cc5a3-d851-41e5-91a6-f1564c8758dc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "873ca542-f779-4578-89f3-6723f7a29c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9bde86-e1b7-4e5f-94d8-832576a9c289",
        "cursor": {
          "ref": "2a7cbc99-f441-48c8-a855-33023ebc1fb9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a6a18daf-76b4-43cc-932f-95e23fb7ebb0"
        },
        "item": {
          "id": "fa9bde86-e1b7-4e5f-94d8-832576a9c289",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1d8c57d2-9421-478d-85f0-7d9384ef249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951cc64-9669-4e46-8327-99127079b10e",
        "cursor": {
          "ref": "00977fa0-83a3-4296-837b-1200f74735d2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "62e0712f-eb14-4ad9-ad5e-32c7470da656"
        },
        "item": {
          "id": "6951cc64-9669-4e46-8327-99127079b10e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55864e4b-ba00-4f68-8da0-0202321920d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9d1177-992a-472b-82f2-0b8168875816",
        "cursor": {
          "ref": "26045be0-02a6-42f6-b741-23ab84329e4e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95c6ce76-f5fe-4cfe-bf82-408a7e9f8cda"
        },
        "item": {
          "id": "5a9d1177-992a-472b-82f2-0b8168875816",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a812b395-80ca-4bf9-9478-631bb5e9016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742033f5-0227-46d0-b2d3-3d5353c39870",
        "cursor": {
          "ref": "61af68b1-aff8-4051-a006-ffbe4ec099eb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6f655e91-101c-47bb-a4b8-ab6f8aaabcfb"
        },
        "item": {
          "id": "742033f5-0227-46d0-b2d3-3d5353c39870",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "20fd0b4a-7bc7-4a5b-8091-bdbde44d5fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88982310-43fb-492d-8de7-181c4fedabae",
        "cursor": {
          "ref": "5c8996cd-94b2-4c2b-9a36-ae26917b4dd0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1f86ccf-97d8-4084-8bc4-fd40e8e11310"
        },
        "item": {
          "id": "88982310-43fb-492d-8de7-181c4fedabae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ea73821-0e75-4852-bf5a-b9fce9b9e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ff06d7-f645-480f-9822-5454a3c724b2",
        "cursor": {
          "ref": "cebd31f8-eeb5-4461-886f-047e52d3e91b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c80cf31b-9ed8-4977-ac39-41c213c9d59e"
        },
        "item": {
          "id": "72ff06d7-f645-480f-9822-5454a3c724b2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39636211-59ad-45ea-9fcf-0d692330d0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ef1500-ee87-4343-b6b6-bcdf2421197a",
        "cursor": {
          "ref": "f21db944-58c4-4770-9b61-5f34cdca4cae",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "785681af-51e8-411f-aee7-17c953796a1f"
        },
        "item": {
          "id": "25ef1500-ee87-4343-b6b6-bcdf2421197a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "af764adb-f3dc-4d6d-adbb-e9a47b5eedd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ed73f3-14f2-4a3e-8dfa-fa2cbec84211",
        "cursor": {
          "ref": "7fc952bc-ef4c-443a-84d8-b5a92998ad07",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6b937e44-ea1d-4e3b-a59d-550450aa1999"
        },
        "item": {
          "id": "56ed73f3-14f2-4a3e-8dfa-fa2cbec84211",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a4adc9c0-7596-46bf-ba49-82bc2548cdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ccd52c-aa2d-43f5-9f01-bfd8d2140bb3",
        "cursor": {
          "ref": "0e96066b-62d0-4ec4-8d76-a0c24daa6327",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ce9f36d-ef72-43ca-a681-85fcec1313cd"
        },
        "item": {
          "id": "49ccd52c-aa2d-43f5-9f01-bfd8d2140bb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b135c407-8c9a-4b62-872a-377f6c8656a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9271f0ea-f04c-42e0-9a1a-17365be7a8cb",
        "cursor": {
          "ref": "e7105faf-bd1a-4cd5-9654-e159ed90effd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4ec33879-6d92-4f12-95e8-c16e98d0544a"
        },
        "item": {
          "id": "9271f0ea-f04c-42e0-9a1a-17365be7a8cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10c09eca-d5ed-407c-bd28-9b200b0adcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fe2a4f-2d3f-4663-97b2-61111d0dd04e",
        "cursor": {
          "ref": "bbee71fc-6f08-4185-8465-a50c0ebde543",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0686f7cf-bc98-4081-b417-fbfe03406fc0"
        },
        "item": {
          "id": "61fe2a4f-2d3f-4663-97b2-61111d0dd04e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c099d120-e821-4bec-a6b9-893b7537c77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042bf4be-2608-451b-b458-5ebb7dcf64ce",
        "cursor": {
          "ref": "69b4f5d3-45f0-406d-accd-1d037228a9ca",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d2ad68db-41d2-46a8-af84-8041045dd6d9"
        },
        "item": {
          "id": "042bf4be-2608-451b-b458-5ebb7dcf64ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b680a34d-b68c-44f5-9fd0-32173174b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36498144-ba85-460d-ad51-31e32a56855c",
        "cursor": {
          "ref": "c0f7e75b-190a-47c7-b61d-adce9adf54a3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1fe0579a-da7d-4346-9e0f-73184d3be556"
        },
        "item": {
          "id": "36498144-ba85-460d-ad51-31e32a56855c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2677afe8-8705-4999-88f6-4b4c466f1dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951abc8f-046a-47f9-9eba-f656c46fe438",
        "cursor": {
          "ref": "94ac4877-5f2b-419b-b4db-0f73d799ea7b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b9e5e14f-6e25-4c69-af87-662801dee5f1"
        },
        "item": {
          "id": "951abc8f-046a-47f9-9eba-f656c46fe438",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c4edce79-da9c-4888-8936-1fe1d60ed2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45075d87-700f-4c27-b681-05055e69b77f",
        "cursor": {
          "ref": "3cade89a-234a-4004-bd09-caeaa932da6c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cad2bf5a-3e62-468b-ad8a-b7ea0d75dc9d"
        },
        "item": {
          "id": "45075d87-700f-4c27-b681-05055e69b77f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "60228a44-62d9-49bb-b174-8c28f1ef722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73e066-7c79-4ce0-9890-ca4442568790",
        "cursor": {
          "ref": "78f382d5-dc22-44b6-9ad1-54f03d8e32d6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "09d01054-9ad4-45d5-929a-5a93fd7f9d19"
        },
        "item": {
          "id": "7b73e066-7c79-4ce0-9890-ca4442568790",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "258ccdb9-c615-49ea-93d1-10b4f11f71e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dcbf31-a80e-41ad-bf2f-e64c405695d6",
        "cursor": {
          "ref": "7af6f531-f978-4e7a-9938-df130a873587",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "76b8e1fe-f653-4ce9-a617-ee3fd1c953ce"
        },
        "item": {
          "id": "61dcbf31-a80e-41ad-bf2f-e64c405695d6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3527e0a2-9f65-40bd-ac21-fe3fda1ecf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f3030-a726-49e1-bb2a-077e08b395cc",
        "cursor": {
          "ref": "b18b6296-d70e-455e-96f9-1927f29b4bb9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0191bb4a-d6a4-4bac-bd2a-b00f046b08a1"
        },
        "item": {
          "id": "294f3030-a726-49e1-bb2a-077e08b395cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "777c61b9-3cc9-42b6-8f48-cf99ee27f858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d16811-0175-426f-812e-047d17b289e6",
        "cursor": {
          "ref": "22a66690-8370-4008-adf4-47bdeddcb9a3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9e74da6c-bee3-4310-a01d-d066dfc7a844"
        },
        "item": {
          "id": "85d16811-0175-426f-812e-047d17b289e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "12dac05b-765e-4f77-916e-3a5598e3072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c65c212-a97c-438d-9c6e-af14647d0a4c",
        "cursor": {
          "ref": "d3e00ad4-e3e9-4d84-8554-a88c7110c651",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c4bad40a-9387-4b63-b31e-0c98a1e7fc83"
        },
        "item": {
          "id": "4c65c212-a97c-438d-9c6e-af14647d0a4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd0f94e3-225b-4bbc-8f27-6e5652c48e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91008bbd-5e32-4759-bec0-7fa72ffc811f",
        "cursor": {
          "ref": "40b94f12-99b1-4e6c-9333-8ee807d8d679",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7ffd3ba3-b280-41ff-b681-4c01f1dead5e"
        },
        "item": {
          "id": "91008bbd-5e32-4759-bec0-7fa72ffc811f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "998cd55d-e875-48ec-91c4-5a2191e9746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784f1e9-4fe8-4b4f-b3c6-4ee96e6328f7",
        "cursor": {
          "ref": "29e86a05-c648-46af-860b-4690edbbf4f5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f17d6c1-63e5-4947-96d4-3a3196444356"
        },
        "item": {
          "id": "8784f1e9-4fe8-4b4f-b3c6-4ee96e6328f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa0c09f0-5166-4a73-b9f4-96465db72416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75a1b5a-2612-421e-b0d0-1b0ed689a411",
        "cursor": {
          "ref": "67a7d933-33a9-4bc0-84e3-b10879c7757a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a882f417-df94-4b73-bccb-7090e8f7555d"
        },
        "item": {
          "id": "c75a1b5a-2612-421e-b0d0-1b0ed689a411",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5b636c1-0748-4e98-bcf2-d6ded62e7991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1c69fb-e569-48c4-b979-ca5bcac33ea2",
        "cursor": {
          "ref": "22b0d722-38b3-4123-bb38-51bafef59c6f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15e49648-cd36-4dee-8af2-e43e4e0392dd"
        },
        "item": {
          "id": "ca1c69fb-e569-48c4-b979-ca5bcac33ea2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "704c6304-d00b-4e3b-aedf-8e2d1006309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f564edd2-39db-4776-9a2d-4e02feb5742f",
        "cursor": {
          "ref": "4d886403-626b-4a1f-a971-3a500bb4d333",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ec08487c-67c0-4e84-9e90-21e37e080837"
        },
        "item": {
          "id": "f564edd2-39db-4776-9a2d-4e02feb5742f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0718965c-f003-4628-9de1-9b46a35bf92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5406077c-f4ae-439e-bb56-2437be2f6036",
        "cursor": {
          "ref": "f0cf5558-bb65-4f00-b394-96085794a321",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f1dca1b7-24c0-451e-b455-04d0824bbad0"
        },
        "item": {
          "id": "5406077c-f4ae-439e-bb56-2437be2f6036",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "40acd454-ebc0-41c1-8242-e07d2b355b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bff5edf-89ad-47fb-9d6e-d7b2cbdc83b3",
        "cursor": {
          "ref": "623f5464-3f6c-4aeb-ab5f-0caa2d6118b3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "91d8c703-4879-44b8-b06a-9929c8a86602"
        },
        "item": {
          "id": "3bff5edf-89ad-47fb-9d6e-d7b2cbdc83b3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "397375d1-c8c8-4a77-9f29-8f3512a6e72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c3412-5c03-41d0-a9d9-4052427a8990",
        "cursor": {
          "ref": "71ddd32d-7ce0-4eb4-a455-0cbee56c1add",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2efd4d16-a9c8-4782-a2e0-067bfb882618"
        },
        "item": {
          "id": "088c3412-5c03-41d0-a9d9-4052427a8990",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a2e6bd7c-fdab-40b2-b499-f59644cf98a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a726dcd-833d-4a3e-b82f-a39639e536ca",
        "cursor": {
          "ref": "8496b5fa-3047-408e-a941-5bd09298c8cf",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b59a0c9-f647-46d9-83af-f9111aba2ab5"
        },
        "item": {
          "id": "4a726dcd-833d-4a3e-b82f-a39639e536ca",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2bba0779-9e93-45a3-8a28-b6e8f47e9b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd31805-c3cc-4aff-892f-4d74f8046941",
        "cursor": {
          "ref": "98e65891-81f0-47a1-aa82-124dd8ac5de9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6d2436c6-6683-4abb-b1a6-5e153001e1f1"
        },
        "item": {
          "id": "ddd31805-c3cc-4aff-892f-4d74f8046941",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d0e1ff63-0187-42f0-998b-85b650a40ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a311fd2-ce0d-4717-ac45-45070ed78110",
        "cursor": {
          "ref": "3b572070-ee4c-46a9-96a4-9c05e75e356c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f316fb71-32bd-45b5-a394-7cc8307f8a40"
        },
        "item": {
          "id": "0a311fd2-ce0d-4717-ac45-45070ed78110",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "69fa015f-8674-47e3-8de3-0078a88564e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e5f81d-ec61-4fcf-8aee-a25cce8e03a3",
        "cursor": {
          "ref": "e407a8da-73c8-4a96-9070-c9f5e0830fe7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6e2dfbd7-121b-4afa-8f62-3aac556b39e2"
        },
        "item": {
          "id": "c4e5f81d-ec61-4fcf-8aee-a25cce8e03a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22309a0c-67b9-4c9b-9467-546a68df10a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c6e90-d7bd-451b-a51b-6cbe9edfe190",
        "cursor": {
          "ref": "b894e190-9d40-41e3-abeb-d03d328b1fb5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b9e6f81d-966c-409b-88a7-c76961ea8031"
        },
        "item": {
          "id": "a72c6e90-d7bd-451b-a51b-6cbe9edfe190",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1dcf3e08-d676-4813-8127-22ed6aaa61b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caab7a25-32c5-47d8-9e2c-53c14428eb4b",
        "cursor": {
          "ref": "6734f4c7-80bd-4636-9ba5-0055be13e212",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "af1a5a36-7e3d-4f8c-b277-3a986f2bbe7a"
        },
        "item": {
          "id": "caab7a25-32c5-47d8-9e2c-53c14428eb4b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "55bd0269-5e94-4c42-b5ba-2c3e719c2a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f58a3-2e14-4a18-8038-1eddd879ffb9",
        "cursor": {
          "ref": "52d9e01c-26d2-4cca-8371-cd5129235427",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "25e153eb-9e75-4497-93ef-8595fa5cfd8e"
        },
        "item": {
          "id": "1c9f58a3-2e14-4a18-8038-1eddd879ffb9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "16829cc5-cd22-4905-b67a-f5bc1e603cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97c1915-7581-4981-aaef-a54695b081e4",
        "cursor": {
          "ref": "fc111b7c-311b-41d3-9553-40754f824cc9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b55966b6-42f7-471b-9548-6e3ba0bf138b"
        },
        "item": {
          "id": "b97c1915-7581-4981-aaef-a54695b081e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6488f78b-f7f1-4057-b7ce-ae49ce78afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84aac3d-f318-459d-8ff8-7c9ffda23e00",
        "cursor": {
          "ref": "00be0277-4ed0-4601-b2b2-ba87e7ae14b8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15c1dcd7-224f-49b2-9cc1-bb4a115a5236"
        },
        "item": {
          "id": "f84aac3d-f318-459d-8ff8-7c9ffda23e00",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "829508b1-883d-4644-a33a-3b393d2de3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d382b92-7b77-4102-93ac-45d31ead1b45",
        "cursor": {
          "ref": "9e2c52fc-017c-4568-81ab-ef64e25d0b06",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cc88eeb8-e849-45d9-b62a-e868dd07b1d2"
        },
        "item": {
          "id": "9d382b92-7b77-4102-93ac-45d31ead1b45",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc6650c6-063b-4d0e-abb1-88d87c61a246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a46dc6-c8bd-4c82-8fe5-e1b1dece28d7",
        "cursor": {
          "ref": "7d33f4fe-6770-4563-a9a6-7ef0747a1afc",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5b0d8d81-0828-475a-91df-c9524c69b654"
        },
        "item": {
          "id": "16a46dc6-c8bd-4c82-8fe5-e1b1dece28d7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fa37f197-8fc6-4725-aff8-96745ee3a4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af73e6f6-8635-4410-948b-3c15fcd3e5c8",
        "cursor": {
          "ref": "00da73a3-5842-48e9-a226-42a2a6157dbf",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9104983f-3a9e-42c3-8302-21f322dfe51c"
        },
        "item": {
          "id": "af73e6f6-8635-4410-948b-3c15fcd3e5c8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "64f29323-9680-4692-a8dd-c32b56cb0113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dd1b5f-6cbd-4c56-8c3e-964e5a4fe6d2",
        "cursor": {
          "ref": "9aef06fd-47f4-4bdb-bb6f-2c7bd698f8f8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b90b94ad-3792-440b-9be8-3dd637331ae5"
        },
        "item": {
          "id": "d3dd1b5f-6cbd-4c56-8c3e-964e5a4fe6d2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f78aa4d3-9bdf-4b82-819e-20abeae61e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3c15fd-d90d-44cb-bd09-9fefc3e980d4",
        "cursor": {
          "ref": "cac8234d-fe14-490e-91bd-5561cc8a40bf",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c827ebe6-f7b2-4352-844b-522509fc288c"
        },
        "item": {
          "id": "0d3c15fd-d90d-44cb-bd09-9fefc3e980d4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "38d69cfe-8c75-4bfc-bb8c-dcfb73aa41ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447285a6-65ae-45d0-a399-5fa148cde83b",
        "cursor": {
          "ref": "e8cf7b83-7bab-47a7-a556-478571fd0690",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3a10bcbc-d699-4271-bc98-3117c05f3aa6"
        },
        "item": {
          "id": "447285a6-65ae-45d0-a399-5fa148cde83b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e343d962-ecca-4c1b-ad99-e96070cdd686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54184cc-4721-409b-a6da-d823dc0b9300",
        "cursor": {
          "ref": "8922b22c-f4df-471e-873e-701c7167ede8",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "89845f8e-9a3d-472c-b720-c4f9dbb6f13f"
        },
        "item": {
          "id": "c54184cc-4721-409b-a6da-d823dc0b9300",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "30d416ae-11b6-4292-a169-a812a5c43d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ba5fd-1bc3-4ee0-bbad-eb8a5613ef89",
        "cursor": {
          "ref": "2951456a-49d8-4faa-b68d-0ad4c23db2b0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4476e6c8-4443-4cae-b12d-9ca142c1e234"
        },
        "item": {
          "id": "7e2ba5fd-1bc3-4ee0-bbad-eb8a5613ef89",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "778b0d46-281d-457a-bec4-93dc601901de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c310cc-c49b-4517-bd7a-83ed5b99bb79",
        "cursor": {
          "ref": "c9143e01-0fef-44bb-b717-24d5e7a571ea",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e232543-7852-48bb-bb7c-ddd60fdb577d"
        },
        "item": {
          "id": "a2c310cc-c49b-4517-bd7a-83ed5b99bb79",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e2c5d29b-c4f0-40cb-92f3-b7f2090a0074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042c1830-7381-4c6e-af02-2cfd555d2c25",
        "cursor": {
          "ref": "c72aab16-ba45-4e26-844b-0e6a24aef326",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ed143430-75d5-46fd-b60a-ca5118363882"
        },
        "item": {
          "id": "042c1830-7381-4c6e-af02-2cfd555d2c25",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ca530e74-594c-4931-bc22-259aa0919778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c124f219-b6f8-4f07-8b2b-be50f93ff433",
        "cursor": {
          "ref": "5c5085fb-d0b5-46b6-855a-db6237c1b5a1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4376bc88-cd03-4d44-ab4e-eb1f9545af6e"
        },
        "item": {
          "id": "c124f219-b6f8-4f07-8b2b-be50f93ff433",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dbb96092-2037-4717-aa0e-9ed57092154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a880046b-fd39-40cb-81df-4deffac3d7c7",
        "cursor": {
          "ref": "5c3e5677-c818-4c42-bf15-a00920ac66ff",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1b69b1f8-8753-4b11-a246-41525941ce4c"
        },
        "item": {
          "id": "a880046b-fd39-40cb-81df-4deffac3d7c7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4a62a29b-88ab-47cf-aabc-8f4826d3b74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41317a-8f5d-4a17-afbf-985ae8b4a75a",
        "cursor": {
          "ref": "3c57e961-1f6c-48ec-a57d-cf4f935dc8ed",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "43e036f3-93cd-4a1b-8eb8-f0ed74af841b"
        },
        "item": {
          "id": "0f41317a-8f5d-4a17-afbf-985ae8b4a75a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "27cce5ca-bb5a-44c3-bfd7-2ef6d180c7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98a13ca-c707-4d44-b815-75e974ee25be",
        "cursor": {
          "ref": "3c4ea848-551d-425e-8715-2098fe52fd58",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f88d1f4d-b6dc-4eb6-9e54-08022ee138f7"
        },
        "item": {
          "id": "d98a13ca-c707-4d44-b815-75e974ee25be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "03e8ca55-0329-408c-9d53-e3a68ab06cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e029bdb-3a63-4708-8d93-d07e30ae731c",
        "cursor": {
          "ref": "ef68c4cc-d2e5-4e85-a7bf-971a9a2c4119",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "568d0b49-7b10-4b71-8f40-4d74089c3442"
        },
        "item": {
          "id": "3e029bdb-3a63-4708-8d93-d07e30ae731c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "90203c6c-f5f9-472b-a5a6-0232cc4818a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f2f306-d39c-4ec2-a2dd-b8b3f71ab0d1",
        "cursor": {
          "ref": "ec991fbe-2044-462e-8cf7-a4112a523876",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4d1247a6-6a82-472f-bd53-d380d99c5b60"
        },
        "item": {
          "id": "05f2f306-d39c-4ec2-a2dd-b8b3f71ab0d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa66e91a-8702-4cca-a89e-483370d81a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8252b1e2-ad30-44e8-90db-7b577a338c37",
        "cursor": {
          "ref": "7ca8193a-e886-4885-92b9-58575d2f89cb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "398c6d6e-89ae-422e-b04e-20006612c37a"
        },
        "item": {
          "id": "8252b1e2-ad30-44e8-90db-7b577a338c37",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7bc19711-635c-4db5-89a1-f143aee37d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166126dc-d4e3-46df-a186-699544cde37f",
        "cursor": {
          "ref": "47d0622f-8c08-4614-b8a9-71a7fbd78d6d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2ef595ca-1b06-4fa6-8088-d3fb2d32b21e"
        },
        "item": {
          "id": "166126dc-d4e3-46df-a186-699544cde37f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10b28a88-3354-4b97-9068-3a0a34765de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9453459-d420-4414-9b35-64a67d71a049",
        "cursor": {
          "ref": "b515bab3-73a3-4458-8829-446e079f3227",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f03dddc9-97ce-4b70-9dce-d8e597eb3dc9"
        },
        "item": {
          "id": "f9453459-d420-4414-9b35-64a67d71a049",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "31e7c89d-530e-4a3f-8268-542d96ed594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3f079-c9d5-403a-80ec-ca2660ba5fa7",
        "cursor": {
          "ref": "2f896af0-1e60-4b61-b1d2-a8ea0ad61098",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dba34d98-26d0-46cb-bcb0-ca499452fa79"
        },
        "item": {
          "id": "2ed3f079-c9d5-403a-80ec-ca2660ba5fa7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ac5e0b8f-866e-4732-a96f-d9246ae67b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03936461-ae06-479a-b390-01500c8686c9",
        "cursor": {
          "ref": "4bb87752-d1bf-48fe-9686-de80d646ef0d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "93ffe266-070f-47ff-bcfd-8380f2cd4793"
        },
        "item": {
          "id": "03936461-ae06-479a-b390-01500c8686c9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "716c6348-611e-4264-bf0b-445b66422ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f4869-3452-4df8-85bf-40dab0be8f36",
        "cursor": {
          "ref": "034b5bf5-1e0e-4808-9e42-72669fc7969b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cc72a102-aca3-47aa-bb19-e286bd6e045b"
        },
        "item": {
          "id": "f09f4869-3452-4df8-85bf-40dab0be8f36",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1558f8ff-0238-4604-bb76-4c9afc955c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d7c3b5-cc22-47fc-892a-7f6a4d382302",
        "cursor": {
          "ref": "6756a17e-f3ee-41a8-bc2a-4ee76d39bf8b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5bfc8ccb-99de-4a63-92c4-270609281020"
        },
        "item": {
          "id": "f8d7c3b5-cc22-47fc-892a-7f6a4d382302",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "80f827c3-7742-422f-9906-161ff70c096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2976e0b-cae5-421d-a423-0b1e33b4b069",
        "cursor": {
          "ref": "ae7e9c02-8389-4747-986e-49e771b49e22",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6317ba01-8264-427b-b0a5-47a4150a7615"
        },
        "item": {
          "id": "c2976e0b-cae5-421d-a423-0b1e33b4b069",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e942665e-cad1-45c1-8adf-3906c66bce2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2098c8-b003-4b42-bddb-5a002ed0c67c",
        "cursor": {
          "ref": "f3d33697-32ab-4a8b-a17f-43c8d1b1e16c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6a4eb01f-cf56-4525-bb78-8383ac13187d"
        },
        "item": {
          "id": "df2098c8-b003-4b42-bddb-5a002ed0c67c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ee90883c-7d58-42c6-a47f-bd3f28b61fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11565c2-7038-4e4b-bed7-a923fcbbf735",
        "cursor": {
          "ref": "83c92fcd-cc41-4895-b09a-fcbe4d3cba80",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73220eeb-8436-421b-9aaf-6ccda85afed7"
        },
        "item": {
          "id": "b11565c2-7038-4e4b-bed7-a923fcbbf735",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bc9c9d5c-2993-4f1e-a7b0-3d79c81ac771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d86c62-f141-4d6d-b2c3-43c53d929c6a",
        "cursor": {
          "ref": "8316567e-e5d3-4a0f-838f-0005a0700c08",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "507ddba5-4bd5-42a9-8e44-2074dd29ecd5"
        },
        "item": {
          "id": "53d86c62-f141-4d6d-b2c3-43c53d929c6a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8f899703-f104-490d-8047-540b8125b32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3fe4f0-b4df-484c-aacd-be1084e7c9d4",
        "cursor": {
          "ref": "55a3e18e-624a-4879-bf75-d15bca8917c7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cd8da7a5-a322-4823-b4c3-73dfb8685856"
        },
        "item": {
          "id": "9c3fe4f0-b4df-484c-aacd-be1084e7c9d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "04a3d26e-acd7-4393-b214-10402dd7e5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1265d55-029f-4677-ae4a-425cf8c01cfc",
        "cursor": {
          "ref": "0eddeeff-eff1-48ad-a3b7-e1732572bc5b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a12412a-116d-4acf-9817-cd64d2a63d50"
        },
        "item": {
          "id": "d1265d55-029f-4677-ae4a-425cf8c01cfc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a7ac6bd-8632-40db-a84d-78f8b5fbbb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901196d5-ac7b-4a61-9ab4-2ed3ed745e29",
        "cursor": {
          "ref": "7f5eb69b-e79a-4e9a-88cf-1683a0fcc89c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7e6e330d-3489-47a5-8481-68968e42fbf9"
        },
        "item": {
          "id": "901196d5-ac7b-4a61-9ab4-2ed3ed745e29",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aa2928e4-4746-4785-990e-48723795be11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add41853-dd16-4c34-8670-6bd78c41168b",
        "cursor": {
          "ref": "86d1d54a-8326-4162-b084-bbda0213581b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9965319d-5988-4222-ac05-2d5f51e18ed4"
        },
        "item": {
          "id": "add41853-dd16-4c34-8670-6bd78c41168b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9527d7a2-6033-41ff-bcfe-116d37532fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62ff4c8-0aa5-4ef0-b8cd-4ea0cb93af4e",
        "cursor": {
          "ref": "5dccf2d5-4e2c-4ea2-80c9-c1f53564e966",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f575843b-343e-4af2-b7af-f09224ee2294"
        },
        "item": {
          "id": "a62ff4c8-0aa5-4ef0-b8cd-4ea0cb93af4e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d73360a-cc72-4030-b6d4-e544c8960563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09063ad-9a99-421d-a27d-90057de375aa",
        "cursor": {
          "ref": "4ef8fe05-4d6d-442b-b5f3-1c561a9066fc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e363f202-0955-4093-a199-0b6cd47799f1"
        },
        "item": {
          "id": "c09063ad-9a99-421d-a27d-90057de375aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ab8191c2-2b77-43c5-bf0f-ac7832dc9c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d582c59-bc32-4011-be06-a43733fde719",
        "cursor": {
          "ref": "1a76b91d-d666-4a50-821d-5e1ee7079b84",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12069705-0122-4c76-bed8-8171c2093854"
        },
        "item": {
          "id": "2d582c59-bc32-4011-be06-a43733fde719",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d000eee1-bf41-412d-8869-fab9f403f5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b2f48-6e99-45ad-a3c1-8f80f0d2af52",
        "cursor": {
          "ref": "6501338d-356a-4f4f-9c16-1bafe564a70e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b965bfc-75c7-454e-8d88-32ccac85f137"
        },
        "item": {
          "id": "2e0b2f48-6e99-45ad-a3c1-8f80f0d2af52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ed3cfdc6-ad45-452a-9c88-6e63171d12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56619949-a80c-4ebf-bcbf-20bb7930bcda",
        "cursor": {
          "ref": "60a8365f-3ebb-493a-83ed-1b0c833e86ee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "93b4aaa6-0f62-41ad-99ec-3eda2ec47a9b"
        },
        "item": {
          "id": "56619949-a80c-4ebf-bcbf-20bb7930bcda",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3e09cf24-17f3-4a05-a54b-dfba87e8b657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5ca2a-b3c9-4440-ac88-6e41b77a875c",
        "cursor": {
          "ref": "e5e28568-d8c5-4a26-b59c-69b53ca2e912",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e14d446-cc57-4f00-825f-3b50586fc790"
        },
        "item": {
          "id": "ebc5ca2a-b3c9-4440-ac88-6e41b77a875c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "92ae9333-5174-4713-afdf-fcaa9d9ccc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099a4d02-619f-4579-aa26-5692c940dc8d",
        "cursor": {
          "ref": "83de2822-fd1d-4cd0-8219-ce45365b97b7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7533a4a7-0838-4843-af9d-a78e34891fcc"
        },
        "item": {
          "id": "099a4d02-619f-4579-aa26-5692c940dc8d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21755cfc-3a75-4372-b82a-5b8ca2bd56d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a9d079-3505-4e36-96cb-fe768c1d3878",
        "cursor": {
          "ref": "b6f923d3-c114-4ae6-ad41-3e80fb37da11",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1be0b894-6e83-4db7-bd76-7b302cd618f1"
        },
        "item": {
          "id": "c1a9d079-3505-4e36-96cb-fe768c1d3878",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "83a2fd49-f872-4483-a1ce-d72fc53384d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef7f8e7-efbb-4b7e-87e9-3f6c802e0e1f",
        "cursor": {
          "ref": "3847411a-c25c-4130-9227-cdcf166da2be",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "271ef31c-f7df-494c-8577-4b0eb51157a6"
        },
        "item": {
          "id": "9ef7f8e7-efbb-4b7e-87e9-3f6c802e0e1f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "23d786f7-9675-4c1f-88ff-1320c4ce61da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd7a362-ebbc-44a8-aa87-47d8362940f6",
        "cursor": {
          "ref": "f5870347-7c08-40c7-a708-13937df5ebf5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eceb636c-c4ee-41ac-8f98-9b562b9d6092"
        },
        "item": {
          "id": "abd7a362-ebbc-44a8-aa87-47d8362940f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5281fed6-e7a3-4b56-a54b-28559ce0d8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90067a9a-8301-43e5-8c37-eee1f38c19c0",
        "cursor": {
          "ref": "96324938-93eb-4c6c-91ca-8085831696c1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7eec419a-23a0-49b8-97bb-eafe68012049"
        },
        "item": {
          "id": "90067a9a-8301-43e5-8c37-eee1f38c19c0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b5407053-356f-47ba-a373-d214b9bd331a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e443f32-d0ea-475b-9976-b83ef471a4d5",
        "cursor": {
          "ref": "a7544970-3de0-41a2-8e0e-d1055578bb77",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ae090e10-10ae-4b03-a83a-33020d4c3602"
        },
        "item": {
          "id": "6e443f32-d0ea-475b-9976-b83ef471a4d5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d1a8a18-1ed8-4196-983f-d0b9ba6be9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b686cfd-895c-4a72-89f5-74352e978eaa",
        "cursor": {
          "ref": "48bbf70a-470f-450b-8ae0-93dd9f22936b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "38ef4aae-8bd8-4cad-beaf-afe6e417ef44"
        },
        "item": {
          "id": "1b686cfd-895c-4a72-89f5-74352e978eaa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9e5217d6-b947-415d-9de3-29010f107a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9db7671-1b1b-42d0-adc4-b3f9be86602a",
        "cursor": {
          "ref": "7e9b8727-0269-46bd-b334-426f79215fd4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "99ea660c-c69a-45cc-9b50-4169cee644a5"
        },
        "item": {
          "id": "b9db7671-1b1b-42d0-adc4-b3f9be86602a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bab1a542-019b-49fd-952f-6c244acb138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6af668-f307-4d09-af58-a381e898f3c8",
        "cursor": {
          "ref": "20d349dc-03e8-4b7d-8872-d641f5854f15",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "734c566e-7204-4993-8473-579915ef2de9"
        },
        "item": {
          "id": "8b6af668-f307-4d09-af58-a381e898f3c8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "da79826d-5eca-41c0-b8f2-f853273e4140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191eb146-6d72-40b9-96b5-de944f934680",
        "cursor": {
          "ref": "b6d04705-cbbd-48cf-9b3d-01282cc4b1b7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a4e27f3-a21f-4992-84e5-257e3c706e1c"
        },
        "item": {
          "id": "191eb146-6d72-40b9-96b5-de944f934680",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cd109ee7-9500-4f60-a6ed-e4b76a0f0014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e057baae-6ca1-4614-8c8e-f01df0e30c56",
        "cursor": {
          "ref": "47d2e77a-aa34-47d8-b8b3-d55f4ddca65d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "adc8b771-5b48-4f99-8634-22b093ee7b76"
        },
        "item": {
          "id": "e057baae-6ca1-4614-8c8e-f01df0e30c56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7cf8639c-eaa2-4d34-a9ca-c7df43ee57fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3d42c4-e7e0-4d7d-acaa-7d39da05ffc5",
        "cursor": {
          "ref": "bcd05d4a-ecbd-475e-86b3-50b506ade1e1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b7a1f2e1-9dad-4876-bff0-9dbf1a896563"
        },
        "item": {
          "id": "1b3d42c4-e7e0-4d7d-acaa-7d39da05ffc5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f5b4b34f-2457-4b61-9b89-0be944dbcedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6857c68-123a-4cd5-a200-263c4a45a99b",
        "cursor": {
          "ref": "4ae38281-40ac-4eeb-8efa-746e73cfe3b3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "541f4c33-6ec4-4c60-84e4-14d0ee186df2"
        },
        "item": {
          "id": "a6857c68-123a-4cd5-a200-263c4a45a99b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "32abea38-706e-4259-a42b-9fd6f4cc8d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d92254-e138-4b9f-8cdc-5897a2b60150",
        "cursor": {
          "ref": "f381eb01-2cfc-48bb-9744-a05deee095ad",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5ac57ed8-4067-4238-9d41-d95422e969b0"
        },
        "item": {
          "id": "b9d92254-e138-4b9f-8cdc-5897a2b60150",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "831294b1-11f2-485b-a676-5372165713e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec7b9b-656d-47fd-94f9-f99d4fa69f82",
        "cursor": {
          "ref": "c7b269fa-035e-471e-a46d-7b630e3dd25d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0930de04-f5ab-4212-844b-2f34fe918f29"
        },
        "item": {
          "id": "6cec7b9b-656d-47fd-94f9-f99d4fa69f82",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ba94dd11-1168-4a01-9116-0ef0c3a155a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdcfd08-a83d-4005-8f0a-e64db1729b1a",
        "cursor": {
          "ref": "45a57f58-5469-4043-b56f-fd167a34381f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0f886bdf-fc4a-4856-b42e-c6b0dd0f740e"
        },
        "item": {
          "id": "3bdcfd08-a83d-4005-8f0a-e64db1729b1a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f351649-9eff-4349-bf93-5c987092ccf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0338c2-fae5-41e2-b266-b6f34e1ba74b",
        "cursor": {
          "ref": "73fe960f-7a14-4e95-a944-6e2f6d7627ff",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4413b1c9-fcaf-40a4-82e0-d6a84194b6f5"
        },
        "item": {
          "id": "9c0338c2-fae5-41e2-b266-b6f34e1ba74b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fa08b966-ead3-480f-9781-350378387e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034759fa-22b3-49e2-84df-b784ef09d3ad",
        "cursor": {
          "ref": "840f9467-6472-408e-abf6-903851ae0621",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "882cb700-cf52-480d-b688-2615e58f88a9"
        },
        "item": {
          "id": "034759fa-22b3-49e2-84df-b784ef09d3ad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "200581d0-a7f3-42bf-baf4-745cad31de53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66085a2-e200-4c49-afa2-f71dbf73ae07",
        "cursor": {
          "ref": "1162ffaa-783e-40ed-8d5c-3a92a40f26e1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a27c4b9a-2893-41c2-8c2d-86f814493212"
        },
        "item": {
          "id": "b66085a2-e200-4c49-afa2-f71dbf73ae07",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "82350b41-11a1-43fa-a91a-dee325f2986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ab9561-ed8e-44f5-b448-f3335051163f",
        "cursor": {
          "ref": "233c2c63-08f9-4ee1-9ac0-dbccbb5c87cc",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf81cea7-0f88-4209-b551-7e646293f0be"
        },
        "item": {
          "id": "91ab9561-ed8e-44f5-b448-f3335051163f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cc56fcaa-c74e-4bb4-9b12-e81cb8449517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72062501-6181-4252-bee5-182236f7c778",
        "cursor": {
          "ref": "e03e58bd-b016-47d6-8bc8-1d54c2a1ccec",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f341e9f-e62d-4877-a634-a7e435679424"
        },
        "item": {
          "id": "72062501-6181-4252-bee5-182236f7c778",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98d83f15-3e41-4ba7-a630-764dc4602052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a3b0bf-3811-4ec9-b9dc-bbe35fdcb539",
        "cursor": {
          "ref": "b57c70e7-c627-48d6-8c79-4903cd6ffb2d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a1b60516-4125-4931-9f85-f4c7190eadb2"
        },
        "item": {
          "id": "a2a3b0bf-3811-4ec9-b9dc-bbe35fdcb539",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a27419f6-3418-4d02-b55a-8b788c519dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252a0e1b-eb7b-4d7e-a760-0b9f98caf1bd",
        "cursor": {
          "ref": "ad5f7f61-3aff-4186-bf07-880b3b27e2d9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ad4a5553-f730-4915-9e22-076bac59334a"
        },
        "item": {
          "id": "252a0e1b-eb7b-4d7e-a760-0b9f98caf1bd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8da07877-a362-4e25-9063-176399a6822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab769e-c7cf-4823-b80d-ac9d515bf551",
        "cursor": {
          "ref": "d6f422f8-dfc8-4bd1-adba-68917606e675",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "72ea79b7-a194-4054-a720-af2230fd9e4b"
        },
        "item": {
          "id": "d0ab769e-c7cf-4823-b80d-ac9d515bf551",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "db73914e-538a-430c-9f7e-077dcbd8cb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff6f94-f4c4-485f-9d16-d49d31443829",
        "cursor": {
          "ref": "49bd5231-37f1-4f01-ba89-d191fe717230",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fa86c7c9-f171-4ff3-b8ad-7648541d8c73"
        },
        "item": {
          "id": "9dff6f94-f4c4-485f-9d16-d49d31443829",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1f195415-7aaa-4d19-911f-f4460a7aafa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983cc9d7-7a60-4098-ba5b-d4bae196d97f",
        "cursor": {
          "ref": "6f4cd533-9ec8-4a34-b850-6958eeb0a43c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "25b206a0-c999-45a5-97fd-46489bfe74e5"
        },
        "item": {
          "id": "983cc9d7-7a60-4098-ba5b-d4bae196d97f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "29cc00f5-1532-4b9d-92b9-2152b0625b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514b7bc3-df49-4edc-b1e3-d76a2b5bc715",
        "cursor": {
          "ref": "9a8d7b42-3cb2-400c-ba28-511e1571d56b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39ae2511-a23d-4e3d-a879-8d14ae6b760a"
        },
        "item": {
          "id": "514b7bc3-df49-4edc-b1e3-d76a2b5bc715",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82d91a86-d1ea-457f-bd06-3a8d8032ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0898195d-cf0c-4908-8202-3aa8905dcee4",
        "cursor": {
          "ref": "ae89b295-981c-4b64-baa3-8eca1c2d8230",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a5c5d81-2729-4cd2-8749-e87998093ccc"
        },
        "item": {
          "id": "0898195d-cf0c-4908-8202-3aa8905dcee4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "654ddcff-d6d2-40d3-b282-33f0b0428e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f28150-db50-4925-a04c-e44447e62fb0",
        "cursor": {
          "ref": "6e93c096-7c48-40d1-9078-8b2385e1f424",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80f29b93-7573-4925-b44e-c487d5906550"
        },
        "item": {
          "id": "d6f28150-db50-4925-a04c-e44447e62fb0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1785503f-b71a-4b70-affc-87c01794d776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a29564-615c-4602-af7f-5ab9631dede3",
        "cursor": {
          "ref": "fb1a44a0-956c-45d1-8043-ce7e649da106",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "631da1e3-4610-45f9-8e0f-dab742ecc87b"
        },
        "item": {
          "id": "86a29564-615c-4602-af7f-5ab9631dede3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "879649da-fad7-4977-b3a7-460a39d7d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd42f44-ab9b-4ef3-919f-c59b42fe48b4",
        "cursor": {
          "ref": "d0e4bc59-bc0c-4c92-883a-e59d1ab63ee8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "774c2a67-6b92-4306-98df-8460648e363c"
        },
        "item": {
          "id": "9cd42f44-ab9b-4ef3-919f-c59b42fe48b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "49c57849-bc03-4119-986a-21f63bd5e7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2672d3-33fb-4463-a635-25f04bab8836",
        "cursor": {
          "ref": "8cc7cba0-7676-4dad-ac23-042e57a45c35",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d770ca6f-eb5d-40d2-92d9-9ea09033b0c5"
        },
        "item": {
          "id": "9b2672d3-33fb-4463-a635-25f04bab8836",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "16c66530-6953-4970-9871-f210df5d4569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f5149-6ec6-4cc5-813c-6f3a20223049",
        "cursor": {
          "ref": "d9819b73-233b-4312-8efa-85cafc112188",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1b4ef225-3d64-43dd-b2fb-1516b37d5e8f"
        },
        "item": {
          "id": "046f5149-6ec6-4cc5-813c-6f3a20223049",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cf14e43e-ab99-406e-80b9-0512e0f4a0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d881b0-4443-4214-8173-c9c768e40329",
        "cursor": {
          "ref": "fe8914d5-f91b-43fb-8396-57041c94f254",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f79bd2ff-95a5-43dd-a20e-cf816323f499"
        },
        "item": {
          "id": "62d881b0-4443-4214-8173-c9c768e40329",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "abf9ea11-e135-4f1f-b201-ad00feef6ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7828ad50-498c-485c-b362-025a426b31d6",
        "cursor": {
          "ref": "97fe105a-6615-4a58-9ac3-fe78be8d0d6e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "32d5c0de-0605-47ea-bb23-9d7b725385ae"
        },
        "item": {
          "id": "7828ad50-498c-485c-b362-025a426b31d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc9cbdb2-4cee-4ed1-9327-3241bdde80c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdccc9df-9041-4e49-84d1-f895b360e327",
        "cursor": {
          "ref": "3af069cb-f85a-48ce-b267-619f03f5ef58",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "18387ba1-53f4-42c4-81d3-b9b9b1e6b665"
        },
        "item": {
          "id": "bdccc9df-9041-4e49-84d1-f895b360e327",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d66e6a1f-fba4-46ca-a2c6-8c2eea79d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c24fa-32b2-4498-81bd-2b6035bd49a1",
        "cursor": {
          "ref": "c33c6a18-c3f1-4059-b766-2191cc227b6e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9c0a0165-681e-4476-81cf-84c021522114"
        },
        "item": {
          "id": "845c24fa-32b2-4498-81bd-2b6035bd49a1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "978779e4-8d16-48b3-b325-f845cec09a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694f0262-9336-474e-aa2d-597be35f9611",
        "cursor": {
          "ref": "95cf447d-191c-4567-af2b-85febf5a1cba",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7a56031c-3cb9-40e4-8876-273df9c53a8d"
        },
        "item": {
          "id": "694f0262-9336-474e-aa2d-597be35f9611",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6cd9b937-907d-49d6-a3c4-006f33d1cf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5072b6-ddc9-471e-a0a2-53d2120bc538",
        "cursor": {
          "ref": "5555ecad-4b7f-4e87-9635-d2f2aa5afad3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "194b1558-4824-43ae-9013-89c3e2e5c04b"
        },
        "item": {
          "id": "fc5072b6-ddc9-471e-a0a2-53d2120bc538",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6a9709a9-9810-4759-a194-267457230fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3b785-119e-4967-b281-339d18678d4b",
        "cursor": {
          "ref": "a823a713-1787-4bbb-b139-25dd0552722b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ce2546e-4090-4ed9-9bce-dbde95989edd"
        },
        "item": {
          "id": "5ab3b785-119e-4967-b281-339d18678d4b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a458778-6a93-4724-b5da-14d332d3bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1af21bf-f77e-4d6f-8e33-06e4612afcca",
        "cursor": {
          "ref": "6a4f53a0-5472-455f-b468-50eb504dd586",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "34bca593-ac73-4f93-b7d3-a999d1606872"
        },
        "item": {
          "id": "c1af21bf-f77e-4d6f-8e33-06e4612afcca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "126c19cb-d0d4-4bf6-9116-c914b5ec71a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549673ec-1e51-4987-8e3a-1fda273603d5",
        "cursor": {
          "ref": "2b150967-6412-49e2-8d8f-abb559edb1cd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7fd36c13-c24c-4ee5-a1dc-92d66d1797ab"
        },
        "item": {
          "id": "549673ec-1e51-4987-8e3a-1fda273603d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8f718209-163e-4327-9835-dff2789b15d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab54f942-f737-4418-87f3-66dbb60d29fe",
        "cursor": {
          "ref": "51c78886-cb48-40a2-a20c-ec4f3ac2376f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "77d6f144-1a5c-401e-9ea6-1ef3310df854"
        },
        "item": {
          "id": "ab54f942-f737-4418-87f3-66dbb60d29fe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64d024c2-4ef6-4c54-af41-63d4b626c83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5175588e-7b27-4a74-b7c3-fa4515e9f307",
        "cursor": {
          "ref": "7246daaf-e7ad-4ad6-8947-2d30dadfda23",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1de2cc54-17ab-4887-8569-f0f0de5c8be0"
        },
        "item": {
          "id": "5175588e-7b27-4a74-b7c3-fa4515e9f307",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "957c7817-3bd9-48d2-88a1-79f3bb851d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d3cc64-2204-4c39-b07d-d1bef18599cf",
        "cursor": {
          "ref": "ab25e602-13c2-4371-bd94-c38b3b482df4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "39744bc8-82a7-4824-bb80-e17d9ec54145"
        },
        "item": {
          "id": "d8d3cc64-2204-4c39-b07d-d1bef18599cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "572d5b57-0a02-4f89-b92e-3802f8ee8b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b09cf6-8ee0-48e4-9413-55e22ef395ef",
        "cursor": {
          "ref": "6865d38d-e168-47ec-ada5-43bd17c81037",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9c349a09-412f-47fb-8066-8ca7baac4337"
        },
        "item": {
          "id": "c1b09cf6-8ee0-48e4-9413-55e22ef395ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b385ae30-7d6e-4750-a262-792373cdeb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c048a89-0062-43bb-8be6-45657eed2cb6",
        "cursor": {
          "ref": "b20407ae-5c43-4f20-af48-595b7d4e16f3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "17123196-399e-4717-8b21-7aa8be0c4a87"
        },
        "item": {
          "id": "8c048a89-0062-43bb-8be6-45657eed2cb6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32687045-447b-41d1-80c8-3c42e65fcacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a7e4b-09f4-4f96-9725-0561664d7b8c",
        "cursor": {
          "ref": "395563c5-ddad-4433-94e0-638633d0eb7a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4cca26d2-f59b-4e0a-91a6-adf1162fd26e"
        },
        "item": {
          "id": "ea6a7e4b-09f4-4f96-9725-0561664d7b8c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1e559f63-c052-4855-baf0-5acbe01cea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaeffb5-6feb-4ae1-b4dd-ea368d677246",
        "cursor": {
          "ref": "d916e02a-c477-4c65-aecf-d12a4c193361",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9b3e504a-e590-42a3-81f6-dac8ae7acacd"
        },
        "item": {
          "id": "1aaeffb5-6feb-4ae1-b4dd-ea368d677246",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f234ce9-d9ac-417e-8997-07942320244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e564df4-6799-4b6f-a654-51b3542cd096",
        "cursor": {
          "ref": "876dc3bf-456d-4b2a-bc0e-65625ed5f484",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7e8c8f02-50cd-4f98-b574-258d42874979"
        },
        "item": {
          "id": "9e564df4-6799-4b6f-a654-51b3542cd096",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6e837f18-e51b-4faf-89a5-3dd4b25c27a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34b4a05-b6d4-4b52-a4cf-82ddb04be6ad",
        "cursor": {
          "ref": "da29d4e0-77fd-4367-b325-c56fc4bdd1dd",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "24046ec2-53ae-4191-b48a-59ca565e6996"
        },
        "item": {
          "id": "b34b4a05-b6d4-4b52-a4cf-82ddb04be6ad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b11d11ac-4879-4f8a-a5d6-19c035945cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0ab87d-843b-4026-9547-6929427c18a2",
        "cursor": {
          "ref": "41b2ebf9-0e79-49d5-9a09-7d96d33925fe",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "30f37f1e-d507-4429-9a8c-31aac9824eab"
        },
        "item": {
          "id": "5a0ab87d-843b-4026-9547-6929427c18a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9e2033d7-2324-473f-8f19-6ca22cd68bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f1bf6b-09c3-4cb4-8dbf-851534851f1c",
        "cursor": {
          "ref": "38474a92-bdf7-4783-b4a8-4576d9bbad84",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1011e8c9-e1ab-4ab5-9a73-3f4edb33d372"
        },
        "item": {
          "id": "61f1bf6b-09c3-4cb4-8dbf-851534851f1c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2820be08-75ec-4fe2-86e9-d3dae4a42aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9245f6b5-9506-4c43-9c91-86337c30c57b",
        "cursor": {
          "ref": "43b2579e-2b9c-43b5-8bc2-4bd36155e1e5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1de2aa7e-34ef-480e-8038-b6517b697cb2"
        },
        "item": {
          "id": "9245f6b5-9506-4c43-9c91-86337c30c57b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eb426705-7ef6-4035-b06e-462409e09ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9cdfbf-7eeb-498a-8e06-b7ef636972be",
        "cursor": {
          "ref": "3210b86b-db1e-43c1-b74c-060280efbee2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "18601b1e-f9db-4393-badf-d39ea1cc84b5"
        },
        "item": {
          "id": "9e9cdfbf-7eeb-498a-8e06-b7ef636972be",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04805dcb-cfda-4a99-8b1a-0f604ac11601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc42c65-bb6e-4781-9a07-fb1c82e28394",
        "cursor": {
          "ref": "de352c4f-e457-431f-b117-0df2345911da",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bfbef3cd-d772-41ee-b466-f35a2f05aa78"
        },
        "item": {
          "id": "cbc42c65-bb6e-4781-9a07-fb1c82e28394",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4a300508-cad8-44dc-be1e-a5046ab31f4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee23aa3e-febc-4bf0-9084-ec5522ebf23f",
        "cursor": {
          "ref": "b8f085aa-5016-46ab-a62b-2e1ed147f266",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a420b427-380c-4d99-afea-2fcb6ef4e594"
        },
        "item": {
          "id": "ee23aa3e-febc-4bf0-9084-ec5522ebf23f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "49751dc0-d50a-4d0a-ac1a-4de71a332878",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27c999b-b10b-4b76-a60a-d0105c5fb29f",
        "cursor": {
          "ref": "cf58ab43-49c9-40ca-9f02-09113fe5cb50",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "67be3851-30a8-401e-b69d-b65f28f1a372"
        },
        "item": {
          "id": "a27c999b-b10b-4b76-a60a-d0105c5fb29f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "149baae2-1080-4851-b0e5-136d6e276b7e",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0ae988-6ad3-4960-abf7-07fd154cb63d",
        "cursor": {
          "ref": "b0c23da2-bd5d-4474-b307-daedcaf29961",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f93463c3-96d7-4835-9c25-a012518b11ad"
        },
        "item": {
          "id": "8d0ae988-6ad3-4960-abf7-07fd154cb63d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ec9c06d6-34f6-420c-b8fb-a05e56f7dbe1",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead7a83-6652-4ec6-854b-abb62b8f6229",
        "cursor": {
          "ref": "a3825782-9473-40ab-9d6d-cd9c8cf7ccdc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b2f02454-c0dd-4b4a-baea-efe8fef18799"
        },
        "item": {
          "id": "7ead7a83-6652-4ec6-854b-abb62b8f6229",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "31fa5b00-80c6-442b-9dfd-7f44592149ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead7a83-6652-4ec6-854b-abb62b8f6229",
        "cursor": {
          "ref": "a3825782-9473-40ab-9d6d-cd9c8cf7ccdc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b2f02454-c0dd-4b4a-baea-efe8fef18799"
        },
        "item": {
          "id": "7ead7a83-6652-4ec6-854b-abb62b8f6229",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "31fa5b00-80c6-442b-9dfd-7f44592149ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d31e7a-988c-469e-bcde-c45822444930",
        "cursor": {
          "ref": "b377f651-7ea3-41da-8d6b-71a99d52f1c1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e969c059-d369-49de-82a0-8980de1f4029"
        },
        "item": {
          "id": "21d31e7a-988c-469e-bcde-c45822444930",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef2cad2d-b635-480c-8670-e42579484feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f68edc-47e6-4e23-ac83-37de8cca9372",
        "cursor": {
          "ref": "ac277ae2-3658-455f-8083-1f51d7825091",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "64358605-7987-405c-ab27-748adde2cf1b"
        },
        "item": {
          "id": "e3f68edc-47e6-4e23-ac83-37de8cca9372",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8227e54d-e285-467b-801c-d18a7f2798c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}