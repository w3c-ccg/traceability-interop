{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "394003dd-e810-493d-b6ca-5152bf6b9d19",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c4e6568e-3426-4721-8929-b059c39725cd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a312c85b-2860-43cc-afca-839cc35175c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "491ad6d2-86d4-4177-9903-b49fb144f3c3"
                }
              }
            ]
          },
          {
            "id": "1008eb38-65e6-4798-9a11-fcf4b92fc536",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de338017-9e50-4c2a-8a3a-e3e22bb32d70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e55fdfc-e395-46a0-9ec0-98bafb1b48fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "65e329a4-644f-4cbc-b0aa-f3a23012fad7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e1e3df1e-367b-401c-9fe0-48ca90e367b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1dcfe5db-3851-4713-ad8d-56c076a2cbe3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ce2a9a6-0532-4c66-9447-2255f2828d30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbd8dbaf-cd3a-44e2-9261-41ad6386cd24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93d2ea8f-3fd0-492c-a8d6-d5494a0d2826",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f19b2304-1eec-4dbd-ad10-887384c231c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d5a3952-425c-4a4b-ab37-f85837e868f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec133971-bdb9-4cb3-b2ae-8848a0cea4d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017026ec-66bf-4368-ae58-663bbcc4e1d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ba0fb0a-959e-4262-92d4-0af0fe7230af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a563d16-b5e3-4726-8a64-9dc556b7bb6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ee99a0c-2b3d-46e0-9a76-a900e4cec751"
            }
          }
        ]
      },
      {
        "id": "b7aa76f0-bff9-474a-aa4a-f089228800eb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75f16934-82f7-45c1-943a-b6f1370dddf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e61ba895-60f6-4ee6-916d-383620ba3f9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "22cf97d1-906d-4460-8ef1-cd6d6841eb7d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2622c8-8daf-4284-bd83-cb9500a2f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ebd3851-abc7-4be5-b18e-dfa1cc92c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ef8aad-17a3-4808-ae4b-f2579c5bf021",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a50ef4-1c56-435c-89cd-9a156df84007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fb982d5-9ef0-43d9-ac64-a161fb13de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfd1c63-8f2e-4c38-ac0d-b982ce5bac1e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b69207-8d4a-436d-bd86-ecda1ecd4fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9425355b-40a8-4444-99ef-28c01a6545a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb7edc1e-cbb3-4313-b31d-2b804a89f897",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f2109f4-ea84-4c0b-b4c6-9eb321e91e3d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c4d9b6-6888-4c76-b5ed-12584d1da8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f74f3629-1191-4934-aa4a-45d1b331271c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e210510b-928a-475d-aecb-ef34f0ae9dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecac1c60-0f25-4f94-a037-d2bf3a3964b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6677dea7-2a58-403b-8785-3d4e17a1973f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2721576-ef4d-4e6a-939f-446d0964ef29",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21813c6e-ef87-41ba-968f-cd8d4efaeae7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9b594ee4-a953-4f3b-98dc-32314b74edf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa52338a-1d94-48f5-a5cd-a1f5da38b97e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8498c91b-f87b-4543-814b-a6a6e426e4c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d11fe468-0990-4f37-9ef8-c2963623b99f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aaace35d-072f-4e43-bc40-e2b751b3e747"
            }
          }
        ]
      },
      {
        "id": "332e3f38-cf07-4c4d-9658-e6da2d7f4ee1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3eeabcc-cc2f-4f47-b96c-2575347987bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1d8c7cf-0520-4647-b41f-bdc068f92204",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9dcfc006-5b83-482d-b74a-ef2de9b7f0f4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7295c8-616d-4cbc-8a9a-3c12f2fbf9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bd93a2-9a89-42ec-87e8-83aa8f2bc4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392a4a5-afda-4faf-bd1c-8e518e47f0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "059e9c16-3c7b-493b-a181-238c5154ad6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c59cd19-716f-4c60-83b8-380e4e8bcbde",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f02efa-73dd-4f13-9e9d-65cdc4a9e338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5258f9a4-2cf2-4473-9fea-6cf41fe984b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc63455-7b2d-41cb-ae19-f8704947c646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d70bbf2a-b52d-43ba-8f06-d2e78a1b32f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0418d277-90ea-4be3-9728-4a605ed2e620",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f741c-2e82-4078-80eb-a0b1873dd411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0156aeea-ac1f-4d98-b165-410236bc4b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5444ec4a-bfeb-418f-b45d-b66d48d3b658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0232d8e5-abaa-4d08-9e75-92af7c403005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f76d5b7-5a11-4bda-958b-caab3dc18903",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52419a0f-9754-4345-844d-9a0d365b3bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70acbc22-4514-473d-8fa1-ede26a149ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dd28f6-f3b2-4f0b-a8bc-6e24eb80eaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d75014a-d043-4b84-b8bd-a841c130b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3052438-7647-410b-a498-bbd4fd9f453f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87603f7-5c3c-4327-9998-9255d8d08944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6172fd59-cdbc-40d8-83f5-95ef417d71de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a0a07b-292b-4fbc-a5af-f7dff2e6169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab73a7f-9be0-46a7-852c-b829ea033481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b59e25e-c49c-4cbc-b1d0-07f504d3e352",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e408974b-4ece-4da3-87dc-90f33cec1846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33dcf95-c634-4deb-a5bd-2167b9d811de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cb3f03-3833-41f9-92b3-58062b0096e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ad3c46f-2693-46f5-8435-29ba785cbff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851db30-808b-49e1-b549-2cd42c5f1e72",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb3e3df-bad3-47da-9c51-79f9436cf110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ae99af-830b-4a5d-aad9-b570fb156b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7bd6dc-a22c-443d-81b5-e3f62f4f09c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21b757ae-844e-4cf9-9912-d734998966ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d218898-ce0c-410c-a2d5-0c8abc8758d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951a2e67-4fa5-4bb8-94d5-3b44c83d690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d379e7b-69ce-4789-a710-39a522c434f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc95b3cb-3a75-43e7-9d2e-e4aeeb896d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b1df057-7e72-4c50-8182-2174c522aef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed53e51-bfd0-4ce9-944e-0c32b51ba57c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d4f905-2b77-4cda-99ae-077802589b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c942cd-749e-45d8-a81b-0c96136920fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c429b70-ba7d-4948-ac1c-712bd25db8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac550154-c5a6-4ff7-83db-bd2b2ef9af8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3b8e5f-2181-44cf-b63d-0f92eaf60ef0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcebf32-d95b-42bd-9c55-ddc09af1af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b17c51-ccff-4b5c-a77b-fa5a255f7b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d98fe-b1c6-4f45-852d-aaf1afa0d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6a7f948-8285-48df-a752-180474419e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404e65c5-1a83-4f0a-bdf7-699809c2a8b9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d996362-60c5-4afe-afe7-b22b1d090aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7642aeab-9010-47ac-92fd-5dd323e4c400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943730e0-7459-4e76-b2f8-ddd373347b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7980af25-b291-4be8-ae85-bbd34be12d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71945d0-0f3c-4a3f-bee9-53a12f175cf5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83fccab-b742-4d1a-bc70-c38819b36907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db7ef2b-0518-4666-a49e-3044eb56ec1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cec93a4-0d41-4472-baf1-9b02e29649ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fdfb97-0924-4317-bd42-401018356dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0816dc9-7f72-4efa-ae2e-5762d13d6269",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d05b79-6246-4520-a4f1-b725c8508702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8df4cb2-d822-4bb0-a88b-3d5fc7c4d3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7503f96-8f6f-4bf8-ba44-4cd5ba064c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65b24f55-8d39-4875-96fd-95040f0e4d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fa2656-6c69-4e8a-8227-7eee54095308",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec701475-1292-41ee-b6ff-35a4e6b8539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a32be1f-ad26-4927-be47-1efb35ff8dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c99821-ce86-4a24-b9e4-d1ddb56e97fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c4ad4d0-c5ce-4449-8fb8-f81e16aa4f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35efbdc-ce7c-4ce6-b293-843b5462484a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed33cb-916c-4bb3-9a52-0101c5a2d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f871fc-284b-4354-93f0-5c049d7c69f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8c60e9-9ced-49b4-8341-17dca7d6c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02e3e84d-8d92-4aae-ba89-229d43e6b449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2daea0e-c1e6-43e5-9938-12475c2777ed",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584030c2-460c-4e41-ba7b-ce7c099c5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555ebe00-7fa8-4798-bffb-85e9c1a95346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af18e239-bbc2-4d86-8736-8c187b9a09f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d040ce6a-be19-4daf-b048-420324611fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92d6eab-0a60-49c8-a8b7-02de8f721652",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7db8fd-4d0f-4995-ba03-5896378d7a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b26532-a638-44b0-9f52-f6cc88f0795b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef227a4c-feb0-467e-a943-cb803de78c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9fa634-636f-4581-b65a-5369fad01e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b158f422-a6e2-4c34-81fd-697be43dd478",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5bb008-7a5e-42e5-9b5a-ecb2246ec78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e29127-1c20-4d68-88c2-377d83445727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512d72d-df3e-44e5-9fa2-3789a312ece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43549665-4e69-49c4-81b4-c8d0449bc197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96b866f-db91-4e5a-bcf7-74c5ed86f115",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a28fd29-6851-4ee0-8e61-5d254d97b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78b5136-2159-424e-a0ff-07abbcb85be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cc5bd4-abeb-4ca8-88ad-4254ac079eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb271e9f-0d1a-4c53-a2c0-8e66aaf84a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d84470-26f8-4187-ae55-dea843e551e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14406ef4-d0dc-4739-9115-43eb58282ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c62033-bae4-4201-add4-53acc34c93e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd93f3b-e2b6-4603-845e-da9c5544e32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faeef9f-cc5c-4dfb-93b7-e9b7187ffe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9a70dd-a72f-4765-9fea-f7854d9323a2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7a5acc-a610-4143-8cd1-5b61ba035700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8120504-782d-4a81-8982-7bc945ad5a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a4188f-9709-4c61-8b7c-1d0b14f9fea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e71e3e9-8a1a-4b2e-afb5-36f9b00f3a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f3ec81-3d46-4371-aa54-f302fc5d5851",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5942f0a9-a42e-4ce3-81d4-c2f918baf3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb12b295-9535-499b-8137-f2ae4390a903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc17be-64b8-4649-9951-1cb8e14b1592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09fcf3cb-6c19-4f76-8875-a069a6a276b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e7ca1-99ff-4ea7-b76c-18e8dee15c71",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b4ce6-44be-4fdb-965a-54cd5886ee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc54a87e-d00d-4a75-b7f5-b3a56d2c50d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f684e06f-ab31-4ec8-9e60-9fe113914129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e119a120-1b94-466b-987f-dafbb696ee11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489bb072-732c-4cb6-80d6-5e10acf50b6b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4718844-7880-4cda-b0fd-ca17450499b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafdb609-65b8-4e8a-abec-a56cf788d4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c7bbd1-5b5c-48d1-862f-caa56d49e7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e679de8-b363-4735-888e-2da29fc00191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ee1d4a-6f9c-4676-b968-a2e542abe901",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321c5943-a3ef-4fed-9393-5ea6ecac94d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e41d3c-5386-4644-aaaf-173b6878eecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c32b3-f9cc-404f-b882-668fea93c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d689a4-45d6-4b19-97d1-eb73488c5282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cac84e-92b3-4aa9-abec-f0db0edfd176",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0888432c-86a9-4fb3-90d3-b3fcde98d932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cf686d-b5be-45f0-bf78-5abed8f7ffcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a53e0e-1488-480a-ab27-4d020f8e328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33088ed9-4dd6-49d3-9695-a76983c393d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a6b31-c2d6-4082-b16d-4cb9a718109f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8f1a5c-50c3-46ce-8782-f0f0b35820c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98499e3b-ad0a-4f1d-a1d4-b8cba5edda1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e03c5-da90-46ef-818c-35e7ec16f599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb3eb3e-254d-4732-a289-cb4617259e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2b57ff-2364-4ffa-b4a7-6245a83bee58",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db41700-8509-4690-84a5-69ccb45f38ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806e1507-b778-4c49-bfee-7925f68477a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d196241c-1e5b-443c-b61b-5769325dfce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f43e7a5-2a6b-4084-b8b4-1761f13ec06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ea444b-82f4-4128-bbd4-c43fc0c0903a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c2fc95-9244-4a8e-b917-84b0f3b20e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e115dd50-45ee-4d99-a1d3-02a59d5da47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657bb6f8-3847-4622-bbf8-2e9e93e83895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71565cd-3ae2-41ef-935d-968d173a4e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9437c4a7-8384-45c4-8d1d-e76e6cde87c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e07379d-414b-465b-880a-a5e6af66407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3547a0df-4553-4519-a4af-21eabcc55090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b37bdd-5e08-40cb-8e1f-9e40d50bd880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a40c48c-f07c-4d77-ac9c-cf3de7f9cfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d297d646-d5f6-465c-9213-e872581c10bc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137db990-3a3e-49e6-80fe-9b6dff6c6c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa9434a-7818-48ec-bb07-0cc2716bfcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185cdd8a-607c-4d62-92d5-4e8899a19633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d18f403-a2c9-4abb-ad25-56ae8fcda4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc3f40d-e40a-4cc4-bdae-1e2d0bec5454",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1419ac67-a1ba-4bf8-aa21-6d1320adea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c705efe5-0cee-4db9-917b-4d26ba4f89f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0760db-b739-439c-9054-7e9f8a7fa2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "008fd4ba-8a2c-4126-abb6-100bdfcf57eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e0d413-ab23-4c4c-ae49-7e26f0570070",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc048e64-c622-4ff8-8bc6-0f50144c51ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf3a930-7552-4bff-9ef0-4e1c570637de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237dc3bb-ef0a-444a-a35f-9902e7d34bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3b8415-49d0-4358-9db6-bd805a284c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996f02a8-f4e5-4bc6-8e42-9bfbfd1f8a12",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305dbeda-e80d-4e84-af25-763282e24c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63aa5d3-104d-4355-854f-c0c85fe1d3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74502617-1fe0-4628-9e9e-64be8c68b1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34784286-1cf2-4657-8619-cbb59657f221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24169e4-aee9-4ab9-8dc9-b723b0c05858",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494bf59a-0215-4f14-bfb0-2b87b0285e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cb5944-c7c1-45fb-81f5-3f5f8b32a5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11f68c3-23fe-459d-a96f-8b7a5d3d69ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9022ba68-2a9f-426b-a9e4-a1e74239d475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0624af3-aee1-4232-bc91-0b82367abe8d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8085b6fe-8c45-411f-830b-d5a50925166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64a9e24-b937-4e17-8493-e971bf420008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed2d6bc-0b6c-434a-8569-0e183f30c0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a066dff-5ee4-4b3c-89de-a83099d0d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaccdf57-3acc-449b-ad05-5be1829fa1e4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fb2209-a480-48eb-bd9d-34db958a2113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7464e654-9746-41f9-9ab7-97ccd63fa8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d698eadc-ca65-47c9-bef5-ca2fb891e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee921d5d-8ca9-4628-af92-1b03c4dc4d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4186a451-ce46-4191-826f-130fd912d1e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff2912c-9eff-485e-b15a-529a3e08899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8175242b-be62-4f88-8ece-44a08f5adc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4be458-3126-498b-abfb-d3acc89f7dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d27b1435-b13b-4797-9ddb-d76ae75a3ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f5fac-2c18-472f-adb6-351bbb2c6e61",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744c0079-c961-44ce-bd22-7228aa5f6b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3077f126-a55c-4d17-9bf2-c443521b9691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ac0422-6364-4d13-9238-7530db25004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8bb683-fcef-479c-b160-8f5442c68cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de35bd04-8729-4ce0-94d4-646671f6ddc3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec78d3e-5ce5-40be-9f51-88bde7fa732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fac75e-d0dc-4197-94ec-0a4a757744a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e100da0-bcdb-4756-a320-1590a8b43320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71fadf0b-a38e-4de5-859e-9b4e4a68427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7a99e4-6ee7-4b1c-9e2c-e930beb82e40",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ae313e-0f49-445b-8742-83b72b2fb59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fee241-25df-484b-8cb0-3c3f3b841619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e53dab-eb99-46d1-8f13-eef713e3625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb346030-f97e-4fdb-9b1a-4e98cd8a2851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c630990-8525-4e0d-94a1-e46a33acf90b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46955d1f-092b-47e9-a653-77c905b8ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e61c67-c604-40cf-ae59-bbf3754c11fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d8fdd1-4339-4ac5-a6c7-187b41c5a054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c74eeff8-7338-4d1d-a7cf-c19b3f1c93f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab11b47-a7ea-4a79-bab9-d14f2f68463b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0995321-ff52-48f9-885b-0151d78cb45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f7b183-6528-4c86-886f-17163e3cba65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f2b7d-8957-4b4d-959e-2078ccfa4287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c099781-60c7-4323-9865-6ffd3c703161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514e0385-f5b1-4e25-80f9-37d310b84748",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3d394f-eaa3-4636-800b-593b1f78401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dc48b2-cb43-44df-9dc1-f54967f0bd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edcce02-680e-4c00-98df-8232e3438c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee4c503-d938-43c7-9ca3-1c6cfdd8ad16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491daf50-e77f-40d3-83b9-1704cb145072",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891a5b3e-2729-41a7-bdcf-8a470534bc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedcde98-c8de-4b43-bc64-7b293b49e770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93407e2d-b49a-47ec-a712-fd1b361fa0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0070432-b6b3-4d4a-83e5-2f12859adcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf92af9e-593e-42a1-beb7-eca5442a2252",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dda5c2e-c6fb-4800-ab29-8c9ad0d660f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead4cbe3-9309-4a0c-b8ba-1c5910dab635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fdb98e-7f74-4192-9500-5ca6d83bcc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17574046-5601-4e1c-82e2-65fff0570e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18a37c3-19e5-42e5-b8a0-f45340727c78",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79938a8-119b-4d15-84fa-7f6c99520205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00275a1-6ecb-4dee-bb79-10abce47d8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4825d61-3994-47d2-ab7d-ae9d1cbaefbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd884fb-9899-4a4f-b81c-986f128331cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f77deb-053a-4b7c-903c-de5a2d715346",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a7c723-31cf-4237-bc96-38219437b972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91297fad-1588-442c-a70f-8a45411c377a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127e9ab-7bda-4b6e-b71b-ed58082ee060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c70cc3-b9f5-4b09-aea2-f2a7f211957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d97f87-2e9f-45a7-8d42-e0baa6d94db1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c19b102-b165-42b8-aa93-6a1d4f6649b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3c006f-7646-41ce-b729-6d9995ad5a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c5f513-30ce-4057-bae7-5599917f7471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12fd0da7-ebd4-4991-b2d1-de6d1635bbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2762aa4-f448-4bc2-a4dd-0cc735e06acc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838219f-17f0-44c3-befb-0d0a0110d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bec312-9d7d-46fd-b659-0dc1c55c1afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74089aa2-3707-4ebe-865e-7feb74f3438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "690fbf4d-0206-4fc0-ae7d-6ed9a763a711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dae51f-89e4-4406-8b54-028b63120f3b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ac7ab9-7122-4df5-b09a-e7aff7df8462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3070db-c358-4de5-93b6-41e5158ac74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc5c912-1eef-4a8f-a42e-912c379a1e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ecc871-a069-438f-8fb0-ec47fc382c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b0c6dd-aab3-4eae-8647-0e17a26b08db",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf7d940-ab75-4094-9fd5-a7930d79ec6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feda0d6-64aa-4785-9390-f0285ff9c5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c51dac9-29b5-4305-b36f-b7e3cf5e38d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9402dacb-b7c0-4772-b3b9-04ce34be5fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d60010-2997-4c9b-9d4f-282bdddc0791",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5698a9d-825c-42b0-9c1e-9aa834b1c60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4df7eff-113b-409d-a02c-d3144c51753f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f141c4b8-297b-4673-9136-265fa0b1f31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8837dc4f-ad20-4676-a02b-407603d686bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b57819-5922-4ef4-b5d2-ebc5c1c2b670",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7596b3e-f5ce-4f9d-83c8-3f893ec3ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58a00a0-ddc7-4c73-9be8-0567739aeb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec259c4-738b-4758-ab23-5c1139b640b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8e522f-c748-4de4-b13c-31735a703380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8adc68b-ebb1-4b49-b498-a8b76d1290a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a402030-73f3-40f6-80a0-09daea204484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a89b835-7ef1-4594-849a-a53e3ffac29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68212630-6fb5-4888-99dd-d6d28edcf86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f4dda8-484e-4383-8a61-ba4b8cbcd341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38032833-93e6-4221-92d2-a321649b3164",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf03db-ef3c-4114-8f7e-05e178b2ee25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e6e89f-c55c-40f0-b9e4-109a1889e07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d6873e-dfbb-49c0-b8c7-d09beb7f8596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b226cd53-f2a9-4a5a-b546-987d382d88a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9635ebda-f661-44a6-a70d-a728e2357eb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842148cb-5ffa-42b6-8ebc-1dec931ad1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bce621-69cf-47cb-9b5c-bdf50b4153f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea439f2e-066d-40fc-baeb-67f33c95567c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0afd52c3-5954-48e2-965b-2d932dac08cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3d63a-c2fc-4b7e-9fd6-ffe979f655f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cc2f38-f0da-4047-a1cc-d6f42f9dd67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff054cf-b7e0-437c-9c90-034980b2e6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55802e5-9ea3-4380-9fbb-c7320bdce42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b439f184-8fbf-4a17-96b4-3cb83ef6e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62986833-601b-4f7c-9317-631cf1ce4035",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc3f2da-88c4-49a2-bc98-bdee84aa1d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8610fb96-5a03-402c-8da1-5091c4d45455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692f5ea6-f4d6-4442-8274-a387e4cb3bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc26478-1dd8-47af-9776-49003b006452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dea963f-406c-44a5-8b65-0cc74282dc97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fa9053-6219-4120-8dba-fcf40e2a52cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df41d03e-172d-4220-b120-6a3f5a9f05d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e05f167-44d0-401e-b9d7-e89a79e15b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84add2b0-6f71-4d09-a383-416a3fb238a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3505c6aa-1d97-41a3-8609-0c81751595b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84a6bd6-e5a5-46d5-a2a5-716c97079b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6df5b3b-45d7-40b3-b1b8-fd754197ed28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b40b47-9d5e-425d-9a08-ab62c548f98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21508d82-84a0-4658-8af3-577a22624105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf81664-af42-4b8d-8a79-b776d866a461",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a88f4c2-d8c0-40c7-a0a5-95f475a92942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843a5a2e-67ad-4644-8fe0-4a3b52cd60fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c897ff4f-949a-44bf-a15b-3d8dbd2534de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "531b49ce-244e-4152-9b4a-cc976de9d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422c90ee-ee72-4bb2-8ad8-7705454f875c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03991b99-046b-40d3-a71d-97d42f6bcfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169662fb-08c0-4623-baaf-d9474ca3e1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df16ab8-76f8-4d9e-b0c0-cda63bb0a780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9053698c-64a9-4259-bac2-4338923c8b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53b9724-7935-4765-9540-2e81f582f4fe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c1a81-b81a-44cc-9ac4-7dd625ddd8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94e0890-96b6-4010-a82e-e85310eec22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c733bbf9-cca7-4e87-af33-06873b8e531c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd36585-a19a-47db-8ba0-7b0459e0aea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d3b990-e27b-4ca0-9d9b-61d4ef648c16",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abc84da-12a5-4ce0-ab54-a865f606a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a9ba49-3c6b-4a51-a69a-54b3a65e470a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd46db51-8af7-44e8-89e5-3f31f5e9a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf75735-1501-4a3f-b464-60477e87239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb84be3-4dab-4d3e-9ef3-5c5844092722",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1caf65-4d1c-48db-81d3-73375688f818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216b81d6-3ff9-4f6d-b02a-31a969599348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3679460-246b-4945-a62e-9556794e51ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6589928-9de7-42a9-a86e-7897da31218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad47fe0-f06a-4012-a735-3d0b8ec719bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286e7284-c7af-41fb-a7e0-0bded310a8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5c8527-6adc-4ba9-a617-4a3db5eb1430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410243aa-8ec0-4320-8249-c14b4dd453c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3be1f3e-970f-45d8-a54c-2f48f796c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecab7f1-c433-4644-add3-b77ac638256c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44ff399-964d-44ea-ae00-16ab4e314a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b977c0-50f0-4c78-91d8-ddf25a76e541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93abecb8-895c-4d76-9bff-2cb8368ee92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9acc6cce-5a61-4b0a-a485-f032001634b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a313c467-c98e-4468-bb61-9246c681a9fb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7667fa2-e28c-4e5f-99fe-c95cfbdb69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca004b6-9706-42c4-9e8d-ef3bc0ee9109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c16a797-f8e1-4dfe-8920-53fb23d9119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0baa6e-5944-473f-b3fe-95cd5c04f469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb56949-d894-4aa8-bdc1-1eb6b4577d62",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73df78fe-2ad0-4385-a74e-311466e21697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885fd08d-3428-48a5-bff5-1447caf585c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddde24-e4ac-4129-84b5-6e6882908d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac713962-590f-4a52-90bd-66e2f265c080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e84e24-3b18-444f-bb78-fb4f63bc0950",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabc5e44-4a7f-4f31-a60b-21309fc8bf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459c5384-b923-4580-9d33-05f0f5a89052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569254a6-0ec4-4dcf-8e5c-7a037f0d39a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c988263b-c4a5-4af7-95f8-cb200590b36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3477cdc8-a2cd-4c2c-aafb-51c593dd7c92",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410e18aa-cc97-4b58-a9d3-6c9ce77e659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a834605a-a324-4b74-a34c-f0f640669b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2688dd-46f7-41bb-ada3-2ba4b86cd061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff079fe3-d0a1-4d05-9125-b3c7777a65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee6eee0-2b1d-428b-bb4b-54a42de2bf02",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7695d4-fe79-41ea-9d87-53373da65f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85347d6c-f563-4b3f-b320-6a40a93d33a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194eaaca-fa02-4830-b137-1bbc84956e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ddfbef-5764-4c5f-91be-ce4d8ea75531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81425ba-2f8c-4178-8514-555316f2b95f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c4832c-b00c-46e5-a808-d6a81986fee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb75d8c-fd5a-4c22-b8f5-b5e64b12e450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eef7c8-0843-4203-938e-4dfc61fb3fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5851f53b-8f82-4cc9-b788-7fe674d7362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b441b7b2-d1b2-4d0c-83ea-034ad7d37c65",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62070bcf-d956-45e6-8806-ee4f67e82a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a5a92f-bc92-4442-a323-da62ee991c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b0ba99-edb5-4760-8268-91a70de6f3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec97515-325b-4e15-a98d-1035bed8ca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1875fbb1-f870-43a2-8612-a7ebfe35ecf9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be801f01-a4ad-4f4f-974a-f79e52984b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13193208-b4ac-4a47-a999-ac51c3c4ce13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33b7be5-6db1-4ae7-9dba-f34ec4b91e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a94eb8-571d-426a-a880-2f1d1685aa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1cb4bf-9312-4f9f-bbb1-f7413162cf6d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6082cf30-ad0f-4ca7-b4b9-18c89c82bd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc51e92-4a03-4e77-9438-971f93dedf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3141b3-242f-4057-86e8-d254f89a2254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1eed6a-d622-499b-a29f-b1a9d4f16f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a25450-90bd-4873-854d-96089c0f0758",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9ff4af-0bd7-4ead-8ef4-fc1273d7abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a19d2e-4633-465e-bb27-7f41f534c6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1813e5f0-4966-4c29-9717-66eb1b1eb1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee14a760-bb79-4e52-99c8-41eab08aa1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5889d56-2b8f-481e-8fa4-e6c4f7193423",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285c3a9f-ac0f-4506-bf30-bbafb4763330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfef945-231c-4720-bde7-523a2f7122dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0436f6e8-4d0b-449b-9423-3d3cb7dedad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e728f076-4bfe-47be-9b3c-27555b5e0a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a7fe9-a6d7-4476-8010-92c9109a6289",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b00da7-1831-4fa1-b7df-077f1adb45f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6319874e-ba44-47b6-8b4f-013111fca18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bec4008-681b-4d8b-bffb-bd94068d293c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33cc6eb6-d861-4993-a50d-c72d44e6620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767f8f6a-5be6-43db-a30a-c4dbd97a7012",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78deabe3-4b33-4573-8dab-aca36aac21ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b5ac1d-33d1-41f4-a9ea-a529a343a7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ac5b04-0da0-4820-a5ff-f4a198a0e782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda58006-a6fb-4850-a226-17363c7b1d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55831ca6-caad-4e4c-b1fd-5344a5a77335",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf0b88-94a7-4348-872a-9ffe626c57d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353ca69e-66a0-46f9-b943-315fdd527965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fb3f85-2f5b-40ec-bbb9-a4fcb3581eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd06bba-efee-4efd-9ee4-a445b3ba89bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5824188f-8571-4dd6-b49c-9a275347aafd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4e5356-52bd-4405-9fd8-f679c18dbac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdda27c-3d48-4100-99fe-736bb76fc117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283596f-d8df-4540-816e-29eef53b464c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33b8e35-3e68-4308-a47f-f5fc755019c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113496fd-1d45-41e2-a0f7-02bb9cc48ec1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759515fc-afb6-48e0-a401-4924020b9a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee710cc0-9302-4c0f-a00a-9d8fb1e7ac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f874b4-789b-4d41-9569-fe5c04c1d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba7bb28-0226-43e6-9d5a-94b7f8149909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab0af13-0ede-48ff-a3dd-28513ce10c65",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8389f9-255e-41f1-a030-6bcc7e2334ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e98d09d-2c18-404e-8ceb-75a85ce97864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd8347-be6e-434a-8228-bfee02ec91d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb48efd-6c65-4b45-9c1e-7c7164affdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f1efe-b711-48ee-9aa8-f74665b6d418",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f44fe19-f342-435a-bc29-3988d2b13a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f55615-6d52-4d63-bb20-5d6315a8d933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4223036e-7b25-4c62-9cb4-3fee4027d340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c539b21f-6d50-481c-a4c1-d8643cd160e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfa2863-fa76-4cd5-b31f-03cc926937b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa5eff-81e6-4339-814e-8e1e6f2020ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a421e2dc-e6a8-4c21-bd47-17093eba02bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69e601b-d69e-4dcd-9000-8d9b31f12b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ea0113-c4fb-4dbe-82d9-c3bfbd90b46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d4a36-39b8-4ab6-a7df-5275c6c6a63e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4087377-9af9-4d35-b221-eb24f9289ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb4dfb3-571b-42d5-8b5b-bede8822b686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729aa5bc-082b-4227-a229-823544886fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5534799c-a55a-41f8-9cf1-88543c8806e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1905ac09-12af-4b4b-99dd-c112c8a50899",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2a1490-8a24-4656-aaa5-2ebb5d93ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab66c3f-e3d0-411d-b1a1-6e44ef3f52ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e90f74d-6d6b-4b7e-b3ee-24f2c16451eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a36f56d8-dfeb-4430-a0a3-1e9e71126dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6216ee-fb61-48c6-8be8-06b5ea55080c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5889d1-a66b-4f20-a812-bc5826394596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75977ae6-4696-452b-8ab0-5172889502f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb6283a-17c9-463b-8a73-67683074f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28219eca-f0ab-4a05-b719-5b1f815c768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6524c88e-cc54-40ec-8de4-c3b899c0ceda",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9602330-7de5-498f-8120-e49d282c05c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4d1142-700a-42f8-aeca-70fb8dbd4886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5127b225-2e79-45d0-9224-10a949281c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fde1e0c-e7f9-438d-9cd7-0a848c713e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0a0bdd-1f71-4fb8-b9ed-a3b346427896",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b807009c-1729-4e35-887c-343ff3ada332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "503c0bbd-57b5-4166-b409-8230039e84c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975b356e-4d0f-4119-9cba-7acd57d1ca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e95d4a-eabc-484c-8bf9-18c7c95690d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "031a44a0-57ce-479a-ac7e-16e93bdac67e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f1f28aa-7463-4269-95b7-e0d4b2db3453",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2507acf0-e3fc-4b6a-b9ca-17246343c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "844e7aba-b3c5-4783-af27-58a7af572da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d1b404-08bf-4c48-9a2f-e0bedd79283a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1757a80c-9a03-4f40-a18b-1f85490b2c66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c285eb1-1165-4eee-9424-3fa2e2e62962",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0db6f3-dc90-4dce-87ce-34fea16c1420"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ba27bf-4759-4a97-b51c-d748acae9a36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f991803-bf23-437b-a3b2-6abcff2a6f87"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20abf7df-ff48-4679-8a19-4dd2e717aa24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c40cb0a6-697a-4c08-9726-8ffc84732b45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4319e5c-f577-4b1f-a6a9-f67b58c92766",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "075c3b24-d471-4b43-83e8-44c286f45980"
                }
              }
            ]
          },
          {
            "id": "b0cb00e3-42fe-496c-899d-8e3e32a41d14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e1d2127-ed3c-42cf-bd89-8e340f9fbd23",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a1059f6-7943-4595-8015-ae580654c9b8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34d8b96-d8f4-423c-9168-429cb948d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "48c8f844-b048-4ce7-8075-131d06675508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e4254-2cb0-4d0b-9672-a877e2bb059c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1b3c41-25ee-44d5-aa16-db6eff8d45bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1eb6d898-ba7a-471f-ace4-44b2b6f6a12a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "431fd095-30f2-435f-a23e-84239376d8ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6902558c-89b5-4c09-8ef0-e10113e47e07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db17208a-8be9-4789-b470-ec1b002c6c42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35994fb6-a05c-4cca-8a8e-cfaff37c0e18"
                    }
                  }
                ]
              },
              {
                "id": "ce7f3a12-2ea5-49d8-9569-97a06fe00390",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40544c3e-aaed-45b5-91eb-7491f7d2bd47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f694967-65b0-405a-b7a5-dc8f6127964e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed033a70-b80a-48c3-893e-ed31115ca8d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a011625-d199-46e3-9f5f-9516a1b5126a"
                    }
                  }
                ]
              },
              {
                "id": "7d159480-ebde-4dab-94f4-b374f3920ace",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa946f65-8040-4281-81bb-8fadc171745a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b90df91b-324d-45ea-b64f-a796ce536583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f093045-4325-48de-8c38-ab4bbf39d286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "280daabb-3718-4a41-a37e-09f06674e07c"
                    }
                  }
                ]
              },
              {
                "id": "9c762a88-b373-446f-a21f-a957849dada5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d393633-9d6f-4541-a1e8-7c754b3de4dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69a9be3a-3612-4099-b9f7-c159d366f091"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd86bb75-139f-4f0c-8a08-5fd40f9278bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9c6abd5d-580c-4290-b8d4-f869950d6ba9"
                    }
                  }
                ]
              },
              {
                "id": "a48391dd-1047-4a7d-a9e7-a2b606352b65",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f6b3c74-2f04-4c32-b88a-97eb0a035477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f10e0e28-6f93-4acf-a4df-49cd8d2c883f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b8cdf6a-0f74-4337-8def-bd77f7a83654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89f56aba-5be9-4357-9307-d42b840a68e3"
                    }
                  }
                ]
              },
              {
                "id": "88f25915-fcb9-427c-bff8-05a0ce29b750",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c4dbfc-1a2a-4e8b-8869-8f021cb0ae3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe68e559-1c3b-472b-8755-52d6aa49e0df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cce4f699-8269-49c6-8974-1290979f899a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efe645e1-2b2b-431d-933e-b6914d678e76"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "192721d9-c347-44e8-860f-47881969ae7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8110c89f-e7dd-4c1a-a1a9-411fd8a031f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3080abd7-8efb-48d6-a0c8-27da866cccc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e25cc550-dee1-4d98-bb40-9dca06b1410a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f2df2e5-8dc6-4553-8b68-fd2e3eb6c12d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "efcdfdb0-0380-4208-8ce4-b1583aa9c613"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d19b8e7d-624c-4976-924c-ddf59d77c922",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16bb9829-dde2-4cc7-b474-90f1a7f4d743"
            }
          }
        ]
      },
      {
        "id": "c5eec13b-a2f2-4c96-a359-d794c943dd03",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8e89453a-45a3-4352-aa1e-f9e8d0bc6d54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ff7a23e-6b8b-449a-b79f-606ba75fe8eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e15d0529-6d27-4f3f-9bda-825e70f610f8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb56a406-6811-48e1-b06e-6146423d9564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc63071-377e-4076-93fa-1a87a13bd694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9384e449-304d-47e6-8d3b-9378aaaef43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f0fc21-0108-4d7c-ac26-d653f6877814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674138e9-7a93-4f7a-a530-c74dff39c355",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45535709-0575-4ae7-af77-36a1e1368741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e048d8d1-b6db-4087-b387-bba9ac5ed217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97d4313-2283-46a0-b220-1707312c06f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1687c014-8e9b-4fbf-820a-75255797d665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaaf520-f912-4d34-8131-926dc4585e3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a816472e-3d8b-4ca3-a85c-cc52a86c56da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcf7d4a-4b83-402b-8af7-c71ea457399a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff474683-b183-4ffc-9cf0-7da4504881b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf329a8-e347-4eea-8d4e-701237034c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80447436-324c-4c3d-8683-01462c6d846e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f07970-3bea-46fd-a5bf-5eaec8e6fc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3995410-fc01-44fa-83a1-0d60bec83878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1030c-ac56-40bc-a6c4-a3f566ec180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebea41a8-c2cc-47e1-8e80-a4747c5f1547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a453c2-f3ba-456e-932b-271658948a38",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04066bfe-db83-4331-bf96-286639984f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53971ea9-a185-408a-8d50-4c3f22d05325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a07ba-101a-4046-8320-edfcdb14ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "395cc3ac-561a-468a-98c0-25ffd636b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd75033-779b-419b-b2c6-0226efd4cb0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db7f09-e608-4f36-9a76-61174017b6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651200f2-a223-48d5-bee5-8664af7534bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909fa66-1cd6-4db2-8c69-479728b86acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "126c9777-5a90-4621-bb0f-c88ad1a07212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9e80aa-7745-43b3-9962-3c00b78cb6ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71981235-2979-4714-902a-a5d8f4409842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548af936-4eb2-4dd3-803c-afeb4f8fd67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7e151e-3fcf-4116-bc4e-fe7fa95b2823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c66566f-5b2d-43aa-bba5-5144e3c5070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318cdc21-1f8d-4d5f-9308-c60ee41818f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964efe68-ba7f-439f-95cd-43b604bd3e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd90bc5-4df5-4269-b07c-f9036f7c660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f8c43b-b35e-4dfe-9dd4-83c455ceda69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6742cf-20a9-4ebe-9969-e76778051d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c1fee-fbe6-4d9b-8cfb-8028f4d8f29a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3033c8f-f26d-457e-a44b-e7784352c6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c71e597-b99a-44d4-92b5-e5f7d553a017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4447fd4-6bfc-49ef-a237-a94a624d8b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b82ccf84-84b7-410c-b7e3-0efc4a54e809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefeac38-aca5-4e39-8542-93a6f7d3c4ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c60add-ce99-460b-9c78-dfb189e7c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3508e5-d2f5-4436-8cc9-f9d769801115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd747888-e5ae-4487-b9dc-60076af82252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd16f60-8770-4aa6-9995-0d5e615ab021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0030343-ccca-49e4-b56a-684a3b811a4f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244d5c4-5849-42d8-963c-97926af4e898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff7ee4-ed2e-4e74-9463-64cd31903568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc3d7f2-7f1b-437f-b2b9-f1deec3e4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee68511-030e-4c49-88db-4bdee1d30b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488dbce4-6760-4580-a41e-68102dd94fa6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93055813-345d-4ecf-a5c9-6dbf2182af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eb7d1f-4e5f-41d5-a2be-5f305fa7fa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f829e6da-02ff-4d41-8c19-33240c59d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "419fe615-5ac9-433f-a500-8e0ad7bb37fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b515b9-7f6a-4fe5-9040-6a0a272fee04",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64845c4b-dd43-4331-9c5a-6b681f485130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436fc7fb-5352-4dc4-b46c-2846be7c1017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d5a266-e445-4110-a66e-42c71f8a056f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b096d8-c290-442d-a7bb-568cd991b913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b4d3b0-0fcc-4828-961d-bc7d4751edda",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c54079-c3d9-472a-88bf-519d56973bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8db8c3-241e-44ae-a174-acc21426746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53644d9f-c910-4c27-b72b-56414d4d30ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c330a55-01f6-40ff-8ef0-935c02506489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb6760-6c23-439c-b3b5-7e9c2b2f331e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94d0d8f-9cae-4a50-b578-3a6945cdd903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fcf4ea-d355-402c-94e7-4601e7fe72dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5cf35d-d68c-4cd0-9d3c-043a6df4f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5461f7c1-22e1-4e87-88a2-1a2f14171910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff02c5-6b4c-4c44-b992-531e92a32d04",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201360e0-1e64-42f2-b766-c821d741a68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223b983a-29e8-4724-9af5-bca4617fea05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9f2713-b0fc-464e-9ab8-d2f45b5eeef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b088b9e5-3b3b-4dbb-a518-f30e10cc2205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721d9f3-ecff-4dd7-9c93-cb8489836fdb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabea4b5-eccb-43c1-94a0-9a1cee3abc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e8d93a-8315-4e5d-ac5f-0d86458c036d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d2fcb0-d974-4eb5-8655-07f915c7af53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ab1a49-0027-4e72-940a-82c5e59dd44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfc181e-d4a7-47c1-8cdb-6fc20a44dfa8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f818e78-80d0-4b5f-966b-a260b2146d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ec9daf-17fa-4a00-88a1-863667dccbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d7d8d4-e75b-4b48-ba95-7abeab70d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2293b9ff-e24e-432b-b9f0-d70ee591b479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e81d06-b23e-46bc-b2dd-c488c51a05c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0069980-961d-47c8-bd3f-e98dbc45d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58c057b-f946-45b4-98e7-c3c26747a9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e020630-8775-450b-a701-a057d05bea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdb3eb8-bddd-48f7-9b09-2ca5cb3e99b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99943e1b-3256-4486-9b1b-4c5561dae915",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f054d2a-cf92-4bac-9272-e3b9356b0811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae93ffe6-567b-4e22-b56f-523ea5cc5702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e1dad5-df15-445f-b10e-eebfbe9610d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e730a69f-3f41-4790-ae1f-e43271c2c78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016072e0-fda0-46f4-9fea-8041bd0eedcf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503a6392-c3a6-4f09-b323-79be56114f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c399933-e1bb-4599-8970-6fad07d7beb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2e1547-9905-4327-88ab-9e547ed1a9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b669ca9-203e-4535-89b5-120d925dc4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a67361e-93d5-4c21-94ba-b58ca7585bc7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f82f74-4903-4f58-8047-97f06ed088f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d917c6b-7d29-41e1-8091-8fac55ace534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2968f141-7dfd-459d-9b00-7d6b2fc087f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56a6c0f-3b31-45ca-a9fd-19571551cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80e6ac9-53a6-4437-bb57-d4d3e01ad871",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9daa3d-3134-4c00-9385-ba269295e3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59787317-8a6d-4af9-b088-e7995f074413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3256d1-addc-4c59-b91d-e4bfb05da5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d969c625-3fc3-4ba1-b0c1-243e81348257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94569a6-2e0b-44ac-8eb0-2b7be28cb7cf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e5e93-a4e4-4da2-890f-883ec985808c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4265b3-913f-4185-89c8-e1efca3f79d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da84eed-b8f7-4aff-ac36-af821c0b36e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc136cac-71ba-45a4-9835-46baa51f33b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa1082f-c4af-46f7-9c72-5aad6f376730",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b8777b-adb0-494a-bc9c-beb0646699b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37b78c3-ec43-415e-8d61-d6d41739cf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec486d7-4f6f-4593-98b1-f40e0818b786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c887cc-773f-4405-a26f-130fe64e9ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38bfcdd-2ed5-4330-adec-cefbb96098e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec80e93-e409-4908-aa93-09740d6971b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e48b78-6ae8-4d70-8aae-6fbb7b8bf26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfcfe14-6c59-4f88-af94-cbb334783dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a669bda-cb63-4059-8c03-eb24cfa6c90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8aef5c-ece9-4e8e-b568-c9a914f7f42a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda2f4e-e863-4bc3-9883-88c0187450ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a8e35b-f857-4ece-b3cd-9240743b557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ca3791-019d-4b89-a103-a25c8da55369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26439f67-c074-4dec-9a22-35d225703990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1772c-e83c-42e1-9467-cb37dbf83798",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400cc82c-ceb4-470f-b15e-41e00197cacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e99283-ad27-44df-b16c-a974078f76f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38822875-ee30-45ca-967a-283fec8c010e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632a1a5a-c2c0-4f2c-90a7-de5da7a2bdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a703b5a2-87c5-493f-89b7-3d0f6d052c70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa00c39-4c15-4271-9523-d8f5a8e2080e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17ef271-6ec2-4aed-9de9-196e30c0728a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8769bea-6d13-4c5b-93d6-8bc78f78858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7287c3-10dd-4090-a20c-60ab02178644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a060f0-4146-45ec-b559-51705f224435",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb98d510-060a-4ee2-ac6a-32a81e61f05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a390e73b-ff8a-4802-92b4-281d76871cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601500e3-31c1-4ed2-a9a1-0c3472c1ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1a340b-d314-4f6c-a35f-88a8836d2baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03886037-5789-49d4-a195-2bde746c09da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df04958a-84f0-45b1-954e-aba154f102a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778ec662-86b5-47c1-a972-bdcd90e53af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa8beae-f403-45a4-8c84-6e126842ea79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67821d9b-de9f-4708-a693-4d745abcd636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14205c8b-9d7e-42c2-93e1-6f25027dde78",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5516e4-84db-4284-85a5-24f8dc658a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf52711-9fbe-4bef-ab0c-13ca87cce1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7471bda2-fcf8-4a0a-936f-0870c682174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "699c031a-beae-463d-b112-19c8e28b5b3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ee35701-6705-45a5-9b74-0c0bd3fbb411",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75ac7ed9-4969-486b-a25b-2dc3aa22dfbe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27247a2-8bb1-4eb9-b238-33e1b5410c1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b5427bf9-035b-478d-8fb6-2c7009236841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25d5541-6f9c-4ab7-b089-e5365f8138f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a35ff64-74d6-4b20-bd84-c937fa0bec0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "077c4bae-1821-4a82-9a4a-9f92845756da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be5ce263-1ca9-4106-b1ea-c6183f9a67de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4038187-1cf3-43d6-95c6-423c0181b723",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53c92766-3bc4-484a-a31e-3358263d15a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0c09763-76f4-4706-803a-899b4c032b3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e96cbb01-5a02-4093-bdde-00083f22a33c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a34d762-957a-4a58-a967-9bae52f204e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c28c573-c660-4e92-b2a1-f71bc972297f"
            }
          }
        ]
      },
      {
        "id": "48e7747a-d232-4c29-9b33-0fe22f52d2c2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5d6eeb65-4d3c-4398-9ba7-0a78dc0ceca3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93c307dd-b6dd-4eb6-ac21-44e40b010ef0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59987cc7-b52a-4c84-be0e-3d38e1b0d1eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1474206-f1cb-4ae4-84da-f84d75acc6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772a73d5-a034-4830-b747-53c9ef226071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68776588-2859-4cc5-a6d0-7aa20d4fae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4832fb08-6aa9-4500-bed6-4660a60fc455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58080198-8eb8-4fb9-a926-5a8feb9ae9bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7771d6ed-8042-496c-8782-cfd9addf68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ccdfd2-69ae-4908-b74c-1ca4aa95d9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83424115-c126-47dd-9672-c65c805d195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11be311f-2b9d-49a1-b980-3d3331a03576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea49881d-fbc7-4389-90c0-5dd10849a196",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278b7fd0-23f7-4f3b-a187-ef15297d75b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa091bfb-63d0-4cbb-8bde-e2dedc04e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa67eb99-4583-408d-b4f2-d7930e8f2394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1243f659-0803-4c18-abd6-2a1f6e3a483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c2933-b3e3-4e3d-ba25-e1096d20682f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733f5dbe-854d-449f-af5c-1e2dd832f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2ed1b9-50e2-413f-bda1-5c9b157ea21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09970f0f-1b54-4f2b-a629-9113b03171ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00490a5d-c08f-4d42-b4f1-08ba4e4f903f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae508866-9ab2-4983-8b9a-dae086449c7b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490fad6-634b-4605-94c2-8278308b616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb453a8-e187-4f35-b428-768b9e3ae4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda80786-59ef-4cfa-bde3-18e7ce6bd1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9678e2-4237-4ae3-be67-7a1635fd8468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2606b52-ac03-4b41-a9c0-159851b65c94",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d84949-02ed-4a52-aa7e-86a866652fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09345067-2734-477d-a428-e62c87f0e3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38674e73-0ce8-42ad-bf37-7f9b0571ca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a60d52-7ef6-4dc5-b2f5-7b3f34cbff20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5118ba-37a4-4f47-ae55-385cd6573971",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958640b5-1d50-4b81-b392-99422f2c1a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4363d0-4eec-4ce6-be57-2ecbd2e12dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be0b53e-c1b6-4113-907b-55a30084dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68da229-eb8d-4fc4-85ec-46cfbd62d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab6dc6-59c2-4568-8ac0-940fbb909517",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619aeb4e-0697-4ba4-a457-6db18773817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2fef78-449b-4133-90ce-56b2d0062754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f86c18-f439-4a29-b44c-0603a28b4dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9626641b-25d1-466e-a84a-9457bd187f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0ff6dc-7b73-41eb-8acd-89de47d55287",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f15a1-691e-47c1-927a-8e7c57eb498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c737964-3edf-4653-aa38-8794aac891a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69911e33-cf48-43c5-8fb0-51c6c59b361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3820e26c-7723-414a-bfff-dfdf212a9514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da5be50-c2e1-488a-a417-ef3819f1c75b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ab376-0845-4125-aa5b-30d61abd4cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb1f7db-a184-454c-adec-6c5e838311f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e42825-2c29-486c-a8e4-d8a5dd5e5c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab886764-50cf-4fb3-ad30-2da469bee942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4170d5-2740-4f61-9156-7f5aa30e7027",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec0a252-b801-4347-966f-78bc05e84597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403bc76d-49af-49b0-967d-19337855adf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d995cc-2590-464e-a198-9117382d75b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "beda022a-fdd3-448d-afb2-8c2e93623e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f52bc59-694c-4972-99ca-97f235a4b606",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb144c8e-fb90-4556-8620-c5fb1a653233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ceb675d-bbb5-4a47-8c92-fe9e6dc0094c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e06ffd4-4fee-4e73-971a-8e2ee00f4763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccee8c8-fe79-499c-bcf4-d2eb70ca7c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0727f61a-621a-48ec-8d59-ecd0e5113194",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0729385-a35c-407e-990e-82ccc9692dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ccc78b-9ab4-4873-a848-1c04bd2e78db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ba411-dfca-4465-a64b-af8547b51965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9273a2-cfa6-412e-8583-7316f34da323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a490b36-d962-458f-a540-7387837675e3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd992dd-f205-4ae2-b4a1-951309ce85a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a80fef1-80a0-4fab-8341-7fc831922924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87d560c-1737-449c-9846-9453bdf2209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "93958e84-8a56-469c-9f0e-8d94faad8c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03f94f5-cbc5-4a3e-96da-42890cd5453d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0a00c-16d7-447e-af10-bc65bb4cc077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423f5634-9c0b-438d-ba15-ba43af392d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216b65b-04bb-4395-a589-e0f0aa4ff7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e814033c-d385-4a2c-9f9a-1bc43f41e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4726421b-9554-46bf-9083-0903e526ab46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bdeda8-2b66-47ed-a5f8-4fe64b36b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9611845-9aa0-465e-9f95-ea7a76ffc1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ddf6ab-428c-4c94-80ff-61e6aefe6445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39668081-ec24-4e96-b9bc-ecf8d6cdd03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144b8fab-f6db-446d-9122-a83955196c27",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2f0ac-d72a-4729-9c0d-94ad976d5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d400b82-a0b6-40c0-9959-094f77a01ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93ff40c-e435-44bb-8385-a5ed46a74e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e953bcb-7c6b-4b1e-a7e4-90f8f5aa71fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba2d602-3bc3-4343-92d7-0a01233d872c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec06a35e-48a1-4b93-9be1-dbbf776f9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4766c-4048-4369-819e-de422b60a53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d192412-5c2a-41d7-bece-81df3f9f1ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97cb3e13-61a6-4b2e-8add-8fcc07c39fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044486ae-259a-4eae-beb6-c507fc1ca139",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22d4a6c-e2ad-4a8f-8c22-ba44cc74ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9d0168-c05e-4a8f-9b5a-58346d6b9691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a91438-3da7-43c9-a13c-f5923a305e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5364cfd2-8c9c-4f08-b57c-ac7dec6a1aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3f0d08-f2b6-43f5-b2da-e651f106bfdb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5d6d0f-e964-4fa3-aba9-7504281b7b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de87fe1f-e4da-4288-9c4d-6b2a4afe8f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d31d516-a853-4bc7-9696-b16d2f41d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1d3e94-4807-4188-a08c-93bae810a33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eb6f6c-87dd-46da-bece-12de869702e0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5782895-826e-4534-8071-ff38c798c909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e6e859-676b-42f3-b19c-d830952af234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ed38dd-3ddd-44f3-94ee-7ea21483bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38eae99-16e5-45b6-9a6b-32cc7b4b40b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f075d9-4924-4a63-93d4-2b81f59279dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c947484-4872-459e-8fce-8371de94fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7e9865-0d2b-4dcc-a819-b2daa73eaa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1736ff3-ebb3-4fad-ad25-d41a21919739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dc1bc5-96ec-43cd-bb76-5075c8fe020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8724e-e7a0-4665-ace7-15f1535c2115",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec77a9bb-f66d-4955-a7f3-980b135622a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae90444e-5ba2-4831-84f5-7c34bb7a4461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9d4aad-9639-4155-9ad2-e32896ddc9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d001bf-2fb0-4565-95fd-5934724c551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae20922-8fb3-494c-9387-1de167fc0e8d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e8fab0-e5b6-4675-914a-d625e1a8e79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d37e73-7c77-4140-977d-a37142fa6ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956cd403-cc20-4bea-ba3b-add397d624f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8f03c2-0db3-48b8-bd6a-1b3c6441e5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24eff6d2-9949-495d-87ce-bddb5ebd6f98",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d86c6c-d8c3-46c9-9d60-0499934ce3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3d0e3f-dd93-4a74-978d-31028d739d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528ee5e8-9a30-4bbe-b116-b47b833e378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "528618e5-caed-433d-a588-5f79834a011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3427dbd-2595-4a1f-83f3-c45b2a6bb66b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b6bd2-eb2c-455b-a9bc-d37c50141ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf8caf0-003c-4afc-b4e8-93747e05f05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2149107e-307d-4b0e-b33e-e7cacdaf5225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77708088-5c40-4e50-866d-7ba7b9c9ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a9b47-15aa-4776-ad31-fc989c77a931",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a9574d-5259-4b5d-87ee-869af9cc5974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c159a8-b8dd-4993-b348-2b98c6c09e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00cca7d-fd0c-4799-ac57-a964b8143d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42b2867-dc54-4abf-afd9-913866257411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe1314c-edb7-4cd4-9cc4-a94429e7d121",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1f768c-795d-4b16-9af1-cf1c387190c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616e02e2-8123-45c3-876e-e94f30b6d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217ea29-2608-4da6-a159-00cf563bc639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5708381-88ed-4929-b380-da77e7cc83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4db3ad3-734b-40e5-b483-db27fe668429",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea405c0b-9cb9-482b-8a2b-c5606e12e415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb875fb-4cdb-4b49-826b-eb6696924b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7f3103-464c-4287-8b72-6ff234fd9285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c5124f-0c3f-4743-bb35-9a9d27a41237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db35e2f-5832-403b-b9bf-2fd781dd57a6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9c1637-a108-4613-9d15-594ab02d2ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce9cd1-c411-49d3-9a3b-c49af42a4c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f875b0-2d5d-42fd-a79f-fd3770a5f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4249c206-3d73-4742-9f64-eefea704bd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1083d06f-3239-478d-9102-d286c0496931",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251e96f9-8a80-4760-9f7c-4f1f55c011e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c6b18-cfe8-4b4a-b1c5-c745cd779b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc69454-cae3-4ebc-b52a-a00c481b6fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f6637-91d6-4bc3-99cd-8085ca012463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a099a329-ad8e-4d00-9a7c-0c22a8db86c4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da964b3f-7ef6-4cee-bea3-364e81953e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7959f085-b6b0-4c2f-b3b8-88dda5eb130f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e711ab-7bd8-465d-b074-9d7d50019e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a5a521-0940-4626-9e3c-4ec7ba9961f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb41d325-ffaf-4414-b77d-514518b63bbd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb41e12-7544-4e27-acd9-9ca31b1052c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cfad06-36ab-43f7-b682-25b56473f005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb8611e-6c6e-41cf-9a20-bd92a018a76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98243eb8-0e5d-4fb2-bceb-4b7c5c11ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63505227-377e-4c05-b1c2-d2bc44457baa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0105a145-e84b-43f3-b1b3-63687576a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33a4683-da64-476b-a06d-62bd4dda03ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4458be-8779-4878-b7c2-1b453f3917e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb986d4-854a-41d7-9a84-50bd80d3fa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931744ab-72be-447b-ba84-18e80f33aa0c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a544cf68-73ef-4e5c-86d2-ce490ed43ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f609a61-3c84-4391-8232-83e290a2a547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371111e9-08b1-4737-80ba-88744277e42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3858369-97ac-4dc1-a418-ef951bebb2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36379e5-b068-4531-9230-b04166c7352b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d22f19-19f9-4335-9344-498374c6db67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a656d7-aa77-42e0-bfa0-abee383b00c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e07baf3-71ad-4394-a9ac-502ca260a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a21b58f-ab5b-4efc-af26-d7f22372cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e009344-50ef-4010-ab68-67300be240b8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfed8f5-eb31-4315-9a37-d31d7be828fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7394b679-0219-425a-a59c-91983875a838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec321c66-697b-4e7d-996e-1b363de826ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba2f82c-d848-4bd5-93f0-72d7a79a5253"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e713bfb5-222f-4282-bc9f-3fb5caff152a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59dd6001-8bad-4802-8f2f-8509477627e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b196044-dad0-47ea-a883-c789e9db0f90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "706fb29e-2b74-4e2a-a565-1922d2f3ce22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a435778-ec35-4b94-8f41-f757c0fa2293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b43c7f8-ff9c-43ee-bcb9-6610c515e060"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb675d9d-9eec-4606-9c98-e3f969b2aa53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f51c0829-85e7-43fe-834e-161d4cec4933"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1fc194b-87ad-4b74-b51b-3241ad79a187",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b577f38-37b2-4036-a8d6-a510375fcdb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dad3cf7-4415-4662-9981-0e4c069e2561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9fe093da-c028-4a4c-a98e-f0b9b7a6ffd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cea1564-4125-4415-9715-2ea4cec4425a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cf90967-1118-45b5-9a42-f0e8279366fc"
            }
          }
        ]
      },
      {
        "id": "55c9dc98-48d7-4d9c-9392-f5b87f8802c2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "326fa118-08ac-4e39-a1b9-71e70b20628e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fb430ad-b8e6-42e9-a781-ad2c1194a166",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64c88aa5-df8f-47fd-a282-4f98b77b2659",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5870085-95de-4da5-a741-8c8559835227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1630db1-14bf-4717-bbb6-0cc337ffc3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee70f143-94b9-4784-ae76-93f85767dff7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dad3aa-107f-4da0-9024-05f2976a5e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfd231b-347e-402b-918b-26425ab58736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65a0ace-8a96-499b-8f5d-6d45c09b3e50",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2102ad88-b09d-420a-86c3-e9cf0f030e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff08adb-dcea-49fd-8c8a-905a2f84c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db6ff3b-92b2-4d9d-a383-5bb19c1f040d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a0621-1c5f-4c70-ad5c-323831e87474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eba1745-be53-4bc9-a7a2-b62faac9cd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6e7566-4f72-421b-936d-5a9f2cbafee0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f685a10-126a-4123-98c0-e5ce74f5c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da422707-61c3-4b85-b57b-90e52bcbda4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28552c-17aa-42ac-9bd4-2d2b73959875",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f098af-164d-491d-8ee9-751138a43582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a753e3-426a-4a29-b032-c5b9a77bb217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9812bd1a-8a58-4e94-ab1f-8ab74ff5d756",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda22519-4484-4988-8f1c-7054c69dac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4255f6ab-c0fb-40dd-884d-f4b08d083fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a636725-d64c-428e-ada6-23e6de78a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a2c281-e956-4ffe-8691-a36d223054c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1259c316-e74e-417c-a0f5-f04f1a84babb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae4f059-336b-4eb3-8372-5ed92100446a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0863efb6-ee55-48e2-b0c7-4b0958641609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1e4f6b-d21f-4617-97ce-17b31cc15b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b804781-ee5a-4635-a0cb-5196cd1d398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc8bf1-a638-4a20-8604-0d4dce79f59a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072f014-359b-4197-b19d-6d4e0eac3148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fa411c-42f1-46c6-a94c-b63eeaa020aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad7784d-7167-47c8-b924-790932411f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c39e1e-8b6d-422e-b6a0-f2c8beb376e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f55f483-d986-4f9e-879d-f1c4e6a9083a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bbe604-77e6-42fc-b969-4d960f7bc872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cf3a22-7671-4dcf-8830-7873c63b85e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c5c9d-b8b7-44a2-bb9e-c4f99809b1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72effe39-206a-4253-823e-2cb34aeff617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9021a303-5082-4fa1-b106-11b2cbe6d005",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7108c4b-d736-4f20-854e-2a2a5ab89053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623b9797-03b6-4962-8966-faeb250688ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ed8d1e-8d30-456a-804a-bfa73fae9991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf7e08d-ae67-46df-89a2-10937b0b3a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d684e861-6891-4d69-9bb5-ef56f1a938af",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d69a7-05d3-4c1d-b04c-6d74a7d5b087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca47fca-e14e-43d3-8447-d4d6db291a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be921d3-9ca8-479f-a47e-dc00b97380d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0317c620-e7a7-43b0-a908-f662624b2bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26816c42-7fec-4d4e-b93c-89faeb8a3a75",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deda1a2-e2ff-4d63-8f8e-505b85b3fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a74152-e6ba-499f-a376-70d2b4003745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1a8569-8605-4f5b-9ba3-4345dea19639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff75f20-6a0c-4ae7-a01e-99de2c0eae43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6d393b-9688-4db9-b126-930c62cd30e0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d087a7a1-616d-4346-8c47-ccde9a57d895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6491faf5-5a58-482b-8ef2-2d5c793e201b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa77c17-df9e-4e7f-9782-f88f20dfabeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa405c7-7471-4c6a-a429-4b2af7679ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bb8316-bef5-4e1d-862b-6bb4e2311174",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f44122-aa96-40c5-934b-bbb0a64ee483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4afc1d5-55cd-4a70-b733-32249fe73e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623fc623-b1d8-435f-b8b9-6d1d214bd729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83876265-b444-4712-a92b-bd2820b314cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fe824c-4b8a-40b6-87fc-b0bc0fa831b6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58634d1e-5ac0-4ca9-a0d3-fc2a9ba169e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69df702-4f65-4c3b-876c-d352d9fbb0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd1543-5072-4856-8ad1-b5d119b021ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7382589-9b94-462d-8217-23bf3dc37cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08995e47-922b-4ea1-8ca2-99f1a435a552",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4f78ed-39ac-44e8-a114-47ce2deba496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72a897d-7afa-4b11-811f-2dcb9f998f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5159811b-5d1b-439e-b9d5-6b37a9661a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a70e10-4f86-4a2e-92be-184401343aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4ebd61-3fff-44fb-bc35-a07654be6a33",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b22ad68-8434-4adf-a626-0dc455c009a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f3be6b-9a28-43d4-8684-76c2a07e57dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b51e31f-f605-4e7e-96f4-7ae8cb9982bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc2c868-e3c0-49bb-a35f-8f5831f7ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8a419e-3334-45af-8970-4a8833f108ec",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc9bc7-4f6f-4ead-8970-328d1cc04893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeff748-352b-4ed9-8295-5ffd2e587566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6917f762-b243-4a73-a8bc-b3e2d4b5e680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94818036-789e-4fbc-9985-5ed1915b78f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfc575e-fd3d-4b2c-b19f-ec6986f95c6a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04c3f8e-1d0b-4845-bc81-e14a82d91fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8febeecc-99ac-42ad-8eb2-127cb39a4fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4f4af-642f-493d-a726-7df1469b2bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90829f9-80aa-4ce0-a0b1-988560051343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577b314d-78c4-463f-a73d-ad51e42439c8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cd1793-fda5-48bf-a216-ca33ac66ead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619f067c-5d8f-4716-bc54-730d31dced10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995de1ee-c1c6-43ef-89b5-cb5cc380e998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af3f8d3-552c-414d-9a90-6569f1bd5747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa7310c-ae3f-4063-84e4-f1c71c22e112",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619fd1bb-1e53-4f1b-a3eb-07e91376a60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e403d583-331e-48cb-b767-d22affce7fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eb16ff-6d1b-48dd-aaed-f9531bb5dead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0393c23-5af9-43bd-a763-9c07b01151b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc65c9ca-5427-4ebe-9974-2eb12edc8a58",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b500c8e4-f09a-4683-82a1-0d705363e8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709dc722-4289-4461-a470-ee3195a23e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1b099a-12ce-4398-91c5-2fcbfe1a15e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf09560-b352-4701-aefa-61134fdf9f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd657ea-e92d-41e4-8ad5-93eb7a8b7860",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aece30f3-f0dc-45ff-9661-021ee84e4480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d1e001-03e1-4ce2-ba2d-bf451c59b977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56776793-f7da-49d6-8028-15e8209a995d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094c9932-715d-4b8f-9896-0acb051e9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c728810b-86f8-429b-a05e-bba1aee698b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf1d337-c1c6-43fe-af8d-c24d3a246167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8c73a8-002c-4ef0-adc5-7409f73d57fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec49fbdd-5470-434b-bcda-32466537dcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6567ad9-809d-4014-9075-310b6f74a3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cecebcb-7ae5-4ea6-af37-8a86331beaf9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1991bbb-2eaa-4cde-8f93-6e240790513f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd988f7c-94d2-4dbd-a5a7-5f30058dd740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1754aa0b-25af-46dd-80a6-77eeb901acf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe27f02d-132a-4cc4-97bc-abad28eda1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63adb662-4776-4005-a757-7bd3d822d4fb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11711f67-0127-4597-b607-b1364e4cedf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9881a140-a2f7-4235-9410-2ce69a92150a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2199e37b-737a-438c-b0c4-f50206e86d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318df2a8-f12d-4012-a065-6a07c9abc489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783e3ab5-154d-4071-81cb-7ee4d6b20fc8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23aa3d3-79f5-41de-94b3-73038a4710c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e262c3-3f0b-40c1-bf73-5b3a56891e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f2b4a5-d5cb-426e-82c3-c5418c6ddc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ece6bc-28c8-427e-88cb-f19575565ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5b3d3b-bbe4-43dd-b72b-555ccfbce267",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffd02ae-c67e-41b4-bf2e-f3d086016eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346ac082-b8b8-46b2-a243-e04edff2c803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fd3734-2618-4ec5-8ccc-3cf5904562d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e6848d-ea58-4e87-a96a-37efe7be939b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986cbc38-d230-4138-a577-52290d236e19",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a414ca07-3fca-45f1-87b1-fa4ffa81ede1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d60b15-ccad-4c3e-8251-c8bba3c023e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d668e784-6772-48ba-bccb-43180a725910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85abbb5d-bc5c-4f5e-b90a-6535abb6375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e826ab7-5b79-490c-9c76-042db6eb4859",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8775396-a283-46a9-906f-ef7eb329093d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08feb3de-84ce-4dab-9e2f-829dbc89de09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d741d2-e2c4-4d19-b00c-18a9f5bfad53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6f044c-3852-4e6b-afa9-c3a76bba958c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5624b6-547e-4f76-b59b-0d3deeb47f36",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3968eebe-4061-473f-9237-1648c424ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a36210-9b32-4488-bcda-43ff4084ce73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4599197-0ae0-49fc-bdc4-ecf4980130f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6e0ad0-465f-4801-96f7-1bec51dc1f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068122a1-1cf2-4aef-951d-7b56270e9d32",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f46239-1ded-42c1-8428-d8b701f42e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18731737-d0e8-4f4a-935b-fa85e85e330f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05077c9-acb3-44e7-9c7b-e1196692bbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb27390b-bce1-4dd0-a52f-8afa06df3a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64549b78-dc05-43a0-a46e-6f2768d8e68a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388ed762-f903-4ef2-8120-5d82fc61b163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806abb0d-a06d-4a15-90eb-96b14534a1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69de25a7-0c7c-4101-8450-859148cc5bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f489193a-8057-4b53-9331-b7f49b744c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbfe7da-21a3-41f2-aefd-bcf2f18bf09e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e805f093-a04a-4330-bdd2-d7315dc1eea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f072b6-b266-454f-ad60-cc920debccee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d209f7-244b-432c-9b63-1d70f06fe630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9100ce3e-7887-40fa-9ac6-d3285f3eb168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48ad69b-dd08-4396-bb89-1b5eac422450",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d30183-252f-40ee-a2de-a4781f9f2c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85f1223-8389-40c0-abd6-042ac2ab796b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff3f9d7-0571-4c5e-84fa-c2e16048ade1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e4c09f-0dd5-464d-bc05-06a1733f8541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36abb274-0207-4adf-8783-71330a7943ed",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8bf9ba-1754-46d7-804a-3e09c5a7cd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a26b99-e64b-4df2-9d3f-60f85e503b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8ecca2-f0e3-41e3-ac66-860f7f615261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d2c3e5-5a71-47a6-a9ef-9b30fe093490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49599c76-134e-483a-b338-8725ce505efd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450efe0f-13f7-4f57-a309-88ab99ec58a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad676475-cc98-43be-8883-282da8e7cc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e5d81-9510-46e6-a602-cabf0e1242cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4323fae7-9170-4cef-9285-d64bb5241130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78cb279-8ca2-471c-b803-bfa817185a38",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a17b66-6654-4040-a368-b1b8e7535585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448aaa4e-ac20-46a7-82c8-c180608e5a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f58d08-1ad6-4762-aa4e-5ea69cf81888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88302dd1-4f39-4a79-bd0f-6636319fb031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a74ee3b-6532-4499-ab1e-8598d776491e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93235505-35d7-472f-b7d0-c5ed15d0dd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54e5eb5-9efc-49c5-a3b4-ef14dd2d0f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51849ed-5554-42a9-8a85-2bd39d213d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac6aa70-ba70-45d5-9fa1-4ee6e68b5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589ee923-85d1-40bb-b311-a64a1c777887",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb11a1a-96ff-4096-a700-792db6b15c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea0c595-cda2-4053-9fc0-680ca2aca598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05535b1-c633-4db1-a685-5d806d9e0c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd7d78d-4498-49aa-87ca-d6b038e3ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73f3a56-e1a7-4b78-a39f-84e5cc0a3afc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b4f44a-b3fe-40c9-a8fd-d2c10bb23ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a2c6b0-28ef-4ee5-ab67-ff0ee65385c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b49d641-1833-49ef-8aa6-36ea81b1e734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8b6f18-d28e-43b3-a1d6-70c0ff4458bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc6b02-1e44-4e9a-908b-1525cff98fac",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe035a-cde3-496e-b825-884af6ca5e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cc002a-a137-4dbe-87a1-a1f959e28bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bcdf6a-a65a-48a9-81ab-e5fd4445fd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba73d92-d644-48c7-9f07-0fed906a4c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e318e801-8fd1-4e15-8ddc-69feace3deed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bafae96-6d04-43d1-afff-e5abdad97ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4734a8-3675-4343-aa9e-9d8df797d559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a247839-e732-442d-a1e0-826a9847df3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2a7392-9c93-45f8-b7e0-6f2f49c15c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1132b5-fb11-4c2f-990f-9252496d71af",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0dd33d-dbfa-4a88-b1d2-b69d4761616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a2239e-31be-4bcb-816f-cf8ae3c998e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bd8810-9bac-4012-a7f6-6867666a1c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5630aa-50c7-4a55-bfd1-9b359b65420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a91f026-bd35-4080-a224-8fe05f408ad2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6acc31-8242-4c24-8401-e1d16b8e7018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b294af-8fc2-4725-ad8b-99f4a0c221af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c5842-cc01-4491-b6b6-8db513e683b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5efa81c-8447-4e55-a40f-431c54e40890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d9a22-8cbe-467d-978f-bc6ad2295556",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1921b1fe-e7d5-485b-a37d-4a5c174d34cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3d56a7-25c0-480f-a12a-82e52cde59ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722c1d8-9ba3-4e7a-a3cd-648e762d6a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5c71de-9241-4858-8dbd-91a035034fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491f6a6b-cf52-498f-bec0-4f3ca3334eb9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518a50b1-18c1-4d2c-bca0-af878221d7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99003fc0-0a5f-44fa-88a1-bddd6cd4b77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e4cb8-cf3f-43bd-b263-c6ec6de2aabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54044489-7ee9-491d-a576-7ab66506b8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5f6e3d-b52e-42fe-bb2a-187fc4697839",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961d9278-4f56-4e48-8b0e-2527057941e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a158b37-fd07-4b98-b9b9-52627c18a25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9993f5-97a8-4928-9972-aab7f18c6223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc25a45-82a1-4cda-8270-1f6dff17a034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bea9ca1-88fd-4c61-a069-ac7be52f0573",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73723a8-9b1c-403f-a0c6-288ccbe52bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6461499d-c7ac-433d-b599-3bddaaadc8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c1d0ef-a14e-4ccb-b8fd-60d4bd8ec35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea2c4f7-8e18-4651-acf9-2916d99e8902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656f2bda-f2b6-4096-bb38-67584757a5db",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be0279e-002e-4c0c-bba4-8b0593c55fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a9a028-34c8-4c89-a712-6fbd94d3a288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea3f515-dc71-43a7-9540-3d47db09dd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901cb1fa-11d9-40af-8024-a528f99200a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d6cb6-7d3c-4eec-b027-3b50ababeeee",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e994d2b7-3b7c-4289-9025-e937892f966d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528f5735-3b6c-41c8-b8bd-1bd0588cfe37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ef575e-baff-4986-93e2-1ead1ad8ff4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994f3509-223d-47fd-88d8-09b255738404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848fe538-7d60-48d6-a22f-2770eb7094c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08193d46-6d0e-41a6-aade-e71fc194a41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41c1c9b-ff10-47cf-a184-3dbb85cb6b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05b9f54-5d18-4b53-ba50-213ec0f893a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b54f29c-f015-48d9-8746-c239370a6805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662b7a3b-bbdc-4f3b-bbdb-cee8d9fd611f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62513071-2c7b-4e17-9686-d8f5c2f3fc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf369c6-a988-406a-99e0-48140f45212d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cbba97-d920-42e5-b3b2-b0028a27c33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b23a74-0b3c-4e2c-a9dc-a75bb2a73d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9d50a9-713b-4d0f-a503-f20a70f05fa6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6deeae-f722-4978-8205-3a41b23b7e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463c9994-19d9-4af5-a75b-051e887acb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a5e504-b772-4714-84a3-737fc48a3a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d910592-f137-4174-ad3c-253993d3dcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9596b5fc-f27b-4722-a7a2-f308f2f49573",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0733dd32-b0ae-49e7-af0d-5e347b180fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e712282b-1b42-4d32-ac88-453bf01fb672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17019ad9-79da-48fa-a372-1bbfb09bf334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1602f9c9-7547-4ab3-82d2-305eef3f6592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733fb78-0e60-4ca5-ad5b-2678a49bbac7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1c4615-3a6a-4cbc-a113-f03c8082486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc8d809-8893-4ed9-bfd5-02961abdff2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98862705-63d8-4935-b4d0-87c2d92ae9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc304108-d329-47b9-8a65-96e564485dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faac27b5-3ca6-47ee-b8a7-b76a8a2ab0f1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee9515-58ce-4ab3-aab2-671fb864594e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d970274-45f1-4253-88c2-dbdc18f61b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4eab466-5a4a-4b29-8b9a-c08e730fa617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7678e98-bf04-4321-9832-182234273ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce4e0c9-b422-41d5-9440-41569aa368e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309b6e39-fe8e-4ae1-995b-a142c3583749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f74e8ed-b368-4753-a105-77c3800ecc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffe2cef-e2ef-4bf0-b374-afc0df8e44b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926d67ac-79dc-4a98-8fe0-7e94b6559bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc22f60-5b98-493e-b104-3523e0ea3188",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4552c519-bde0-4737-9ba8-3099397dcff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d86ce8f-0773-47fe-9850-0d99a5820f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aaad58-e77e-4b0b-8f65-b562f82d15b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ec2559-ae55-4f8c-817c-7b168b29f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58adcec-648a-49c6-9049-3b39370e14da",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf83d20-fb06-4737-8af7-a50fc216d8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b596238-96e1-4b8b-9a48-849656c6860d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b21862-5416-427a-a13b-c18367d00671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7d68a2-99af-457a-a8dd-766703428ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c479d2c3-ce00-4952-9ace-8a997229f198",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9f3146-fc05-4af7-8e62-28a5f65716fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f37b554-8c38-4e7d-9d68-cdf204800ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375b8784-4279-42ca-91b8-de5afc5f2cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198083af-e2b3-41a1-a9d9-7c036588ef30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37c8ea-89d1-48ae-9691-1a0d92d3a9cb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2767597-5e27-488e-9c5c-db86d4495507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87004d4-1f3f-4882-8e3c-9a857242fe7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf662b4-2ef2-4cb2-adae-ea7eed80332c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcf40dc-6045-49a1-8964-0c73f01b54b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918acdfc-79e9-4a5a-9904-45a19862104c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a85693b-93ce-467c-8d94-b99a111c5a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b3e7c2-eb1d-4f1b-b227-a53f09bbffef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe883da-5a48-48f4-ae8d-e535ff0baa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f93e1c9-c265-4f07-b43e-baacf2ae8d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f27a3-c2da-4dc4-afb2-9ac52faea1a0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d57d85d-2f7b-472f-b424-90a505cbaf9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604c9bda-547e-4b7e-ab5f-edf52630eaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93686fcb-a1d2-4a8c-837b-9614a7c163d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b97409-e531-4da8-8c22-c2dc92a6bbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fddf49b-d513-4155-b62a-3d5c0fc01dc7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cfc0d3-0706-4f18-ad4b-f0f4abea6d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a26f9cd-0614-4503-9a5e-41e7e90b4089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f74e746-414a-448e-aa99-ace7f8cff5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b247a7-123d-4022-84af-0feb569346a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3f0175-3d41-4eba-af89-3706c24dff4b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f84613-e4be-43fe-a507-b8adc749c3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7205ba7d-bbc1-4a5c-a569-e62802778215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe9c56-6965-47c1-8c20-58b1da756766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e70e10-3cd3-4808-961f-7ec28f80ade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a41b125-2511-471c-8a90-bc2b5c493c9b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e912109-d2a0-4195-8285-889f8cdb2059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2301eca-0c32-4494-98a2-1c47fea7e6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3938f3ac-b9bd-43b0-96cf-6736249815a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48c9668-1d83-44b0-a168-aa6ee49e7898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499bade4-8aed-4a81-b7ff-bb566c363992",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd5212-fc75-4477-9df2-c38d562fc9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb27c5b-ed03-4efa-b5af-b685c16d26f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13485c7d-330d-434f-87c3-d00bc06d55e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1b2600-7216-47ac-bab0-45d6d339657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0aeb94-2bd7-4c8d-9c21-5236d57eb62a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9459c3-f3bb-449c-91bd-a5a67cc6f188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37c8669-ae6f-484e-94b5-a16d8c4d3264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af6d3dd-22dd-4838-8c9a-c3933f486377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3a0ff7-73ed-4fd1-b8a6-10c3e025cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3a9f6f-9a91-4a21-9e07-ca87f4c17d41",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7446755a-54ba-4822-842b-df6c22db94ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c108da39-e073-40f9-b334-7fa46eecdbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215a0ae7-dd90-42b9-bd53-f03190adcf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d15abb-9865-400a-92d2-d84bb0c9a227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfee9b43-94f0-4302-a35a-70ad337e8483",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db6ea21-72f4-4630-b391-073d8d8fda57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a78cd51-fcf8-4254-8e08-1ad0fc21011e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340b8167-aa8f-4169-b444-defa7ed52b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e15f8a6-a7a5-4b56-b188-1b3e29bd930c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b68fc7-299e-4f43-9675-ca6904fce47b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90623869-f373-4763-a06b-08e4fe10f23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495206c7-ded7-4ddf-a075-37e72123fd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e1f99b-00ac-4b82-b40c-14e78472c59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e344e165-b4f0-4bdb-895e-813be712e265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a748a42-7abd-4af1-bef6-943b609d8d44",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fa4170-bf32-4c8b-aadb-2492487c84c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365c58b0-0774-4461-9bea-fa3a1612f8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d07ff8-9543-4b55-abc0-81a0ae1d9468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017fdc60-4b64-42cb-81bf-bf0be3e0a05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb9a66f-d757-45dd-a515-59f7d1bdd9e6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9804e9-3f60-435a-aa44-4ff9f51628e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd08ae0-1fd6-4a91-a6c8-fc23a0b11a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7ab5ac-59db-4fd5-9d5f-e5981fe1bb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0be1db9-aef5-428a-8143-91920fae578e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a7a1d4-5f5a-4826-a212-bf47c06874d4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b56311e-6a2b-49e6-bfa5-4992baee5e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e007695a-8671-462c-a532-fa06220fdc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee60df-7092-4158-82ea-65bca399592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3775ff48-c1f0-4b43-b82b-1d48d266b09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0908428a-dda2-47e4-9c14-bf2c3b552a25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fcbca9-5dee-4ee2-b3d4-c3f50c14dac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79dab3c6-ef73-48e8-a258-cc3f1ef89399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58848014-d19a-47fd-8941-03e63de9b720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975b7444-dd7f-4fb0-be49-e04c89b23df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e281e9-64fa-45a1-8e58-1c8f773a226d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abee19-0c5f-4cc3-8cc5-db91a812cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f69414-1e48-4c78-bc38-0c9e047b432b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4c6826-792d-4f37-b522-22a3e670676f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6db6ac6-643a-40a4-bfd8-f3afaf173f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a777766d-347b-4a44-bc00-c360590d7600",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d23e0f-e5ee-453c-89e4-05591bdffdc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3fc12bd-7d3f-4426-bd37-e471c1c28f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694196fb-ef1f-43db-b396-7d9c74ee1aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1907dc89-2c41-4767-935a-9ef1e076bbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81096c15-8cd3-4968-aba6-91d22cbbfe22",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef9c520-722a-4de3-a6b7-c7d50095c85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ec416d-1831-428b-a32b-fa57d5da2258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5314f33-f92f-45f5-92c4-635c62d0074f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64426096-1db2-4c7f-aeca-4f8ae2801d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe80ce9-fc67-45ba-ba23-55d3bd601d49",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd55e17b-dfad-44ea-91ac-c72bf721c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd7cf96-fbd8-4b92-8863-05db43780b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfeb12f6-c0fe-4cfd-95ec-708e2d387cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258ca880-d722-4be7-8dc0-0c789b710f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f470526-7de0-409b-a219-300bf1933325",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8e9f55-a893-4af7-9cdc-1b6f6cef5e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9377704e-300b-44d0-9124-e02fc4de2aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3cfad6-eaf7-42f4-98d6-3eee553407ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0053b589-03f0-4634-b0c1-e957758a48c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba919a5-af80-41a2-8526-9ac09108c934",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba58aa9e-9d60-4c96-a87e-d53e79d91efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6b7b64-2f8d-435c-bfce-53029602c3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef2cdcd-f9a7-4993-81d1-554d8d6260d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688fed62-1019-4eb1-89af-478b67bea952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58578850-1c8a-48da-846d-5105977c227e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a8c9af-2b91-47ba-af8c-1a121a5ba5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132cc085-b1bb-4801-8374-d3297a0513cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ba0058-0381-4c91-95f5-d70729f024c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2a6bad-9db4-4600-9de2-aea2702aacdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c8caca-5a8b-4aba-9ef6-8555390dc079",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635dd696-5991-40b0-bf94-97e87292d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7d156b-4b6c-4b47-b7d9-559ee7465833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b998a2fc-ea06-49bd-b6fe-24f20c34ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9c94ff-813f-40e3-994f-8555dc34230d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e51da1-f8cf-45da-943f-e7be1d648ab0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d26cc81-380b-49df-a7b3-6f5bdcdd6bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10c7ecf-1dd6-44a5-adb1-d55dbda5d299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cebf89-047a-4661-8570-6d27082cd23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d54a27e-1841-42e4-967b-9dc4aebfe491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b34ba7-8c29-4b46-9025-b70dd39f1bf1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba416a7-0272-4b8f-80ad-490f17b45e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e5e08d-2788-462c-99da-1483a916cb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a18c8dd-2161-4482-9f3c-c2c853e730da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81f49e7-04db-4e2f-994f-83073f9d5368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd855dc8-ec47-4ab1-ad5c-7702442c6a30",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f02c6f-f9ba-4ecf-9190-90687609dd6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67430815-d7e9-43a8-a4a6-da64798fae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25df07-0279-4cf6-b9f2-e47599fbc324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc32fee-beed-4626-a3b4-6eedff88b2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60defd-2c58-45fa-b5ae-a8d28ac2502f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c7614-727c-4e2b-8b17-3ddc3c0d075d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd19c4c1-bb12-4442-b463-957597370151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d219121-5333-4976-9484-4ec4e84d9ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ccf50c-c9d9-4983-a346-c2bf2eae11b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55af56e-2ae1-432e-8a36-df01cb8d5608",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff6065-3562-48a6-80d3-784925791676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c845ad-9b02-45de-bbc7-3dc07d338c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318d4212-494b-4b6e-a364-8267cd147fda",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a250f89-0d77-4593-9da5-a45c4365628e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad7bc8-e70d-4893-a292-67d90c3fef92",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54973ef-2998-4c10-8d84-27528473b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bfcb66-e5ac-4107-ba4e-3d7fcb1dd438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e079ef1-22aa-401d-8484-517bf7c53b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b26731-a447-4ebf-9b57-0df8fc184424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f691bbe-1f29-451f-9700-90113c875e14",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4059375b-6227-42ac-a84e-7eced687a32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090b1837-6205-410c-aece-6a673993fffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9462859-0eca-406f-9a0d-1539a18b9f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e327e9f9-de4d-466f-b91f-0e0a82be206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9af1b8-ce28-49de-a19f-aec90b5b72f4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a21935-19ae-4b28-be54-87ebec11219b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664dbba3-8f95-4d8b-8a71-71a53159de65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92041cef-6485-4e26-8d84-46b0f39d9b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdafd613-7fce-407f-9566-225082687c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46da9a8-176e-4ce0-ae6b-677ccb6ad27c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06195ade-2151-4649-9da2-0030591a6028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2564288-3b9b-4ff8-8af5-52d3e05aa621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d51801-fa9f-4d5a-bfb7-14a5836f3d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902f9921-c5a6-412e-ae09-e509313d9a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec93e9-dfc3-442c-a3f1-09eafd253162",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c8addd-9fe9-44f2-8722-cc2fe8149017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e433487-679e-4d63-8443-8fb2a3738c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3098fc1b-7b7e-40bb-b93a-120caa91b344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fae1f0f-7d8e-48b9-a3c9-261a363472a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fe3f6e-f6e4-4011-82ec-4ab5e6e79f6a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073174c6-ec52-49cf-85ec-f58bca725adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "985faade-b0e9-4f4f-97fb-f3b02149fab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87097c69-8851-4e11-8dc7-db94d01c3333",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3051f8-aec3-44d7-8cf9-3d48c2ecb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f87622a-20b7-4354-9b2f-e065bf24b2dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d6f9e6-c807-4d6b-863d-d6ae755032fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fad6d13-8592-42fe-908c-3f957b66a44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e51c9-7139-4790-8aec-e86d33474fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdb5bc5-6194-46b4-918b-074b8770acc5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "233d29e8-4007-437b-a0a0-19c4b3abea86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0553c589-1861-4bc6-97fe-c3703dded253"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4269bbfd-b4fe-4229-8e40-1e1f577ad5d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1afa6f5e-64eb-4e03-b252-efd0614f046c"
                    }
                  }
                ]
              },
              {
                "id": "0f025c20-4a13-4616-b672-5625b4a5e645",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3011059-936f-4d1f-9d25-9a71dee820da",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81cb859-c7f8-4183-8467-72002bcb0a53",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7fdb63ad-09bc-4ab9-bc13-bea80b7ab550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b99e11-0a9d-4b59-b354-54836c347086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201ec04d-e45b-443b-bdff-09e2f71318c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "689d9f42-6e95-4c74-b113-811b00b6b476",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cc55566-4f71-43e3-ba88-bdfb2de24505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c73f325-1730-44c4-8f53-c082ac03c20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f4ad8c-dd62-4c4f-9a8f-e2be0a3e6bb6"
                    }
                  }
                ]
              },
              {
                "id": "3c52fe36-d69b-4898-8373-fb441264676d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a9606a06-ebe0-451a-8aa2-cd49c02ec8d1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a25cd03-c03f-4bf0-b8c4-3e3756a367eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "32884f32-2fb8-4c67-ae6c-fd01c0f9bb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a455b6d-dacb-4871-b72f-866105f0f375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a98334-f3fc-49e7-8070-e1f3d21da913"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7977346e-9e90-4df7-bdab-aa2d33e187a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22893755-24e2-401f-a47a-796b4cc60ebc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04ec465-8870-4e0c-b13c-9fdde2379e8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fc22bce3-56b6-47d9-b559-a568de72c3e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "922b482e-dac2-4977-8d53-1e9c56883ba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303d3d3c-f4c2-4679-8e1e-3a8da80d81b3"
                    }
                  }
                ]
              },
              {
                "id": "81915302-2ce0-4ede-9d66-f5d7b5c26687",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c8d7f4e-a727-47e1-8bb2-cee4e3333fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c43a8813-7666-4ee9-8ecf-1b76a4fd90c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94f8a0d7-1057-421d-857c-0d4e7ac046f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1a5055f-bc68-4948-b0ad-d294f70bc2e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8fac714-e68a-493c-b8ab-c68b3628654e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2dfd878c-ce6f-4816-af22-59fb4e7ddf24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16f04cfc-916c-452a-a3fd-6525ec290dac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48475e7e-71e5-42a9-865a-26ba47803c6a"
            }
          }
        ]
      },
      {
        "id": "448ea997-477b-4cd3-b215-a11d584b95d1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4f3156b4-b574-412d-998e-58fa312f71e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a29b4e4-1df3-49e3-81d0-9fdc40303b43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e44ddbe-fa2d-4d54-82b7-3b8bb7d90088",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4bd285-6593-4f12-91d0-1ee730c9b835",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d5705a2-5e96-424f-8c78-f3ac962fa2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6d2a47-7b92-454f-a5af-571714bf1b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe6bc31-4df8-4070-9b26-64416d6069d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140141b1-1f79-4421-ac6f-598d8b819617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77d252a4-4a72-4399-ad9e-997497e10d25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e115269e-ddab-47bb-bfec-c407527ddf65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cec7822c-6e35-4111-a730-ff095069a247"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4faef59-989a-43e3-8790-8e73998f2574",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0bf61f19-e93e-474e-ae71-f9ea7d618a62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58911c56-9cb4-4aaa-9452-cb0e017df077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9567745b-ec10-4e6d-bcfd-8d1763bff956"
            }
          }
        ]
      },
      {
        "id": "ab606a8b-a2d9-4a97-942d-0259b08ceea8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3ff97d9b-249b-491f-875e-8153e8dd4e6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28af77ff-9d05-4306-81fd-6e02aca7eb07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cca791b7-9a2e-474b-8136-38a644c6980b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b821804f-b871-4bbe-be66-bf54f45c1104",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb7795e2-7e12-469b-ac4b-ad8bfe04aece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50dfbc7-7ddc-40d1-a2f8-a459e37d78cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c271d9b8-ab1f-4cdc-800a-47b5ce0afdb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41fa959-edc4-4fa5-9bb4-6d47897819cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8adbce9a-4193-42ed-bc01-85156cbe19a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f7f00ca-4af9-4996-98dd-094e40f97a8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63e2a54f-50da-492a-a39e-e4dc1c4c66d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77a0b58-98e4-473e-b3e2-6b3a399d9fad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d84cf56-c8e1-4cfe-9f99-573287274872"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5774b342-6f84-4557-9f0d-42036968c348",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9edcacf-31f8-4d48-8226-62eeff57b648"
            }
          }
        ]
      },
      {
        "id": "fa9e101d-a1a7-42ce-808c-56e91fc94659",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d48ca3f3-991c-44c7-a1c3-9e1f3447e938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a70c045-225a-4c49-abc8-e083ba7c2f8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3dcb3dc-03c3-418a-a6b7-d705980e25c1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85377190-1f11-44b0-b11c-5ebf91f6d1d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1978a667-a13a-4d31-a13d-b8f0cd6c65e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d055f16-0178-448d-8f9c-82c0a5885918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6643c5b3-7a5b-47d6-b9bb-1bfcfdcb3463"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2e66f18-e2f9-49be-8de5-b70b7a9879b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3cdce9d-c878-43d7-afac-23902e55d354"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "245a2ced-0464-4ba0-9950-900247582f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9710ad3e-12fa-42a2-8c5f-08400ffe0046"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cef3d43-0d17-493e-844c-21a74dc2fbb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85624ed4-ab40-4e20-871a-99d01f85748b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51ebbbe3-97f9-4360-95da-5c01f1185767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18d9ed3f-2b3e-4d7c-a84d-d2ab64a2430d"
            }
          }
        ]
      },
      {
        "id": "aac6e95f-ade9-4dda-a0e4-0805753330e6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0d6fb41-376f-4a5e-a1ca-aa70c416d2a1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a467b60-3350-43b3-9c5a-6ba8c3f61e5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d76deca1-4377-4a8b-8a1c-be24313ffdfb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef1d47b4-031e-4721-b898-468d10bfbaca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95c4c3d8-f65f-43d6-bcc0-87f0ad6c7803",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.05263157894737,
      "responseMin": 21,
      "responseMax": 5787,
      "responseSd": 444.3442091186577,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701391152121,
      "completed": 1701391199070
    },
    "executions": [
      {
        "id": "c4e6568e-3426-4721-8929-b059c39725cd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d080aa01-921a-4d60-ba73-aca2e6e7d33b",
          "httpRequestId": "34761f47-968b-486c-9305-5640eb55db36"
        },
        "item": {
          "id": "c4e6568e-3426-4721-8929-b059c39725cd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "72b57812-bd10-4777-a4d2-87d5f2f85ebb",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "1008eb38-65e6-4798-9a11-fcf4b92fc536",
        "cursor": {
          "ref": "845b217f-8ee0-4cf8-9260-a1ab82024580",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dbbf3620-7d21-4f30-9b35-0412e401319b"
        },
        "item": {
          "id": "1008eb38-65e6-4798-9a11-fcf4b92fc536",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "af3fd23c-8fbc-4a17-9cd3-dd70dfb1a5f0",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "1dcfe5db-3851-4713-ad8d-56c076a2cbe3",
        "cursor": {
          "ref": "4aea1e18-99a6-444b-b799-2890592697a2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "61595afb-cd00-4a49-9544-11853b6f5126"
        },
        "item": {
          "id": "1dcfe5db-3851-4713-ad8d-56c076a2cbe3",
          "name": "did_json"
        },
        "response": {
          "id": "2522e5c4-3d6b-4d64-aabc-31a19af71987",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf97d1-906d-4460-8ef1-cd6d6841eb7d",
        "cursor": {
          "ref": "234c34db-f130-4414-93f1-7c3a0d994fc9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9660c6fa-d19e-450b-9041-fdfce51640d4"
        },
        "item": {
          "id": "22cf97d1-906d-4460-8ef1-cd6d6841eb7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "568e74f6-cc5d-4fe9-9f9a-9b2610e31339",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1040,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf97d1-906d-4460-8ef1-cd6d6841eb7d",
        "cursor": {
          "ref": "234c34db-f130-4414-93f1-7c3a0d994fc9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9660c6fa-d19e-450b-9041-fdfce51640d4"
        },
        "item": {
          "id": "22cf97d1-906d-4460-8ef1-cd6d6841eb7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "568e74f6-cc5d-4fe9-9f9a-9b2610e31339",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1040,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ef8aad-17a3-4808-ae4b-f2579c5bf021",
        "cursor": {
          "ref": "c2de250c-3938-4b6b-ab66-7d68d0e0efc6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2c19a217-d960-4999-8ce0-7aef95c33a6d"
        },
        "item": {
          "id": "79ef8aad-17a3-4808-ae4b-f2579c5bf021",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eaaaa79d-2a94-44cc-a01f-6ff39f55f024",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfd1c63-8f2e-4c38-ac0d-b982ce5bac1e",
        "cursor": {
          "ref": "0e21340c-2392-4118-8e97-6b4f3967d7b2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "67d06e9d-7569-45e4-b144-7a8dd6e136c1"
        },
        "item": {
          "id": "ddfd1c63-8f2e-4c38-ac0d-b982ce5bac1e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cad8accb-e95e-48dc-8888-773a38f258c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2109f4-ea84-4c0b-b4c6-9eb321e91e3d",
        "cursor": {
          "ref": "bb02b097-00f6-4c2b-8a8a-13114e5cee10",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eff5ab10-0102-427b-bad0-303baaaf9c6e"
        },
        "item": {
          "id": "5f2109f4-ea84-4c0b-b4c6-9eb321e91e3d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8fa56a69-de31-4c41-8e9c-82f46cceb8ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2721576-ef4d-4e6a-939f-446d0964ef29",
        "cursor": {
          "ref": "ba123280-86c9-4706-82c1-8ce389280129",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ef28e9e0-9e3a-4a09-8f7f-1873cd19e277"
        },
        "item": {
          "id": "d2721576-ef4d-4e6a-939f-446d0964ef29",
          "name": "identifiers"
        },
        "response": {
          "id": "1c57a78b-6fa6-4fc4-95fa-4e75559bc585",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcfc006-5b83-482d-b74a-ef2de9b7f0f4",
        "cursor": {
          "ref": "39320135-9862-4ed3-8bd3-8f9480594a2a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "90fdc25d-81d8-4bde-ba00-ad53ab11fbbc"
        },
        "item": {
          "id": "9dcfc006-5b83-482d-b74a-ef2de9b7f0f4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d574e4f-a095-4c1c-b4aa-227765075bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c59cd19-716f-4c60-83b8-380e4e8bcbde",
        "cursor": {
          "ref": "d4b30b6b-7506-4f77-91cb-4c433468970f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6706ee0d-0ddd-497a-ac48-7db332c1b48b"
        },
        "item": {
          "id": "2c59cd19-716f-4c60-83b8-380e4e8bcbde",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "799d879c-7129-4864-b427-38379ab5df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0418d277-90ea-4be3-9728-4a605ed2e620",
        "cursor": {
          "ref": "bdeb5308-00ac-4137-bb4e-765cfefd384b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "16bcdb38-d411-4457-8a1a-42fc0952d9b2"
        },
        "item": {
          "id": "0418d277-90ea-4be3-9728-4a605ed2e620",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "68d9ec0d-e6c1-40b4-b20c-ca284f011755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f76d5b7-5a11-4bda-958b-caab3dc18903",
        "cursor": {
          "ref": "1d344196-b772-468f-b26c-083cc00079d4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "20dd6120-5bd5-4dd0-9cab-6a9005e1143d"
        },
        "item": {
          "id": "6f76d5b7-5a11-4bda-958b-caab3dc18903",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d8b80735-a75b-4374-bb5a-85c555d4cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3052438-7647-410b-a498-bbd4fd9f453f",
        "cursor": {
          "ref": "6727e1a6-f78d-4f99-adbd-62953211bbf9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "84945841-f852-44a8-af21-e6a198f7dd4e"
        },
        "item": {
          "id": "c3052438-7647-410b-a498-bbd4fd9f453f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f53efb29-0f89-45c1-a686-045f4fc9f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b59e25e-c49c-4cbc-b1d0-07f504d3e352",
        "cursor": {
          "ref": "38c4feaa-d71f-4a67-aa46-50f0b6ccb250",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "327d07b8-d05d-4f0f-a25d-06cbed0670ad"
        },
        "item": {
          "id": "0b59e25e-c49c-4cbc-b1d0-07f504d3e352",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "86037585-7e47-43bc-b63c-5d3f43446631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851db30-808b-49e1-b549-2cd42c5f1e72",
        "cursor": {
          "ref": "07429f89-0bbd-4cda-a061-132585da3fbb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "85fcec67-c246-4671-9157-0259fe04a4d5"
        },
        "item": {
          "id": "f851db30-808b-49e1-b549-2cd42c5f1e72",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d3766bc9-208b-4178-8a56-ee189a7c4771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d218898-ce0c-410c-a2d5-0c8abc8758d1",
        "cursor": {
          "ref": "96bcabb5-16a9-4155-bcd2-74076779b0d6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5d05512b-12f4-4c05-adb3-22f4c61c6c91"
        },
        "item": {
          "id": "7d218898-ce0c-410c-a2d5-0c8abc8758d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "697d13ea-85f1-4028-9777-97df3a363c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed53e51-bfd0-4ce9-944e-0c32b51ba57c",
        "cursor": {
          "ref": "805d3fa0-ef9f-4a88-a937-8cdb93914751",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "499169b7-f457-4173-a05a-561caa69d29d"
        },
        "item": {
          "id": "9ed53e51-bfd0-4ce9-944e-0c32b51ba57c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "78617696-4ea4-4fcf-bbbc-f3abb197b286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3b8e5f-2181-44cf-b63d-0f92eaf60ef0",
        "cursor": {
          "ref": "9b81dcdd-6ca3-4b17-8173-199026f24475",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "db2b73a6-d892-4c29-9a8b-d738127dd599"
        },
        "item": {
          "id": "be3b8e5f-2181-44cf-b63d-0f92eaf60ef0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6875131c-9af3-4159-a784-e6221e46e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404e65c5-1a83-4f0a-bdf7-699809c2a8b9",
        "cursor": {
          "ref": "7d61a387-762a-4a00-9522-bacc8d89c1e3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c3a76b16-17bf-441c-87b8-9dda0d9aacdb"
        },
        "item": {
          "id": "404e65c5-1a83-4f0a-bdf7-699809c2a8b9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "52794fd8-f276-4a72-99de-b0383dc77e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71945d0-0f3c-4a3f-bee9-53a12f175cf5",
        "cursor": {
          "ref": "6bc178db-e389-4db0-975a-46c21beea5ba",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "59c38928-9e3d-43ae-80e9-256ac9b5e28b"
        },
        "item": {
          "id": "e71945d0-0f3c-4a3f-bee9-53a12f175cf5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "09bb5de1-d5d7-43a5-8930-ebf31395c379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0816dc9-7f72-4efa-ae2e-5762d13d6269",
        "cursor": {
          "ref": "c551a25e-0112-4640-bd6e-5e49ede06795",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aeb2724f-80ba-4c5d-8a1a-12b9fbd36d85"
        },
        "item": {
          "id": "f0816dc9-7f72-4efa-ae2e-5762d13d6269",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "16a5479f-e2f7-47ca-bc04-db92db70307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fa2656-6c69-4e8a-8227-7eee54095308",
        "cursor": {
          "ref": "180cc2c4-43fa-440e-bfe5-bac3c625a4eb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "41dbd3c6-1c3a-4d0d-8fb5-6ac24c554231"
        },
        "item": {
          "id": "43fa2656-6c69-4e8a-8227-7eee54095308",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1c971ffd-b292-4c08-9b8f-86033b186eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35efbdc-ce7c-4ce6-b293-843b5462484a",
        "cursor": {
          "ref": "07a4bd1f-b127-43ef-834e-d46f4ceb8f1d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "86f3a456-0617-4a13-8226-15b6fff135c0"
        },
        "item": {
          "id": "d35efbdc-ce7c-4ce6-b293-843b5462484a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "938ff922-70db-4d76-9417-75b45712ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2daea0e-c1e6-43e5-9938-12475c2777ed",
        "cursor": {
          "ref": "f53f8519-1c97-4091-86b4-37eeec5d96a1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "973f4cd2-a2fd-431f-a2e6-7699fa63a7c8"
        },
        "item": {
          "id": "e2daea0e-c1e6-43e5-9938-12475c2777ed",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f4684ea8-0858-4b9c-b865-2a0d71533fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92d6eab-0a60-49c8-a8b7-02de8f721652",
        "cursor": {
          "ref": "b5d7a257-8139-466f-a2b5-5e53363f9c0a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2071858e-27d9-4e6e-befc-fd0f4adb3302"
        },
        "item": {
          "id": "a92d6eab-0a60-49c8-a8b7-02de8f721652",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5fda368a-8762-4534-ba11-5456567f4783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b158f422-a6e2-4c34-81fd-697be43dd478",
        "cursor": {
          "ref": "fe776967-35a5-43ab-8396-ffa7f91e72ba",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "292b0526-b6b0-4af5-9c7b-5b67cc297723"
        },
        "item": {
          "id": "b158f422-a6e2-4c34-81fd-697be43dd478",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f9dfc2a4-9eb0-4afe-b101-a6cb9096f6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96b866f-db91-4e5a-bcf7-74c5ed86f115",
        "cursor": {
          "ref": "4fed7d12-ae09-4297-8606-2ca8daafb1df",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "22454912-98c2-43af-9568-07da90ad78e3"
        },
        "item": {
          "id": "f96b866f-db91-4e5a-bcf7-74c5ed86f115",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9c2c384d-e12b-4caa-b04b-fcbb8bcde277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d84470-26f8-4187-ae55-dea843e551e3",
        "cursor": {
          "ref": "9a4ad661-c4aa-441c-8722-e834e1d72d79",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4ca561b5-95b6-4b33-9311-d760c25bd6c6"
        },
        "item": {
          "id": "b8d84470-26f8-4187-ae55-dea843e551e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e90f827-75b9-4fe4-b790-9834939c4e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9a70dd-a72f-4765-9fea-f7854d9323a2",
        "cursor": {
          "ref": "6615a6c4-f089-4c36-9338-7ee64f423eed",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "132daaef-7423-4bee-ac72-6b06eccf7267"
        },
        "item": {
          "id": "2f9a70dd-a72f-4765-9fea-f7854d9323a2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "855a6ecd-1138-4168-8e4a-7a5f1c6efb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f3ec81-3d46-4371-aa54-f302fc5d5851",
        "cursor": {
          "ref": "cf7cbcc4-9a15-4c77-b0e4-eb2e291b172e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cc60c9a1-6a06-4223-8f4a-e4d6e374cfce"
        },
        "item": {
          "id": "66f3ec81-3d46-4371-aa54-f302fc5d5851",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "26fa00f2-d6df-4383-88ce-8d45431bb189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e7ca1-99ff-4ea7-b76c-18e8dee15c71",
        "cursor": {
          "ref": "4b300072-a953-4971-9f22-a349323108ee",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "700d24ca-4f56-4aa2-a55d-f236fb165167"
        },
        "item": {
          "id": "638e7ca1-99ff-4ea7-b76c-18e8dee15c71",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "54d2554e-a5d1-4595-b9d9-812127433e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489bb072-732c-4cb6-80d6-5e10acf50b6b",
        "cursor": {
          "ref": "0186a44f-23ce-4ee2-958a-73bdc44561e5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51c168ad-fdd7-4b40-b3b1-9218a30d44d0"
        },
        "item": {
          "id": "489bb072-732c-4cb6-80d6-5e10acf50b6b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "86387388-2e71-4f87-80af-fe072d302b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ee1d4a-6f9c-4676-b968-a2e542abe901",
        "cursor": {
          "ref": "e580dd16-95f4-4371-b232-05d9f11feba4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b513a35a-27c1-4da0-95c2-2268c30bc318"
        },
        "item": {
          "id": "16ee1d4a-6f9c-4676-b968-a2e542abe901",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ec23ac12-0da1-46f4-a9b4-13eab3a34e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cac84e-92b3-4aa9-abec-f0db0edfd176",
        "cursor": {
          "ref": "5683a5bc-8177-47ce-a928-f2bfee918d66",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bb701832-32ab-4b57-9bde-36eac97bead1"
        },
        "item": {
          "id": "b5cac84e-92b3-4aa9-abec-f0db0edfd176",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29347e15-dec0-4303-9900-4d649d10369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a6b31-c2d6-4082-b16d-4cb9a718109f",
        "cursor": {
          "ref": "ee7c56a1-2f3f-43e0-85a4-2941a58b09b2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8939fdfc-5c92-4eeb-9ea9-347a9b13a8da"
        },
        "item": {
          "id": "6a6a6b31-c2d6-4082-b16d-4cb9a718109f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f8148dfe-8f45-46bf-9202-069c3bb426be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2b57ff-2364-4ffa-b4a7-6245a83bee58",
        "cursor": {
          "ref": "e68afba3-1d59-4a55-9155-03f6f4bc6901",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40edc82a-9ee1-45ee-8909-442c85c79117"
        },
        "item": {
          "id": "2c2b57ff-2364-4ffa-b4a7-6245a83bee58",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4e9169a5-e5d2-49a2-ab2c-fdf5c58a1da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ea444b-82f4-4128-bbd4-c43fc0c0903a",
        "cursor": {
          "ref": "a1f146c7-f4d9-4d9e-845f-becfa84eab38",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "89caad3f-6481-4648-9e67-d9400f1adc21"
        },
        "item": {
          "id": "63ea444b-82f4-4128-bbd4-c43fc0c0903a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bb7dfdd9-d98f-45bb-b725-e6ae8ba2b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9437c4a7-8384-45c4-8d1d-e76e6cde87c8",
        "cursor": {
          "ref": "a641c294-1613-45cf-bef6-8860d9dcd3c9",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "506a337b-5edd-4eaa-8903-f75cb1d165f9"
        },
        "item": {
          "id": "9437c4a7-8384-45c4-8d1d-e76e6cde87c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8924ec34-40b3-4ee1-b69e-39195a7925eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d297d646-d5f6-465c-9213-e872581c10bc",
        "cursor": {
          "ref": "18784f16-f53b-46f2-95cf-8a6b479bf4f2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7201f9bb-a2d9-4d84-ab4a-f56f5c789934"
        },
        "item": {
          "id": "d297d646-d5f6-465c-9213-e872581c10bc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "70188156-4124-4a85-a0c9-ecf4d920d3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc3f40d-e40a-4cc4-bdae-1e2d0bec5454",
        "cursor": {
          "ref": "c7086423-89a3-40c9-a2bb-4a3a509b1161",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cb636bb8-2aa2-414c-b4ba-91615cc2636a"
        },
        "item": {
          "id": "bfc3f40d-e40a-4cc4-bdae-1e2d0bec5454",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3171b17-bba5-49e4-a4f5-b72c3412bbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e0d413-ab23-4c4c-ae49-7e26f0570070",
        "cursor": {
          "ref": "7d365ea7-3ecd-471e-9004-6332b7e33b61",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "664a9459-bf9a-42a6-8f02-89797d95c203"
        },
        "item": {
          "id": "f5e0d413-ab23-4c4c-ae49-7e26f0570070",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a0e40168-423c-4e3c-acf4-06b559b65aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996f02a8-f4e5-4bc6-8e42-9bfbfd1f8a12",
        "cursor": {
          "ref": "63d65709-0c46-449b-ae9e-49d7f0667d38",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b0576b5-c87f-4617-9ea2-cc529322540a"
        },
        "item": {
          "id": "996f02a8-f4e5-4bc6-8e42-9bfbfd1f8a12",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa29fbaa-0393-4aa1-a2f8-b93ec0f7d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24169e4-aee9-4ab9-8dc9-b723b0c05858",
        "cursor": {
          "ref": "3702470e-48f5-469d-9174-dfdca7dbed1b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "09485196-1ea8-4d28-a01b-c55edbf5cb71"
        },
        "item": {
          "id": "c24169e4-aee9-4ab9-8dc9-b723b0c05858",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "689064ac-0c21-4117-8681-f165577d64a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0624af3-aee1-4232-bc91-0b82367abe8d",
        "cursor": {
          "ref": "06e796ef-9032-41da-9648-d2760de4cdf3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "44f3c53e-24f2-45a5-a9cb-7ec4eecb6243"
        },
        "item": {
          "id": "f0624af3-aee1-4232-bc91-0b82367abe8d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ce89f615-9077-40b3-ab1a-4ce895a53b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaccdf57-3acc-449b-ad05-5be1829fa1e4",
        "cursor": {
          "ref": "bd4f50d9-6c34-4b2f-b2c3-3866601a452e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a705fd0f-9fb6-49e2-bdc0-cd2ccce67865"
        },
        "item": {
          "id": "aaccdf57-3acc-449b-ad05-5be1829fa1e4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e8659aa4-957d-468f-84ec-278a27dc4273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4186a451-ce46-4191-826f-130fd912d1e0",
        "cursor": {
          "ref": "e701e3b6-3da9-44c5-b025-23fe32cb6fb4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2d538a1-9b08-4c1d-a420-58a778f5277a"
        },
        "item": {
          "id": "4186a451-ce46-4191-826f-130fd912d1e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0ffb882b-75d4-4854-85da-48fd3f506f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f5fac-2c18-472f-adb6-351bbb2c6e61",
        "cursor": {
          "ref": "44ae3f1c-d98a-4420-a1bb-f701ade36c87",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56409865-0b3b-4fd7-868b-ae17a2d1cd29"
        },
        "item": {
          "id": "d36f5fac-2c18-472f-adb6-351bbb2c6e61",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "da6791eb-75fe-48be-ac63-580b445c4f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de35bd04-8729-4ce0-94d4-646671f6ddc3",
        "cursor": {
          "ref": "c03a4877-4805-4fdc-92d1-04e91c728d44",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e747eab9-a80a-4413-9908-7c31050effdc"
        },
        "item": {
          "id": "de35bd04-8729-4ce0-94d4-646671f6ddc3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "25c90c3f-d7a7-4a9e-807a-0af02d341f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7a99e4-6ee7-4b1c-9e2c-e930beb82e40",
        "cursor": {
          "ref": "5760bbf1-8298-4fc5-818a-c95440e42211",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "02ae8607-d6e6-48e7-8643-bcaaa09efa35"
        },
        "item": {
          "id": "2b7a99e4-6ee7-4b1c-9e2c-e930beb82e40",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9cf46e16-ae1a-439b-9a72-7dff66f4f9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c630990-8525-4e0d-94a1-e46a33acf90b",
        "cursor": {
          "ref": "6ae30e07-a4ba-4fc2-acf2-1e8cff6fe6cd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "035b4c32-0749-4e0e-bb24-f48df1bc423f"
        },
        "item": {
          "id": "1c630990-8525-4e0d-94a1-e46a33acf90b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7b043ebf-81ae-4c67-86a0-7971210bff44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab11b47-a7ea-4a79-bab9-d14f2f68463b",
        "cursor": {
          "ref": "4bdfc2a8-f143-4c8b-9fe4-6d0d7a543ccc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d51ee3b1-66e0-439d-8ca2-175a962b32a4"
        },
        "item": {
          "id": "7ab11b47-a7ea-4a79-bab9-d14f2f68463b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "104047c4-4025-400d-ae57-d7052b5d8c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514e0385-f5b1-4e25-80f9-37d310b84748",
        "cursor": {
          "ref": "5dc23025-7ddf-41f6-abf6-c4a48ea94565",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0a6b8ab-2d2d-4258-8d68-211b2d9959a4"
        },
        "item": {
          "id": "514e0385-f5b1-4e25-80f9-37d310b84748",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6856996-676f-4c08-a086-2c3498484c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491daf50-e77f-40d3-83b9-1704cb145072",
        "cursor": {
          "ref": "09461a0b-3b75-43d8-bf2a-7ad3a42533a9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b3a36eb1-260a-44c9-94a5-b2d82db71be0"
        },
        "item": {
          "id": "491daf50-e77f-40d3-83b9-1704cb145072",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2e7965c5-94f5-4611-9f79-1a8053bafeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf92af9e-593e-42a1-beb7-eca5442a2252",
        "cursor": {
          "ref": "dee5625f-8b44-42d9-a4b7-6da9eef9ded5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a9aa09fc-94e5-4c7e-8354-486fc74e8d03"
        },
        "item": {
          "id": "cf92af9e-593e-42a1-beb7-eca5442a2252",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e081bfbe-fa8c-45a1-94d1-e78e2d27f7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18a37c3-19e5-42e5-b8a0-f45340727c78",
        "cursor": {
          "ref": "7a7beb72-2eed-420d-be1f-56430d9b15da",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eef13b24-d51e-4006-91e4-3a96139f08ff"
        },
        "item": {
          "id": "e18a37c3-19e5-42e5-b8a0-f45340727c78",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "324683fb-0229-4529-b06b-e953552c77bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f77deb-053a-4b7c-903c-de5a2d715346",
        "cursor": {
          "ref": "1a2c2bcc-b0d0-44db-952d-87f823a1a63f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e73b58c5-5d7e-4c77-9c0a-4666c90dc036"
        },
        "item": {
          "id": "a1f77deb-053a-4b7c-903c-de5a2d715346",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dfaa1c9c-8c2b-4f23-b293-07819438ef8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d97f87-2e9f-45a7-8d42-e0baa6d94db1",
        "cursor": {
          "ref": "d23b0977-044e-40ed-9f9a-c69acd5ce31e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "33053364-49b1-486b-814b-bdc2baad8195"
        },
        "item": {
          "id": "83d97f87-2e9f-45a7-8d42-e0baa6d94db1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4d014140-4ea9-4d53-9b0a-23db30177cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2762aa4-f448-4bc2-a4dd-0cc735e06acc",
        "cursor": {
          "ref": "a00ff8e7-9388-4434-ae0f-b7c0d52093d2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e2301eb4-b6a6-417c-9516-245f4da1e57b"
        },
        "item": {
          "id": "a2762aa4-f448-4bc2-a4dd-0cc735e06acc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b63a357-2ded-4b22-a455-9468027eaab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dae51f-89e4-4406-8b54-028b63120f3b",
        "cursor": {
          "ref": "b2b7fb9b-09b2-42e0-9ee0-d1ea4ae8c2a0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "46b6180f-30c3-4ee1-90a6-e3e0c7b97a6c"
        },
        "item": {
          "id": "98dae51f-89e4-4406-8b54-028b63120f3b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4a468f2-d35a-4984-b0e7-5a53f4704688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b0c6dd-aab3-4eae-8647-0e17a26b08db",
        "cursor": {
          "ref": "b98b9f46-7595-4eda-98ac-0960177d3db3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "997aca98-6399-4c8e-a756-1a5f76c164ef"
        },
        "item": {
          "id": "35b0c6dd-aab3-4eae-8647-0e17a26b08db",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "43e04ac3-7276-41e6-aee6-ed11804406fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d60010-2997-4c9b-9d4f-282bdddc0791",
        "cursor": {
          "ref": "d5ee0a9e-e28b-4f5f-8f2d-d550d5aa1af2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d8366fb0-8257-4b97-ba78-b850018b2734"
        },
        "item": {
          "id": "72d60010-2997-4c9b-9d4f-282bdddc0791",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2bc9dff4-6273-4436-bc12-fecf7b8b2335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b57819-5922-4ef4-b5d2-ebc5c1c2b670",
        "cursor": {
          "ref": "a569232e-c0d7-4ad1-82ec-58af85aa2a86",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73e1cdba-bf3f-4c8d-ad14-bae68edd145a"
        },
        "item": {
          "id": "58b57819-5922-4ef4-b5d2-ebc5c1c2b670",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c5933dc0-7355-45f7-973f-d21b774b0144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8adc68b-ebb1-4b49-b498-a8b76d1290a5",
        "cursor": {
          "ref": "9880ce2a-3f67-4940-bbeb-861e7c26e76b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af7947d1-e06e-45c7-9cde-e4b8cf93b04b"
        },
        "item": {
          "id": "f8adc68b-ebb1-4b49-b498-a8b76d1290a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "782124f9-ae88-4da2-b397-8629409f62e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38032833-93e6-4221-92d2-a321649b3164",
        "cursor": {
          "ref": "03d75ac2-b111-4776-a82c-a202940773a4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "27ba759e-0598-4f26-85b3-2b915fa1de9a"
        },
        "item": {
          "id": "38032833-93e6-4221-92d2-a321649b3164",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7a3644c9-6274-472c-8df9-453866348656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9635ebda-f661-44a6-a70d-a728e2357eb4",
        "cursor": {
          "ref": "9fc5db37-db6b-4f9c-a66f-ede9483e885e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "04a1bb07-0ab9-46e2-9289-3aad2793a073"
        },
        "item": {
          "id": "9635ebda-f661-44a6-a70d-a728e2357eb4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c1dafb19-6b8c-41c7-99ae-382416b79bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3d63a-c2fc-4b7e-9fd6-ffe979f655f7",
        "cursor": {
          "ref": "4c6f1573-cbdf-4903-bb89-99bacc2ac111",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "caeee398-79a1-437c-9f20-b6ab5767fa79"
        },
        "item": {
          "id": "19d3d63a-c2fc-4b7e-9fd6-ffe979f655f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2762008b-8caf-4e41-81b0-51f24dc7c622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62986833-601b-4f7c-9317-631cf1ce4035",
        "cursor": {
          "ref": "c97c6a7d-fcb7-4f73-836b-9aa3641d4b77",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a35485a1-fcbf-446e-8792-380d283f7b9e"
        },
        "item": {
          "id": "62986833-601b-4f7c-9317-631cf1ce4035",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "63dc80ff-bbe3-40a1-9a70-75145a353ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dea963f-406c-44a5-8b65-0cc74282dc97",
        "cursor": {
          "ref": "d63582e3-4cf5-4ee5-a917-7cd2c802f7a4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "93b094c6-b1a7-4068-b41d-624da90c0308"
        },
        "item": {
          "id": "0dea963f-406c-44a5-8b65-0cc74282dc97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50fa1988-ea97-46b8-9f3d-0643f31f673c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3505c6aa-1d97-41a3-8609-0c81751595b5",
        "cursor": {
          "ref": "1d1b68fb-6524-4bf3-aee4-932f9522b134",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e125495c-19bf-4ff6-ada6-d023d1a805fb"
        },
        "item": {
          "id": "3505c6aa-1d97-41a3-8609-0c81751595b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fcf58616-235d-4bb9-9172-67b2ad9e9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf81664-af42-4b8d-8a79-b776d866a461",
        "cursor": {
          "ref": "d4c9df2b-f6a8-4122-8632-4930be4851ed",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "768ab33c-d2a5-45f1-8a04-e38ec2750ed1"
        },
        "item": {
          "id": "5cf81664-af42-4b8d-8a79-b776d866a461",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e4137996-c702-40ed-8e3d-87a4c6b457ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c90ee-ee72-4bb2-8ad8-7705454f875c",
        "cursor": {
          "ref": "ed3ad9c1-e2ba-45b0-8cf2-4eb22a0b4bef",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "453c9be4-594a-4b06-84e7-f72633a392a2"
        },
        "item": {
          "id": "422c90ee-ee72-4bb2-8ad8-7705454f875c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7e236616-8663-4343-8f48-0ef43e8f6c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53b9724-7935-4765-9540-2e81f582f4fe",
        "cursor": {
          "ref": "d5987756-b057-43d5-a745-1dfdfea13b29",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61cfd914-def5-4aa5-949a-8ad1c172ddbf"
        },
        "item": {
          "id": "b53b9724-7935-4765-9540-2e81f582f4fe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa313030-9a95-4c0d-baae-83fb1d477dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d3b990-e27b-4ca0-9d9b-61d4ef648c16",
        "cursor": {
          "ref": "4d45af9a-01f5-49f5-8d09-5450dc252703",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1c281a5f-b976-413a-9e5f-8056af81cdbd"
        },
        "item": {
          "id": "45d3b990-e27b-4ca0-9d9b-61d4ef648c16",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42aaa61d-c64d-4ff8-92af-d342e363e369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb84be3-4dab-4d3e-9ef3-5c5844092722",
        "cursor": {
          "ref": "76331405-fbe4-46ac-8922-1b73de07f241",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a9764fb8-4497-4931-a3b4-793188026992"
        },
        "item": {
          "id": "7eb84be3-4dab-4d3e-9ef3-5c5844092722",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "57e7c80f-6d61-4e8b-b2f5-48c8e53a79d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad47fe0-f06a-4012-a735-3d0b8ec719bd",
        "cursor": {
          "ref": "9bb9ccb4-211d-4e2d-b398-5843248a500b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d98ddd55-4bc8-4731-9bd7-51d6130fdca8"
        },
        "item": {
          "id": "3ad47fe0-f06a-4012-a735-3d0b8ec719bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "23604dc1-7001-4d2a-8eed-ddcc861b07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecab7f1-c433-4644-add3-b77ac638256c",
        "cursor": {
          "ref": "d41ae6df-c0b4-4fc5-80e9-8bebd2376f73",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "306caa63-15aa-48dd-8b11-3c319ea69612"
        },
        "item": {
          "id": "3ecab7f1-c433-4644-add3-b77ac638256c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f56ec0d3-5b6d-4e74-b788-417ca558d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a313c467-c98e-4468-bb61-9246c681a9fb",
        "cursor": {
          "ref": "70039242-d202-43fd-a3b7-f97d1817c217",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1289ea38-01e3-41d2-945f-582f30a73bd9"
        },
        "item": {
          "id": "a313c467-c98e-4468-bb61-9246c681a9fb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8094c953-68c7-46c0-827e-547fff3f2b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb56949-d894-4aa8-bdc1-1eb6b4577d62",
        "cursor": {
          "ref": "50a5a111-6fbc-4895-90b9-c6e0b56ae55b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a963d423-6ca7-4eec-a46c-fd58d50786df"
        },
        "item": {
          "id": "4fb56949-d894-4aa8-bdc1-1eb6b4577d62",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3018d824-8e48-4e72-aa89-764b3ffdd650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e84e24-3b18-444f-bb78-fb4f63bc0950",
        "cursor": {
          "ref": "4779052e-5064-493f-abe0-1318717ad584",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0da51346-2a31-489c-a3a1-422997a29e52"
        },
        "item": {
          "id": "23e84e24-3b18-444f-bb78-fb4f63bc0950",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "64ca3817-9981-422b-9831-4dd0a9633ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3477cdc8-a2cd-4c2c-aafb-51c593dd7c92",
        "cursor": {
          "ref": "8ed697e7-e729-4bec-bfb0-a05aa2ff1936",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fb5ae237-a5f6-428a-a03b-a4b645e9974c"
        },
        "item": {
          "id": "3477cdc8-a2cd-4c2c-aafb-51c593dd7c92",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dd3875c1-f1ab-4a2d-8314-e9ccdd1244f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee6eee0-2b1d-428b-bb4b-54a42de2bf02",
        "cursor": {
          "ref": "5ac3a28e-8979-44a9-8c99-adf074d6348b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bff8ad48-cdf8-4124-9d33-df1ed345c461"
        },
        "item": {
          "id": "cee6eee0-2b1d-428b-bb4b-54a42de2bf02",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8a805d62-3438-43d5-95dc-33cde2607628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81425ba-2f8c-4178-8514-555316f2b95f",
        "cursor": {
          "ref": "3a808261-67fd-4977-9c1f-072d4bbe7174",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f73466fd-9b2d-4f8a-be25-625977257ad5"
        },
        "item": {
          "id": "a81425ba-2f8c-4178-8514-555316f2b95f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9163a4b1-ce1d-42a0-a134-509b888cf709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b441b7b2-d1b2-4d0c-83ea-034ad7d37c65",
        "cursor": {
          "ref": "2017d14d-016e-4d13-9906-19ec025920e6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a5bdc50-6d33-401b-9047-a7d596ff13ac"
        },
        "item": {
          "id": "b441b7b2-d1b2-4d0c-83ea-034ad7d37c65",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "79840352-a8d8-4e90-95f5-9af5cb9ee888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1875fbb1-f870-43a2-8612-a7ebfe35ecf9",
        "cursor": {
          "ref": "051f9265-feb3-410e-b6c4-b513963091b8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "feb5f649-c758-445b-8477-a9155b627aa6"
        },
        "item": {
          "id": "1875fbb1-f870-43a2-8612-a7ebfe35ecf9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a4625c38-7a31-479f-9f9f-acd3b77a862f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1cb4bf-9312-4f9f-bbb1-f7413162cf6d",
        "cursor": {
          "ref": "32689a0e-b2c2-4197-b621-c061b42b7b94",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9e67401a-6d25-4d35-89e9-1e494f22a177"
        },
        "item": {
          "id": "9d1cb4bf-9312-4f9f-bbb1-f7413162cf6d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "49e33b76-1be1-41ff-94be-121b11f1b4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a25450-90bd-4873-854d-96089c0f0758",
        "cursor": {
          "ref": "8ecb78a4-75b9-47dc-9067-ab5e5f08de95",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6da048e9-bf99-485f-b300-1a17ea7c32fe"
        },
        "item": {
          "id": "56a25450-90bd-4873-854d-96089c0f0758",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "090f7229-f0e5-4929-b4ca-7b2ce533527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5889d56-2b8f-481e-8fa4-e6c4f7193423",
        "cursor": {
          "ref": "2871fc13-0f0a-4d3b-a9a0-8a152a7a60b7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "708781cf-4474-4fda-b05b-6f619df44005"
        },
        "item": {
          "id": "f5889d56-2b8f-481e-8fa4-e6c4f7193423",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fe999009-a77b-4231-8bcf-6a2ea55e8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a7fe9-a6d7-4476-8010-92c9109a6289",
        "cursor": {
          "ref": "5bfb50bb-c0ac-4f54-8979-356ec057aad9",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dca19d19-b29b-431f-93df-6f58252ca095"
        },
        "item": {
          "id": "733a7fe9-a6d7-4476-8010-92c9109a6289",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "98f358e8-ecf7-488f-b216-a67564e1e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767f8f6a-5be6-43db-a30a-c4dbd97a7012",
        "cursor": {
          "ref": "5203b799-36d9-4c22-91a3-e47e17f35ceb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "03d057de-d247-48fb-b65b-e1ac5aa27db4"
        },
        "item": {
          "id": "767f8f6a-5be6-43db-a30a-c4dbd97a7012",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0a47369f-d5dc-4b66-9b70-f7b4655d3196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55831ca6-caad-4e4c-b1fd-5344a5a77335",
        "cursor": {
          "ref": "50730907-2b90-412c-bc20-1db7d74ec87f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae40d95f-c58a-4cbf-8ad7-9cc7db30bbe7"
        },
        "item": {
          "id": "55831ca6-caad-4e4c-b1fd-5344a5a77335",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "555be01b-cfb7-461f-8afa-1260179eb845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5824188f-8571-4dd6-b49c-9a275347aafd",
        "cursor": {
          "ref": "17e94b2d-0d94-4e75-94c3-2deb2ad163ec",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "769bd88e-cff2-4180-b4ff-ccefb704827c"
        },
        "item": {
          "id": "5824188f-8571-4dd6-b49c-9a275347aafd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c391d222-4457-4677-a463-a09c9a32f8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113496fd-1d45-41e2-a0f7-02bb9cc48ec1",
        "cursor": {
          "ref": "a2235869-5516-4d51-bdbb-9b7ee030fc2e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a5ba8795-51ea-4e8a-b739-52be459ea963"
        },
        "item": {
          "id": "113496fd-1d45-41e2-a0f7-02bb9cc48ec1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52bda7a3-c81b-43d2-814e-ec5068ebe8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab0af13-0ede-48ff-a3dd-28513ce10c65",
        "cursor": {
          "ref": "2f551ef9-aa37-4779-a3f0-acfb911fd77b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9f3291e8-67e6-4ee0-86ae-64707d385cac"
        },
        "item": {
          "id": "8ab0af13-0ede-48ff-a3dd-28513ce10c65",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f92bf3a7-c246-4177-8e32-79dd93df7d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f1efe-b711-48ee-9aa8-f74665b6d418",
        "cursor": {
          "ref": "75bd53ca-ee2b-44a4-8662-d06ec07bf3ca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0fc644f9-c5f3-4894-9152-338b74db6aa4"
        },
        "item": {
          "id": "0a1f1efe-b711-48ee-9aa8-f74665b6d418",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "531753bc-e12d-44f3-a4cc-85bf4ad48879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfa2863-fa76-4cd5-b31f-03cc926937b0",
        "cursor": {
          "ref": "2b7f5658-9f51-45c3-95b3-9e4f6a9f9055",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bb64b569-7595-49fa-9813-a552c8bc17db"
        },
        "item": {
          "id": "ebfa2863-fa76-4cd5-b31f-03cc926937b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5ce04ecb-573b-4b3e-a6fd-b9e46d8f9289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d4a36-39b8-4ab6-a7df-5275c6c6a63e",
        "cursor": {
          "ref": "25b1b89f-f52f-4a8b-8928-806cb46c1688",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d51955ea-2671-4697-b7ab-cd21ecf44495"
        },
        "item": {
          "id": "716d4a36-39b8-4ab6-a7df-5275c6c6a63e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e581e9a2-2501-4b88-8be9-1e451e269fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1905ac09-12af-4b4b-99dd-c112c8a50899",
        "cursor": {
          "ref": "357b2b7d-ea88-4e85-8210-1f1bc56f653b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c752e6cb-a054-42d4-af55-83ce780c01e7"
        },
        "item": {
          "id": "1905ac09-12af-4b4b-99dd-c112c8a50899",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bf41a36a-3478-49b4-96d6-b9df7e057c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6216ee-fb61-48c6-8be8-06b5ea55080c",
        "cursor": {
          "ref": "00eb279b-62b0-4c72-b635-cb3ff52aca67",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c98f0a4a-d72d-4393-861f-99cdbe32760d"
        },
        "item": {
          "id": "3a6216ee-fb61-48c6-8be8-06b5ea55080c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b7d89f2c-56e1-47b7-9859-90139fba0eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6524c88e-cc54-40ec-8de4-c3b899c0ceda",
        "cursor": {
          "ref": "66443acf-cf88-4c03-a5c5-fc7b52abbcb2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2b20fd64-63e8-4d3c-9461-0733468e7bfb"
        },
        "item": {
          "id": "6524c88e-cc54-40ec-8de4-c3b899c0ceda",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "020daced-2e5d-4747-801b-dddb564eda9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0a0bdd-1f71-4fb8-b9ed-a3b346427896",
        "cursor": {
          "ref": "194953df-f9f7-4403-b712-e968ab7f2faf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e0828aeb-f70d-4763-b179-06aa570d1ece"
        },
        "item": {
          "id": "0e0a0bdd-1f71-4fb8-b9ed-a3b346427896",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2b417ee3-9de2-48f8-bff4-658e95dbbd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1f28aa-7463-4269-95b7-e0d4b2db3453",
        "cursor": {
          "ref": "4ef01b34-2fba-43d2-ab02-544ec92dbc21",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8bdc4884-6668-4a29-91a7-24890ab96329"
        },
        "item": {
          "id": "7f1f28aa-7463-4269-95b7-e0d4b2db3453",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cfeff8e5-1ae8-4f18-8491-a2f68cd05835",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1059f6-7943-4595-8015-ae580654c9b8",
        "cursor": {
          "ref": "386da0ac-3bec-4b36-bcd9-8ef3c6deba54",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0c086c1-efb0-4bd1-8408-e6d946914334"
        },
        "item": {
          "id": "3a1059f6-7943-4595-8015-ae580654c9b8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b6328cef-09dd-454a-819b-f0ec37b345d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1eb6d898-ba7a-471f-ace4-44b2b6f6a12a",
        "cursor": {
          "ref": "6dadcb72-e9b0-4646-9e2e-8f2f44e4bb60",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f1d06378-05e3-4f58-9d78-a84440fb4940"
        },
        "item": {
          "id": "1eb6d898-ba7a-471f-ace4-44b2b6f6a12a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "adfbc98d-f847-4db5-ab70-9d0f0e2cb13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ce7f3a12-2ea5-49d8-9569-97a06fe00390",
        "cursor": {
          "ref": "c73c0ede-0c3c-46b5-b8f6-a894aa878aae",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c98d577b-389a-4833-9832-55b022eb7984"
        },
        "item": {
          "id": "ce7f3a12-2ea5-49d8-9569-97a06fe00390",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "96244133-e21a-4a0b-8764-06a8cef96480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7d159480-ebde-4dab-94f4-b374f3920ace",
        "cursor": {
          "ref": "56821841-3162-44a6-8b82-7ac667080a1e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3d101667-2911-49b8-a390-f38dc4347213"
        },
        "item": {
          "id": "7d159480-ebde-4dab-94f4-b374f3920ace",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1a5b938-d71d-4e85-84e0-70a72c7e59e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9c762a88-b373-446f-a21f-a957849dada5",
        "cursor": {
          "ref": "e45f7a5f-6f1a-4453-897b-fc0c8f7ee13e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2c738474-be8a-4663-8d43-a2511de5d3c3"
        },
        "item": {
          "id": "9c762a88-b373-446f-a21f-a957849dada5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "45c2e8c6-3af9-43d9-b952-6e793f3acedc",
          "status": "Created",
          "code": 201,
          "responseTime": 5787,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48391dd-1047-4a7d-a9e7-a2b606352b65",
        "cursor": {
          "ref": "ac8c7117-ca0b-4059-ae48-3694fb6c4ba0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8654e566-f101-4478-9208-885f9a232cbe"
        },
        "item": {
          "id": "a48391dd-1047-4a7d-a9e7-a2b606352b65",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "825baa29-f279-4d47-ac98-0ef8f23ff894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "88f25915-fcb9-427c-bff8-05a0ce29b750",
        "cursor": {
          "ref": "da7a61d7-b7a3-4a1c-917b-256a15dded9d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a0c423bb-a798-43c7-aef8-1feefde58602"
        },
        "item": {
          "id": "88f25915-fcb9-427c-bff8-05a0ce29b750",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e82baf5f-b1fd-48b7-a1e3-2076e31a0407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e15d0529-6d27-4f3f-9bda-825e70f610f8",
        "cursor": {
          "ref": "c1e471d4-ba6d-40a7-9fc9-f2935c0542ea",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "79a150d3-0db4-4bc1-956b-b393b2fc1f49"
        },
        "item": {
          "id": "e15d0529-6d27-4f3f-9bda-825e70f610f8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16c29201-4b37-4540-a2e1-70c7102464e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674138e9-7a93-4f7a-a530-c74dff39c355",
        "cursor": {
          "ref": "8d4cec72-a766-4d9a-8006-ef02cd0f4711",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "78f9145f-e778-4155-8d5a-1b8d056b8ffb"
        },
        "item": {
          "id": "674138e9-7a93-4f7a-a530-c74dff39c355",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "59f81eb8-62f6-455f-a785-e6f4db36ee9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaaf520-f912-4d34-8131-926dc4585e3e",
        "cursor": {
          "ref": "c057eb6f-ddf9-40ca-9eb5-eebc3b172918",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "632f7060-3c17-42bb-82fa-618934ba4bb7"
        },
        "item": {
          "id": "afaaf520-f912-4d34-8131-926dc4585e3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4f3302a-b959-4cda-bda0-75ee2dee2e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80447436-324c-4c3d-8683-01462c6d846e",
        "cursor": {
          "ref": "07737cfc-77db-4b6b-9f81-24488fa630be",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2bcc1ec8-5c94-4599-99db-f7582ea3394f"
        },
        "item": {
          "id": "80447436-324c-4c3d-8683-01462c6d846e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6b6214f-4741-4515-9ab1-f8f83ee5dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a453c2-f3ba-456e-932b-271658948a38",
        "cursor": {
          "ref": "49158d29-76df-4f8b-a87f-36b216eeb12c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d700505d-8492-45f6-8c6b-e523475f106c"
        },
        "item": {
          "id": "88a453c2-f3ba-456e-932b-271658948a38",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f69de45-b82d-4840-b5af-dbc4f51f68c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd75033-779b-419b-b2c6-0226efd4cb0c",
        "cursor": {
          "ref": "04cd5c29-6fcd-4332-bb0b-3ede7c80cf5a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "96923db5-13f4-4582-9b56-1c54afe56c54"
        },
        "item": {
          "id": "1dd75033-779b-419b-b2c6-0226efd4cb0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7a7f6bd-fa13-4e72-8e0d-1a32f2f6079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9e80aa-7745-43b3-9962-3c00b78cb6ff",
        "cursor": {
          "ref": "05d6ee84-4bfe-476a-b09a-47227791bb56",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9ae6c5ba-e558-4d10-b972-fe0e13f4fbd2"
        },
        "item": {
          "id": "3d9e80aa-7745-43b3-9962-3c00b78cb6ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7eb802aa-22cb-4913-8e0f-343e3bb3c955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318cdc21-1f8d-4d5f-9308-c60ee41818f8",
        "cursor": {
          "ref": "7323336f-7389-4235-92eb-e0054f60897c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fa07550a-10ea-4d95-b34f-f766bd81e944"
        },
        "item": {
          "id": "318cdc21-1f8d-4d5f-9308-c60ee41818f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "36200842-f3af-46b3-af18-ea8ce6f7cbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14c1fee-fbe6-4d9b-8cfb-8028f4d8f29a",
        "cursor": {
          "ref": "5275c943-d3a4-4a79-ad8e-c65f1a6ceca6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "10d7f0f7-1cc5-4912-b69f-554a4996a7ed"
        },
        "item": {
          "id": "b14c1fee-fbe6-4d9b-8cfb-8028f4d8f29a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2d1dbf35-6c3a-4756-92fc-a64c28bc748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefeac38-aca5-4e39-8542-93a6f7d3c4ed",
        "cursor": {
          "ref": "c1583958-44e0-4a2c-90d3-506bc0003b19",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "de5cd0a2-f106-40fb-93f3-2f1a278843ca"
        },
        "item": {
          "id": "aefeac38-aca5-4e39-8542-93a6f7d3c4ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "479d3a71-8402-4814-ada4-34fe7067ec8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0030343-ccca-49e4-b56a-684a3b811a4f",
        "cursor": {
          "ref": "0332b38c-c4d0-4ee2-a66a-d8973b23416c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7439b940-b67d-495e-84fb-d623455969eb"
        },
        "item": {
          "id": "c0030343-ccca-49e4-b56a-684a3b811a4f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0b917842-0aad-4192-9371-e49feae79ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488dbce4-6760-4580-a41e-68102dd94fa6",
        "cursor": {
          "ref": "af216eeb-8c3e-46f6-80de-fbdf44544202",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cfced298-cbdc-431f-a754-87f6f0712d79"
        },
        "item": {
          "id": "488dbce4-6760-4580-a41e-68102dd94fa6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e1bc863-00f4-4399-8222-403b865e3a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b515b9-7f6a-4fe5-9040-6a0a272fee04",
        "cursor": {
          "ref": "5b10b64a-26ec-4cf3-b3b9-3cc6ff649769",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b6da8424-4c0a-4e36-941b-be95bebca72d"
        },
        "item": {
          "id": "d3b515b9-7f6a-4fe5-9040-6a0a272fee04",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ee38de1-5498-4e83-a50c-c409e7db88b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b4d3b0-0fcc-4828-961d-bc7d4751edda",
        "cursor": {
          "ref": "72fd7c66-6da9-4ee9-a747-78c2a3c39ea3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "72cd3b69-09c1-4626-9326-389af35bac2c"
        },
        "item": {
          "id": "a1b4d3b0-0fcc-4828-961d-bc7d4751edda",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "44a22ce5-7a43-4dc4-aac2-42f913314355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb6760-6c23-439c-b3b5-7e9c2b2f331e",
        "cursor": {
          "ref": "a1f7ae44-49ba-4afc-b23b-c2a1c4f59bd4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8302dfba-fa9c-40c1-a4b5-0c14ac761653"
        },
        "item": {
          "id": "95eb6760-6c23-439c-b3b5-7e9c2b2f331e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e713d035-6d75-49cf-b71f-25003c3e39ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff02c5-6b4c-4c44-b992-531e92a32d04",
        "cursor": {
          "ref": "4f2e0056-00a9-4903-a710-6696f141b8d1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ecd2581c-c821-419f-9507-e8399dc94a67"
        },
        "item": {
          "id": "62ff02c5-6b4c-4c44-b992-531e92a32d04",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "141595d9-12b4-4937-9dd3-ba1aa9e487d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721d9f3-ecff-4dd7-9c93-cb8489836fdb",
        "cursor": {
          "ref": "bb7f7eac-326b-40e2-b80a-8b918deb770b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "984d02e2-0e56-4cfe-ba4f-d823f4dddc26"
        },
        "item": {
          "id": "a721d9f3-ecff-4dd7-9c93-cb8489836fdb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87b9f7ed-83c4-42ad-b75c-2566bc510abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfc181e-d4a7-47c1-8cdb-6fc20a44dfa8",
        "cursor": {
          "ref": "68b2e543-bfa5-4445-b033-c31877635aa6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fe0c3ad7-d575-4491-b6ef-26169bc3a0ac"
        },
        "item": {
          "id": "8cfc181e-d4a7-47c1-8cdb-6fc20a44dfa8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e7fe9f41-7413-4ca0-a825-3133827d944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e81d06-b23e-46bc-b2dd-c488c51a05c2",
        "cursor": {
          "ref": "ba984f6d-97c7-43bf-8fd0-14d9e22c9f91",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "12d04624-41f2-4c40-b51a-93aae6d702e6"
        },
        "item": {
          "id": "78e81d06-b23e-46bc-b2dd-c488c51a05c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3bedb5e-8e59-4590-8c82-ae2a2c2e87ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99943e1b-3256-4486-9b1b-4c5561dae915",
        "cursor": {
          "ref": "4d397828-de10-46af-b771-83608655a79a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f474d019-2756-4e2b-97ca-8f660d7e730b"
        },
        "item": {
          "id": "99943e1b-3256-4486-9b1b-4c5561dae915",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2096910-c360-4c2f-a779-cab2c974bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016072e0-fda0-46f4-9fea-8041bd0eedcf",
        "cursor": {
          "ref": "2ecf583b-168b-4c69-8c1b-a8368446938e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "466cfaed-dd45-4e78-9feb-29371f7f3c5b"
        },
        "item": {
          "id": "016072e0-fda0-46f4-9fea-8041bd0eedcf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "188b9671-ea15-4d0e-8a4d-0086f68f5c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a67361e-93d5-4c21-94ba-b58ca7585bc7",
        "cursor": {
          "ref": "000b95c9-5123-49c1-b699-40feab125425",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c1ce6f70-aeb9-4d48-8d5f-56ada4bfc3a6"
        },
        "item": {
          "id": "3a67361e-93d5-4c21-94ba-b58ca7585bc7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0393381-2f9a-4984-a03d-3cc718ce8103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80e6ac9-53a6-4437-bb57-d4d3e01ad871",
        "cursor": {
          "ref": "5b59f37f-8d44-43df-bc4b-cdcfb59f991a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5364d31b-400d-42ea-95d8-f3a840eb895d"
        },
        "item": {
          "id": "a80e6ac9-53a6-4437-bb57-d4d3e01ad871",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dcdf1ff5-d8b6-4709-8dcc-fcbba2f8ed4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94569a6-2e0b-44ac-8eb0-2b7be28cb7cf",
        "cursor": {
          "ref": "ebe2a3f1-c65a-4fda-beaf-bd9d2cc69c08",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b56c0756-c333-4ed1-876f-f16249005e4c"
        },
        "item": {
          "id": "c94569a6-2e0b-44ac-8eb0-2b7be28cb7cf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c2fd452d-f0ed-48af-a0fe-555515ea84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa1082f-c4af-46f7-9c72-5aad6f376730",
        "cursor": {
          "ref": "bc7bd11b-d94f-463d-9ff0-299ecf95e8a3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "950f119f-0f36-4eb9-ac16-3f9a70440194"
        },
        "item": {
          "id": "2fa1082f-c4af-46f7-9c72-5aad6f376730",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "843fdb62-c132-45bb-a7ca-1181bed6f69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38bfcdd-2ed5-4330-adec-cefbb96098e1",
        "cursor": {
          "ref": "3dbaa4b6-b33a-4443-919f-bbf8883abc36",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4316d6de-11c7-432b-895f-13f4fd101b7f"
        },
        "item": {
          "id": "a38bfcdd-2ed5-4330-adec-cefbb96098e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8d78692-9a68-4d9a-8a42-d5d414d5998e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8aef5c-ece9-4e8e-b568-c9a914f7f42a",
        "cursor": {
          "ref": "e35f649d-205e-4806-b2aa-eb2799a348b9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a4b60ccd-cc76-4a1c-8625-52a5b346f765"
        },
        "item": {
          "id": "aa8aef5c-ece9-4e8e-b568-c9a914f7f42a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83dd08b3-f167-46b4-8128-b12951f66762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1772c-e83c-42e1-9467-cb37dbf83798",
        "cursor": {
          "ref": "ecae136c-7f37-4422-ba59-cd4d0131f243",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fb826628-aa0d-48a4-b9c5-c1c3657b0d99"
        },
        "item": {
          "id": "20a1772c-e83c-42e1-9467-cb37dbf83798",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "78a4e231-1213-41f0-a371-2bc063035673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a703b5a2-87c5-493f-89b7-3d0f6d052c70",
        "cursor": {
          "ref": "6d682866-9b63-446e-9004-dcefa2ef7250",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a6805916-639c-47b8-be15-bb40d7fbf25c"
        },
        "item": {
          "id": "a703b5a2-87c5-493f-89b7-3d0f6d052c70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e90a137-0adb-4e80-8045-d6546fe11fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a060f0-4146-45ec-b559-51705f224435",
        "cursor": {
          "ref": "6191bd3c-9ca3-42fa-95f8-ae027eaeaa0d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0401e33-b8cf-44c7-a2f4-6732a7b2242a"
        },
        "item": {
          "id": "c6a060f0-4146-45ec-b559-51705f224435",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "39a65022-3cc8-4c73-acbe-af43954e97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03886037-5789-49d4-a195-2bde746c09da",
        "cursor": {
          "ref": "2aaa34b6-2eb3-42ec-b80f-509766f98574",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b3d79e69-c373-4a6a-8d20-df4180358f7b"
        },
        "item": {
          "id": "03886037-5789-49d4-a195-2bde746c09da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c090ba6-8b07-41d5-95fb-af9a95b66579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14205c8b-9d7e-42c2-93e1-6f25027dde78",
        "cursor": {
          "ref": "4d0cd18d-2c5b-4b5a-9eb5-451322455165",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "08f63268-12e2-4927-8edc-a6a8755e3665"
        },
        "item": {
          "id": "14205c8b-9d7e-42c2-93e1-6f25027dde78",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5521d507-c917-417d-a440-13b322344c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ac7ed9-4969-486b-a25b-2dc3aa22dfbe",
        "cursor": {
          "ref": "94787519-bf27-4b58-ba3f-ec148269aea8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "564733f6-5299-4ba8-bec6-2f43077126c5"
        },
        "item": {
          "id": "75ac7ed9-4969-486b-a25b-2dc3aa22dfbe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4065a8fb-ad4a-4186-9c24-19c80d842f7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59987cc7-b52a-4c84-be0e-3d38e1b0d1eb",
        "cursor": {
          "ref": "3846a59a-bc87-4e31-b5bd-ab706f8a8271",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1aefa9d8-3deb-4a1a-8461-1d800991529a"
        },
        "item": {
          "id": "59987cc7-b52a-4c84-be0e-3d38e1b0d1eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e26647c-54c3-4413-8e05-39d6ff0c647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58080198-8eb8-4fb9-a926-5a8feb9ae9bc",
        "cursor": {
          "ref": "b2201ebe-27bb-4679-a886-720d5699fceb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fb3d1e8b-2d4a-424c-8512-dcecb052112d"
        },
        "item": {
          "id": "58080198-8eb8-4fb9-a926-5a8feb9ae9bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8d879c2-a74f-4fbf-b12b-ea8d2e08e8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea49881d-fbc7-4389-90c0-5dd10849a196",
        "cursor": {
          "ref": "4db36f24-1fd3-41d3-bb7e-c8ad32f55a6b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ecbadc56-2e5e-4aee-93b2-a3a2a2427d4a"
        },
        "item": {
          "id": "ea49881d-fbc7-4389-90c0-5dd10849a196",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f28013d7-25ad-4842-bf4b-fcfea46391b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c2933-b3e3-4e3d-ba25-e1096d20682f",
        "cursor": {
          "ref": "86f47686-3993-4c04-baaa-d02b6f4b41ce",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d8677f76-c156-497b-847d-7d6eba2056fa"
        },
        "item": {
          "id": "232c2933-b3e3-4e3d-ba25-e1096d20682f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bcb7a2a9-c251-430e-b2e0-dc0078896983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae508866-9ab2-4983-8b9a-dae086449c7b",
        "cursor": {
          "ref": "30651ad0-ce63-4d92-ae81-d622b3744444",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c66a9d9f-2058-4146-8457-30662cf9031c"
        },
        "item": {
          "id": "ae508866-9ab2-4983-8b9a-dae086449c7b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b41855d-f75f-44ed-87ec-7f2eca301a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2606b52-ac03-4b41-a9c0-159851b65c94",
        "cursor": {
          "ref": "b2265e4a-d46d-4bdb-930e-c87a8e013b0b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f17b8bef-6f35-46f0-9834-3b8d78ab7330"
        },
        "item": {
          "id": "d2606b52-ac03-4b41-a9c0-159851b65c94",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d92095d-543e-4c8f-879d-5c34eca96e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5118ba-37a4-4f47-ae55-385cd6573971",
        "cursor": {
          "ref": "0b189ed3-d9d8-41c7-8ed8-586d65277d27",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "907ebd69-85b2-41ef-bac0-3ad387de08d2"
        },
        "item": {
          "id": "ec5118ba-37a4-4f47-ae55-385cd6573971",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d911191f-0833-4108-8f47-923baf69862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab6dc6-59c2-4568-8ac0-940fbb909517",
        "cursor": {
          "ref": "8d00290b-8e25-421f-816c-f7d544a14935",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b090dfde-df27-4303-b8d3-b7d6ffc0c91e"
        },
        "item": {
          "id": "2bab6dc6-59c2-4568-8ac0-940fbb909517",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e7ab94e6-7f46-4eec-baa0-975a20bb4b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0ff6dc-7b73-41eb-8acd-89de47d55287",
        "cursor": {
          "ref": "249a3848-d221-4ea7-9894-dde92c649ff8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19a8ec89-eba2-49dc-8449-076f1bfcc6fe"
        },
        "item": {
          "id": "ce0ff6dc-7b73-41eb-8acd-89de47d55287",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48e5f362-4fae-40af-829a-3208911582ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da5be50-c2e1-488a-a417-ef3819f1c75b",
        "cursor": {
          "ref": "46a9d6fb-369e-49ec-a184-e50767f69717",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d6ef1f9-7f96-4331-bb33-6ae4549a9673"
        },
        "item": {
          "id": "8da5be50-c2e1-488a-a417-ef3819f1c75b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e1a17f41-ff0d-405e-ab29-67d8e6dafde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4170d5-2740-4f61-9156-7f5aa30e7027",
        "cursor": {
          "ref": "982ea350-2ab8-48af-b689-2150dd24e41c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1816a231-b376-4faf-9578-4adb089e77db"
        },
        "item": {
          "id": "6c4170d5-2740-4f61-9156-7f5aa30e7027",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74792d14-2a73-41ff-bb60-15c3c39d7227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f52bc59-694c-4972-99ca-97f235a4b606",
        "cursor": {
          "ref": "db5bf19f-73d8-4380-af58-8176defaf5e9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba64123c-4b26-4370-a89d-8b5d781050a0"
        },
        "item": {
          "id": "9f52bc59-694c-4972-99ca-97f235a4b606",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70ba48b8-bbbd-4c15-878d-6e85539c8ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0727f61a-621a-48ec-8d59-ecd0e5113194",
        "cursor": {
          "ref": "41f4e52e-bd66-4d6f-91fb-308b415759b5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b1e4dac1-74f4-4281-acc2-2239b84a88a8"
        },
        "item": {
          "id": "0727f61a-621a-48ec-8d59-ecd0e5113194",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c0f1c01-d204-4b0d-856f-1124f5cf5195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a490b36-d962-458f-a540-7387837675e3",
        "cursor": {
          "ref": "6871b38b-ac55-4804-912e-cd3af34050af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "27a3e634-3453-4d04-88c3-5739795a8b3b"
        },
        "item": {
          "id": "3a490b36-d962-458f-a540-7387837675e3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c7ae8e44-2a14-4441-a53c-b5178f676844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f94f5-cbc5-4a3e-96da-42890cd5453d",
        "cursor": {
          "ref": "79c09d0a-4a0c-4c69-8216-50eeac9431a7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "46956572-80b3-4db4-b815-b73faba5a027"
        },
        "item": {
          "id": "e03f94f5-cbc5-4a3e-96da-42890cd5453d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "14d7fabc-e3c8-4701-999a-1c41c1a48bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4726421b-9554-46bf-9083-0903e526ab46",
        "cursor": {
          "ref": "238b97f9-32e8-4b12-aec1-49c5dc6f7525",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc7ceb45-84d1-4946-90e9-a176b72f147d"
        },
        "item": {
          "id": "4726421b-9554-46bf-9083-0903e526ab46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5b03bd63-9003-4372-bce8-dfd0149c6f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b8fab-f6db-446d-9122-a83955196c27",
        "cursor": {
          "ref": "a360c9ee-aad9-4edb-94de-08d999ca9da1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f530885a-46d9-4491-9844-28ade175c0e7"
        },
        "item": {
          "id": "144b8fab-f6db-446d-9122-a83955196c27",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "121f0dda-4796-414e-97d7-34c3bc7b75fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba2d602-3bc3-4343-92d7-0a01233d872c",
        "cursor": {
          "ref": "d6dbee3f-64c6-46d1-bbbb-18503ec6e023",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0864086-29a0-4ef5-a212-7e7c2d51fe62"
        },
        "item": {
          "id": "5ba2d602-3bc3-4343-92d7-0a01233d872c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9c429fe2-5aa2-483b-b139-8a8417a78914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044486ae-259a-4eae-beb6-c507fc1ca139",
        "cursor": {
          "ref": "f9b0c05b-2439-43ec-be12-4734cb9877d7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8807f569-8058-4216-ab71-0eeed1a186af"
        },
        "item": {
          "id": "044486ae-259a-4eae-beb6-c507fc1ca139",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c68ba5bb-d974-41c3-852b-cad01c273a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3f0d08-f2b6-43f5-b2da-e651f106bfdb",
        "cursor": {
          "ref": "323da4e0-a345-4738-b155-cc1e21af2724",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4980b1e9-6673-4cf2-8547-3345cf5dc686"
        },
        "item": {
          "id": "2a3f0d08-f2b6-43f5-b2da-e651f106bfdb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f4548d1-1960-4260-bba6-b4bae2e2d720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb6f6c-87dd-46da-bece-12de869702e0",
        "cursor": {
          "ref": "6e175c92-a1b9-4a33-b049-af7d8c26444a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bf642452-f596-4907-bda7-68bbcc50a472"
        },
        "item": {
          "id": "a0eb6f6c-87dd-46da-bece-12de869702e0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad1c53ac-ebfe-4224-9fad-c8062d0d02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f075d9-4924-4a63-93d4-2b81f59279dc",
        "cursor": {
          "ref": "25d0a881-f127-4165-9a9d-9677ee279f7f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a86d8406-f13d-4ef2-b986-a4dfcf712c6f"
        },
        "item": {
          "id": "b1f075d9-4924-4a63-93d4-2b81f59279dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c82ffedb-d6a9-4064-b00e-45bbbee06e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8724e-e7a0-4665-ace7-15f1535c2115",
        "cursor": {
          "ref": "6460e7c1-d33c-49ad-a2db-37894a4f5c64",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f5d72a0a-a513-4996-93d1-9924a22fe0a3"
        },
        "item": {
          "id": "c8d8724e-e7a0-4665-ace7-15f1535c2115",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2c951ba-b683-41e8-a195-0a2195d6303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae20922-8fb3-494c-9387-1de167fc0e8d",
        "cursor": {
          "ref": "1e27958b-0060-4089-9101-31d88e0bf93f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "518bbdcc-6374-436b-9ea2-26e01b9de685"
        },
        "item": {
          "id": "2ae20922-8fb3-494c-9387-1de167fc0e8d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7f49024-db93-494a-98fa-952d7d98f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24eff6d2-9949-495d-87ce-bddb5ebd6f98",
        "cursor": {
          "ref": "84cb7a00-3ca2-408d-8ee8-7f6fd188b368",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "edffe568-b882-4dd5-b0ea-529fabe18821"
        },
        "item": {
          "id": "24eff6d2-9949-495d-87ce-bddb5ebd6f98",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1f0afb7f-b0b0-4a92-9515-1af7797a3b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3427dbd-2595-4a1f-83f3-c45b2a6bb66b",
        "cursor": {
          "ref": "00a0e4bf-aca7-465e-8d26-b0694d42c19e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fcbc8cd2-622c-4ca1-af0c-a17e46c451a2"
        },
        "item": {
          "id": "a3427dbd-2595-4a1f-83f3-c45b2a6bb66b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "73d9b108-4caf-499a-9821-2d97aa1c2f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a9b47-15aa-4776-ad31-fc989c77a931",
        "cursor": {
          "ref": "b2b7d3fc-fd91-4a93-a4dd-f39973ebb42b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0a37e4a3-80b1-4907-87b8-0d4569962cc2"
        },
        "item": {
          "id": "456a9b47-15aa-4776-ad31-fc989c77a931",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0a0885d4-3944-4965-bfcd-77a5c865fbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1314c-edb7-4cd4-9cc4-a94429e7d121",
        "cursor": {
          "ref": "701e52dc-4e24-49b9-a731-bdc90224a6f0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc35c069-4f88-4b5f-9ea8-bfdda7bb88fc"
        },
        "item": {
          "id": "dfe1314c-edb7-4cd4-9cc4-a94429e7d121",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "83e63152-9cc8-475d-83bc-f037128c846b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4db3ad3-734b-40e5-b483-db27fe668429",
        "cursor": {
          "ref": "c9e9f3ea-b850-4caa-8388-abb891eded55",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "69682f2c-ea6d-472d-84fc-39d317c29e1f"
        },
        "item": {
          "id": "e4db3ad3-734b-40e5-b483-db27fe668429",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "335f3c96-c651-449b-bccf-a99a857602f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db35e2f-5832-403b-b9bf-2fd781dd57a6",
        "cursor": {
          "ref": "c9493695-3175-4cb5-a719-71b7aeba7705",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1de94a0-44bc-43fb-95f4-1a673d21d0f2"
        },
        "item": {
          "id": "4db35e2f-5832-403b-b9bf-2fd781dd57a6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "29cd930f-675a-41dc-8b01-32da1f628d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1083d06f-3239-478d-9102-d286c0496931",
        "cursor": {
          "ref": "58a16655-0fb2-48e2-95e9-7fdd2fb5d440",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "19eb3741-400b-4d59-bc89-8719f1a89f19"
        },
        "item": {
          "id": "1083d06f-3239-478d-9102-d286c0496931",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "656a9af9-c8ea-46f2-8e5d-f34da4e2c755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a099a329-ad8e-4d00-9a7c-0c22a8db86c4",
        "cursor": {
          "ref": "7d446e3e-691d-4483-8f2d-b0ba25dc8f2b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "02a20e08-fa41-4e9b-aa43-a49860952131"
        },
        "item": {
          "id": "a099a329-ad8e-4d00-9a7c-0c22a8db86c4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fdec5528-80df-4619-aea3-5199499c6155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb41d325-ffaf-4414-b77d-514518b63bbd",
        "cursor": {
          "ref": "58b456a9-a453-4bbb-862a-d9521752c933",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d0518a6b-d3b2-4905-91e7-b9b54bd849e2"
        },
        "item": {
          "id": "fb41d325-ffaf-4414-b77d-514518b63bbd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a00a927a-7678-416a-b2c4-6149963b2b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63505227-377e-4c05-b1c2-d2bc44457baa",
        "cursor": {
          "ref": "bfb81f3e-118b-4fe9-86fe-c7edf4d01f2b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aa618fa2-f2c3-4470-b9c5-f07fae03f6cf"
        },
        "item": {
          "id": "63505227-377e-4c05-b1c2-d2bc44457baa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1387be8f-95f1-46b6-a7c7-11ba8adf89aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931744ab-72be-447b-ba84-18e80f33aa0c",
        "cursor": {
          "ref": "d7650c15-9e0c-4633-acec-0043e9856362",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6553dea6-5e48-4467-8a78-1d3a28a6db22"
        },
        "item": {
          "id": "931744ab-72be-447b-ba84-18e80f33aa0c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "736f56dd-ec64-4d76-be6c-45c6937392b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36379e5-b068-4531-9230-b04166c7352b",
        "cursor": {
          "ref": "c610a204-922e-47f8-bde9-0d862a76fa7d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dc3c627e-6a5a-4732-b907-22657d4986b4"
        },
        "item": {
          "id": "e36379e5-b068-4531-9230-b04166c7352b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ef65cceb-d293-4e0c-89fa-6b24b6d70c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e009344-50ef-4010-ab68-67300be240b8",
        "cursor": {
          "ref": "82b01df6-c58a-4609-b164-444719a56121",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4133afc2-f02d-483c-9869-b51a6349e4aa"
        },
        "item": {
          "id": "9e009344-50ef-4010-ab68-67300be240b8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d9f52284-b0c8-4b9f-969f-6b211a449b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd6001-8bad-4802-8f2f-8509477627e2",
        "cursor": {
          "ref": "e3a6f3bc-d1e9-4da5-ab7a-f67502b517b0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b588bed6-fb96-4f14-8be4-7f1d697a7c44"
        },
        "item": {
          "id": "59dd6001-8bad-4802-8f2f-8509477627e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9b67a80f-8afb-43c3-8726-134920a6af41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c88aa5-df8f-47fd-a282-4f98b77b2659",
        "cursor": {
          "ref": "0aaaa743-d287-4b08-96c7-8690b0641659",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "094c3864-f6ff-4af9-adf4-f07842d5a0df"
        },
        "item": {
          "id": "64c88aa5-df8f-47fd-a282-4f98b77b2659",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc8f0407-09a9-4110-aa14-ab855307faec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee70f143-94b9-4784-ae76-93f85767dff7",
        "cursor": {
          "ref": "6cea2bd5-ea2a-4fa1-af35-ac8f48255b7f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ac17d2c-f48b-4362-bbc8-d729966bce79"
        },
        "item": {
          "id": "ee70f143-94b9-4784-ae76-93f85767dff7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "173eeca8-ff99-46f7-af21-a9c21e8dd10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65a0ace-8a96-499b-8f5d-6d45c09b3e50",
        "cursor": {
          "ref": "4d58c20e-be0d-4ed6-b70d-60e3fba304cf",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "24e16224-b94e-42a0-a05e-283da77a26cc"
        },
        "item": {
          "id": "b65a0ace-8a96-499b-8f5d-6d45c09b3e50",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d632df95-245e-46a5-86f7-21013c960255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db6ff3b-92b2-4d9d-a383-5bb19c1f040d",
        "cursor": {
          "ref": "cb93d152-cc4a-43bf-b895-851c7f38bc56",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "635cfe44-bb01-4fd8-9ded-90905b01c1fe"
        },
        "item": {
          "id": "4db6ff3b-92b2-4d9d-a383-5bb19c1f040d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d29ef04e-7c99-4171-a772-70758a84b80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6e7566-4f72-421b-936d-5a9f2cbafee0",
        "cursor": {
          "ref": "5163a73e-b794-492d-9b9f-6a40025a7713",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da5da6b6-a4e1-4276-bef5-4a7339eb491b"
        },
        "item": {
          "id": "5c6e7566-4f72-421b-936d-5a9f2cbafee0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8a5d20c8-df25-4681-9746-de7553d6b3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28552c-17aa-42ac-9bd4-2d2b73959875",
        "cursor": {
          "ref": "fbd34d1e-d77a-4278-bf2e-7aaace66dd0d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "66bcc8c9-c527-41d2-8ce5-3fc1af3565b4"
        },
        "item": {
          "id": "ca28552c-17aa-42ac-9bd4-2d2b73959875",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d1c5dd3a-533e-4435-8f6d-27969ec057ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9812bd1a-8a58-4e94-ab1f-8ab74ff5d756",
        "cursor": {
          "ref": "8a8d71df-493f-47a0-857c-aab3231ee07b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d36767fd-2037-40f4-84da-3341ec710286"
        },
        "item": {
          "id": "9812bd1a-8a58-4e94-ab1f-8ab74ff5d756",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "019d30a0-4dd8-4479-9bf7-33a6d2f5bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1259c316-e74e-417c-a0f5-f04f1a84babb",
        "cursor": {
          "ref": "863c7d17-1598-4088-a85d-cec560f524a2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "81305f38-d260-4316-82d7-536d412c6c6b"
        },
        "item": {
          "id": "1259c316-e74e-417c-a0f5-f04f1a84babb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2396cc74-dd71-4993-a877-166a1fc94b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc8bf1-a638-4a20-8604-0d4dce79f59a",
        "cursor": {
          "ref": "e7a6a441-911f-434f-8bb9-78fd3c582a83",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "49af5dd8-a030-4224-bd50-c7a756318cc2"
        },
        "item": {
          "id": "b4dc8bf1-a638-4a20-8604-0d4dce79f59a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ed31bea7-3273-4c0d-8afe-ffadbf3dbe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f55f483-d986-4f9e-879d-f1c4e6a9083a",
        "cursor": {
          "ref": "e69ff8d2-d1f1-4cc8-a9db-ee719c42c66c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "793dc55f-e3e0-4db0-a806-5c6aa1e8367d"
        },
        "item": {
          "id": "5f55f483-d986-4f9e-879d-f1c4e6a9083a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ede553b8-959c-4663-944d-daff1bfbf03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9021a303-5082-4fa1-b106-11b2cbe6d005",
        "cursor": {
          "ref": "36257dc6-c0a7-4d30-bf91-62450c1aa0b4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1e47749-9424-46f2-a37c-ab019e51519d"
        },
        "item": {
          "id": "9021a303-5082-4fa1-b106-11b2cbe6d005",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7bc7da02-6578-4d7a-9387-7171ff396ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d684e861-6891-4d69-9bb5-ef56f1a938af",
        "cursor": {
          "ref": "9d57222b-4b21-4bf4-a5c8-70d9f7fe4b6e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5e3f1995-e757-4d05-9bb6-28461f407d82"
        },
        "item": {
          "id": "d684e861-6891-4d69-9bb5-ef56f1a938af",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d81312a7-3077-40e9-bde9-f9ac4b111f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26816c42-7fec-4d4e-b93c-89faeb8a3a75",
        "cursor": {
          "ref": "99a0afba-0b0e-4ecd-83f0-2e7f4fdba991",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ce002ef7-89b7-4f22-ae01-fa46a0b70d75"
        },
        "item": {
          "id": "26816c42-7fec-4d4e-b93c-89faeb8a3a75",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "63ad3c6f-fe89-46fc-9006-2662ca1c3e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6d393b-9688-4db9-b126-930c62cd30e0",
        "cursor": {
          "ref": "82b26da4-434c-4a7b-8666-ffe723251073",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8d099c69-99a2-4831-b875-3b61438cfd78"
        },
        "item": {
          "id": "1e6d393b-9688-4db9-b126-930c62cd30e0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fc11b046-7b89-4561-9306-d084d8f1a2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bb8316-bef5-4e1d-862b-6bb4e2311174",
        "cursor": {
          "ref": "cc2a0787-083c-49c7-9a90-311ac1c0f31e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ccf4965b-1963-407c-a2f8-96b66e0c7486"
        },
        "item": {
          "id": "40bb8316-bef5-4e1d-862b-6bb4e2311174",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f77fe17d-8dc0-4627-a9b0-e3a28828e048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fe824c-4b8a-40b6-87fc-b0bc0fa831b6",
        "cursor": {
          "ref": "a5dfdabf-5fe9-4ac3-acb1-de5f13987086",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "004bc497-6fd8-47b5-a92e-cf46599353cc"
        },
        "item": {
          "id": "87fe824c-4b8a-40b6-87fc-b0bc0fa831b6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "074dbba1-ce85-48be-bda1-5dc1e2649e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08995e47-922b-4ea1-8ca2-99f1a435a552",
        "cursor": {
          "ref": "00dd2022-a9f1-4465-a067-b30c272351e1",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "018e1737-3366-43e6-868d-fe5e7777cacc"
        },
        "item": {
          "id": "08995e47-922b-4ea1-8ca2-99f1a435a552",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6afa6a70-9094-4844-bf66-e62e55bfafcc",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "fb4ebd61-3fff-44fb-bc35-a07654be6a33",
        "cursor": {
          "ref": "31300ab6-8e36-45dd-935a-94e677f12e12",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0e30922c-f7a4-453e-943e-41b504d015ee"
        },
        "item": {
          "id": "fb4ebd61-3fff-44fb-bc35-a07654be6a33",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cded7ddc-2c95-47d8-b2b3-264a59877713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8a419e-3334-45af-8970-4a8833f108ec",
        "cursor": {
          "ref": "22993c49-64a9-496b-94f9-59e7d8c846fb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3fc46c3a-8a91-4ac8-81b1-2c28194679d2"
        },
        "item": {
          "id": "ed8a419e-3334-45af-8970-4a8833f108ec",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7381cf9-e459-4204-8c1e-738dc56bc797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfc575e-fd3d-4b2c-b19f-ec6986f95c6a",
        "cursor": {
          "ref": "3879033f-05b8-4984-bd26-dfe52e1f6155",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "30cc5a0d-b8e4-4667-a021-85d3ed9559c9"
        },
        "item": {
          "id": "7dfc575e-fd3d-4b2c-b19f-ec6986f95c6a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "267da018-08fd-4bf1-9d23-c479ec8014a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577b314d-78c4-463f-a73d-ad51e42439c8",
        "cursor": {
          "ref": "ed321dac-22f1-4bb3-842f-05b94f3975ed",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "02fad1b6-11c6-4632-862c-10f362cc0e79"
        },
        "item": {
          "id": "577b314d-78c4-463f-a73d-ad51e42439c8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "718ab8de-edbe-4398-8f60-22a6090c36aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa7310c-ae3f-4063-84e4-f1c71c22e112",
        "cursor": {
          "ref": "e110ec6a-c86f-44e2-8c3f-903cdec24db7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "54cf74fb-fbb0-4dc3-90ff-e2019a562327"
        },
        "item": {
          "id": "3fa7310c-ae3f-4063-84e4-f1c71c22e112",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5d458dba-2f07-4b89-a3d7-98384ba0193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc65c9ca-5427-4ebe-9974-2eb12edc8a58",
        "cursor": {
          "ref": "722daa8e-938b-4f0c-ae9f-936da3b58098",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "74a4c87b-eb4c-4bed-9293-a946caf11c17"
        },
        "item": {
          "id": "bc65c9ca-5427-4ebe-9974-2eb12edc8a58",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ddbe395c-5d43-43a6-83fd-a5356c45fa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd657ea-e92d-41e4-8ad5-93eb7a8b7860",
        "cursor": {
          "ref": "191f79f0-c48e-422b-984f-dc63b779df91",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "595e66c1-e955-45fb-b2e7-40e998d58865"
        },
        "item": {
          "id": "fcd657ea-e92d-41e4-8ad5-93eb7a8b7860",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d60df678-6ff7-46e0-90d3-2e963271ea34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c728810b-86f8-429b-a05e-bba1aee698b0",
        "cursor": {
          "ref": "d311eab7-1710-43ce-8070-58eeb340ed54",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d05f7939-2bfd-4131-9045-d3b8bc737d0a"
        },
        "item": {
          "id": "c728810b-86f8-429b-a05e-bba1aee698b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e81269cb-17eb-47b0-805f-0333357ba1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cecebcb-7ae5-4ea6-af37-8a86331beaf9",
        "cursor": {
          "ref": "dbe6a69f-c38f-4f7d-a210-64af8aeb7855",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b637a6ca-cee2-4a0a-beef-33dceb9772e0"
        },
        "item": {
          "id": "7cecebcb-7ae5-4ea6-af37-8a86331beaf9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e314569b-3519-461c-8930-d87dbf3544f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63adb662-4776-4005-a757-7bd3d822d4fb",
        "cursor": {
          "ref": "e16743a9-75f7-4e5d-8a50-a3f62129cfe6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "990a23f5-9910-4a8c-9425-0a145d7b475e"
        },
        "item": {
          "id": "63adb662-4776-4005-a757-7bd3d822d4fb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8ca5dc2f-dfb0-40e5-a50e-7b8657c4bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783e3ab5-154d-4071-81cb-7ee4d6b20fc8",
        "cursor": {
          "ref": "5f78df8d-183f-478f-927c-0459e555a191",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b9397d28-bf7f-4527-9422-4aef281fb844"
        },
        "item": {
          "id": "783e3ab5-154d-4071-81cb-7ee4d6b20fc8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "652737b1-38c7-4df8-a581-a4a74f31fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5b3d3b-bbe4-43dd-b72b-555ccfbce267",
        "cursor": {
          "ref": "f41c5f69-2c45-48be-9f64-822aaa965889",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "be4bf287-3ad9-4408-9c6e-30986ca1f8d3"
        },
        "item": {
          "id": "8c5b3d3b-bbe4-43dd-b72b-555ccfbce267",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "486e7d1b-dc50-4042-ba24-da575ba738b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986cbc38-d230-4138-a577-52290d236e19",
        "cursor": {
          "ref": "82b44df7-8a19-4550-915b-fbbd33b8ab7c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5db247d8-4132-4782-ad0d-3208d5c2376a"
        },
        "item": {
          "id": "986cbc38-d230-4138-a577-52290d236e19",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d97b15ed-2ff3-431c-9a6f-fca05875ee65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e826ab7-5b79-490c-9c76-042db6eb4859",
        "cursor": {
          "ref": "2aed475e-6912-4075-880c-9c963ef0b445",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fbd03b5-6fde-4ab9-94b4-fb93768903c4"
        },
        "item": {
          "id": "2e826ab7-5b79-490c-9c76-042db6eb4859",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "392710d0-cb8c-42c5-a5f3-e2c3929ab6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5624b6-547e-4f76-b59b-0d3deeb47f36",
        "cursor": {
          "ref": "2c24f5aa-030c-4908-b93e-f2506a84a38a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c42fbb7-d434-46c9-bd3d-d6420b77550e"
        },
        "item": {
          "id": "ca5624b6-547e-4f76-b59b-0d3deeb47f36",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d44a88cb-fb6a-434f-a430-ac401ca6341c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068122a1-1cf2-4aef-951d-7b56270e9d32",
        "cursor": {
          "ref": "e0a4af6c-7816-449a-83c9-f9876ca78730",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dbfc1bf6-5686-492c-a2de-2f670d759ead"
        },
        "item": {
          "id": "068122a1-1cf2-4aef-951d-7b56270e9d32",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f96e9025-a716-42a9-90de-e9d1002676ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64549b78-dc05-43a0-a46e-6f2768d8e68a",
        "cursor": {
          "ref": "4521e4e8-14ac-4924-b2cb-233794c5238e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3df622e3-4350-4c90-b775-218127027575"
        },
        "item": {
          "id": "64549b78-dc05-43a0-a46e-6f2768d8e68a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "65e77bb2-4ce4-4439-860e-c39c661421d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbfe7da-21a3-41f2-aefd-bcf2f18bf09e",
        "cursor": {
          "ref": "e443b480-67e7-483f-a71d-a20c14490af9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3406b232-c804-456b-a633-b340dad0a770"
        },
        "item": {
          "id": "afbfe7da-21a3-41f2-aefd-bcf2f18bf09e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a534c36d-a5c9-4524-bb1f-82f138929040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48ad69b-dd08-4396-bb89-1b5eac422450",
        "cursor": {
          "ref": "925d01a1-d577-4d08-9f82-bb7ca20fd300",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "13751bf6-c7ec-4b23-b5c5-3d286ff8125f"
        },
        "item": {
          "id": "f48ad69b-dd08-4396-bb89-1b5eac422450",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8dccc40c-aa90-41ed-98f7-7f52ce18d7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36abb274-0207-4adf-8783-71330a7943ed",
        "cursor": {
          "ref": "02f8e306-0ff9-46f7-b6be-cce9908f2873",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ca4bd4b-7464-4afa-99e3-60b4a4070c68"
        },
        "item": {
          "id": "36abb274-0207-4adf-8783-71330a7943ed",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "081d2366-0c67-488a-a5af-2078226d9d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49599c76-134e-483a-b338-8725ce505efd",
        "cursor": {
          "ref": "e623948f-6441-427a-840a-80d7a5e14279",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c467c95e-c0dc-4477-b528-218f96f41937"
        },
        "item": {
          "id": "49599c76-134e-483a-b338-8725ce505efd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e9e9c2c-277b-46fc-9e03-38171f6fb2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78cb279-8ca2-471c-b803-bfa817185a38",
        "cursor": {
          "ref": "eb82a856-75f8-44d6-8637-9a572889bc92",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "24681a19-d415-4f39-be11-b2209391fc9d"
        },
        "item": {
          "id": "f78cb279-8ca2-471c-b803-bfa817185a38",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "174fa695-f783-4d09-9b20-2ff28943fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a74ee3b-6532-4499-ab1e-8598d776491e",
        "cursor": {
          "ref": "aa9c5136-4013-49d2-b77f-266c9c8f6324",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "98e80550-1abf-4fbc-89d3-d4a017c9354d"
        },
        "item": {
          "id": "3a74ee3b-6532-4499-ab1e-8598d776491e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c9c0e33-7b85-4d60-866f-cb29885b88b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589ee923-85d1-40bb-b311-a64a1c777887",
        "cursor": {
          "ref": "18174d39-b280-4091-ae4f-f8ff53af800b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ca8bfb9b-5504-40f6-92ef-3159eadda988"
        },
        "item": {
          "id": "589ee923-85d1-40bb-b311-a64a1c777887",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6bb7adb9-1388-4a92-8f84-b068a1f34f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f3a56-e1a7-4b78-a39f-84e5cc0a3afc",
        "cursor": {
          "ref": "8e15cb17-2fd5-4282-9bd7-95d778df3d6a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "88b71965-9518-4d5b-8fd8-afb642a754a7"
        },
        "item": {
          "id": "a73f3a56-e1a7-4b78-a39f-84e5cc0a3afc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8ade682f-af69-4c9f-ac92-59a9a4c8c68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc6b02-1e44-4e9a-908b-1525cff98fac",
        "cursor": {
          "ref": "cb371da4-880d-4cb3-98dd-5b03ebe32f20",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a427371d-42a5-44b9-8b34-5bdfbb969ecd"
        },
        "item": {
          "id": "f9bc6b02-1e44-4e9a-908b-1525cff98fac",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "77670cb6-a710-4225-a418-764998f42cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e318e801-8fd1-4e15-8ddc-69feace3deed",
        "cursor": {
          "ref": "728dadd6-8efe-4c2c-86bf-70a0158157e1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd4f446f-0582-4486-ad3a-dbf87034afc7"
        },
        "item": {
          "id": "e318e801-8fd1-4e15-8ddc-69feace3deed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "33301c2a-643c-4afe-ade0-fbafb24392b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1132b5-fb11-4c2f-990f-9252496d71af",
        "cursor": {
          "ref": "33e33218-dd33-4854-9e3c-aa01f533c51e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98106906-d505-427e-9791-e663dcead2a8"
        },
        "item": {
          "id": "5c1132b5-fb11-4c2f-990f-9252496d71af",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8d89a87-c474-49a2-b53c-2c2b6243c255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a91f026-bd35-4080-a224-8fe05f408ad2",
        "cursor": {
          "ref": "3207cafe-324d-46f3-83f4-a883b26bc594",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1340c9bb-e5fd-4e86-929f-0d8f6c19cdd1"
        },
        "item": {
          "id": "9a91f026-bd35-4080-a224-8fe05f408ad2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40b42b20-c4d3-478d-8f80-4d8dac7741bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d9a22-8cbe-467d-978f-bc6ad2295556",
        "cursor": {
          "ref": "dc70fd76-a8cb-4ad3-bc76-58560eb3a95f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5d6f82c6-9135-4699-b476-50e18369152b"
        },
        "item": {
          "id": "026d9a22-8cbe-467d-978f-bc6ad2295556",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f1a8df0-04ca-4d90-b6f6-afaa31330818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491f6a6b-cf52-498f-bec0-4f3ca3334eb9",
        "cursor": {
          "ref": "adcb687d-d2a9-4824-8f2e-12f39a088a09",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f1d64490-3e7b-4665-8855-eb8c4b11ad5c"
        },
        "item": {
          "id": "491f6a6b-cf52-498f-bec0-4f3ca3334eb9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0a3db0d0-cc9b-4cb5-ae9c-4f258c20d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5f6e3d-b52e-42fe-bb2a-187fc4697839",
        "cursor": {
          "ref": "7f2b382c-0481-422e-aa50-59e9b2ddcf99",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "22a64fbb-0821-46ee-bafd-c3d5309eae9b"
        },
        "item": {
          "id": "dc5f6e3d-b52e-42fe-bb2a-187fc4697839",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5524a8c-aa0a-456f-a307-754d0144aabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bea9ca1-88fd-4c61-a069-ac7be52f0573",
        "cursor": {
          "ref": "bfd1aa50-6ddf-41b7-8ed5-7b5e5ac0635f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "693ede25-9b1c-41e6-aaaa-dbc414f1eb7a"
        },
        "item": {
          "id": "2bea9ca1-88fd-4c61-a069-ac7be52f0573",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da9e4efb-b411-443a-8c00-ebe5e8704b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656f2bda-f2b6-4096-bb38-67584757a5db",
        "cursor": {
          "ref": "e90e27a9-bbc6-4da2-b188-dce90650fa55",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f99ec8b-b73a-41a3-80b0-6147321b5db1"
        },
        "item": {
          "id": "656f2bda-f2b6-4096-bb38-67584757a5db",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4c298b07-8158-46a2-a13b-580531ad27e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d6cb6-7d3c-4eec-b027-3b50ababeeee",
        "cursor": {
          "ref": "7f1a8b97-c48a-4d3f-936f-f78147b82aad",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c18b22d5-66a8-4bbd-9de0-dc8fedeb0dbf"
        },
        "item": {
          "id": "886d6cb6-7d3c-4eec-b027-3b50ababeeee",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "741029b6-e301-4666-8503-a2b524c50e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848fe538-7d60-48d6-a22f-2770eb7094c8",
        "cursor": {
          "ref": "47296e9b-5612-4817-bd09-2ddc7048d2e0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97b26b16-bea9-42ac-abb6-314bc704952a"
        },
        "item": {
          "id": "848fe538-7d60-48d6-a22f-2770eb7094c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d029a9bd-f6c5-43e4-9cba-ab6c53278308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662b7a3b-bbdc-4f3b-bbdb-cee8d9fd611f",
        "cursor": {
          "ref": "9f97bbb8-0b38-4540-bcae-ddca1e09f832",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2dd7aba3-f5d6-411f-8dd2-3c9fd2465d0a"
        },
        "item": {
          "id": "662b7a3b-bbdc-4f3b-bbdb-cee8d9fd611f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b29d7563-e63f-494d-84c5-0cb487b2508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9d50a9-713b-4d0f-a503-f20a70f05fa6",
        "cursor": {
          "ref": "e3d6efed-7c72-4ecb-baa0-43fd077c8a28",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c71be97d-428f-48d6-8b25-976a866e91a2"
        },
        "item": {
          "id": "cc9d50a9-713b-4d0f-a503-f20a70f05fa6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a251b66c-c0d2-4d80-9c27-2d1ab94260fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9596b5fc-f27b-4722-a7a2-f308f2f49573",
        "cursor": {
          "ref": "e7d1ae38-eaca-42f1-83ba-7548aaa83426",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1a5c9c74-4a9f-404e-976e-a421769d57df"
        },
        "item": {
          "id": "9596b5fc-f27b-4722-a7a2-f308f2f49573",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dbae2b5b-14ec-4e38-ae42-2de6a390e5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733fb78-0e60-4ca5-ad5b-2678a49bbac7",
        "cursor": {
          "ref": "d3888d1c-9ade-4065-9f78-9097aec6e5f9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a01781a0-cdc3-4160-896d-dd0160895b40"
        },
        "item": {
          "id": "f733fb78-0e60-4ca5-ad5b-2678a49bbac7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5ff295a-26c0-46dd-bee4-cfbfb5277da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faac27b5-3ca6-47ee-b8a7-b76a8a2ab0f1",
        "cursor": {
          "ref": "d1db4159-442e-403b-8517-016d011c7561",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd99b956-055e-4b1a-9b13-f2d3e59292ee"
        },
        "item": {
          "id": "faac27b5-3ca6-47ee-b8a7-b76a8a2ab0f1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "34a76e5b-7f53-4342-a2cf-89d7cc93eb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce4e0c9-b422-41d5-9440-41569aa368e3",
        "cursor": {
          "ref": "7ac540ce-35cb-460f-bd79-a0768917330c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d76787d9-9472-4923-8c09-af207a0407fc"
        },
        "item": {
          "id": "2ce4e0c9-b422-41d5-9440-41569aa368e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "361f5b57-f48d-4a9e-850f-3eb703678ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc22f60-5b98-493e-b104-3523e0ea3188",
        "cursor": {
          "ref": "4a089e47-a329-4471-870c-84dc7b2d2c75",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8cb66baa-3074-4540-b5be-f4f2279d3aff"
        },
        "item": {
          "id": "6fc22f60-5b98-493e-b104-3523e0ea3188",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "80320b51-518d-4372-8d49-842709c2f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58adcec-648a-49c6-9049-3b39370e14da",
        "cursor": {
          "ref": "28404cbf-4a56-4a10-bdc1-10204c5947ed",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6b2268a-2de4-4159-a31e-5f94a6ea96e7"
        },
        "item": {
          "id": "a58adcec-648a-49c6-9049-3b39370e14da",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "17b43e48-443c-40cb-9003-e57801b8771f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479d2c3-ce00-4952-9ace-8a997229f198",
        "cursor": {
          "ref": "36e4b2ba-d0c7-43d2-9629-98ae2cecf091",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0f95f873-0640-434c-bc11-fe7accf32f52"
        },
        "item": {
          "id": "c479d2c3-ce00-4952-9ace-8a997229f198",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a5afc0ef-b05a-4e64-be10-99b2d54788f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37c8ea-89d1-48ae-9691-1a0d92d3a9cb",
        "cursor": {
          "ref": "9c83d05f-01e0-4589-8ba1-133ff93395a6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8fabd9cd-0b2e-4b53-a52d-e7c8111a99c3"
        },
        "item": {
          "id": "7e37c8ea-89d1-48ae-9691-1a0d92d3a9cb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dfea4304-4727-4ab6-b497-4fcab10057d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918acdfc-79e9-4a5a-9904-45a19862104c",
        "cursor": {
          "ref": "dd1fe34a-7770-4582-b136-55e7d4ade405",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "35230e15-9ad4-4fd4-8b5a-794e4422a68b"
        },
        "item": {
          "id": "918acdfc-79e9-4a5a-9904-45a19862104c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c979808d-4c1f-4a23-99d8-83ec52a5f12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f27a3-c2da-4dc4-afb2-9ac52faea1a0",
        "cursor": {
          "ref": "2c309b26-a646-4ebe-ada5-75744e8e8807",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1ece594b-d841-4713-9162-3e8126a20410"
        },
        "item": {
          "id": "331f27a3-c2da-4dc4-afb2-9ac52faea1a0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bd8663ed-24cb-46ba-981e-9da1fc784e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fddf49b-d513-4155-b62a-3d5c0fc01dc7",
        "cursor": {
          "ref": "18b89bbc-6998-45ef-8c7d-969ea0624478",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "abf6da5b-ef99-4bf8-939d-ce6e4f5ece42"
        },
        "item": {
          "id": "8fddf49b-d513-4155-b62a-3d5c0fc01dc7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d27d37ba-1c84-44a7-9347-15638fbd891b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3f0175-3d41-4eba-af89-3706c24dff4b",
        "cursor": {
          "ref": "a120acfd-b5f1-47f3-8591-9f4ce6ffe3d3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "51b5d432-b687-432c-a7a1-5780a76c320e"
        },
        "item": {
          "id": "be3f0175-3d41-4eba-af89-3706c24dff4b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cb3ba18e-1f74-4782-97fb-5447314421c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a41b125-2511-471c-8a90-bc2b5c493c9b",
        "cursor": {
          "ref": "5696fd1c-1d66-46bf-b589-dae9f1641414",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9a7e9a05-c78a-4d7d-bb70-e1cb35cf34c3"
        },
        "item": {
          "id": "4a41b125-2511-471c-8a90-bc2b5c493c9b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d506690c-5a7b-431c-80ca-2332cad13b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499bade4-8aed-4a81-b7ff-bb566c363992",
        "cursor": {
          "ref": "1d801de5-1e7a-4108-b4e3-9f093f6a2c3b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6f4c014-0c13-48a3-a601-aefc04e9b40a"
        },
        "item": {
          "id": "499bade4-8aed-4a81-b7ff-bb566c363992",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6588fb1c-2e14-485f-b704-5382787a2654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0aeb94-2bd7-4c8d-9c21-5236d57eb62a",
        "cursor": {
          "ref": "e436088d-a999-41d5-b513-71c77e514e99",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "993fb7c6-594c-4699-8101-c4b9bfb95009"
        },
        "item": {
          "id": "cc0aeb94-2bd7-4c8d-9c21-5236d57eb62a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "62ec7622-12c6-422c-8120-e1c3d5492fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3a9f6f-9a91-4a21-9e07-ca87f4c17d41",
        "cursor": {
          "ref": "6e346ecf-c298-4061-a85f-57b0d0361a0f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "27543544-1954-4091-a794-208ea130e4ad"
        },
        "item": {
          "id": "6b3a9f6f-9a91-4a21-9e07-ca87f4c17d41",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a2d03211-8396-4be8-90d8-3d82627782c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee9b43-94f0-4302-a35a-70ad337e8483",
        "cursor": {
          "ref": "7993eca0-d1e2-4f15-a79f-9ac77585e1ee",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f97a7519-f053-499d-ab66-8fc773ffa0b8"
        },
        "item": {
          "id": "dfee9b43-94f0-4302-a35a-70ad337e8483",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f9cfd270-c313-4406-ad01-f6d661139b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b68fc7-299e-4f43-9675-ca6904fce47b",
        "cursor": {
          "ref": "cdc8d0ab-cd3d-4afa-a5b5-18f5c7d967e0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3e9cd9f3-5dc7-46c2-b4b2-fbbd5b276a77"
        },
        "item": {
          "id": "e0b68fc7-299e-4f43-9675-ca6904fce47b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "404d39fe-81ac-4fa6-b4ed-d3878dd5c05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a748a42-7abd-4af1-bef6-943b609d8d44",
        "cursor": {
          "ref": "a3bdcda7-e036-49e1-8a8b-c0c7a69a1870",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e91006ed-b7b8-4c04-968b-1ca460e2ede2"
        },
        "item": {
          "id": "8a748a42-7abd-4af1-bef6-943b609d8d44",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd826287-b64b-4fd0-8dac-fd8388aa4976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb9a66f-d757-45dd-a515-59f7d1bdd9e6",
        "cursor": {
          "ref": "42c49364-fea2-4b6b-b7d1-2e30a1ba4add",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "56b042c8-dd36-42ae-a880-b0cf8464b226"
        },
        "item": {
          "id": "9bb9a66f-d757-45dd-a515-59f7d1bdd9e6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c77f9e38-8bfc-41a5-b215-f75e3ef15d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a7a1d4-5f5a-4826-a212-bf47c06874d4",
        "cursor": {
          "ref": "67d90873-ebc3-4657-ac8a-ef55c76a9d15",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "01ba3f0f-3995-4ea0-b270-45966f1d98b2"
        },
        "item": {
          "id": "e0a7a1d4-5f5a-4826-a212-bf47c06874d4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f8f03b72-9e19-4e3c-b413-ba695de10e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0908428a-dda2-47e4-9c14-bf2c3b552a25",
        "cursor": {
          "ref": "980a01a6-3f89-42b9-b3d0-6a6f09dfc405",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4ec0abaa-9247-49d8-96f5-7cb7896d5f75"
        },
        "item": {
          "id": "0908428a-dda2-47e4-9c14-bf2c3b552a25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "20b3311a-e752-4fee-9869-a7b6f532211e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e281e9-64fa-45a1-8e58-1c8f773a226d",
        "cursor": {
          "ref": "9ab6327e-7eb2-4d93-8abe-c143455cf229",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2935a05e-8af0-4051-a622-e40fef03b674"
        },
        "item": {
          "id": "a1e281e9-64fa-45a1-8e58-1c8f773a226d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b00e9abd-0966-4ae4-b2f4-902e212f7a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a777766d-347b-4a44-bc00-c360590d7600",
        "cursor": {
          "ref": "edbe8da3-49b5-4292-94d0-3b8d7cb2a19b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4366fcd2-6c77-4e4d-ac96-b35cd30dfc05"
        },
        "item": {
          "id": "a777766d-347b-4a44-bc00-c360590d7600",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf3b558a-3c7b-42cc-93aa-2c9984c6b3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81096c15-8cd3-4968-aba6-91d22cbbfe22",
        "cursor": {
          "ref": "8a955cef-3167-4a33-9162-b8387d3215ed",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "90d26227-a84b-4805-95d9-9f576cd13caa"
        },
        "item": {
          "id": "81096c15-8cd3-4968-aba6-91d22cbbfe22",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c958105d-be2c-455d-af2b-6946220be04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe80ce9-fc67-45ba-ba23-55d3bd601d49",
        "cursor": {
          "ref": "97324cd6-d37c-4b88-bbe8-4e5d715b76f6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3506af11-efd7-4e1b-b1b2-4e6401ca6f35"
        },
        "item": {
          "id": "bfe80ce9-fc67-45ba-ba23-55d3bd601d49",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1053af1e-7d5d-455b-90d8-365848f8e2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f470526-7de0-409b-a219-300bf1933325",
        "cursor": {
          "ref": "db2c5041-ad8b-4dcb-8dde-cb7d477796e3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b1ab56d5-5c7d-41d1-9afa-b706c622b943"
        },
        "item": {
          "id": "9f470526-7de0-409b-a219-300bf1933325",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f830a09e-5b5f-4782-b0ad-2919b7d2f3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba919a5-af80-41a2-8526-9ac09108c934",
        "cursor": {
          "ref": "7dcff773-2b27-48fa-bee3-79130c8d21c3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "450d03cf-9ba4-4733-8732-b4faa4c63f5e"
        },
        "item": {
          "id": "2ba919a5-af80-41a2-8526-9ac09108c934",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "11a2d95e-e9c8-4f8e-a988-341ebeec46d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58578850-1c8a-48da-846d-5105977c227e",
        "cursor": {
          "ref": "af8ca60f-8675-4e07-8f87-da8eb9a0ea69",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c0967a9b-1d82-4e38-8632-1e38fb8b170f"
        },
        "item": {
          "id": "58578850-1c8a-48da-846d-5105977c227e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ed5ca359-732c-4327-a3b1-60af9cefc9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c8caca-5a8b-4aba-9ef6-8555390dc079",
        "cursor": {
          "ref": "9beb5ea4-afd1-46ad-a85a-be573c125f2f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "24b24dbe-3d93-4c8e-9206-9df3efd4b0d3"
        },
        "item": {
          "id": "08c8caca-5a8b-4aba-9ef6-8555390dc079",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "de255724-7106-471e-9948-6c352d461dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e51da1-f8cf-45da-943f-e7be1d648ab0",
        "cursor": {
          "ref": "b1773764-b437-41a2-a964-f002e5255d08",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "eab2b9a4-4a73-4004-be61-e8b33bad861f"
        },
        "item": {
          "id": "b7e51da1-f8cf-45da-943f-e7be1d648ab0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "079ba49f-507f-4c1b-9b76-503bc34a8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b34ba7-8c29-4b46-9025-b70dd39f1bf1",
        "cursor": {
          "ref": "f556e297-0365-4f87-b41c-8d6a51e1744d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "40d3b67e-064e-418d-af96-ab6461b9a68c"
        },
        "item": {
          "id": "24b34ba7-8c29-4b46-9025-b70dd39f1bf1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b325c85e-bff3-45cf-be2e-c044da3f7e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd855dc8-ec47-4ab1-ad5c-7702442c6a30",
        "cursor": {
          "ref": "8b1ed1af-4b9e-49f8-ac4b-19782a7c56fe",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "392a675f-4c73-4a85-aa4d-55f780a82b45"
        },
        "item": {
          "id": "cd855dc8-ec47-4ab1-ad5c-7702442c6a30",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8613b0f4-bd8f-434b-bbfa-4cb2d1ce932b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60defd-2c58-45fa-b5ae-a8d28ac2502f",
        "cursor": {
          "ref": "d80ae1e5-dbcf-4a5c-b4ac-fdee5f4e6bc4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "56cc6b07-2ea6-472b-8baa-9f94c3394817"
        },
        "item": {
          "id": "fe60defd-2c58-45fa-b5ae-a8d28ac2502f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9af1813f-6656-4261-b2ed-ec9330f0f667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55af56e-2ae1-432e-8a36-df01cb8d5608",
        "cursor": {
          "ref": "8827d1e4-d00c-4cf9-91fc-70fc8ff7492e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "80ee442e-bbea-43a8-a3ad-26c6b74d68d5"
        },
        "item": {
          "id": "e55af56e-2ae1-432e-8a36-df01cb8d5608",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "29fe9cec-7298-4859-9ca8-e3080f4f2bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad7bc8-e70d-4893-a292-67d90c3fef92",
        "cursor": {
          "ref": "82cc5f77-3502-4abb-a999-5fefd55705cb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "38da3857-0be5-4a2e-badc-e9e69248dc68"
        },
        "item": {
          "id": "10ad7bc8-e70d-4893-a292-67d90c3fef92",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "40d38ba8-b3b3-4f14-84d5-b1f3fda5842c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f691bbe-1f29-451f-9700-90113c875e14",
        "cursor": {
          "ref": "95defbf2-6c7f-4717-90ff-6f6bb31ff76a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "44d7d96e-5dd4-4fb4-a99f-4aa3f13c6d38"
        },
        "item": {
          "id": "2f691bbe-1f29-451f-9700-90113c875e14",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ae388d0-5744-4976-a24e-363f717712d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9af1b8-ce28-49de-a19f-aec90b5b72f4",
        "cursor": {
          "ref": "6d112e58-32f8-47ae-adb0-b4277060112f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "30d03e4b-dc2f-4a0f-960e-675aeb13d3cc"
        },
        "item": {
          "id": "8e9af1b8-ce28-49de-a19f-aec90b5b72f4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "67b4dad1-2c55-4343-817f-6ec2e2c81d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46da9a8-176e-4ce0-ae6b-677ccb6ad27c",
        "cursor": {
          "ref": "73b28c26-ddb9-4ae7-844b-605469bd2369",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5b0765f7-c31e-496e-ac28-f511029eef09"
        },
        "item": {
          "id": "b46da9a8-176e-4ce0-ae6b-677ccb6ad27c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7d48c862-38d8-4fd2-a5b0-6bd9925e6de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec93e9-dfc3-442c-a3f1-09eafd253162",
        "cursor": {
          "ref": "2ffa3ffb-0183-4650-89fe-76c6e193562e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2525b12f-3d09-41aa-bc67-44aaf40695e2"
        },
        "item": {
          "id": "f3ec93e9-dfc3-442c-a3f1-09eafd253162",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be9400d9-d722-4b36-a570-5984754b509f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fe3f6e-f6e4-4011-82ec-4ab5e6e79f6a",
        "cursor": {
          "ref": "57ae682f-8ca6-4195-9a09-d856474f24e1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "95810695-cfe4-4f35-9e5d-1557ab1318b3"
        },
        "item": {
          "id": "08fe3f6e-f6e4-4011-82ec-4ab5e6e79f6a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9561cc4-47ec-43ea-a93e-9e5171c88964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f87622a-20b7-4354-9b2f-e065bf24b2dd",
        "cursor": {
          "ref": "90e1a908-65eb-4b37-a438-3fd00ed23db0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1aca355b-8214-4401-a2c8-f389e9bdf5e4"
        },
        "item": {
          "id": "9f87622a-20b7-4354-9b2f-e065bf24b2dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "219b301f-2108-4de8-99e7-1a17cb3aa259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3011059-936f-4d1f-9d25-9a71dee820da",
        "cursor": {
          "ref": "15edbbb9-f171-476d-925a-21f308e368ef",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7c157677-5d75-4810-bd31-3d39a4a61eaf"
        },
        "item": {
          "id": "c3011059-936f-4d1f-9d25-9a71dee820da",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fbbcf178-81ae-4464-9c73-df800b617bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9606a06-ebe0-451a-8aa2-cd49c02ec8d1",
        "cursor": {
          "ref": "7d1d20fa-d7cc-48a7-8ea4-162223b91dae",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b0adca6e-f30c-4e64-aa3c-c6389c0a4849"
        },
        "item": {
          "id": "a9606a06-ebe0-451a-8aa2-cd49c02ec8d1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5cdadc24-9f20-416a-b916-303089c94565",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22893755-24e2-401f-a47a-796b4cc60ebc",
        "cursor": {
          "ref": "b08ecd54-3df6-4276-a246-27e88e688315",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "618be907-1f81-4a5e-9ddd-3be4a278aa53"
        },
        "item": {
          "id": "22893755-24e2-401f-a47a-796b4cc60ebc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3c790631-0863-4c80-b028-09c03fab1417",
          "status": "OK",
          "code": 200,
          "responseTime": 3719,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81915302-2ce0-4ede-9d66-f5d7b5c26687",
        "cursor": {
          "ref": "2e8fcdba-a8ec-45ae-a184-b91f59511c18",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f65a564c-73bd-43ea-8997-8e7b25684958"
        },
        "item": {
          "id": "81915302-2ce0-4ede-9d66-f5d7b5c26687",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "33959140-3423-4e0b-abde-46eca1a05ab9",
          "status": "OK",
          "code": 200,
          "responseTime": 2625,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e44ddbe-fa2d-4d54-82b7-3b8bb7d90088",
        "cursor": {
          "ref": "37097ee4-2cc1-414f-8c78-eefa543a9797",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b24273c8-9ef4-4bfd-b716-575d9a4398b2"
        },
        "item": {
          "id": "0e44ddbe-fa2d-4d54-82b7-3b8bb7d90088",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7d3ff09-2298-456d-b3b0-ca4dca46621b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e44ddbe-fa2d-4d54-82b7-3b8bb7d90088",
        "cursor": {
          "ref": "37097ee4-2cc1-414f-8c78-eefa543a9797",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b24273c8-9ef4-4bfd-b716-575d9a4398b2"
        },
        "item": {
          "id": "0e44ddbe-fa2d-4d54-82b7-3b8bb7d90088",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7d3ff09-2298-456d-b3b0-ca4dca46621b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca791b7-9a2e-474b-8136-38a644c6980b",
        "cursor": {
          "ref": "c4aa9505-91c6-4894-9cdb-ba352c1702bb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e15f5654-8223-424a-8992-2eb0f295bcbe"
        },
        "item": {
          "id": "cca791b7-9a2e-474b-8136-38a644c6980b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5d73215-50dd-4029-8ed0-c2df5542d09e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dcb3dc-03c3-418a-a6b7-d705980e25c1",
        "cursor": {
          "ref": "96c8a9b5-0316-4c37-b7a9-e724d03fb87a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "67eedee6-2f5a-4dfa-a81d-8b1f24d7187e"
        },
        "item": {
          "id": "d3dcb3dc-03c3-418a-a6b7-d705980e25c1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d46a7c3e-10b3-4fc8-8bac-ef8f2cdf73b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}