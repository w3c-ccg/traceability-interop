{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "731e0571-90e9-4756-b6cc-702f9e5e5f80",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0527653d-41fc-46a5-9727-09cb7819b0ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5263b2c-7f06-47f0-9d9f-534129a96e57",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be2ea125-4a2e-4437-a7d7-56ad36afc815"
                }
              }
            ]
          },
          {
            "id": "5bbe8252-0b55-435f-9975-e8d4e726b480",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bc56ea5-7cdf-4352-96a6-1eaec1f5f338",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "128d02d5-c60f-4c34-8f87-717674b0e951"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9b346c1a-7b33-48da-b381-2b61f1955003",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5050c6a6-6495-4097-96f9-eb18d6dec15a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e548b81-4015-4b10-90a2-ff58d418d5e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1df8401d-fd39-43c9-b714-795e97738cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "420c9140-3fc3-4709-851f-f301a8967dd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c30a0bc-3eb6-42db-bbcd-84a5e921f6f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ea9ba16-05bd-48f9-8009-7375cc1e2f2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02f34b20-9dd8-4f54-ac5c-1fac669d2851",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03ceb369-58e3-49c3-9871-f4a174f4b666"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcfb19ef-309b-4955-b396-caf2226441a7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "10ebb442-79d6-4816-8a42-2d608c7fb649"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcebda91-6b24-4926-bd42-bcbbdc412f0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f545978d-f8d0-482f-b964-15c90a19f0da"
            }
          }
        ]
      },
      {
        "id": "0ccbeeab-ae05-44b2-95e4-b041826f76d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "872eb98c-b4a5-41aa-81bf-0871aaef5acd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5eeaf660-90aa-45c8-8afa-082c7ec57792",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66464ddf-4f50-4528-9aec-f6cfd54f2c09",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d0e089-f9ff-4e83-bd09-8b1c2efd01ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94dd8581-a554-4dbf-aa05-2d5684ba38b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239eb5e-eae3-488e-b26e-195eecf41b79",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b637b811-c091-4d4f-869e-9ca1288da5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1780a9f2-a6a2-4ca8-8715-f964316509e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a1b2bd-b971-45b6-b440-4c85cf4f70c1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d449278-0e69-4d3e-ab59-de6755f55d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "938e603c-f640-4a60-a44e-436d5e07b0e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6263cc66-1f29-4ef0-95d5-e0d9faed177c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf4f64d5-1012-4281-afd3-d9af9f5aa903",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f64c9d-4f6c-4370-bc03-a8b33fe6df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "775199e1-31ef-48ad-ac64-18811af1e857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839ba424-79ec-4f7d-a4fe-536426e1f637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d154f59f-bf5e-45a7-8d06-f921a2aebcfe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4567550-723c-456e-944e-730951b9ceb8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ae6a2ed-69a7-4b61-8a64-4a38e7726613",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3216aba-5c6d-489b-a78a-316d81823d84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8fdb3be8-17a3-49db-9158-5cdfc420d1c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "029ee089-b60b-4889-a3a3-b793d5409197",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4765cdf1-12e5-4361-aa1f-13b5140b5ca9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d90d1e16-0980-4527-80ae-8d90bdc8fe19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27766a7b-914b-4046-8eb1-b88ee9dace8e"
            }
          }
        ]
      },
      {
        "id": "422dadec-ee6e-4438-ace6-cfa0701c6e63",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a1b37c24-8dc4-42ca-aca3-11a47ab91165",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee93e148-7c21-4450-b213-477c5a6f3273",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f68e35a-6b1e-4c61-be48-8d702c176fb3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613d8701-ba51-45b2-8210-f54c8dfccfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114caaf2-259a-4f86-8c3f-a83013ffa97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0503ba-b0ac-46e4-baad-ed4710bc003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a630bf26-a079-4bad-8b2b-da54cd4487e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fca47a-174d-4123-b9d3-1a1ffaa756b7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165798d5-ad93-4788-a68b-7554c10e8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b2cf8a-d8d3-4fa0-b99b-3234a12de9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faddee4-d1b1-4eb8-9633-b6c322b2025f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3ef433d-070d-40c8-9950-eba1479a4f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a643a89c-7079-403d-9456-97922c507e7d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4ca112-09aa-47e1-bbaf-62a7cf04ae75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47f3adc-6553-4125-a281-3caf93308332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fae3b2b-d967-4230-bbaa-e3a9f12a9875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ede340b4-e5df-41a1-adbb-10c64ffc7e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bf1d37-dc90-452f-840a-880a2d4246f1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ce51e6-5d6e-46eb-ac2b-4166542862de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90f8241-6ea4-4c72-8e7c-eb6f78287f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e7689c-0cb3-4d83-904b-7b841677cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b37e727-e718-42a4-9a12-f4fc493ce6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16450231-ba14-4562-ad53-7cfbdbe3813a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50bf411-ed10-4079-b5a6-f3ac0851d69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f6622b-2dfb-48e9-9f39-8f5260b7a191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9478cc-292f-448b-b69b-ec37106d131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2970b895-9518-465c-8fd0-3d50ac0262d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aebec6b-d44f-42c6-b1c4-aa35c1dc6136",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53035a6c-85ac-4fdf-a761-a8ea769e89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab3fb10-c50a-4a37-9ab5-db4bdb1f19af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8878e8d-7e5e-491d-9fbc-0879f1e09ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6f0f27-3252-4e54-a9f9-779d18678233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eed1c31-e954-4c52-8d6e-918769d4dd21",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab08f6fe-6573-43a5-9783-8b5676b06197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7285c1-f15a-45a1-b854-72165a410e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaddc53-1eb2-404e-aab3-5b9748b95516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1c38bd1-aac1-44a2-b881-cd2d6fa6d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a8c80-92d5-4387-b2c0-080ac5de0dd9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5274d31a-b6a0-49e3-8219-bfe5676623c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5467b5ea-48c8-452d-92f8-c5770d3c7758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57157852-84c9-4e01-b015-a5244c24d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a53393e-4626-4e27-b517-f138127331b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7756b38b-12e3-40a3-8748-7f789ccf4337",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf8192-cc90-43fe-a533-7522231d4700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53daaf8-997a-4788-81b6-323c4fd4d7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc90e78-2f00-41ca-a648-09b8bcc69bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afbbb28c-dbe3-41c0-a300-48a084067fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c124e9ed-1391-4ad0-93c6-40b51e313daa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a0161d-5b9e-4cc2-a08c-6270b433b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de2c125-bbac-476e-8816-054ffc8d5a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2631e102-7efa-441f-a3ed-4ca8aad09898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "681af148-9348-428d-ad71-d7b3fc35f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e5cd1-3f80-4c1a-a222-99020e79174d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1127bf75-a204-44b3-a6af-aa25287b63c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2590e533-e530-4e3e-becb-1a80955e6c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfad797-31be-4fac-8906-0638e9c4c714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6939f3ea-5d2a-423c-8e1b-3bfccca25b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cef3ae-4349-4e06-86cf-96dcb9ffb4c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9265301f-0661-4393-a0e7-7e378f42f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190a1159-53ae-43a4-b025-700630e5c318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8118c800-68ac-4fd7-be8c-e3dbaca07e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "598e1379-da03-4aac-9a5a-7e7e9ce41211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558775d5-66c4-4db4-91b7-3a09c896cb80",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f703e0-709f-47dc-a306-80550f4f32b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58fe97c-0a24-45d6-91e3-31524b384964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5839773-ded9-4458-b89d-a85b12e1b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd380bbe-2d19-4a21-b56a-ac4dcf2f6dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ed2d79-468b-4a3c-b276-63a4d39a8641",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5be4e4-3911-4925-a92b-950798326d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4e4763-db07-4b60-9dd3-b2c0c951eb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1611bb0-4985-4b56-852a-6f49bf99eb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a9dce6-d1b6-47ba-85a7-341d27af4bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccbef81-6525-49a8-9ef4-74a70f5e0fd1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656f908-73cf-4a50-a446-66a562789704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7257de22-8146-4580-b5bf-0f8fa48475ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968a63f0-5da8-448f-9617-db7679a3d8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98d66fc4-3e9e-4eac-8ee1-c4cdb52c8138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da084a89-9ba0-4d9f-b478-df9b19df6cb7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b6c5d6-ce81-41ec-921c-8b9a84bc198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1078783d-5ad2-4588-9e4c-59891451e1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce45d92-0b7c-4fa4-84cc-1e5e71f63b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6e12d45-7431-47b1-a421-2d9e07986fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef763a-a4f3-4e19-b08e-63d9bb07c126",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef93a55d-89b5-40e5-a3c1-ac5a9b53a8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a69a07-45ae-4f96-aaa1-e081f1cd5267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244eec19-08b9-4be2-a5ab-74a26a409e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "289bb5eb-fa9a-42b2-b10d-4592705798be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d251cc3c-087f-42aa-93bd-219d39b6efcc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc4e25a-df0e-4c50-ac2d-28adb848521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50352cd7-21d8-4b87-854b-ea8574b6002b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c67877-c76b-46fa-a896-00fcaaa3ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd63f95-4218-4c8d-a39b-b78dca684530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425fb5f-0052-4719-a9a8-434e57128064",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa74ab88-2c9b-4071-99b0-969b4d4296a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9130d9c3-bd54-466c-808a-92a89724fb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fb399e-60b3-4d86-888a-2f1edffc6a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "625cc552-5314-4475-8c3d-815682dcb3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a2c98-6b7a-4c93-9a35-23d69f033051",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb76ac8-a04f-4232-89e5-83a1f267850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a88f74-f8e1-41d2-9ac6-f4a043377b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adff857d-8ed4-45b3-b1c9-236a5984d8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c96fba2-bacb-4bf5-9a75-adcdfa40942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d2159e-b6e8-4984-b159-deb35540fef7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa58e90-4551-46c4-845e-df94d42333ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568a19f8-5c9b-44fe-b53a-5137af333e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df2b1c6-e5dd-4eb3-9308-56645e19a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00338c3-bbe7-409d-8f91-cb48c10dc35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612c11d1-e726-43cd-a853-1b4cbb96eb4d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07afdfc0-5f24-4062-a915-be45efb4915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e820540e-b557-4b43-aacd-df8d897349a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad268b8-584e-496e-be35-03b102f29a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a340801-f59f-426a-b4c7-6b9fd7f975d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d9a51-0635-48a6-bb11-8b41ac8ef23e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b6577b-8ca4-4ca5-a28b-8ca989ae834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f5465d-ed84-4d1f-a75a-30eaf479d070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfc7989-dd11-41bd-9ad1-f55e5573917a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77251a35-9d79-4431-b731-342126518a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d70d88-7e3c-40d3-b34f-6d918bd2db4c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feb166b-f25a-4194-b422-ad50ab3199ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695eee5b-9d49-49b7-9652-2f63c6a315ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da76be51-57e5-499c-9535-65f09ce5617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "056a46df-7a7b-4130-905f-cd5d811ccfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7662751c-e1c5-4868-acfe-e308c3b406a7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51850bf8-6e2e-44ec-a05e-41eeca1113c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca94cc7-f859-4f18-917a-57b052bb60cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef7ffa-972e-4f3d-83f0-dc922a4d94e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f54faca-38e2-43cf-9f48-30090c766b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1049f47-ab92-4bc0-81d7-6b7a8973063a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60de77e4-3e32-4161-be63-cb3708bf5369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4020ff1-b648-4c49-90ef-dc756402d683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c0d2c-8fe7-4a2e-8039-d0651151ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf22c10-7638-4936-8c10-b31ce5184f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6155945-437a-4827-b7c2-c3e7559e2d62",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07da6ff6-af01-488e-b844-df2f0eddcf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7147da2-355e-48b4-88bf-23926ec7774a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd69ed-b3df-4014-946c-d56ada15eb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4846c58-55ae-47c9-9c2e-0bbcab9bd4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6433eb74-3dd5-4985-b843-8b00e6980a05",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e49ad35-11e0-4b21-9095-b19c0f002cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35207f71-3003-4353-a3d6-2420ffb70a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dec04dc-e3f5-4d42-9a8c-0522afae3e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd68233-99b9-4205-bf39-84981f45673e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9400290-ebac-4913-bf30-d7758ae1afb6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc483e-2012-4ddd-a4ad-762e9e6abc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc9341a-78cc-4a51-acfe-ea10f0b8af5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d8f591-7325-4c80-89b5-a5ebd531e91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d359bc-caf2-4d90-a52a-62a5afc5bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0920d25b-0933-4382-bc6f-06f5106c3774",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9078aa7a-f756-4d33-b9e4-716f32f61b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71521eea-afd6-44a9-8935-87b10895fcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a1eb07-5a6f-4fca-ba20-6e29bf78b69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e728472-0d12-47f3-9e7c-e91b4bd5adf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb451f4a-41a7-41d2-a173-b97749e94534",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21bd3b8-aeb1-456b-87f1-6e7156bf8392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ab434f-2630-4652-9a2e-9e5670a7f500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08406339-8f87-4292-9eae-70f61d5ec8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a26a3f-683a-4168-a3e9-6e0ca3e02858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e64812-4d0b-4cbd-8504-fbaacf717e72",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba55fa2-dbb0-40e1-8979-3b75d0ee1bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bf8394-2a07-4d52-81ca-5975d2ca057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184841e-25e2-4128-bcad-cbfb802aab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b011fc3-78c1-414a-9e75-03671d38e774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aa6b0d-637b-440c-9f1b-14169f2d46b5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a276a4-bbae-4022-9724-e16a63f8acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11db2161-d994-4f8c-bd90-a591bee2b784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7438b46e-5a13-4ce1-918c-c9e26ebf494d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b970e9b-e9f3-4020-822a-166087cfe7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092f2fc7-8d8f-44b3-b9d7-9f1007213b0b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c405a795-86d9-43c1-8083-4bc6f31ba93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0220d25-9832-4122-8f0c-29b701151400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe20229-8303-4620-b211-4b0ec622921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bccd5d6-c929-4a57-bf71-d973967ef784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517eedbb-7aa6-4d28-8a30-daa24da1f0d9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7142bb0c-b35f-4a46-8101-9b831142e9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a67b6f-78b4-4a9f-ab57-e51b99b341db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f985e8c-4e44-42ea-8f79-b13d6745939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "864eb0b6-14c6-4405-98ec-4f242cf48e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc5b334-199a-4b8d-857f-7592412b5cef",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd45ed94-42ec-4ced-9f47-669f81a1ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7026893f-666b-4abc-a8fa-af3e12e3282d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd03a80-7c2b-48e2-bd90-f524b433adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bc00f3-794c-4df0-87cc-48814662d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68443701-467b-4e2b-a4de-2e885afd0612",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfb9dbf-71a3-41cd-95bc-39511506e9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2648d85b-68cc-4c87-a448-9aac02d01c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d1661d-ffa5-486e-910f-60ba9d1df98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bffebeb-de94-4533-aa41-7283a9cd6a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75086a0-41d2-4fc0-8318-ea18317045e1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca243401-cea1-4abc-8f2b-5e9184bb8bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5959a672-efc9-4f48-9639-e58eb9cdf0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec72cfa9-8284-4709-a680-e916090ed49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce7e27a-09e8-4ea3-90bc-886d54dd7104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a67486-db51-4747-bf9c-3d5c4eb305b1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2fc7e8-0157-4bef-b324-7ae70c00c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502e6166-c085-4e7d-a857-276badaf811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c63233f-70fa-4a15-8e24-08fa7c713b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dacfa851-f8bd-4ad3-b803-ae92b78e7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1308832a-3357-4b78-a531-36cf40c92872",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30aa94b-7085-4e2d-9591-bf0c4ad2ebb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddd05b1-cb8f-4c11-9055-0ed227fae1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c19909-7608-4a5e-a13d-9f5c6725500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df863474-5511-43c1-b4bc-ba896f236474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab003f76-3c6e-4688-b13b-d0dfc32b659b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb4d5e1-8b58-47dc-b951-3a237731d085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8c4790-6e81-49f8-a133-d9d41c53459e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95d9a8b-0e5d-4115-bbce-f6b2e934f5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcfd4c9-1322-4045-a2a7-a9cfd574378b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e062e-7953-4852-8173-a41672c7a4dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0dff34-a952-46b7-a96d-080d1e0e28e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c63c906-a7d3-4cde-9c75-628f8215c7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bcf33d-446c-4e40-9d2f-4c8cc9324366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bfff557e-8d6e-4f51-b13c-e524756db182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad29ae90-7b16-429a-8b97-a589658fc382",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4b39b9-0e7b-49d3-a043-5a3f676ca70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1115825d-73a9-4d3a-84ec-9beec0e2eb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddbd863-a7df-433a-8365-b232a00b3f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18417660-5c04-4be9-9d5e-af83dbe05d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b5a90-6492-4bf5-92fb-5e8bb4e6ee05",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1749492c-a6a2-4dd7-aec9-1ed4db679568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e888a1-a9fa-450c-90f3-5379bdc28948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f89d48-8545-4e58-8394-bc4f737df9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eae2fb8-a0a9-4eca-ab3b-693ada32e2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd9ddd2-b1ce-4262-a91b-aa4b6f4a371d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b07c1e-093e-4837-be0e-257a4f214810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cc84f3-d1cf-4e00-ba3c-9da535140639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c911830-1a2b-45b6-9358-25840b166324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f4d5df-89c8-43bc-aefa-e13caa17a6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebf3901-de14-4381-9b63-6dcf705643ee",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191b0981-f4f4-483a-a8e0-bd8673cd55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55814f24-296b-48fe-aa79-395a5227cf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b11f60b-5f51-4c9b-acc3-32bacec6e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "234bed99-2655-42db-bd67-6424dba6bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864eb175-cb5a-4816-b19c-764fb817c9fd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1680a546-d355-43fe-b032-e15f884d9ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccc51e6-0884-47f9-83a6-71bcc3d12cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88e4232-14b4-46bd-ab4d-03f50ee4eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "347d70cb-83f3-4ce1-b47c-e4a53fa277ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613840c8-2630-4e7b-a887-b8f05309c4f9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7b3d0-bf4f-403c-ba98-8354936bf1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e69083-9305-4ecd-a419-630b10783652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81a78ae-4384-4e85-8b7d-83c4055a07ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6db91e-029e-436f-9f8f-e4c7bef48311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3356474-a7fa-4a9e-88cf-08776dd22892",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1159f0bc-01c4-4430-b7c6-7e3a558a34c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bf34f3-a91d-4827-9180-4d4bf41389c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3365383-646e-4cd4-80fb-0325552737b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e44d0cec-92c8-4527-b0e0-b21137332b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd9ff3-225c-4a3e-99b5-2a9d825e0eeb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840bd50e-8559-4b6d-83c2-06d240b8b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9fd57c-5f01-4bf4-b0aa-4af0b0dffed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6a3a8f-24b5-4142-b619-1a90ca33883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbbd766-0d69-4e27-9679-cbf0834f27e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db93086-e570-40d8-91a0-98fce88fcffb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed125fdd-2b9c-4a8b-9030-1bed6c639f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969c981f-0492-4ec6-aa49-1147438323fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab46115-6a0f-4e18-8767-f5f0cbc1a926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab2db1e-ebfb-4dd3-8b2f-1e205b327554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9335c62f-1476-4e24-9b0b-1005e65a477a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd3b61-1e7d-4e0c-8411-f860f383cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172aba36-c420-448f-9565-a04b58bef761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903d91b5-34ef-4e7b-b67f-c5da329f8c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a939ba-7a6d-4f46-b252-402ac2028495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06862ea-9354-441e-854a-d72ee832807f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd20523f-41b4-4195-9981-fab98b56daa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c021ea-ea07-47e8-9535-b968698d9e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e1ada-c8b6-4f8f-96fa-5bb612bd5228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c75c2d-a57b-4c22-9810-53aa577ede60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d141b9-2fe4-428b-8372-4f7be23310a0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20542b72-b004-47c8-a97b-cc8c7783002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1690f89-fe66-47cf-b53a-60c722cc976e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43083bad-f4a4-41ce-84d2-fd0dc35377ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c57a7e8d-919e-4b49-9f53-53b8cd9a16b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b43384-1dbc-46ea-b470-3c6dbf155dc0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771906ba-1248-4e0c-921f-4f8f10f69f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b37354-2613-4e00-87ee-6858d16b62a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfd7311-3075-4ffc-92c9-4590f5d4c206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caeb40d6-6e52-4a0e-b8de-518c721a7df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6f778b-73c1-4f66-b95d-29a4defd48e5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee2e885-b63b-4aa2-9427-ed8924be4864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaa72bb-2f7e-4e4f-bbf7-8178d1abff44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fbef3c-66f7-4953-8023-bef1e5be183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab8d940-cd60-4ad7-98bd-b979a9857447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc891397-9fed-42b6-8fdb-222ba05bbeb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5421d199-b9b5-4e6d-b668-602dabbd18c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ad041e-c60e-4437-9123-b70edef084e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd6377-1c52-4eee-8479-c9f1ec55582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6151b8-5beb-4230-acbd-93d2855fe472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74df267-1efe-4eb0-96c4-7a1b438eaa03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bb05e5-cfe9-4d5b-a7b4-4a977a357c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9735fa0-2143-4b24-b99c-795d2903f827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedbcd7b-ff71-49f6-acae-91aed32b48c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f11f03-b8b8-4422-bc35-efd518834f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f30227-2a61-457f-82b7-7d8b48996a7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a84db58-3178-4f45-9667-63607e417710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7ed80d-957f-4096-b0e6-525146b3e998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838440cd-b641-431d-82a8-58e1a848ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d717354-b915-4244-854e-86294f1a54f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed44ece-a028-410d-aa22-8c5558338660",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b69e5ec-9bcc-4301-9237-da07419cbd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03aeb4e-df15-4e8e-bf62-48f897ccd7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e381ede-b330-4811-a82e-309e0a36d98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e805921-82b2-4b64-a825-5731126d4eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc897903-d91f-491b-9d30-d9a6eb6f4621",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1036c5-96f4-49a9-8a80-af113251d641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191f8a33-7cd8-4bf7-81e6-6bde02991b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6960af61-5558-4181-9798-308ed09bfb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22e4e226-c219-47e6-933c-fa614a965c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e948ef2-8553-44b0-b59f-8d76b6cb87c9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23264ed-354b-441c-a3c5-36b830c06573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12904b7a-9c75-48fb-86b4-01a463f2778d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8802d064-0e31-48de-9085-3dd1aa6236cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e7c17c-bdfe-4947-a941-0a3ff1601813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b00358-6f88-4668-98ed-bbb64fef621e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70113745-a43a-480e-8c25-7a8ac8c63e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd5404e-aee4-434c-8594-99dc4662d90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c459b5b-5448-47b9-ad06-eba9d86ae284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8622742-ee68-48e0-9c7e-fbcfdaec8631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ebb08-40b1-4270-9058-b9e24ee0689d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88082d1-77c7-4d1c-843b-cafafe9e28b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad386ca-4c29-407f-86e2-7abb157e46f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9398fcec-0e2f-4478-b145-661bba6e240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b51f30d-254e-4584-ab2d-71480038e765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdd4308-1267-42f7-936f-b7a62c66aa6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84822ab8-8070-41cd-a14c-602a669e076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea272263-32e6-44aa-85bc-e1fe2c4205df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a134502c-1055-472f-8f1a-e70b26a13161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b35d7ab-2cb9-44e2-adc0-4ad8c1d34044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95377d4a-b48e-44ec-9acd-fa247c4cdddf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72de72-5d7e-4e29-9bb7-84edda3220a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeed357-2b2b-4568-adee-feb2beae448b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f920603-7770-4aa4-a49e-b02677342313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e9e5af-2148-474c-b17c-307d259f2a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6ee334-9281-4006-955a-0fc26ce5604b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd24e0e-b52b-4aff-a7ea-658ebddda686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e328ff-14f4-4c41-a515-3e32f6c03465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82b8964-e548-4550-8fef-c11fab586678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19188480-c4ee-45c8-b8ff-df39e77d8cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74624fd7-fc7c-43a1-a6c7-c9894b317827",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a46da54-4ecb-4fa2-9f28-5b36cbf83015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3e1faa-e8d2-4916-9390-061bd21856fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6bc99b-8eb5-455f-aceb-702b567afb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "018fac15-8eb9-4f21-b12d-af0513a016f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18364cb6-de9b-45c2-961f-287a5545a5c2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9189f044-da9d-401c-94c1-2b0191fd6191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b2bcb0-012c-46ed-a43c-95a264f4f19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158aed12-92a9-4ac3-8a87-5e9bf6d2b10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccce53f6-9b3c-4cdc-9dd2-9f1ca114e37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966112f8-0201-4c02-9bd6-bf650643587f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba05f758-721d-4b96-868b-eca18e3125aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fe436a-7d74-4d48-8c22-46201c04b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce0b536-bab6-4a78-aed6-86ffa3c54e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6eaef6-3293-4cd4-8447-5ab6c8347bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2dbf9d-0f57-4197-9c88-52a019aa5c62",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68357406-ff9b-4fa6-b35a-aa190333d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30daafbc-5076-4d57-ae09-1fec90a26928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0841e71-6f30-4387-b7f6-075cdb70b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3b6279-d649-4d93-8f14-338d3276d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b36126-b04c-49a4-89d8-cfb98b3af3a7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1751133-f5a6-48b3-a323-9a72f91dedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fcbe90-39ad-4e83-9485-3daab27d0652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44858f31-541d-4432-b77d-82c3ed182cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983fc496-c65a-47e1-8302-640e13575797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09ae6b0-8627-4703-9a3e-6481dba3fda4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb88a9e-f327-4c16-ad93-7b4c9726157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce24a23-f0e0-4836-8f69-14b0cc009439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec6eb18-c97d-45f5-b00a-7f341b5921f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22f7bb03-9744-4fa6-9d67-bb4e02227d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bf5c54-4325-4edf-ab06-1067c255042c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd83d45-2632-40a1-80b2-d80d5d0c54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9b4044-0706-4816-9d86-7195f2163740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc20dea-0b7a-41ba-98f6-06382ad39db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1332eba9-ec18-49a2-a3dc-a22c7d73ec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82fdbb-08fa-4b5b-b412-3f0eba737125",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addb6457-71eb-406c-869a-dbda6f6a8ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534a0e61-f5f9-4fa7-8713-31e0c0f4a736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487feaa6-52b5-41f6-bae9-24bfdfc14a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9aaa73-9fcc-402d-9a2a-204023f009bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feff162-beff-4644-b756-31d3ca8ce582",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71b921b-708e-49e1-8c4e-9d8854b4105a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87576b62-d761-49aa-946b-98d347a681d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58c5a32-c02d-4daa-b570-4df97628ddb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c2c5be-26d0-4890-b281-e9ed163bb822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba553b98-e201-4ee1-9706-037cf39ce55a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d6a3b8-a529-44a6-93d8-e8c3451350a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4379c0b-6844-49ef-a9b8-06f90a396574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b28c39-cfe5-4957-993e-49cb3dcd149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece08409-4131-42b5-be47-fb3abe69f382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c65f7a9-749c-4145-8b6c-b5611b90dbd5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a8a065-24da-45af-9aa8-e80016598409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8965dce9-518f-497e-b1d8-f9e14cfcb34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5341c415-a7b0-47e8-941a-f40bcc0844f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4eb424-0b9c-4e5a-aafd-7135441fc4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe900a72-9371-4551-93fe-8088419f6b4d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cbbc05-133e-4863-a0ed-3a3117c7c50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155aedf9-0dba-4a80-b4c5-dd32f6239e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b2e9f7-3776-4835-8125-1ded16bb34b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e93ba8d-aacd-4af2-8670-be38a43b1ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074e9ce6-ec27-4d13-845e-d7fc0bf27348",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16800337-0d64-47da-b266-e1f8a49fba5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0395d6b9-1df9-4faa-b6d0-64c7769ef8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7065da7-d73b-446e-8af9-76b955a1de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04bfbd0d-1199-4bbb-b0ae-11d572135389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d88019-cdcf-47f2-8905-3455bd04b2f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9e53c1-6baa-473b-931c-dac70c8a947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b6afe7-f518-45e6-ac79-fd5d6271bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ea7ff6-8361-439a-8eb4-4e6878e6814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e7607a-98df-4643-8521-1e62f037f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4efc8c-550b-4549-b676-d572c226f7d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0850da89-e3a0-4eda-8e3d-0a2a5fdb581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188e753b-d731-4168-8e8f-56976b7e722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d3af3-0e2f-4568-91bd-4b20d9f9f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bcc1f3-7e15-4aa7-91d6-701b41100922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d021b8-c1ae-44d2-989a-cebc1674f91c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd5056-a70e-456c-9126-e46937c60294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5a5376-40e9-4bb3-bffb-5ad78d47b111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc89b66-5d9a-40e5-ab06-e9d0bc022650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "badeb158-295c-410d-9716-784f1bdb2aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad04214-3c95-490b-a658-1405ff810347",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878b46ea-0423-43f4-9a0f-4a6fb965e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89510efc-4d9f-40c7-a6a7-a227b08ceb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d16e2c-21ff-4d2b-9e96-866f35812266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b7b9c9-abc2-41d4-9ccf-1b3708799578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a149c2-8bf0-4b93-a8f5-eb1ff4d8a262",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eeeadd-123c-4cc0-9f38-4655be236138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c29d06-8472-497f-939b-6ae0067747a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad500fc2-eb7d-455e-9c75-3445d4e011ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4a0015-a419-4dca-8e49-931c23d4ceb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6273f4e3-e1aa-4125-a029-9c1b8235c605",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0eca8b-189a-425d-9be8-d1341c1c0ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badb2e8a-87fb-4ab5-a2e8-c8cf6aed701f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1865bc91-f1a1-49db-9a01-71809b752700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc98e185-a1a3-45f6-bbe0-03ecd2e61dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c00df3-130a-460a-85ae-483e1b7e7ebc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1705e5-3575-4e2a-a49c-5fdfbd5bf043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9488d1ad-d167-478a-94f2-c854a8742dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e7a975-43da-476a-aad1-5c781a156f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0149af1-578c-470e-aac4-9a4ad8dc2d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f09db3d-ce2b-4178-95a2-95bb9244e308",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e911327-6865-4968-bcfe-3a7b4cbf4909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464abef6-3eb9-409e-9d4a-26dc3750f546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2517b55d-35c8-487f-8f52-73fb58ef7dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24247c77-2489-4c13-a64b-eb7fda9d0ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06606c09-614b-41de-b130-5ced408ffc6b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f4b33-7fdf-4e47-be5d-450aa140263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89aa41a8-23d6-49f2-b150-bbde26ef5903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32963869-1746-4314-9ee8-da2e1cbf918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b40eaca4-50eb-42c8-8aed-b5dad5b5c0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf7796-0b6d-45fe-8b09-425f17dcfd7a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb6990-fda3-49d7-b62a-f2898d790467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e677a0-154f-44b9-be84-473703de013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0795c4d-457c-40a2-ab2e-af4ea7f166ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64f0591-0998-4814-987e-f240e11372f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3566bb52-4dfd-4a6f-bad6-a898e5768a8b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe258767-4ded-48c6-898d-1fed1f2db07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8e1425-e42c-46bb-97f4-eb1237bccafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2306f0-e89c-43ca-8721-a66f4f54447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d387bb-5d50-4dfa-ba4d-8f7d63dba775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6bdee5-1a30-49fd-a1b6-3b83f33fbd1d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6fb1fb-2da7-42a5-b605-4152f6221e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d5650cc4-b7f0-44bb-832d-bfeae14ebdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faee5cde-e2e7-4053-b82b-d412440fdaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1e35b8-f1b1-4b69-8c47-34e01cd96928"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c78cc02-2294-404c-8017-2c3b9a6e7b41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e44d6ef9-61b9-45be-bf93-ee2e351cc144",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a3a1fa-7b6d-412f-a779-0a816fefbd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c280bf10-2e26-48fa-877b-e8eb5177264b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b237d3ff-36bf-41a4-912a-47e0ee643f05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97e7b781-633a-4861-8b1a-5f8e3b099111"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba7fdc23-a248-40a0-9195-4860db600290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f764d58-afd4-4a2e-823e-55e07717ebc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9f5a1b-41b0-4e06-8135-c65d24f06117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d04e2c-5949-4267-813f-bd60666f92c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70827022-ea13-4108-a424-c39305694410",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d2e7820-ea0d-46e0-a094-6a79d69c85f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "058b264b-5801-4efe-ac52-960c3c024a8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91146f06-3476-415a-9175-f2246b9f9f3d"
                }
              }
            ]
          },
          {
            "id": "581cbf96-6367-445f-9482-f1d5c041f7b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a73fca2d-c7f2-4bc5-a26c-a68189d0d851",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae586fbb-f168-46ed-bb24-2ad26c959a14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c12464e6-2897-4f68-85cb-e112d3514ae9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f792a5e3-8eef-4560-af2f-b2b5be35adb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a3003bb-e913-43a4-a83c-8ba0e5ff75b5"
                    }
                  }
                ]
              },
              {
                "id": "045c4dd0-6a35-4d7d-b369-2dbdf8f1a9d3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8fa3aaa-5510-4651-8183-14aac371cb9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35850f1b-fa29-4bc7-be50-846dea6e6d34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab71bac3-24bc-47f0-ad7b-d9c86e9ff660",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4aacb4a0-3a32-4c18-96d4-c8d52ead0008"
                    }
                  }
                ]
              },
              {
                "id": "d894075c-13a8-4c15-925d-80cc65b06310",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d39561-fdd9-48b3-8fc6-39e7793df15c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f7f22e9-7676-4b8d-a7e5-a51dd70fa459"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "305e6b31-d359-4de8-a216-a02cda4b7591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d2b6b5d-91e1-428b-be65-f787fbf6cb32"
                    }
                  }
                ]
              },
              {
                "id": "691342a1-fb07-4988-b030-888183dbf299",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86c7c31c-38c3-4319-916d-d35be2f95a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6aa3c672-2fe4-4520-bfad-7ed85b7d2db4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d140bd5-e14e-43c5-80ff-d82b4bef1cf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eac23854-b0a2-4ec2-b3d1-5f7c9126ff38"
                    }
                  }
                ]
              },
              {
                "id": "37980e13-f470-437d-8118-f28b67bf7495",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8934666-6c5d-4407-a183-557f70875b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f311797-bc0b-45c6-939f-a4185757140f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5b13ef0-44f1-4792-912b-071d36d84a65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aa2f844d-abd7-485d-a254-bf01e6c7717b"
                    }
                  }
                ]
              },
              {
                "id": "e2fb2c04-6ade-4a60-8d25-bd87bf0ae4ae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da22df0f-cf22-4b0a-a423-7d794a49dfa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37d2480d-f615-4111-8655-4c3d748e76c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bf9fe90-3984-4b5c-bfbf-0e6168b59161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "669c5c85-db37-4d18-b7b3-5dd7e13b7c12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4304d9f8-7e24-41ab-b320-0fcbad0ef76c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fc93a58-c183-4e32-8788-2a62d2fd73d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d737e116-edb7-4145-a4e0-f74ee75e97c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "226411b4-9383-46cb-93bf-4e639879a3f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58da1424-676c-4e83-a43d-4251dc52f721",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "feb9d036-50dc-499e-8d85-00896799d012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f5f7cde-4126-4342-b392-017c95567659",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "192eef2d-91d8-4c04-be6d-25e8107664c6"
            }
          }
        ]
      },
      {
        "id": "07673cd5-d509-4f8b-a789-b037d6014383",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e047df49-00af-4785-b245-b8d35f6fcce2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "784ec42d-1e09-4359-b14a-da31d519292b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e4fe14d-c27a-4231-a884-046e0784f252",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1874ab8-e114-4e31-8e05-572dc938f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d893502-9a1f-4b06-9d46-44696cce3863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505881b1-52cf-4b51-8a8d-1b00e851b30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "942eedbb-01ff-404f-900a-e15126bf63bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fc2a2a-513e-4cc7-a03e-4c59c62a9cd9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77559d70-083e-4d15-9393-50386f51b11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fe4032-bb57-4efc-b6ed-a29be0039532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae5c9f-c4e6-411c-96a0-03a18699efff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4936c2b7-cf25-4987-a2fc-7741b654b551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b555a-04a3-43f2-9517-d67416d5671b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc5d0e6-548d-4eb0-9524-9382471f1d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5a4e99-4f92-4d95-9e1b-3f1b618db234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c76012-7309-4ae8-8ccd-5110c6a8a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff07766-a685-41fa-ad47-8639a33636ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0131a76-4f65-4f7c-8577-7ef2b843131a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ac680-9de1-4ffa-bb83-d7ff1ad1b45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61edfc1-3743-4ac2-9114-6d5ff1747449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9480b1-f024-4ced-8426-0ce9025ad0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f16e5b4-a6a4-49a9-af21-59fb4c01b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ff4160-0be4-4492-9fc7-4e6b84fbb381",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf8627e-2750-4754-8a80-f716e1ac92fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fde9fa0-165c-4236-9446-ba05aaf70e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2da5e9c-2eb7-4c3c-9302-8386ddc1f7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb72cb7-1cdf-4bee-a64f-b958789515ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97440065-327c-483b-9871-bfe5b85e9797",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c07a2a4-8d29-4c79-83b1-46c291173d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84e4cca-fb77-4bdc-837e-1b17eea93d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81c2c81-ff04-4bec-ace8-935e13023161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a731d7f-178e-4388-8cb2-86398027b078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254e077-56f7-4f43-afff-97b35c8bdfeb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1625aa-3df2-4009-b7df-c08d49d32a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6996eb-3033-4f4f-83b9-982d96f2deac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6448f8d-b86b-445d-a988-bc22595ca8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50a93ed-7ebe-41fb-b5c1-7b671fadf15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c24c028-f7df-41f0-b8e4-14363f737330",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda879ad-6a31-483f-aef6-6b25f513a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31be6270-f0f0-4682-bada-73efb9061d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45322f6b-c3c8-4334-b2af-055c7071724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3573ab0d-69b7-491a-a163-24020b877c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d13c3b8-2d3f-4705-b013-2937788a6225",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aee4251-1783-4651-a3ff-674621e68d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e75a4-85a5-4670-ba3c-9d7064fa00fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9296cf6c-a619-4c1a-b6ad-6e6d68eab5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85dbb76d-e1d9-43f2-a12f-1281402d131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06b4fcf-5918-48b4-968a-31cc7fa8f27d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38ccdfc-8a74-48c2-be8a-036e89571450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d811be-31aa-4245-95e7-df3d6e204f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b82f23-1135-44c5-81a1-f84f3c60be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37901168-b940-412a-94e3-b0ecf0a48782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef76d99c-033d-473b-88b0-f36d4476e187",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb14a0d1-04c4-42b6-a96e-de8a8546b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8f1cb2-b90d-43ef-8b16-2cd73152dba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3610851-5ff9-4995-ace5-ab1f4697b6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecde5b4-821f-4c49-b9c9-eb57c4a138ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615e7343-687b-42e3-a690-3ba564214961",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a982e4c4-84be-4fa7-ac06-21579bcb23c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76bbac7-7209-4f3e-ac9f-4d76b50247e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c368bf-280c-478c-96e7-b2afe4df7e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00daeeb8-101c-4447-9cbe-8131ddf830e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e916db5b-c68d-49fe-affc-9fe6da7bcd76",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b3a3e8-93c9-4c64-a5de-219551013f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f088051-fc6c-4722-b810-6c106fccf7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e19113-95a3-4840-8454-947bae005a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c24197-6070-4024-94a0-a668a1a75188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6e58fb-2d07-4a58-bc0e-8919e59f2379",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b79e74c-8567-41dc-9541-2b7b89f167ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f108cfd5-b3d2-432b-8080-f81bc2de295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1491dc10-554e-43bc-8c0d-425c84e13a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "debcc51e-21a3-4547-a802-a080b7533764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b697fab8-aa3f-408b-a305-efeee24443a6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf753ee-e418-4873-bdcc-f8eb56a83d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5bc94c-7be3-4c2d-898d-cdd4f77c4078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca1e307-4794-4df2-a56d-afc52a54386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "54410564-f08c-4b01-893f-415484c0eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb24e38-f551-49a3-8a09-4ff02bfcd585",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db1ef58-32a1-410f-8f03-26a61e941c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a346f70-658a-4af6-afb5-211d53977760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b4ef4-5b53-4d77-86d8-75c97dbbc137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "547029ae-8d7e-4167-86d6-195660d0464d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f693c53-c420-42b0-b717-b2a684c16824",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a67f84b-9286-42fe-9949-fafabbc60fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712fcb5a-4d04-4cb3-8689-16ce519d98b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1858a05-ff1d-4b78-8dfb-d86ad083c463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b180ef13-d347-44f1-8bb1-f5b6fa84d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7554544-eb78-43e9-9a72-f039e169fa94",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8d603a-4aee-4ef3-a258-bab6cd7b7647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c473a1c6-1d62-43c0-99a0-e082f290408d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75437e94-16a9-498d-99d0-88e960b83fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfd665e-3198-43a9-94b9-042dadf95d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e358b430-7207-4500-b723-cd04360e1e75",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb31212-f036-42a8-8841-df68862f848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86138ffe-552a-4b99-86ae-1ab607346526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fba6fb5-ca9c-42f7-827b-fee3f2a1ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1381cb0f-d02e-4080-bfc2-750cbfec5ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d037ff-cca8-403a-8caa-f6795afb3bbf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04794150-335e-4472-a7d5-1eab95e4cf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258f0a98-f384-42c5-a455-591fa58ab883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0730c0ee-9b5c-4bcf-80de-d26861f215a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c88c0a3-d66b-4a0b-b02c-7463d9239fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58af5181-1615-4079-81fc-10f2cae0a5d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ed9ac4-a79b-43f6-bb04-198c03f93b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b70935-e3ee-45f7-a132-40d5d067a64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503231db-1064-4444-9d11-389ec2918dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a58daa31-c7a4-4fbd-a907-afadf19d695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6c015b-8d95-4e63-b089-d0639bcbfa42",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab5a5a2-8612-468e-ab5f-6ea2d9a1aafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d802bfbb-1821-4f9c-9bd6-6794873db3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807bdf6a-fa50-426c-9175-4ce668907ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6a2769-91c1-46b8-838c-12bbcea7fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7e792e-188a-4ed3-b3cf-f27181959076",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c04d7bf-6eaa-4ca2-a313-e8d484ac6ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a219ab-1ea7-4e02-a037-0fdcaf20d5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb57982-2bf0-4dc5-8d7a-979f2a57df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b882d26f-dd8d-4f73-9493-318c44f8990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649d1ca6-e7ac-44eb-bbc3-5705304a3552",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10925749-4060-489c-8d2a-06d70c3901fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874e0066-586a-4ae7-ab60-f78577c4c1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de04adff-7ce9-455c-bcf6-8fe98ca6db1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c727e68-3366-4cac-9f09-b8a5691d2fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06911977-913d-40df-bcdb-cf84f8114bde",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a31eba0-f319-4e03-bf1b-8eba83d6a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b359ab17-6608-47f2-9257-e1492086e8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149a995-f50c-46c8-8de4-a2c2deed1cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18085845-0679-443a-bb9d-e892c6ca1bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c2a5ae-5a3b-4954-a297-bff0c1b6d096",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa4370a-db95-46f0-9add-3c72b69bf717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3433cddb-070e-4595-ac53-b42d52f8bce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ebf043-2fce-431d-8717-144949e12a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0e26a4-1a20-4413-aaba-280f49c7f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3111aef2-5d4d-4516-8ef3-6f2cbcbf6516",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e840a1-2820-4e0c-94a3-b8eb3a890f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df65ab5-cee6-43ee-a3e8-1cc213577674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a54c705-23a7-4003-8b21-4d1cc30814c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62430f0-cabd-42d5-b988-32298691ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f19fa0e-9373-4cbf-9f32-46faf02f28ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c03f60-e3a9-4fef-a9df-9b0a77e9ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddc81e2-4822-40b3-9f79-bc36a9d0b478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f44ba15-c3dc-4d5d-a5e6-aca6e3fcf0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9338335-da09-4806-abe2-c7f69fd710f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853a61fc-410a-4cbf-b2cf-19bd86ee1109",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987f9c3a-cbf5-4d42-96da-e84dad23aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c561065-33f0-4e35-bf2a-dbdc173225d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e57301b-ed0d-4158-a9fe-a221c1f6c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46849fa-3f7d-4703-bcc2-0f9e5a8d7cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c20cdc0-c6f3-4a45-8020-1d678ecd10de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c49e4e-7239-42b3-81e6-8367b91e0c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef04e85-e04a-45cc-bd4c-80775cfcf2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507f0b21-7eb1-4107-a0db-74ea0de3f975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be091f2e-ffba-44b7-9479-73effaf22759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6830d4-3bfa-4bef-b9fa-826798e9ab3d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a17392-037e-4783-b541-eeeb060d1d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28132e0c-7c12-4c6c-b56c-aa62502f9802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df882925-acd3-4379-94d0-9fe4e0f5948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "915992c8-8aa4-4e3c-a635-7251fc3c0bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79420a27-7bcc-4170-9763-6dbb62fd42f7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982bbacf-69ee-4195-a7eb-072a18f0eb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f33664-e7e3-4595-a6d0-d4efa7658233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57b62b2-d2ec-4890-9e7b-2176cc850b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c6bfe3-2cf1-4bcf-a1a7-3cda0e031691"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cba01106-f3c9-4a63-8aae-add679a48f9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d5249ea-9d37-49a3-a259-ca44a482f731",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87782ea-579f-4057-ad9d-44a70d633104",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25b0b411-4a64-41b1-b99f-fd37ebd26980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b883c98-64c6-4b83-b98b-b8e4e8d6e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4542f3d2-67b9-4e17-b31a-cae86ba3a02e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50025d43-cb1f-4fa1-bb5a-be150db8d7b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a19c2943-f665-489e-be10-bdd7f07e9380"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05189e44-4f6f-4100-b2fb-cca6b285dacf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "687cbcf5-a79b-4849-8442-76f926937ee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a8045f5-a0e2-49e5-b6cb-43b30619be58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9fdf0f29-a25b-41d4-b931-dc12efef0610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abdac92b-a5c7-449a-8b42-c43dca7e3b4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5986ff91-8550-4197-9c53-8fae3e47cf95"
            }
          }
        ]
      },
      {
        "id": "0be758c6-cf8c-4df0-ba3d-d585832aba52",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "665817ed-d60a-484c-ae84-8692705a3069",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc2da50f-62f9-4e14-a4f5-1dd345ced367",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9008f99-433b-498c-95aa-0ea25a67c992",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2dffc-0aec-4ff5-824d-93c381bbc750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73260636-cc02-46a4-9b64-aaafeef020c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a2d01-d0f9-4f5f-bc56-ee1ba28396fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c80613c-4ae4-4dd1-8226-d47ca7f135bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97e0780-7982-44ce-8d38-e4882f2d3297",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a582f7-a600-4f69-a862-a5e2d7000a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02a3d82-d382-4e41-addc-8ad59ebe4b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665e6fa2-951f-4d89-8a35-d1bb0cc38b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b392d51-7f08-443d-9138-60324ccf7e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c70c63-974d-4520-85ee-6283d9b63d59",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca9a041-868b-4c3d-bb23-b2e29ac38028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba27f18-cca9-4ff7-a910-e7677c4263ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf34387-b0eb-4ae1-91cf-2f0ef8a8838d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af6f646-d044-4bac-bfed-565917f1497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62a98f-554b-400b-9d04-22a0a48c394a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c3e0dd-3360-4638-ae9d-994fab653ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012ef4fc-3c3c-45da-9d3a-3ff7490dd390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d3001-db39-458f-bca6-ded04d0fd60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a83b51-7d7f-4a8f-8e8a-b776ad750a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb51f28-81f5-494c-90fb-923a066e7658",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b95d53c-86de-4f2c-b534-31fd2ce613f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d164694-4ee9-4a77-8f46-effc3adbec8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e3647b-1019-4606-83ae-ad139f3dccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce42112d-32b0-4706-9b09-3a7feb43d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a2c48b-c71e-4a5e-b765-449a32f24b19",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d1624-86be-4ac1-9d8d-7ea53962a364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d678f78-eb2d-4dea-a825-0f32069f967e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090527d9-80a9-424a-a02e-6a2e61ac0b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0698d02-d712-4906-af8e-46875aa41fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0475d2fe-be25-4e6a-87d0-8f13dc557789",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e866d9-52fb-4a89-8031-ea967c871563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a790b4-4fce-4d50-a366-35d30c5040a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6a111a-21ac-4622-8c7d-59eff65462ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "53929af0-ca55-438b-8c27-bfd9c4e46b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee365621-164b-487b-9444-4699b43612f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f85d43-72cf-4a24-ad5f-9ce5ce7a719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c92cc-70f5-402c-9f75-3567e2a966b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57f4691-977c-4a1d-936b-4019fd8d62a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fa4b90-3efb-4bfe-a09a-d2021d71f4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5473df2-909f-4bf8-9d99-7b51a876d1c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0430b3d3-0fb6-421a-a2fa-f9157a793c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eea1f7-0541-4474-920e-dbc3e0ab97ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e77c69-1ed4-44e1-896d-5357787b4961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cebb49-6084-496f-be28-30470edc26bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec564f0-98ba-495f-8f14-3f8f1276d7e6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e58c8-6e0c-4959-a5c0-b250c52d4951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b5a914-c90a-40c6-8438-4a3bb69543e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea2dba5-00c7-4f2e-8850-bcb41b7c5c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcfc6af-f0d1-44df-82c5-d6732399fe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b4f635-b634-4a71-88fd-ee8304cbd6be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161da630-9841-42e5-9ec5-73dc272c577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18ff09e-b178-4c0e-9048-c3ffaf39e73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f1ef8d-afe9-4368-bfca-9184153a15ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "49f423b1-c37a-4eda-82db-1885a85259d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27534303-8907-49b4-a835-b64bdc9d8e2c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee36cdd-8a37-4af7-924c-4abcbf3f8539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb30c9-a450-42c0-b5c5-f753bbbbc4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb4714-4ad2-43b2-a44a-0ff7e8171020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af371932-b9bb-4334-b29c-e3c2674518da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64767e7c-2125-4e0c-907e-ce09d638a5be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f33dd-afa5-4eec-ba92-a2f5738e6581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084b3810-740a-4ace-8dba-8b92d0a8cf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5550c5d-de15-4513-a148-f93836868a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6349759-5f5d-4000-bb93-251bad980ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccae3cd-86c0-4f6f-97b9-0c35f1d8ba9c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b0b4bd-9c1e-4c56-8c47-3ab277bcf175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e1b0f7-fa6d-4bf1-b907-4e7ae5d16c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a38c2-6b95-4650-ad64-cbb5a4a4b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc3ee11-53dd-45b1-ae42-7d3668c6c4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c7d43-fc4c-42ce-b770-b903534c2d67",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436449a8-68e8-4a79-ad2d-87aee1511068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81be089-040b-4417-9a71-b1d9626c8edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e514391c-f533-4d3b-8e71-5a350fd00a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9725836a-4e24-4aaa-99f3-2ae66a0b0266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a6430-e480-4c57-8eaf-708acad48ef3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15022197-c598-4928-bff2-6659e16c0436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d984fc27-1697-45f5-a2a9-acfd84413b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7c1b62-6961-4ad4-ae49-27c5932ef432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c854f7ae-7687-4209-bfe5-7483bb59445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214474f7-767a-4d2d-b0ad-c085e75981fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfc4ed0-841f-4816-9f3f-f9f287f7cc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3296998f-49db-4e95-a8a4-ab8247e1c597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a95cf-89af-48ef-a00c-ac5403c4004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea581703-14fa-4320-b3a3-69b5a31527f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f5fcee-6de9-40b6-9138-cc9bdbf8ea82",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82230dbf-bd49-44ec-a674-a3959a0a9090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c9f56b-dda2-4b8f-a9f7-32fdbe6652cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e4c27b-bab3-4563-9685-8bc88c1c630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0291ccc0-9f3e-47d6-a541-00c8327026b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45853327-3643-4a4e-b8ae-3824cc56cd86",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757fb393-4f35-4710-9733-26af03c12c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252be9c5-3e03-4e71-8ee6-442cb3ecbe64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb90d500-7bc8-47f8-8501-e0bdab2b66e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e486af-e544-48da-800c-86aaf6842d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c4ff3-1a47-4170-8de7-2e35c391eeec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6105d37e-21c4-48f6-8d5b-940e830bbc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da171b3-61dd-44f4-858c-caaefd6c2bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a505490f-8405-46da-ac91-5b7c75b5c747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0568a2fd-0eff-48e1-be56-1ea56363e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f45920-f884-4b6a-ae49-3fd963244d20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa9c00-4d4a-471e-891c-16eb366dc615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6a903d-6dee-4bf5-930c-0bf374525c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7635d119-24c6-4137-97b5-d8eaf3e016e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d8832b-ab5e-4f92-8e1d-5ad62f1793e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e93bd04-0d89-49b0-9be0-193ae49824b7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ea890d-d47a-4452-a05c-e886306ac904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dffc81-6ec6-41db-afe3-268d0272d53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c93ad3f-ceba-4267-8d0f-4f4c35d639b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "172a1931-3a10-41fc-8c68-d2bfeb91f9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f159b282-c3c8-4542-941e-244456ee2f07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0df21b-d687-4e2c-802d-88c33c1f9230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49048810-631c-4ecc-b23b-d0b275737f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af5c887-1d72-42fc-b4cc-83d8dc4ce854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e7a0a5-d9ce-41c7-a255-a06a74dceb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45138482-63f3-4dec-aea5-a64959f398be",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e425f9-31e2-4b32-8d6b-a98d9d028e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81938374-5bcc-4c2b-908e-adca4cae1dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e097b29-5c4f-47fd-8169-5512ec14dab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da1312ec-3fe6-4711-89a5-664e4c4606d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e224be-3d9a-4aac-9e5c-485c96c0ba44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190807c3-14a8-432f-8ef0-f7bbfd664f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0d0886-ba7b-4543-8152-1bebf77946dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2983754e-bc2c-4376-823a-7d5d99c8d47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "326cdb6b-f818-4bf9-956b-aedabb3c8a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132059af-ca41-43d5-8a4a-a8df8bb764da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164db67f-0147-424b-8e83-e39f4fe667d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f54cb8b-998d-4703-8ce6-42b39ec5a054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebc7483-1251-49dd-955b-0bbe5d6cdf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f1ba63-c48f-49ef-867e-82bf69f2118b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5001a538-eea9-418a-878e-699b28dc4c1f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35011cbc-b9c7-4178-8e81-d87a6cb1c509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ddf2a1-1266-4309-ac27-059d72a0739a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040db45e-acb7-4b0b-9600-438e5481b0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafb118f-beb9-48a1-9fb8-88fc2a498edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb212194-0c65-4310-a5e9-13249b3756b6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c35bd8-715e-4eca-8660-5e66193f49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df1fe62-4b5d-43af-b37a-000b4d5719fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47be831b-61eb-45ad-856f-2d2c8121927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcea3c2-550d-4e46-845a-515b0c96dc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831671a2-f772-4bc8-8733-fca2b14fb5c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4838ebe5-1c5b-46fd-a7d7-a4292b301e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5538f3-3089-4daa-9fdc-c2710c7ca7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e306c2-1a09-4d49-9f64-99916e2ce8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d172ce3-486f-4b43-9ba0-1b9c58b822bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e7dd1c-0ff4-43ff-8824-97f5a0275a8c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae73fd5a-f3da-46a5-9998-e98055340f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d301bf7-c9c4-43f1-9238-8d2943d1c598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3ca956-77a8-4a34-9cc1-80709601db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca024ae7-1af1-4bb4-902d-32ac434838d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0ecfc6-efc6-4627-a0d5-82ae5f7db19b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b7afd3-0b36-451a-9877-c6d20c6563e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46367fda-ad52-496e-b193-83f089b93e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae96c8a-db87-406a-90dd-6d0fa2cc5d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2900e077-b23b-4595-9304-fc2eac585c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45331a5f-7aa9-45f7-bf08-79e46c3a68a3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e112f7-9493-4b36-aba9-bebbb49c291c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b729ea-496d-4f5d-9f2c-7b0f781476d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c80ddc6-7b47-45b7-b58c-b4bd063fa234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d8fc9c-cb4b-48b0-8cdf-7bdca080dbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01953af3-977b-40c1-8e9d-712167970b59",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd0bfc6-70b6-4d4a-b602-52fd6044aac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6905a1-8266-46c8-8065-7efc140ef049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6f690b-196e-48f9-9261-98ddfc92b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1482f4f-de25-4810-80ee-01bff686245c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc2d04d-6e99-4ff5-9515-29affa82cc54",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5186d346-eefd-4a0d-89b5-5211360fc4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3040d997-bd97-4eca-9602-fb3d24e7630f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb0b942-bf20-422c-badf-817244db38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d7fe91-7536-4246-8d27-b69148775dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b86077c-8b33-4bc3-ac1f-2862d1c4fe0f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d173b9-1903-4bc0-9ef8-c9170b6922b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ccb90c-5737-4936-927a-d970c5b81f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a163d3-5701-48b4-a791-5a5baf5374cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3ee1ac-d915-430d-a5c3-7fe70d47f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c427b42-2025-4cc1-8041-1673e0234cf0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4076e81-8caf-4183-a55a-18ad3bad35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5720564-9dd5-4a07-99cf-941664315790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797bb05f-4115-4b72-a129-8d29135e6c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b531a1-e989-4b48-a98a-bcf4ebe54783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87916201-eeb6-408d-9695-beb12ae9bc0c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61234f61-894b-498a-b16f-d07ca86a7dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907bb2bf-a483-4eb6-8454-3c082efaad35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8415d38-bdf8-4997-aa4a-fde7fe8003fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5c33a3-cef2-4188-b257-163033ccb892"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "204b6ff0-96be-43e3-a19c-5e0bcddf3e17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b09a244-29b5-4b3b-82e3-9a9e9dc874a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5162ee-5b05-4cac-b75b-1003e3be37db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ce4ddc-c8cd-4c58-842b-782f6566542c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933c74ec-938c-4e55-95e8-b9c49a4876ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c00052c-45f6-4f26-a40a-76c2664400f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5796d3d4-b1dd-4b08-8d27-4cd47a1e342b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5516cbb-132f-47b5-9eea-4cfdc69f9c35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c9e6973-189b-40fe-91ff-4ccd48706ed6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89ed5cfd-6335-40ad-864f-e6db10c52040"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dac95fa0-7d14-4611-85e6-431a43922189",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "832c5ed5-7f87-4198-a732-b632b764174a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4007abf-efd7-490b-b454-fe01a21a8f9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5661bc4a-3c00-4320-ab84-7b04dd33c1d9"
            }
          }
        ]
      },
      {
        "id": "2c31a342-7f71-4e23-8b46-a27bd5e23a52",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5433b3d2-1f5f-47f8-8034-e6c7dda6061c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9cfc2af-a9e3-413b-876b-b723735c34d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55b38956-69bf-4e06-89ce-f64883bbe9bd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23cc09a-d8ef-477c-8104-bd8e49d84f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c98160-7a3d-4f24-9a75-38ab4fd6a16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c5e3e1-ace8-488d-85f7-e5cb2987495e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78355fcb-0875-4e40-add4-c3605ed53127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0c41c-4c82-4dc1-998f-70fb1b9230c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb829b2a-4f7e-4558-83ad-21ddacf80ae6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eca05b8-83ac-4d9c-9d96-6d93c6893893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cad850-acbe-48a1-ab46-e2932da67f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81daec-4be6-4505-85ac-8718b925ad7e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1113e372-7724-4b67-a517-63299263f884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15eb3fb-5e9d-40b3-8944-030493363657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fc4bf2-4735-40f5-9a61-d83900016dc0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285bd90a-a83f-4f36-b5f8-91650c58f610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65058fc8-c76a-4b5d-901a-76f69c825315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d4bfcf-0385-488a-b7ec-6df3c7ac59bf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6511b285-6b49-4c8d-9784-73de197e7d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5f8a49-3863-4c27-927a-9bd788b871c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d4282-1392-4cfa-bacd-61f3b65f0055",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb9071-9352-41c5-a195-d4c351ef4885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe02791-291b-40cd-b4e4-718110298fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b232a-fcd6-4c0a-8e0d-a0743cc7c65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66964ccb-6056-433f-aca7-b46dff2277e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08176025-71b0-4952-9f9d-6c60ac56426c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e89045d-fbea-44b8-bd5c-c164c04e9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5e9c40-333d-4d35-9147-6387a6981e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc89827-1f9a-432c-8a64-354e461a509e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e27160-05b9-4fd8-943c-1cad1d5fabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4da979-0162-40bc-adc8-00c9bc5f1c69",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a909ac15-ca9f-4231-9044-6823676cd084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7fb866-dce2-4bbb-810a-cc9baa7c5110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e1d02-fdd4-4592-822b-84d82fbcae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d001f6-bdce-44d9-8ce2-a890c97a2863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87aceb9-de6e-480d-bc90-4d75646f4f77",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0da18-1747-48df-91a2-5a473080d667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caaa5a87-6fc7-4f52-8483-b12dbb025e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a88c855-b5f4-44ac-9b14-6820627a9c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52349335-9512-430e-b7b2-263f0fb65a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb07d28-9d9d-48b8-b265-be7bf2db4888",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b3204e-0011-4055-b918-c97b39fa1538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bb6308-1aec-4bde-a922-fddc56bd5db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563c5e72-9353-4c89-984b-77fe1de91399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5167f928-d462-419b-831e-665a3845ad72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fe061f-a2f7-4f49-a7ec-ce5883f85a98",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afde8bc7-097a-4258-a956-017772207510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d65f112-fb09-44d9-ba11-0ac5d1544215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792a507b-2dc8-477c-b6f8-5e3d937071cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bee2f1-b532-4eca-8c89-4ab010ac569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21ba734-6869-4f90-b2c9-391ca7863363",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc31dcb1-e854-4e14-881c-bea3c8eb6ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5b2587-ec26-42c1-8637-08e8f57b1725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a877748-6191-4623-b6d9-3cad71c7aeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cda6e6-f2a3-4f61-b505-1bc97a4464cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e6a0d-d139-4152-91a1-ae4e42bdbb7d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26befd48-1565-4337-b6d5-212267b9d89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01565021-6215-45d8-9d07-b4c347254ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd220abe-088f-4835-b36d-2469676f07ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a690b51c-f675-4e3a-99d5-aa12e14d2ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d84e3b4-5702-4384-a080-fee3c29ee02e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2b3c9-2cec-4e69-89f6-c845c9acd8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b23fc29c-b59e-4de7-8806-5506b4c87204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cabb21-1a17-4b8c-876b-970b0fede707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ceff87-a8b5-46a4-92b4-30a60c1d899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb6a700-14ae-4976-a304-3f5bed5fa4e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea5b84-cb4e-4bc7-91db-33264049a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207f1f8a-7e76-43ba-82e6-56825f416eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fed7048-1056-43fb-a3b5-fd91d5604eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de3bbb8-7006-47ab-98a2-5b0299e09891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d5e9c9-7749-4721-a984-4ccd4dbf23d3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91976c8-70f1-4df4-a489-6f108db56501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6826364-8a7b-4e23-9b7d-7f9447cddb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e3449-223c-4e61-9c23-8483a74d8464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da154bc2-cf55-4dd9-bcc1-c116a6863c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740aff43-6396-4f9c-9801-bb1a8c0ec213",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8226ccd-7d58-453d-8377-14d836eef98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d5dd9e-d122-4324-a976-a54c891df996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b983765-d5ad-4e6f-99a3-f8475fda7a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ddffec-30c3-4288-8647-a64a57b4b1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fab673-be33-40f8-9cad-b6c66fe799cb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758c647-ac98-422d-b35f-9816595a6400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb845ba1-e835-44fa-9ec2-4c133cb589ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f4da44-9179-4767-a555-d5810f498239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc346a22-2ca8-4618-9596-accea71e538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aecdee8-276a-4472-89c5-f937d5fba526",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2357c86f-a1f8-4ffb-98a1-826dc420bdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d9fe2a-6f9a-4abf-8cfb-c8d852eab314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0be0f4c-6ade-4d91-8e88-24d5e5002e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6daaf7d1-356e-438a-8def-29ffa34b72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d0ddfd-3a5f-4971-b97b-d8e7abb7b3fa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801c5278-1884-4144-bf05-b1bf7883120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6779b3d0-e5b9-453a-a273-089d4080d7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de0167a-a87e-4a76-8a25-0f1cc8f15842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620aaf35-d270-47fc-8dc9-eda5566a670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c53eb16-daf1-4de7-b5eb-f139356fa7ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3344c065-77fa-45e9-af07-8464484aad53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1456e03-795f-4df9-8d70-327385133b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9ad0a2-b40a-4850-a20d-a0da1a89bed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb72ed4-ba4e-4406-b843-08e5c6a99bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae6e25a-b7bc-4bf5-9328-33826c67da69",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949343d5-2d96-474f-9a8f-7d5e43de1ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee10acc-02d0-450b-a770-891e96c8ad6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14bc08-f639-466d-944e-fe6fe6ce57d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a7f6a6-7246-4f58-9a8b-e3ccff3574ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940d645-fa77-4482-8198-c3b06776959e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8469c8-6293-4983-9d29-eefb2f62c3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ccabcf-ec37-495d-a1e8-f8c9d959a981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d0f797-7d4e-44ab-9b1e-d5fd60c72e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd88b50e-3fc8-47ec-98ba-badff5510b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378fb639-042d-4335-915a-50b0c460c78b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06207a9-b4b7-4d78-b82c-e5954dd4aec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef28902-e47c-47a2-ae24-d414c7904d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbebf079-ae63-4098-bbe2-ac6d1e1ff2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164d8b5c-ad56-4b9f-9fd9-158d184165bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acff94f3-8204-4f93-979c-bd14ce60cd87",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5df01cb-6076-4d77-939d-f7336cd1e64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422a01b6-9be0-44d6-9007-130c4821f3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625c87a1-857e-479d-b3cd-1805b3345b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c218a1c3-312a-4e8f-b20e-4c56fb80db5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27756d7-41c3-493d-ad15-45d21be733ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56048bae-f663-4a96-af91-9e7a4cd4be22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f53665-8165-4774-830b-8bf8948a8261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5572b79-139c-4b95-9460-8a605b24fa52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcbc555-6ce0-4099-8a4f-12e02863ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c320a9d-68ae-4da8-9b08-71e248d68682",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5686e4-fce7-4ba2-ac53-631ca48f4c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5039473-9a43-4e3f-9e69-4c8f8a26080e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ff421b-37b2-447a-8536-a53711f01491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2f028c-d49e-4eae-94f8-e54831506a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf63844-3075-46f4-9fcc-c42211ecd73a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281640ed-dde6-4cca-ac86-e31cff861c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794900b2-febc-4054-976f-33f82984eecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7672be91-4c8b-40f8-b237-54f2583c05a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a0b472-5675-4cb3-8da1-8872476a95d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d473e896-f5e1-4ae3-8d9d-4c412acb8031",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c4fe8c-d246-40d7-a46e-6248972db0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ff9c40-a156-45b0-8d08-4b615b718698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dbeb3d-676a-4d57-87a5-54b8439cc0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537296fa-5387-4395-9f48-58eb0c8dc1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4be17be-9dd7-4d36-b55f-827e644f651f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e0c3a0-0b86-4e74-900a-ca15597f54b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997ceb88-69f5-453d-be48-133e2f98dca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a599e7b4-29ff-42e2-8e4e-788167111f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247a1136-dc99-47d5-8b7d-eaa2b0e7c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab25b97-0549-46f5-a7f4-d726c814a532",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61bf5f-fb67-46d1-a0df-06b78f008417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "445ce631-11ef-4686-8adf-227770a265c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cb2515-0c22-413f-bb27-1080527928f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccb03dc-459f-4223-a1fa-24c4c9c8bf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f676308f-df2b-4dfd-9cd5-93626110890e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14195af-284f-43d5-a7c9-d11130ff2262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf6f7cf-19d2-45cc-9c2a-a16ad20963b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc67265-1f2e-445d-8b81-630e799fac03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770e5af8-915b-4ccf-be15-40eab6b1b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dbe2c9-efa9-48dd-85e1-1185f8696ea5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df8d3fb-7899-49ed-8574-1d352552c293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f10cf33-ae68-4b5c-8dea-fc181f9f851e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2ee52-b2cb-4ce1-9a25-bb54051cb4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851a2507-4fb5-49b2-8be0-ee8c25297197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a99b028-b42a-4d2d-a2e6-5f17a3880f88",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfc538-44eb-4ee2-a68f-d7a65f3c66b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f41343b-fb54-492a-8657-47eee453e4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf529e-459b-41f3-a74d-ebe076f15065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8709a0e-05b5-4bc5-9824-300346780e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d9732e-4c41-4fe4-b7a5-427a8b2c72d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78e1dd4-c0d0-48ea-807d-5e2a44635828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8253dbda-cd5d-4275-bca7-dd3c1af30020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3366fd07-6b13-4e80-9204-f9187561cb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3bb463-807c-482c-a1f4-64bbc527ea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa31265e-b00e-479e-bcef-eea6824da295",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8aed5e-c09c-4e4b-9772-f9adf7070bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a912e91e-3156-40ae-90cb-763d5c11051e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc7e38b-99c0-47f3-ada1-dab021a0059b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07616933-1351-47d6-8949-4f7b8b9d4a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1110ebf6-aca6-4ffe-a025-05ef28f7115e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7917db8-7155-43e8-b161-62f4680c916a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba9f5b1-d251-4ac6-83e9-e7eb3b40418f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e45dd8-d128-46fe-8fdd-7bbbee456097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdc40ee-a8ac-4e40-b59d-ec74148608a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3a020f-6d82-4f8c-a9d8-0d987c173ac3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f87573-ef81-4c5e-85ef-fad3f15a9fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b129c85b-32a5-4c7a-9584-872b07b8c6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29110ab2-53bd-41ef-9df7-af8b5279f46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d026f8f-2a72-43e5-bf71-b93aab8bb5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab41a52-fcb1-4d67-aefc-ad0782cc2586",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc23b2ad-8b2a-488c-8917-0db4086b8dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529036d5-7f73-486e-b9cf-8c9411963dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f1c4d-89bd-47f6-a26a-319e188a03a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f086e1a-32ec-4236-aedc-eb2437e270e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980685e-1b00-47cb-901e-63a6e7154a02",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406bc26-e45f-4aef-a440-d4ae570c5e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6d6e14-4cbf-4c3f-8664-7528b55f74e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c2a677-743a-467a-9f71-3dc3afe65f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740b3224-e56a-492c-a8d7-0a204cabb084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e2f99e-11d8-4d30-9a7b-58166b0aac25",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cce086-d52b-42f8-b568-2db7db8cf240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3758fa4e-7b9a-45ce-bfb2-500aa8ae44a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568457c-8d27-40e7-94d1-4c33f57b6f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80945536-2c7c-4cce-b2a7-9b90218210e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3ca79-818d-4fe9-8883-c33fda20e112",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c9dfb-439e-432f-9593-59363864c063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6596107b-c8df-440f-870a-8400bc7fd880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69be032a-e08b-441c-ac70-18bf387d02f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc80adf0-1e31-42c8-a745-2bbd3a9deedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a350de-9a43-4cbf-a2f1-25369fb86f36",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254090f-5fa3-4eda-8e3c-b41118a8496f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d61fe5b-4f9f-49a6-a973-b54010ddf183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464cf7ca-bc5d-48e9-8bbb-6b14046dbfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e51bed-265c-47d6-88fe-845f046bdd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e7258-0a30-440d-bd78-2c8bdca0d288",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f85f88-aeac-4940-989c-cb884c392f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3190c114-bb38-4065-8b44-5d29d99fd3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11869f88-1919-425d-9def-a141dd502523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac06c93-db7e-4c54-ac0b-0df806ab067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e5332a-847c-4abd-a2d2-c54aad1ff1f3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e26435-85e7-40ee-859d-96941d913097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d046b1-7052-44f6-aeaa-97e1959dc292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1644e2-a6ab-4701-a279-69c963e1b5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f55ca8f-4e8f-4fcb-931d-b6b3df54f954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e47e54-5b74-42ac-8222-ead7283c2b6e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c0179-f545-41e2-8174-ac24d47477f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6ec1a5-1aa6-4781-b018-f7f6949b53ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb229b83-a241-4d36-bd12-a75d447f0ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74941e8-c4df-483b-a030-ca9923c77b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3771e8c2-04f2-434b-9e79-de7e3e3b840c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b92a422-074c-453b-9eef-8dbcc2d933a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bd8601-29a4-4ba5-9f81-eac55fbbe991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6c73b6-89cd-41c0-b034-6212ff5a950b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213be617-0267-48cd-9ba5-3d5f16a7928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8c3a2c-8085-47e1-bcf3-8797ab2a5d18",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4582dfc-c63d-4f13-8413-a72680b20e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d81a695-99c3-40df-bbcd-81e0b9da9f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921934fd-c720-47f9-af26-49b0dc7206e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7fabb4-8e60-4bee-b021-d28a9e11fb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202a18fe-c387-4728-a35c-3e1896382bcd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3958eafb-da47-445f-9dae-fa68be684200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bbbffc-6f8a-44ad-a6fe-8f4dc8b17695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc1ad56-c72a-4792-978d-1e2f4e3a83c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdd3566-b4cb-4534-a416-a5a6219f12f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b802f14-0990-403b-a304-19d9761839b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dca991-c342-4863-bfc2-ba836c3fa99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084283c7-aa69-4dba-941d-d49e9d384167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948d7d67-2365-4015-80c1-1f3b38ada9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2566af-6430-4320-85c6-5cebbee2e94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c780d2-2390-456a-a088-193d9601878f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347af11-73c5-4c5d-81ce-b99fab4e73dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f5d4f0-d925-4654-a666-095ac872123f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8325f813-79dd-4cb5-815d-50cc789a0343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bdc3b9-742b-49d6-9cd6-991cd36bceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2432b56e-291b-4d29-bca1-73a05d0c7297",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca90c2da-440f-4b1e-851c-0c792492d32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d5ecde-0843-4ed4-a017-50d3f5cc5c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d968f35-4775-4088-81b9-7f9ab42bdf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2f79a0-f022-467f-88a0-066596f6ceb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c175b8f1-0571-4397-a60f-b4d82f0ba772",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864ced87-a843-46f4-9477-53cd86eab957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f4cc96-96f8-494f-bf6e-e5ba1114bde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b81bc3-ed77-48ec-96d0-7e7d050fc7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3eb2b9d-1df2-47ec-a069-cfd499d560b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae627405-effc-42c8-bd2a-0441716ae077",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d5f06c-c37e-4705-9821-8e584517052d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e119df3c-13be-4c0c-870c-07a21bf0dd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af12fd9-ec0c-4647-8542-9abfc383e583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c5d7fb-f41f-4655-88ce-c58cf331ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a57491d-0759-423c-bea6-96cacc5155ed",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e662ae2e-afa9-4b8b-92f1-a561b8bcfb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a2b958-6baa-43ea-925b-d891ce943dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc15b50-61b9-4892-a8b9-cf35ab2ab556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbb19dc-60a9-45b5-a007-e7841bfd4d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f665c2d-8933-4665-9d22-970c08bec3fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add6d6fe-840a-4631-b381-bc28d2d9395e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab7b76-0faa-4dfe-a440-a6e28d35c822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523ad0f-0250-46db-b789-14c154b217d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95ab93a-7424-4350-a2ba-a942197bdfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeadcb7-d3f7-40bd-bb54-2a78fb38671e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b86da-51ba-4d81-b124-f2eb97229ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f0722d-b714-49b7-9ca0-b7e814a9ebaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e4cc08-13d5-4e0a-94af-12b83a854e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e9ef87-9906-41d4-be21-0b8f66d979d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cc0581-f1db-42fa-9551-4a39b7539d11",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb588f-c025-4b90-a4b6-e572159f3223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f346d677-1099-4136-b094-2439c22768c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4602f9c4-71eb-4d0b-8777-022c7d53d309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29571b71-3796-4dc6-9f2d-c40e0e522345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658118f3-df05-43c1-8838-262361abb743",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e49f9f4-56a4-4eac-9e18-9dc300f4bd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd49a3fd-a45d-443d-b0ed-092b5f3f3e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af0368-bc4a-44f5-bb10-f2c1696ce229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89334c6f-6402-467f-be42-42db7e7bd915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1414315f-85ae-4ac9-a0f3-fc9a05321080",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8549191-f383-4bd4-bd23-f1306b19719b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e30ece-ce4e-45c2-9862-cf56423d163a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817c8fce-9c0c-47af-b7bf-4547e0796a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae05203-4476-489f-87bf-1d5f7225e77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dadc33d-b98c-4868-b4fd-8f145df22db9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ed631-1668-47c4-b0c6-1c326fcbd3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f86f1d-f2c9-4315-a955-58254b183b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c1249-2299-49dd-bd6d-b238eac6e4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39c95b6-f3da-48aa-a676-12de4351b6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26dbbcd-ea35-4862-b0a1-4f5b3b82449f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d342f9-8cf7-4870-b85c-c78b1df73a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45136be-6503-47d1-a88f-50d194fb0dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49896f-d4ac-424d-9978-f67c491563b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0c80e5-f337-43d5-99f2-106811111d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff10e27f-54ea-4f07-97b6-d327f35b66c6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998adf9-1203-4042-9358-b0dbad9e2c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc777392-73aa-4881-a590-ecc406cf6797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b98d39-10ab-4c22-b84d-531760303cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde66c93-203b-498f-882e-a4bb73e1fbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45dd1b-bda8-4317-ae37-8c287420ed4d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c5b62b-adf0-424c-b028-f89e54586b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d3e1e3-4748-4606-bf74-8bb4c6579839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb194dbb-b887-4a96-a0c3-758acff3ee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b855b7b-816d-476e-ae39-dc2b252eaf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d028cf5-581a-4c01-aab9-8c167665e833",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a0941b-6c5f-4abc-9e16-9eddb5fbd4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6bca13-47ec-4780-a64a-34e2be430112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33fbf09-736d-4f0a-a14f-957b24c565eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd14c83-74fa-4daf-b07a-21e6e09078d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed36e6-cdc8-4e90-80a0-67ec55fd54b8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f0333d-89ab-4dd0-88af-e0869876919b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1a91b1-8f31-4417-a364-b607fd96af2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7b5a7c-9e74-42c0-8299-bb47d5e061fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4db252e-4023-4dbc-9e52-922a59683e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af644c44-4f50-4a74-a67e-038b603dc49c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f3539e-2260-4571-b3e8-5b01ca7d1990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fdba4d6-bd52-4be4-9256-464f8104714f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dc663c-07c6-47f4-8edf-3302e3d36d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7f2133-4143-449f-9b65-03be2257ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86f31c-dcb9-4753-92b6-e22264949bf8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc5a72f-7367-4d9d-beda-9e8fd92217fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40181f57-a57c-4665-a216-fbb1861a299e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aae466-4d4a-4220-aa46-ebd2e02315f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4589af6a-2397-47b2-bb15-dd88411d6353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2322ab9-6926-4d15-a4d2-c152da7d7acc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2a256-83e9-4e27-9cc6-3f172a55f185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71048b17-88d1-4ef4-a480-584e76596137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5e3766-4bee-4e81-921d-1a1677c61528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe5f028-ab65-4f19-8de7-e4beab26ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd71b4ad-e8ce-4fd3-bd7a-f3ee52621f63",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb7fda4-7d93-49c0-9b99-4e8ff3ff5fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2384ffdf-5a8d-47cb-9454-d59656c20d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe0633-8c93-43da-8ccf-198d19af4449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a0434f-aebf-4f39-af4d-3e5211a0ec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a26c0-3912-4827-be1d-f7e93e86ef56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234aaacf-61b5-4e9a-81db-3e6de7712faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c02d02d-5c7e-410e-84c0-d391ad011b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331ad583-b067-48a2-90a2-58d603b3cbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2607a60d-edaf-4263-a7f4-a19f93039a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768960ca-f08b-4b7b-a364-6f26d37c5b82",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67f953-5a41-45f9-945f-352170eab8bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163bf3d1-68c9-489e-86e2-383fb32b6a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac83936-69ee-400e-b542-9cd4f717427d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee2d12-a664-4fb0-a37b-b08a51e61407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beab4c2e-a81f-401a-8764-247de2a7becc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98ab5b0-f64a-48c9-89d9-2ce2feb8cc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0640c23b-dfee-4015-bea5-81adcf8f57a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97989264-77a2-461e-a3be-b873f0f5e086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54936076-8827-4141-b5f0-c19ab3edcfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de97361f-3200-4b8b-ba09-5ec4d0cbf4b4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c8639-0a64-4b6a-8891-c0658a22e153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01c8fb8-8a58-403d-b09b-cf8f998f7121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54be6a60-2e30-415b-b6f6-7e94a26201d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967ac55a-6645-4590-a25e-c8a454acc030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f383fad7-2186-4a47-9bb2-23088741ce29",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df82290b-ffe0-4c3b-bd9a-774824a9c43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780ef6cd-373d-403b-b11c-f8ef32cc2f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfa22b2-ff7c-48fa-9225-fca6be30cda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690401e2-2d76-4d7b-926d-da64e5d656da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd478e78-78c6-478d-9de6-c9d7a0380094",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2bd1e0-f73a-4760-9d05-ea107c576413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539a24ec-f1d8-4294-b8ea-8f125c59ca5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f5abbf-cd66-4637-8a3b-0519bcf1937c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb620356-88b7-43b3-a4d4-4ce62df4e21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f42f43d-6440-44a8-8aae-a9d2b216a18e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f63ac72-bc3f-43ee-9667-bd6d9ec3021d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc94c6c1-833c-49d8-bdd8-ef7c1ffef2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354b00c-ff84-4c62-8a63-8148bfbb60f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c11973-25ae-41c7-8fbe-059e3dc70093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3919ebf4-56fb-4939-bc89-33c31d0a9a67",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93601f48-86cc-4787-99db-052558fe921f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e30bec-6bf6-48f2-ad1b-e0faa6192c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bf07d7-aa75-486c-95f4-06026be23da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fcac16-d37b-49f5-9a60-4d3336f2dde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5acbef-8f0a-4a9b-8498-55f0d25a2eda",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fa949c-f539-4535-bd04-a86f3bd621a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8c204b-aa6e-46ed-8ed9-7e4aaf3c7b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80512ab3-a672-4841-824b-bd6dcbf2df51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10f1de5-6065-4a2b-b7e2-674eb63d6d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa7cbe-f2ca-4c6e-9332-e2d1eab2720c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111483d2-dd17-4723-94a8-65b1c0130de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b11b08-4347-41b8-9ac3-039ad64e342e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d43b788-39fb-40c0-95de-b60c08bf4c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925de1bb-e20b-496a-8104-e9ecfdb1a533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b45416-c454-418c-b296-08b6c24050e9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92588a78-1a60-4a69-9a2b-b48ac796769f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73732bf0-8f63-45ac-8b47-d8f779c53b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f752588-4a30-4f0c-9fda-2afd9aa32d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ca592e-3fcb-4292-91a4-b5cbadfba358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc2bb55-9289-4bfe-b628-3eaea19a648e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b5ffd3-0828-4125-bd3c-4ab9501eef55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55216c2a-d947-471a-b61b-dd73ecab65d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179d4fd-c3b7-46df-8eee-0fca314ea8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22f9dae-6732-4cc1-bd9a-fb9f4e4c78d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ae4f53-c892-4da5-b277-9bf2c9e1477f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc34eda-0717-4f92-9655-5eafae8e7d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0c933d-03ae-4292-a423-7e3434caed8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd3ffb-d059-4777-a179-660555b71d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829f1468-7921-4eef-8b0a-9eafcdf2fb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa8934f-5d9a-4045-a63a-481d618ec604",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffd4c3d-91f0-42f6-b18a-4d9090090647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2dcb96-64ee-4eb5-bf09-a93f15c16630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8e7c2e-43b3-4118-849b-c3610aedc5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77fc112-2f55-4c68-a27f-66aaea780546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9476e93-f393-4fff-9ea4-e0386581295a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aecee5-a386-40a4-9154-94249786eae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77569097-ada8-4ec9-acbb-9900fc895782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40656474-eade-4801-b455-1f6d8939e9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ceb62e-7362-4a77-a519-0c3ccfb78db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c09b4b-84fe-4f87-b9a2-a2fae8d47bf4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b20c08-366f-4557-a85b-bd30163e067b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5831b7a2-e440-4cb1-b4b2-9e68be9be11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7c07fa-165b-4437-b233-2d179410f1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e259a39-4620-49ba-bd24-83642097b378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc73b03-4313-4b78-bf24-7ebb4b7bd6cf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1ba477-f475-418d-94f9-4fc329056c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8204128b-7433-4535-807e-a8ec83a8ed0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd924628-24a5-4bd9-91b7-22c003918a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858f798b-2d20-45cf-8390-6b9d36e50ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ee0f34-929a-434e-b2c2-13c669c78c54",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161efb99-e54b-4652-bea1-4984f4d14ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa07f11-9c5b-4aa4-82ba-777a5fea84ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e098ecb8-fd26-47ef-a588-637ab5d83a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025e899e-3017-4dd8-8985-682d170e2169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bcddd9-1fba-4e04-9686-941d782388fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66040dce-bb2c-4313-b456-0b2fe131106f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e6c992-bc71-426d-ab2b-39ad13ddedb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26fc51-ad71-408b-b858-e55d3454a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa16435-72ea-4201-8fa6-4feda82757fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2679e33b-5c54-4a7d-8926-960619393d70",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708c4fa2-5c8b-4c57-9e8e-629a133a1707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9434bd7-26f0-4913-b3eb-3b932ab3989c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cb59f1-1c29-445e-a4c2-7317987f517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb733848-b2ba-4573-8e95-74f1880429a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9518d7-473c-4718-857b-2fbbc9e2c0fe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a33cb0-bbb2-4bbe-9ed7-88d0b9dfeb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec6ad1c-38d0-4781-8dab-4d0ed37058b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1dcb9-795a-4996-8217-1055402c85fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fc0205-a842-4c27-b19b-71b8d7575e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a7a7a-c34f-4867-b08e-a45cd9bd1486",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4276684-67b9-4863-8224-b51607d28780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038f1d8c-b1c5-4dc2-ae61-7e201e95a548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f66ea27-216a-469b-b0d3-483840b64782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c721ce-d83a-45d8-941b-042a6039d244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99af27df-d80a-483a-b0e5-9d89364c64dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a00def-67ac-49c8-8805-008143199ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868c5d73-f3a6-4678-82c2-73af8e07a902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d9b02-cbfb-445b-8027-1b89ccf45a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05eaf30-e2b4-4063-9ded-9f90c59f882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b00a68-61dc-4e6e-a9d2-be10fd3f4697",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d31768-86d5-44de-a191-9f7b0179d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877517e9-b41b-4d8c-b903-d324f5bf23e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad0a0d-c714-401e-a27f-f822da05c94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db9804a-e751-488f-9a90-8f8cd596418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6c039-09fa-4330-b41c-e9ab9fa64dce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bd2166-354b-4ed4-b5eb-06bb1b89c564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebbb643-3637-4259-b0e1-419bb07efaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fd3734-127c-49d9-8986-1149351e6c10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12348eb-ab8c-45a8-b307-36276dc2ab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb3ade2-45a6-47a4-96f9-1ac9d60e5c28",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ae08b2-6381-4c3b-9fdf-422bc6f114f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d309fb5c-d6c4-46d2-98d5-7e669b2420e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf35b18-12aa-4c5d-aa26-9b1267378242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb650ed6-4802-4251-b8cf-8ddce36bd949"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c130b44-37f5-40d2-8eb7-03767ffeb55e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e4bd28d-921b-438c-8e2a-5d01a915c64f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8137d109-ee1e-49cd-a41a-6be173ac5904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a2ab8fd-887d-4648-a8ac-72835d07a321"
                    }
                  }
                ]
              },
              {
                "id": "e230cb87-aeb5-4240-91d0-391b133849f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8110fe56-1a98-4651-bce2-d00f2c3f5776",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7fb6a1-4950-49db-b44e-39147784d713",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f0822c0-2b91-452d-a336-d03bc7cf9276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f806c3aa-c3c0-46d7-b2b9-f83c04fa7193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e74ed37-d206-4470-9829-c54a35477670"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1805736d-faa4-4596-a51a-a7a06fab26ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c043dd4-79b2-47dd-996f-85a0c0a0749b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c53a30f5-b644-431e-b37a-b24f130bc1a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a85edbe1-ed26-491b-b2c2-777df73116c0"
                    }
                  }
                ]
              },
              {
                "id": "435ce9a0-e40f-470f-b715-8ebb52b8af39",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5a3f0227-86fc-4f7a-99d4-4b2c8fb167c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3231e617-2f4c-4cc8-b5c6-fbc70f95c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eaf0411e-866c-4c53-b674-a4750d9522c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c456ceb-bebb-4fa2-acd5-6a147b5f39fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d44b8f-e2d7-46f4-87d2-f5269161b9e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3716113d-18de-41b2-99e8-2f7cb98e39b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad1240e0-e0d4-4e2d-a99e-39470c919f43",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "575a8371-18fb-46bc-b96f-cea6f189aba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bba3aaf-c9e8-46e0-b809-f51b8256f826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f156632-860d-4812-a3c0-29e63a2e3e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b2b648-15c8-46c7-a51a-8045579fbc2f"
                    }
                  }
                ]
              },
              {
                "id": "6ce9d338-df47-4bc7-9d3e-4a5906f0431a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2180d594-3b67-4369-8990-d831d5cd7d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c3fe08d-3bf0-42b2-8b44-525e2229f158"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0301863-0bc2-44af-8ac9-f1daafc84f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfe56bc8-58eb-4d39-a112-b96d5302e9f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43adb4fe-dde0-4f62-b8a4-d316ee4b81dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0eb53c7c-ac0a-41c3-a3b2-5cefaaa55d21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ca12005-ffed-40a6-839d-528989d3eda7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d250c7b-8807-4529-bced-8be695497935"
            }
          }
        ]
      },
      {
        "id": "d9204759-48bd-47bc-bf56-195d7413f307",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42bf7cbf-dbe1-4723-9c87-9fbd742f5920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "941c8417-720b-4845-9e39-ac45c3d32380",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83c0f7e8-28a5-452a-9d7b-d0b1a58a19af",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1d2ea8-7580-4f90-b247-969361e9b21f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b090eca3-aaa3-42d6-9e8d-684e4b122cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c539c1e-bd9f-4487-ba8d-29cb5ac45b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "445011c3-7d29-4511-8d1e-6f8c0f36eb2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77737142-2177-4e75-84e9-eb7328661aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73538896-27dd-41ad-ab91-d7f3c2b74dd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb03c9c-5751-40c9-8ee8-37a66bdd83fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8fcb1c0-2d6b-4362-9afd-5b81f27e3ae5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce52e673-cd9b-4b06-9014-fcb5c77f06fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "78925bf0-a466-4000-a22d-15f6fbb16031"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3e85afc-4cf9-48cd-81d3-e9e697cd687b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56444379-e719-4b52-ac57-a525b6b205b2"
            }
          }
        ]
      },
      {
        "id": "a79674b3-6d4b-4f8a-bf5f-b98655d58b92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "466a55a3-ec68-4f31-9b37-9b55c2cc5371",
            "name": "Negative Testing",
            "item": [
              {
                "id": "affce2ab-f4fa-4987-8eef-588e84744db9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78998057-44eb-44e6-845e-f90fa16a9e2d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11714a91-944e-42be-9b0a-63bdfc72f3f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffbf2ae4-755e-489d-aac4-e62d89a47fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2974154e-bd9f-4511-8fea-4b4482d4bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f535a9c8-62aa-4629-9b56-2f1076a9e819"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a148cda8-5af8-49e3-a42c-9f6b6220e38d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afbf2323-82da-40d2-b7aa-cac09088cfe8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af60438c-cccf-444b-bc89-1d5ac10995cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b69ea921-e734-4ebe-a613-2645ec26ba30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "305047e5-46d4-4649-927f-a57d38bb9c72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40dc4d2d-a710-425d-bfd1-92e815146b0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c90a6a84-15f5-4359-8877-cc0bb164ab59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d8a8a23-c9b1-4cc8-9506-5ffc308f22a6"
            }
          }
        ]
      },
      {
        "id": "d0bfad8e-d88a-46c0-b557-a30741ce971b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92563130-0157-4ae2-84c4-f56e9d67d353",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c8673a0-3185-4591-a4c7-d147f4545df8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cd41b3d-3605-4add-99d3-2ed7b2b2876c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab969036-d6c3-42e5-b62b-247566984e55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a631d50a-0a06-4b7f-b4e4-8a768fe6713e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae3528-fa80-4e26-8ce5-e1f9e68539fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f5f5ea-85c6-4fad-bc38-c73637252c23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e71a4872-d314-4e07-b0a2-ff7c8749f35e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "051b0139-559c-4304-b0f4-f20fcf51bbf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9171b350-0a92-420c-af52-1337e4481bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29ad3d6f-549b-44df-ae02-52145257485e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c915cece-7492-49d7-a260-718cd6200889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fcf30cc-126a-4b38-89ae-1506be0936e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed5df864-8489-46a7-a1fe-309c741e2ffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dbaff69-f5cb-4d94-8ecb-edb9911457a1"
            }
          }
        ]
      },
      {
        "id": "1ae3711c-b127-4a40-b564-6da41f60cf58",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53050201-1cb4-42ff-bad8-f3a8dfc97e89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c83988f-d875-445c-a481-f125a4f210ce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b2a806b9-5990-4b65-a7c9-3c51e681fb4a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f686abae-0628-48c5-8539-0953e0784879",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb7d57ef-efdf-476a-8e1c-bbfa67e0a5f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.169014084507047,
      "responseMin": 3,
      "responseMax": 264,
      "responseSd": 21.570869712525056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691368784508,
      "completed": 1691368798058
    },
    "executions": [
      {
        "id": "0527653d-41fc-46a5-9727-09cb7819b0ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a7d62a25-8e1c-494f-84de-3434fd3d0956",
          "httpRequestId": "51214500-b0e5-4906-8733-35d41085eef5"
        },
        "item": {
          "id": "0527653d-41fc-46a5-9727-09cb7819b0ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c073b74d-7fb9-485f-8a1a-0a934437e1da",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "5bbe8252-0b55-435f-9975-e8d4e726b480",
        "cursor": {
          "ref": "55d2faa2-5685-43cd-bd76-dd13a8c707a9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "93f6301f-b0e9-499a-82ac-d8ffb2a9e41a"
        },
        "item": {
          "id": "5bbe8252-0b55-435f-9975-e8d4e726b480",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dcfa84e3-4873-40e3-8a90-7eca0f392a6d",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "5e548b81-4015-4b10-90a2-ff58d418d5e2",
        "cursor": {
          "ref": "f4597845-d149-461f-a5d4-1f25af13bdcc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e503bf9-799e-4e7b-a0a9-f5a8778fc846"
        },
        "item": {
          "id": "5e548b81-4015-4b10-90a2-ff58d418d5e2",
          "name": "did_json"
        },
        "response": {
          "id": "5fb682ff-4aff-4c63-9213-af4b036841ce",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66464ddf-4f50-4528-9aec-f6cfd54f2c09",
        "cursor": {
          "ref": "bb0c5b02-e36b-4095-a644-ee1fd8466c9a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a53a46d5-1e85-453a-a4b9-3ecb179160e8"
        },
        "item": {
          "id": "66464ddf-4f50-4528-9aec-f6cfd54f2c09",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c23ecfa-8671-4e0f-8b81-b78758ce4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66464ddf-4f50-4528-9aec-f6cfd54f2c09",
        "cursor": {
          "ref": "bb0c5b02-e36b-4095-a644-ee1fd8466c9a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a53a46d5-1e85-453a-a4b9-3ecb179160e8"
        },
        "item": {
          "id": "66464ddf-4f50-4528-9aec-f6cfd54f2c09",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c23ecfa-8671-4e0f-8b81-b78758ce4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239eb5e-eae3-488e-b26e-195eecf41b79",
        "cursor": {
          "ref": "d288308e-1352-4316-b71b-93a8ab5560af",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4c065a35-5f50-409b-9d5b-2346e2997015"
        },
        "item": {
          "id": "6239eb5e-eae3-488e-b26e-195eecf41b79",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "51e1b478-14d6-4f67-8070-25427d251913",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a1b2bd-b971-45b6-b440-4c85cf4f70c1",
        "cursor": {
          "ref": "2814ff03-58e2-4b7c-9a9d-7c3bc92f61f4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fdf14837-77a0-4796-818f-22337d3d4c08"
        },
        "item": {
          "id": "64a1b2bd-b971-45b6-b440-4c85cf4f70c1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "54b28362-07a5-4d6f-8e6c-d92827da0914",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f64d5-1012-4281-afd3-d9af9f5aa903",
        "cursor": {
          "ref": "c717b0ab-07e0-484d-8c10-cad36fbbf642",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "96059eee-c401-4df8-a85c-f10e5d239211"
        },
        "item": {
          "id": "bf4f64d5-1012-4281-afd3-d9af9f5aa903",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "84951eb8-90d7-463c-bb5f-3843a142fafe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6a2ed-69a7-4b61-8a64-4a38e7726613",
        "cursor": {
          "ref": "c1763e2d-fc2b-4eb2-bfa3-b70708f1400a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98bb9894-c9a9-46b4-a852-3b571b5a74ed"
        },
        "item": {
          "id": "8ae6a2ed-69a7-4b61-8a64-4a38e7726613",
          "name": "identifiers"
        },
        "response": {
          "id": "233fe790-56dd-48ca-a979-4c37f1fad83b",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f68e35a-6b1e-4c61-be48-8d702c176fb3",
        "cursor": {
          "ref": "270beab6-e36a-4991-9b9b-94dab66ce569",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f695246-10ae-4375-a333-e42d66254e62"
        },
        "item": {
          "id": "0f68e35a-6b1e-4c61-be48-8d702c176fb3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c564f443-e75a-4a05-88ef-bd4c89784fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fca47a-174d-4123-b9d3-1a1ffaa756b7",
        "cursor": {
          "ref": "0ddf02bb-b6b3-4966-a37b-382635bf1e6d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e576e5ac-189a-43b3-9ef7-ab9a6ed6a95f"
        },
        "item": {
          "id": "67fca47a-174d-4123-b9d3-1a1ffaa756b7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2a094686-3d3f-465a-aed9-0bcaed47b892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a643a89c-7079-403d-9456-97922c507e7d",
        "cursor": {
          "ref": "5ce58f9f-051a-4c77-9a5f-a478cfcbfd50",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a20d747f-9d42-474c-acc3-2c09a34e621a"
        },
        "item": {
          "id": "a643a89c-7079-403d-9456-97922c507e7d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cb6140c0-bf0e-47c1-9106-5586dfedde82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf1d37-dc90-452f-840a-880a2d4246f1",
        "cursor": {
          "ref": "aff7f563-8027-4b0f-bc2a-033a2ea1d4e4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6325185b-3750-490c-ad3a-783f72f5c0f6"
        },
        "item": {
          "id": "27bf1d37-dc90-452f-840a-880a2d4246f1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c8ddc314-3aff-4f0a-b267-2f2091c65761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16450231-ba14-4562-ad53-7cfbdbe3813a",
        "cursor": {
          "ref": "ce5b1aa0-2237-427a-8c43-2f13d680f80e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "28888846-30ba-4788-8e8e-fd39f08b51a1"
        },
        "item": {
          "id": "16450231-ba14-4562-ad53-7cfbdbe3813a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05a215a8-efd3-4e0c-93bd-4ce16bd69b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aebec6b-d44f-42c6-b1c4-aa35c1dc6136",
        "cursor": {
          "ref": "f471a5f8-5774-40d2-92a2-34b29b3c4f04",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5239417b-e22c-40e6-b9a0-93cf83e7c371"
        },
        "item": {
          "id": "9aebec6b-d44f-42c6-b1c4-aa35c1dc6136",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d4d84cce-eb04-44d6-82b6-98ec6cee3e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eed1c31-e954-4c52-8d6e-918769d4dd21",
        "cursor": {
          "ref": "f3d0f3bc-6279-4d13-b37f-bc6346404681",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a2614b9-d1f8-4bec-8448-9a738e461cca"
        },
        "item": {
          "id": "9eed1c31-e954-4c52-8d6e-918769d4dd21",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2b918f21-0366-4e4f-8c72-b899bda15d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a8c80-92d5-4387-b2c0-080ac5de0dd9",
        "cursor": {
          "ref": "f37f2f06-fe20-4a74-b0e2-ad6cecdfef7b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c2f6d14b-ad81-4326-b086-10fa3bad8e4a"
        },
        "item": {
          "id": "f50a8c80-92d5-4387-b2c0-080ac5de0dd9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "50d16365-e725-45b0-8d53-f9f04a757ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7756b38b-12e3-40a3-8748-7f789ccf4337",
        "cursor": {
          "ref": "0242fd18-7bfd-479b-9d9d-f693d875b894",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5ec6f693-7df7-4304-bc0d-ed20999f4f8b"
        },
        "item": {
          "id": "7756b38b-12e3-40a3-8748-7f789ccf4337",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "445ae787-5f58-4627-847b-91ec7fe6a3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c124e9ed-1391-4ad0-93c6-40b51e313daa",
        "cursor": {
          "ref": "b9bb8dc5-b13c-4dd3-99ca-d7c704c8f227",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b9707560-3a81-49cb-ad09-2330b95dd086"
        },
        "item": {
          "id": "c124e9ed-1391-4ad0-93c6-40b51e313daa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "48fcbe18-3328-4eaf-8800-a27f73d64088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e5cd1-3f80-4c1a-a222-99020e79174d",
        "cursor": {
          "ref": "bc112ece-321e-4828-91c9-694d1765838f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e437021c-dcff-40d0-8d0f-172941a78237"
        },
        "item": {
          "id": "da0e5cd1-3f80-4c1a-a222-99020e79174d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7c580b02-2510-452d-ac41-964db7784776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cef3ae-4349-4e06-86cf-96dcb9ffb4c9",
        "cursor": {
          "ref": "93a29008-de1a-4dd5-b37e-3592271b9b37",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "22d3e84f-c85e-44ac-8dc8-a294a2acbcf7"
        },
        "item": {
          "id": "12cef3ae-4349-4e06-86cf-96dcb9ffb4c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "53e8456e-a1c3-4f8a-85e4-c9f2599444e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558775d5-66c4-4db4-91b7-3a09c896cb80",
        "cursor": {
          "ref": "41a3129f-9975-412c-aac9-56c93ac3c46d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c37851eb-ba02-42f1-8c78-37f3f39f06f5"
        },
        "item": {
          "id": "558775d5-66c4-4db4-91b7-3a09c896cb80",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de0b9901-f172-459f-9a29-7a11fc633916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ed2d79-468b-4a3c-b276-63a4d39a8641",
        "cursor": {
          "ref": "0b8d9889-8caa-41af-ad62-0ecd0df5a4f7",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ecf5d2e-b638-445a-83c7-103150527916"
        },
        "item": {
          "id": "c0ed2d79-468b-4a3c-b276-63a4d39a8641",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "80c5b2d3-3782-4960-a37d-9997d594ae4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccbef81-6525-49a8-9ef4-74a70f5e0fd1",
        "cursor": {
          "ref": "855ad8ce-07cd-49af-b411-303241ad8cd9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a9f5bd91-2845-4564-bc7d-47abf32fb25c"
        },
        "item": {
          "id": "dccbef81-6525-49a8-9ef4-74a70f5e0fd1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8b2a46da-146c-497e-b200-3fb2ddd9feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da084a89-9ba0-4d9f-b478-df9b19df6cb7",
        "cursor": {
          "ref": "17caecee-2688-4136-aeb4-31c6cd959494",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3591d955-d5e3-45ef-830c-7308a65b771c"
        },
        "item": {
          "id": "da084a89-9ba0-4d9f-b478-df9b19df6cb7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "078fa183-994b-464d-8257-76640163f83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef763a-a4f3-4e19-b08e-63d9bb07c126",
        "cursor": {
          "ref": "fe35c6ee-b182-497f-ba81-85ae291629ca",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c2b44acc-8a5a-40dd-a24f-7f054309e041"
        },
        "item": {
          "id": "2bef763a-a4f3-4e19-b08e-63d9bb07c126",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f62f0d5a-0d3e-4a9e-a0f3-a71779c4b73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d251cc3c-087f-42aa-93bd-219d39b6efcc",
        "cursor": {
          "ref": "efdff20e-0bcc-457d-855b-626ce2c71e65",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a6fbec1-5f49-4351-b575-5eec07e685ff"
        },
        "item": {
          "id": "d251cc3c-087f-42aa-93bd-219d39b6efcc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c1420c18-40a6-4ae2-a3e0-889a4c32c084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425fb5f-0052-4719-a9a8-434e57128064",
        "cursor": {
          "ref": "1109f80e-c5e4-4c1b-8e1a-115a48d2ba6d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b399dc10-c7c2-4b60-af4d-456dc69650fc"
        },
        "item": {
          "id": "2425fb5f-0052-4719-a9a8-434e57128064",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c555e719-b281-40aa-83c3-fa8fa9a8fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a2c98-6b7a-4c93-9a35-23d69f033051",
        "cursor": {
          "ref": "02d6ac0b-9097-4b28-b80a-790fa0d72147",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d8e1eb61-2071-4d68-83f1-cf82eebc7cd4"
        },
        "item": {
          "id": "de0a2c98-6b7a-4c93-9a35-23d69f033051",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "71ade363-366e-49ac-90d2-4ad7f61ad4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d2159e-b6e8-4984-b159-deb35540fef7",
        "cursor": {
          "ref": "98a88b16-b108-4554-b1c3-7c18a87e6f7a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8b28fd5c-e6e8-478c-b122-5f3dbf2caf7a"
        },
        "item": {
          "id": "f6d2159e-b6e8-4984-b159-deb35540fef7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "45d8fa88-2610-498e-ad78-2357cee5b2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612c11d1-e726-43cd-a853-1b4cbb96eb4d",
        "cursor": {
          "ref": "9fce015b-5ea0-41cb-90d9-6519edee3451",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f32c5141-d180-4860-99e1-85d9143b8a12"
        },
        "item": {
          "id": "612c11d1-e726-43cd-a853-1b4cbb96eb4d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e47e46d6-7a22-44ff-8a4f-c6488212fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d9a51-0635-48a6-bb11-8b41ac8ef23e",
        "cursor": {
          "ref": "22239f3f-ca78-4f93-9303-0f68d8f65f7b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "489eb5cb-9ce0-4432-b213-81920f50f541"
        },
        "item": {
          "id": "2f3d9a51-0635-48a6-bb11-8b41ac8ef23e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "703359cc-9498-420a-a964-36cba625dd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d70d88-7e3c-40d3-b34f-6d918bd2db4c",
        "cursor": {
          "ref": "f0bb44e2-9ea5-453e-b39e-e1d17ff26f2c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4f911d0d-9367-4670-bae8-33b809f355e8"
        },
        "item": {
          "id": "c9d70d88-7e3c-40d3-b34f-6d918bd2db4c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "365b5c65-e996-4526-82a8-e1492d9a2f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7662751c-e1c5-4868-acfe-e308c3b406a7",
        "cursor": {
          "ref": "b5912f56-ddb3-4e1f-8447-a5d826acb8cc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9981544c-3dcf-4f5c-8e55-191e11e48965"
        },
        "item": {
          "id": "7662751c-e1c5-4868-acfe-e308c3b406a7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "acf7fed9-d877-4eb0-8555-3e17da61de88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1049f47-ab92-4bc0-81d7-6b7a8973063a",
        "cursor": {
          "ref": "a82efd93-26f0-46d4-bdab-0486ff9a57bf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8749a9bf-aa2a-48c2-9a01-3151e6cff079"
        },
        "item": {
          "id": "c1049f47-ab92-4bc0-81d7-6b7a8973063a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "af0504dd-935e-45ab-9476-4c746740bb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6155945-437a-4827-b7c2-c3e7559e2d62",
        "cursor": {
          "ref": "0abd12c0-0696-476c-999e-8795fca202a6",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "586249af-adf2-455c-8ef6-0cacf517b598"
        },
        "item": {
          "id": "d6155945-437a-4827-b7c2-c3e7559e2d62",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6eb869d2-bdd9-49f0-8865-1cfdebd3f22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6433eb74-3dd5-4985-b843-8b00e6980a05",
        "cursor": {
          "ref": "7c9c70f4-8cf8-424a-ae54-0ea46f7759a9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "51226d1f-8abe-4f26-8e57-215c926e91ef"
        },
        "item": {
          "id": "6433eb74-3dd5-4985-b843-8b00e6980a05",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3d12d264-cf43-4f44-a993-fcd334485b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9400290-ebac-4913-bf30-d7758ae1afb6",
        "cursor": {
          "ref": "7be18528-2c6b-4fc4-aab5-efa1b453e8e0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0ad6695d-639d-4483-9b53-8fef3c822ce1"
        },
        "item": {
          "id": "d9400290-ebac-4913-bf30-d7758ae1afb6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2be43a9-0a54-441a-a2a4-a2424aec9a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0920d25b-0933-4382-bc6f-06f5106c3774",
        "cursor": {
          "ref": "a2f169c5-38a5-4e59-8025-f1b613aa9345",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34a939a1-f600-4026-a112-423a0e740c29"
        },
        "item": {
          "id": "0920d25b-0933-4382-bc6f-06f5106c3774",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "545dc31d-3480-471a-873b-38115127ef3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb451f4a-41a7-41d2-a173-b97749e94534",
        "cursor": {
          "ref": "5a7631d1-0395-47f6-8679-aa22bb59353a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "61b4a10e-a1c7-4e63-8c2b-1650128eda13"
        },
        "item": {
          "id": "fb451f4a-41a7-41d2-a173-b97749e94534",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "770680e4-aa41-4359-af8d-ab4192678618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e64812-4d0b-4cbd-8504-fbaacf717e72",
        "cursor": {
          "ref": "7ceeeb91-b74b-4975-b5c4-5fac54731e22",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c0348876-faf4-487c-b977-d89980568d47"
        },
        "item": {
          "id": "48e64812-4d0b-4cbd-8504-fbaacf717e72",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "af0ee10b-b19a-4e0b-b8f2-068b5fa8adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aa6b0d-637b-440c-9f1b-14169f2d46b5",
        "cursor": {
          "ref": "23d9ed8c-b89f-4b2e-9f4d-95fcbf6bd239",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "104d8bc6-6b0a-4dea-afb5-ddf886a28437"
        },
        "item": {
          "id": "47aa6b0d-637b-440c-9f1b-14169f2d46b5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4d0f0b8a-1bae-405c-a562-21af8be699ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092f2fc7-8d8f-44b3-b9d7-9f1007213b0b",
        "cursor": {
          "ref": "5af8c0eb-f59e-4848-9596-8895508a1c32",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "81450d74-5b22-4bbc-9ff5-c3cbc2ec02ac"
        },
        "item": {
          "id": "092f2fc7-8d8f-44b3-b9d7-9f1007213b0b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "397f4fed-0601-43f4-9ca0-4749803333ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517eedbb-7aa6-4d28-8a30-daa24da1f0d9",
        "cursor": {
          "ref": "fbafa3f0-0bc4-443c-b165-5b714a0ab051",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d6fbc89e-dfd6-4263-b89e-1874924d85f5"
        },
        "item": {
          "id": "517eedbb-7aa6-4d28-8a30-daa24da1f0d9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8db332e4-50ac-47a5-8ad4-f56be8253af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc5b334-199a-4b8d-857f-7592412b5cef",
        "cursor": {
          "ref": "662bc899-0c87-47e9-92be-73c962b79aa1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29627063-0d7d-4a4e-a374-ae6c87e0226f"
        },
        "item": {
          "id": "cbc5b334-199a-4b8d-857f-7592412b5cef",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c0efbf07-b700-4360-a6cc-fcdc2a6c8887",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68443701-467b-4e2b-a4de-2e885afd0612",
        "cursor": {
          "ref": "11c04e4a-4838-495a-a4c0-7a6ca3865621",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb7c80f4-0a29-44d9-af60-67f97b2270c9"
        },
        "item": {
          "id": "68443701-467b-4e2b-a4de-2e885afd0612",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad698bb5-4ef9-4c3d-97f2-5c0268a96347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75086a0-41d2-4fc0-8318-ea18317045e1",
        "cursor": {
          "ref": "f743f21b-6a37-4c58-94fd-e81e181fe97e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2771436e-98e3-4eba-98a9-7fe4330e126e"
        },
        "item": {
          "id": "a75086a0-41d2-4fc0-8318-ea18317045e1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c59c7574-828e-477a-a969-efd58e6bce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a67486-db51-4747-bf9c-3d5c4eb305b1",
        "cursor": {
          "ref": "26c82754-0d2d-46e8-afbd-aca92ca4382a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bc7a1078-866a-405a-af51-03e66e0a1c30"
        },
        "item": {
          "id": "63a67486-db51-4747-bf9c-3d5c4eb305b1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "195cb62c-405a-4482-a3ac-a97ff46a31a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1308832a-3357-4b78-a531-36cf40c92872",
        "cursor": {
          "ref": "7e58a99a-deba-4bd5-bdf8-a11c3f95fb5b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "318cf66c-b70a-4bbe-be21-9455d093d7e3"
        },
        "item": {
          "id": "1308832a-3357-4b78-a531-36cf40c92872",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f20c664f-eae9-4c92-ba1f-8c569c91bd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab003f76-3c6e-4688-b13b-d0dfc32b659b",
        "cursor": {
          "ref": "9fcf0373-3f22-47a1-aa1e-829e72ac7ace",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aa52097e-066d-4c23-83a3-8d5c6cca5b60"
        },
        "item": {
          "id": "ab003f76-3c6e-4688-b13b-d0dfc32b659b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16c25abc-7edd-4417-ba34-b16badeb0600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e062e-7953-4852-8173-a41672c7a4dc",
        "cursor": {
          "ref": "068608ee-462c-4f67-9b85-66758f6b57c7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e61b8f94-230d-42d5-8cad-685e4bd9a00a"
        },
        "item": {
          "id": "ad5e062e-7953-4852-8173-a41672c7a4dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b7a992b2-cde1-4e51-8fee-abd239c60532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad29ae90-7b16-429a-8b97-a589658fc382",
        "cursor": {
          "ref": "2ef57489-d522-4699-a25c-1f2ed36f2366",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "642dcbfb-9698-4237-92ee-523bded37a4e"
        },
        "item": {
          "id": "ad29ae90-7b16-429a-8b97-a589658fc382",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02cb8623-04dc-4e39-abbd-36125dceba97",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b5a90-6492-4bf5-92fb-5e8bb4e6ee05",
        "cursor": {
          "ref": "feeb1d04-885a-4483-93cf-75b909667624",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "528be819-496a-4434-8b4e-ee434b2ca367"
        },
        "item": {
          "id": "1a8b5a90-6492-4bf5-92fb-5e8bb4e6ee05",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af429a16-59cc-4cb9-a8a4-3d48e779aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd9ddd2-b1ce-4262-a91b-aa4b6f4a371d",
        "cursor": {
          "ref": "11986ff5-75e9-4f9f-9154-08cc9da20c90",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "43a56582-2250-4b37-8e20-65ea956b30a1"
        },
        "item": {
          "id": "6cd9ddd2-b1ce-4262-a91b-aa4b6f4a371d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f2dec2bd-f7c5-48e9-8f5e-39fa84cdfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebf3901-de14-4381-9b63-6dcf705643ee",
        "cursor": {
          "ref": "12044839-1d92-4598-a76b-8ea31c1e3a95",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46d36c12-fcfb-44ca-a708-a8a0df685ee1"
        },
        "item": {
          "id": "bebf3901-de14-4381-9b63-6dcf705643ee",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c3f99b3-ddb4-4bbe-b164-aaef47586acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864eb175-cb5a-4816-b19c-764fb817c9fd",
        "cursor": {
          "ref": "080c351a-ad79-43e6-ae1f-59d37e09ce11",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d684ee55-ce17-4780-946a-a032efd2bfaf"
        },
        "item": {
          "id": "864eb175-cb5a-4816-b19c-764fb817c9fd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e69bae6d-c581-4229-83dc-e200a422f1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613840c8-2630-4e7b-a887-b8f05309c4f9",
        "cursor": {
          "ref": "ef4b4702-de60-4e2e-87e3-32f589b42008",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a522186d-d90e-4c6c-8ede-1c42e670c622"
        },
        "item": {
          "id": "613840c8-2630-4e7b-a887-b8f05309c4f9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b937771-f7fc-4d49-b52b-48389beabc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3356474-a7fa-4a9e-88cf-08776dd22892",
        "cursor": {
          "ref": "5981c584-05e8-4eaa-b7db-a83a0f4b03e7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5e72ea4-cbf3-498c-a857-86312013a338"
        },
        "item": {
          "id": "b3356474-a7fa-4a9e-88cf-08776dd22892",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "915bf6c3-f79d-43b5-a55a-b16fbb5df2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd9ff3-225c-4a3e-99b5-2a9d825e0eeb",
        "cursor": {
          "ref": "a2c25aff-5162-4a68-8f43-f651cdcea83b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "afe08a2c-87b5-422b-9709-b5f7abbebc4b"
        },
        "item": {
          "id": "e4dd9ff3-225c-4a3e-99b5-2a9d825e0eeb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ae5fbee3-85bd-4c2f-93c8-e081488b1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db93086-e570-40d8-91a0-98fce88fcffb",
        "cursor": {
          "ref": "71456e9e-ba28-4ac3-9d51-7316fbc2d453",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8797028c-e594-4518-ab2a-cc6e16d3fca9"
        },
        "item": {
          "id": "0db93086-e570-40d8-91a0-98fce88fcffb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "93d18e5a-fdda-46db-b59f-1fd6306fa0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9335c62f-1476-4e24-9b0b-1005e65a477a",
        "cursor": {
          "ref": "1e9f7784-8f16-4a0f-b41e-110b820e3639",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "53055c9b-3e98-4dae-9d05-ba846c2fd8e7"
        },
        "item": {
          "id": "9335c62f-1476-4e24-9b0b-1005e65a477a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d47bcc91-1f0b-413e-939c-39818a6a95c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06862ea-9354-441e-854a-d72ee832807f",
        "cursor": {
          "ref": "cd9d6eb5-5834-4667-8228-4fbcbe6fdacd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ecb4009-527e-4e0b-a8b0-aec5f5678fe4"
        },
        "item": {
          "id": "a06862ea-9354-441e-854a-d72ee832807f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f54ff0d1-7429-429a-8db0-8d05f07e02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d141b9-2fe4-428b-8372-4f7be23310a0",
        "cursor": {
          "ref": "893cb988-cb4a-4513-85bf-af4d0a241602",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0fb8d703-0adf-4a1d-910a-c79a29011a9c"
        },
        "item": {
          "id": "68d141b9-2fe4-428b-8372-4f7be23310a0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68bc97d2-c4e9-464c-af49-c1fd2f908925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b43384-1dbc-46ea-b470-3c6dbf155dc0",
        "cursor": {
          "ref": "8811c67e-9b45-41ab-b467-c28734a4f206",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "12f7da41-734c-48ac-a5eb-628f200cb5d0"
        },
        "item": {
          "id": "05b43384-1dbc-46ea-b470-3c6dbf155dc0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1e0e8a3a-0787-4e3b-99e6-ca425c1eed5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6f778b-73c1-4f66-b95d-29a4defd48e5",
        "cursor": {
          "ref": "20adb456-ced6-4c00-89eb-ac0455f26c45",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9ef5b4c3-1c32-48f9-8b81-7d0deb12c382"
        },
        "item": {
          "id": "9f6f778b-73c1-4f66-b95d-29a4defd48e5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "36d6b57f-4bb3-4bf1-a02e-d106de0db5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc891397-9fed-42b6-8fdb-222ba05bbeb8",
        "cursor": {
          "ref": "3d87c859-13c0-47a8-955a-ef28a6f8f562",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "060be555-2b86-490b-a9a1-478bdaa613d1"
        },
        "item": {
          "id": "fc891397-9fed-42b6-8fdb-222ba05bbeb8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "23173b87-dd4f-4c63-8484-754a0f7f4c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74df267-1efe-4eb0-96c4-7a1b438eaa03",
        "cursor": {
          "ref": "5dceaf11-4b4d-4bd9-839a-8d7518ff1d0c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "70e84a51-8d33-4d42-bb52-9b4e7985b3e4"
        },
        "item": {
          "id": "e74df267-1efe-4eb0-96c4-7a1b438eaa03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3dae7777-700c-46a5-bc0c-82f52f162c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f30227-2a61-457f-82b7-7d8b48996a7b",
        "cursor": {
          "ref": "408bafb7-b4fe-4252-ad6b-89204791e817",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "400426ff-7bc7-4d2d-8912-cf4184377e65"
        },
        "item": {
          "id": "c0f30227-2a61-457f-82b7-7d8b48996a7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2da1b768-cf7c-4027-9dfb-a33d0750d762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed44ece-a028-410d-aa22-8c5558338660",
        "cursor": {
          "ref": "189ad10e-460b-4cc0-b25f-ea50b9dab4cd",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0ab35a95-aa56-4e44-917e-0209e0927003"
        },
        "item": {
          "id": "3ed44ece-a028-410d-aa22-8c5558338660",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "088a98fa-050d-4d31-b7a1-95c6db66834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc897903-d91f-491b-9d30-d9a6eb6f4621",
        "cursor": {
          "ref": "3284482a-d77d-4ccf-819b-81e1cb95eaea",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd14909b-b0fa-46b2-8d3b-dcf6e9465543"
        },
        "item": {
          "id": "bc897903-d91f-491b-9d30-d9a6eb6f4621",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c3f8d1a3-981f-4267-a15e-638b2dfa53cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e948ef2-8553-44b0-b59f-8d76b6cb87c9",
        "cursor": {
          "ref": "74de28d8-8fa6-48c3-8df5-796a24038aef",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a012d900-b1ce-40e2-aafd-626463c23d77"
        },
        "item": {
          "id": "7e948ef2-8553-44b0-b59f-8d76b6cb87c9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d707f31-e5f5-457c-90d9-8ae4866f3ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b00358-6f88-4668-98ed-bbb64fef621e",
        "cursor": {
          "ref": "8ff68a28-6bd8-4160-8f51-650fe0ed51e4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1e7f2495-f3a1-4cd9-9366-10c53e6ac485"
        },
        "item": {
          "id": "f4b00358-6f88-4668-98ed-bbb64fef621e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb37e66d-525c-4e26-9128-71212669de6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ebb08-40b1-4270-9058-b9e24ee0689d",
        "cursor": {
          "ref": "8d775b5a-6842-4dc9-9487-23b68c28c08f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4cb5939a-3d0c-48d7-a15f-7aeeb672264e"
        },
        "item": {
          "id": "dd6ebb08-40b1-4270-9058-b9e24ee0689d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "103ba62f-b56a-4990-b5cd-bc9aa6c631bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdd4308-1267-42f7-936f-b7a62c66aa6a",
        "cursor": {
          "ref": "90c9260d-1374-4b0c-aad9-49e559135f81",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "33eed5ac-aaa5-42b3-81be-876abab858f2"
        },
        "item": {
          "id": "3fdd4308-1267-42f7-936f-b7a62c66aa6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e26dcc67-631a-4d7d-b305-04e93245054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95377d4a-b48e-44ec-9acd-fa247c4cdddf",
        "cursor": {
          "ref": "7b7cd3d8-35ec-4c0e-8901-9faa67deaf75",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5916acc5-dcf9-4454-b5bd-7de9619b11f3"
        },
        "item": {
          "id": "95377d4a-b48e-44ec-9acd-fa247c4cdddf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0fbcde1a-d54f-46ed-bd00-1db72c12d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6ee334-9281-4006-955a-0fc26ce5604b",
        "cursor": {
          "ref": "7bf3b96d-75e0-4af1-b35e-5c8860d70a4d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0fbb1d30-9f51-4935-8093-78a0fb17d474"
        },
        "item": {
          "id": "0c6ee334-9281-4006-955a-0fc26ce5604b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e880b7c6-75c5-4aab-8bb8-eb3fc0efde30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74624fd7-fc7c-43a1-a6c7-c9894b317827",
        "cursor": {
          "ref": "7cf974d5-163b-40b9-a222-674ea7f9dc74",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c9192457-5c92-4187-966e-d725fdbdee5e"
        },
        "item": {
          "id": "74624fd7-fc7c-43a1-a6c7-c9894b317827",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2917abf5-b64b-4f85-a0b9-0e704760140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18364cb6-de9b-45c2-961f-287a5545a5c2",
        "cursor": {
          "ref": "ccd46c74-ddae-44ac-8d0c-9869b3df0035",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ae574c8d-acbc-4809-86db-bda78e8f699c"
        },
        "item": {
          "id": "18364cb6-de9b-45c2-961f-287a5545a5c2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f9901ae7-af74-40bc-9e0d-b338dd763805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966112f8-0201-4c02-9bd6-bf650643587f",
        "cursor": {
          "ref": "d0c3ea44-ae1a-404b-9de3-3d4ecd408f8f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cca70bac-92d4-4ebe-a405-9e04926502c4"
        },
        "item": {
          "id": "966112f8-0201-4c02-9bd6-bf650643587f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea17853a-a4df-4cac-82af-99aa0616ebb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2dbf9d-0f57-4197-9c88-52a019aa5c62",
        "cursor": {
          "ref": "33d103cd-2b68-4eb1-b2a1-c2b907c76bab",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8fd2e8a-905e-4824-80d4-5b491f9c3d0b"
        },
        "item": {
          "id": "cf2dbf9d-0f57-4197-9c88-52a019aa5c62",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bae66051-9e70-43c5-bfdf-21c45ddf3224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b36126-b04c-49a4-89d8-cfb98b3af3a7",
        "cursor": {
          "ref": "ab041b8a-e94d-47da-bbf8-b7cf9e81c96c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "73184227-8a7c-4b4a-acaa-8cb802f12834"
        },
        "item": {
          "id": "98b36126-b04c-49a4-89d8-cfb98b3af3a7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2b9b8ce5-dc36-4581-a309-722aa2cd6a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09ae6b0-8627-4703-9a3e-6481dba3fda4",
        "cursor": {
          "ref": "8ed5d314-be13-4c90-ab2a-beebaec0e7c2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e381f8dc-d526-41d4-a9a0-9509e12b3f6c"
        },
        "item": {
          "id": "f09ae6b0-8627-4703-9a3e-6481dba3fda4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c0a9f435-ba5e-4180-b209-16a2f895b311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bf5c54-4325-4edf-ab06-1067c255042c",
        "cursor": {
          "ref": "c8ed678f-350a-400f-b626-fd9287fb4047",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "199733f3-0d38-4196-aca7-410fd1f5a38c"
        },
        "item": {
          "id": "e6bf5c54-4325-4edf-ab06-1067c255042c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9956cc19-7b58-450f-b16d-02830839dce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82fdbb-08fa-4b5b-b412-3f0eba737125",
        "cursor": {
          "ref": "8cffdd1f-4f26-4f97-9e1c-f31a65db11b4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0f5df409-50f0-448e-a5a8-2aef4ff1f5a9"
        },
        "item": {
          "id": "ed82fdbb-08fa-4b5b-b412-3f0eba737125",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4fe5db16-c52c-4b3f-a181-f09b7b62bfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feff162-beff-4644-b756-31d3ca8ce582",
        "cursor": {
          "ref": "38caf2f5-066d-41f3-9c9a-4c8e9c1b0820",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "daa32fe9-b802-4d28-abba-f3b01270eb9f"
        },
        "item": {
          "id": "8feff162-beff-4644-b756-31d3ca8ce582",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "714f606b-13e7-4eac-9a44-0b55cc9f7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba553b98-e201-4ee1-9706-037cf39ce55a",
        "cursor": {
          "ref": "7e2eb792-94e6-4eea-b036-76fbddd70767",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e8df5255-e64c-4357-b39f-93451529e22d"
        },
        "item": {
          "id": "ba553b98-e201-4ee1-9706-037cf39ce55a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6b166f7a-c183-4b38-b1ca-502965f0fd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c65f7a9-749c-4145-8b6c-b5611b90dbd5",
        "cursor": {
          "ref": "b079ee60-7668-4a78-8881-a7d45d16ea58",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "650a38e8-4cd0-43a3-a5c0-b34c93fa5dfd"
        },
        "item": {
          "id": "7c65f7a9-749c-4145-8b6c-b5611b90dbd5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "15a9fba5-f75a-472e-9f0a-fb2d7babe8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe900a72-9371-4551-93fe-8088419f6b4d",
        "cursor": {
          "ref": "ac1f4bd3-f69a-423f-8a0c-052caa161d26",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd01b67a-80f0-4d0b-b147-6f355921efd0"
        },
        "item": {
          "id": "fe900a72-9371-4551-93fe-8088419f6b4d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "724ee111-5690-49c9-aaaa-97230dfd2f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074e9ce6-ec27-4d13-845e-d7fc0bf27348",
        "cursor": {
          "ref": "9b0ed8be-d75a-466a-9452-e0e5e9f95c38",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77cd6938-448a-4968-8e15-eec07e0170ef"
        },
        "item": {
          "id": "074e9ce6-ec27-4d13-845e-d7fc0bf27348",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da3c96e8-5561-4268-a259-087aee418f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d88019-cdcf-47f2-8905-3455bd04b2f9",
        "cursor": {
          "ref": "db7c1283-2896-4439-b6ac-7635db35b494",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8b65feef-46b8-4113-ba57-12262bd386b4"
        },
        "item": {
          "id": "b1d88019-cdcf-47f2-8905-3455bd04b2f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c66be0ef-c5ac-46aa-b095-056266fe15cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4efc8c-550b-4549-b676-d572c226f7d7",
        "cursor": {
          "ref": "b6aecef0-ebf2-4e8f-9b01-746a70a54f61",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "42d33531-0da1-40b2-b167-a5237f9d92d9"
        },
        "item": {
          "id": "de4efc8c-550b-4549-b676-d572c226f7d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab70cd9f-ace9-4ac9-8a93-ffaadf84add9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d021b8-c1ae-44d2-989a-cebc1674f91c",
        "cursor": {
          "ref": "05453d8b-999b-4fc9-b7a0-94ae1d0b17eb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "df3b6644-25d2-44cd-8c16-b08e2302fc43"
        },
        "item": {
          "id": "74d021b8-c1ae-44d2-989a-cebc1674f91c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c984710e-ef67-4707-ac16-d1a673e1c9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad04214-3c95-490b-a658-1405ff810347",
        "cursor": {
          "ref": "8e09be35-aa47-4ce8-bf6d-6bb3199fcfed",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a76e1744-2329-4583-af7e-452d3075b767"
        },
        "item": {
          "id": "bad04214-3c95-490b-a658-1405ff810347",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d2f19d42-230c-42b8-a85e-84683660c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a149c2-8bf0-4b93-a8f5-eb1ff4d8a262",
        "cursor": {
          "ref": "a943b800-659c-445a-943c-df4456fded1b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4aa5499a-a88e-4274-83e1-4414f0197b13"
        },
        "item": {
          "id": "d6a149c2-8bf0-4b93-a8f5-eb1ff4d8a262",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "de497b7b-c7ad-4ef8-a78d-504f988a3b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273f4e3-e1aa-4125-a029-9c1b8235c605",
        "cursor": {
          "ref": "bbcff107-cb88-4139-9405-8582b1aa065c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3eedd46-dbcb-42d5-b3ce-fc7774e2d1f6"
        },
        "item": {
          "id": "6273f4e3-e1aa-4125-a029-9c1b8235c605",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "92c101a6-2db0-4b99-aa80-7724508ac525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c00df3-130a-460a-85ae-483e1b7e7ebc",
        "cursor": {
          "ref": "6c90fad8-02cd-47f6-89d5-d6ddb844ff2d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d1bf044d-3948-4547-acb6-e2219bc5aaf7"
        },
        "item": {
          "id": "36c00df3-130a-460a-85ae-483e1b7e7ebc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "326f3598-d825-41f8-ab67-c4819012a6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f09db3d-ce2b-4178-95a2-95bb9244e308",
        "cursor": {
          "ref": "e87df44a-35af-4dbb-afe8-4abc2b205b4a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d1825de-aca4-41f7-a3fd-0680a113b889"
        },
        "item": {
          "id": "9f09db3d-ce2b-4178-95a2-95bb9244e308",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fdb9a1a8-1f87-4962-9284-0f013d4f5bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06606c09-614b-41de-b130-5ced408ffc6b",
        "cursor": {
          "ref": "6b44ce3e-6218-4b8c-a1a7-3b04c903cbe7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1187fb9a-0648-4469-9649-f6892641ada3"
        },
        "item": {
          "id": "06606c09-614b-41de-b130-5ced408ffc6b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "244ed82d-e608-48e6-ae3c-b16da5c29573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cf7796-0b6d-45fe-8b09-425f17dcfd7a",
        "cursor": {
          "ref": "bf0c4384-1d2f-40a7-b9c3-0d72b1a13673",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0d4d704b-f97f-49cf-98c8-d35fc1725eae"
        },
        "item": {
          "id": "e2cf7796-0b6d-45fe-8b09-425f17dcfd7a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "89a033f4-d98f-4e32-b892-a11ffae861b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3566bb52-4dfd-4a6f-bad6-a898e5768a8b",
        "cursor": {
          "ref": "f4263f06-e6bd-41e9-9c98-6f6eb98a885a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "122ca104-f6b2-4092-b331-b7ed923fda18"
        },
        "item": {
          "id": "3566bb52-4dfd-4a6f-bad6-a898e5768a8b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b4923b6-7752-4058-bb13-55a30438de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6bdee5-1a30-49fd-a1b6-3b83f33fbd1d",
        "cursor": {
          "ref": "c04931d0-32d6-4808-bfd7-6947c5a54f14",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "15587bbc-f9c5-42af-bc7a-a63938c95d66"
        },
        "item": {
          "id": "fe6bdee5-1a30-49fd-a1b6-3b83f33fbd1d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d94f0ac-5536-4e53-9ccd-501e9f624c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d6ef9-61b9-45be-bf93-ee2e351cc144",
        "cursor": {
          "ref": "ed9e8aaf-c607-4492-b793-d6d7449f6d9f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a541d55e-220e-43aa-91e2-bd77b0690ed5"
        },
        "item": {
          "id": "e44d6ef9-61b9-45be-bf93-ee2e351cc144",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "322387bf-818a-4e94-a02e-94dbdcfe93b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73fca2d-c7f2-4bc5-a26c-a68189d0d851",
        "cursor": {
          "ref": "a20f3f6f-20b1-47c2-871d-94e16dab0f00",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a0471051-c101-4b4f-9c1c-60e57c278bed"
        },
        "item": {
          "id": "a73fca2d-c7f2-4bc5-a26c-a68189d0d851",
          "name": "credentials_issue"
        },
        "response": {
          "id": "03cc3c3f-c9c5-42e5-8ed8-dc49a5776f6f",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "045c4dd0-6a35-4d7d-b369-2dbdf8f1a9d3",
        "cursor": {
          "ref": "56417438-b049-4c73-bc25-e38081b4b3fa",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d3ec5453-e50d-406a-8028-d43a2176b842"
        },
        "item": {
          "id": "045c4dd0-6a35-4d7d-b369-2dbdf8f1a9d3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5faf1e76-fbae-4cb8-9308-87875dff1dbb",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d894075c-13a8-4c15-925d-80cc65b06310",
        "cursor": {
          "ref": "1d065dc1-32f6-4afa-9956-a6a09f87a196",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f46fd5fe-2205-4382-86dc-b8c29a21c4b1"
        },
        "item": {
          "id": "d894075c-13a8-4c15-925d-80cc65b06310",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d80e6ab3-2581-47bd-9927-17ee03847c43",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "691342a1-fb07-4988-b030-888183dbf299",
        "cursor": {
          "ref": "ee377128-a309-4e8c-a69f-25a76bb4d146",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "589bd458-6a6d-4889-9d1e-58c62d39ff29"
        },
        "item": {
          "id": "691342a1-fb07-4988-b030-888183dbf299",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e399cc3b-f74b-4a54-b1a6-ccb20ead0de6",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "37980e13-f470-437d-8118-f28b67bf7495",
        "cursor": {
          "ref": "86669ca5-1c00-40ba-b3f7-a1040cda4ad8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fdb60ac7-502f-4af2-a66f-33e2f9dc68ba"
        },
        "item": {
          "id": "37980e13-f470-437d-8118-f28b67bf7495",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c34231cc-ec6f-4dc0-957c-978a839a1225",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fb2c04-6ade-4a60-8d25-bd87bf0ae4ae",
        "cursor": {
          "ref": "c1d06560-a265-4382-bee2-27d595553aa5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4d7915b4-ab1c-4f22-9c81-b0f3d2956f56"
        },
        "item": {
          "id": "e2fb2c04-6ade-4a60-8d25-bd87bf0ae4ae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f9a837ab-f6c2-416d-a22d-294d392081c6",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4fe14d-c27a-4231-a884-046e0784f252",
        "cursor": {
          "ref": "6f9dc07e-de15-4187-9c82-8b2145ac88f5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "13b2f11e-6a56-48d7-bd36-a35b9caedfd2"
        },
        "item": {
          "id": "0e4fe14d-c27a-4231-a884-046e0784f252",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "18527549-b737-4d41-aa9f-8128065b03d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fc2a2a-513e-4cc7-a03e-4c59c62a9cd9",
        "cursor": {
          "ref": "fb0890d8-8dc3-4a02-9257-ce0fc908f767",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "20be6b6a-586a-4262-a0f9-ae0b0d8967cf"
        },
        "item": {
          "id": "07fc2a2a-513e-4cc7-a03e-4c59c62a9cd9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4283b21-2a27-4dbe-acda-66a4a3ac9966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b555a-04a3-43f2-9517-d67416d5671b",
        "cursor": {
          "ref": "a70aa5f1-965f-4bbe-8361-07e07b053a38",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5b004baf-b248-4e93-a74b-4c889b8e5fb6"
        },
        "item": {
          "id": "972b555a-04a3-43f2-9517-d67416d5671b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7b874b6-e28b-4875-b995-9299fe98e312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0131a76-4f65-4f7c-8577-7ef2b843131a",
        "cursor": {
          "ref": "cc292f9c-833e-4f7b-b19f-cd2b78fdaed7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75d860c6-855e-45a3-9839-16cc270edcbe"
        },
        "item": {
          "id": "e0131a76-4f65-4f7c-8577-7ef2b843131a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c50447b2-e1c4-411c-9f39-24cf34fc6024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ff4160-0be4-4492-9fc7-4e6b84fbb381",
        "cursor": {
          "ref": "523f493f-7d55-4325-b7c4-dab88308b2c2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "46f060fc-182a-4a3c-95b0-71ee50909c39"
        },
        "item": {
          "id": "f8ff4160-0be4-4492-9fc7-4e6b84fbb381",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d45d4ad0-0fb4-4d43-83b6-ae2b391491cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97440065-327c-483b-9871-bfe5b85e9797",
        "cursor": {
          "ref": "cfdc2d68-8cb3-4962-9f93-6b5192b509b3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6446338f-17e9-4082-b4fe-a7e85da85980"
        },
        "item": {
          "id": "97440065-327c-483b-9871-bfe5b85e9797",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50380987-7113-4494-9931-0826265db4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254e077-56f7-4f43-afff-97b35c8bdfeb",
        "cursor": {
          "ref": "8ae99841-2780-46bb-80b3-5e76d8c347de",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "59090964-18b9-42fe-abf6-030e4944be7f"
        },
        "item": {
          "id": "a254e077-56f7-4f43-afff-97b35c8bdfeb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f61fa7ab-3809-4b7d-9402-d25ced1a5013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c24c028-f7df-41f0-b8e4-14363f737330",
        "cursor": {
          "ref": "0fd9e2b9-09ea-40f7-b050-52624907581b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "451204c1-5d56-42fa-8348-03957afdb4fb"
        },
        "item": {
          "id": "4c24c028-f7df-41f0-b8e4-14363f737330",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7993f3d-efed-4343-ad2d-8f4afb7c7115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d13c3b8-2d3f-4705-b013-2937788a6225",
        "cursor": {
          "ref": "cd9731c7-63c1-4d2a-858d-52049e7f90f8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "29ebf893-9f98-406f-9383-76046488a677"
        },
        "item": {
          "id": "5d13c3b8-2d3f-4705-b013-2937788a6225",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9b9f98d4-c52b-49ad-a79a-c021aa4846ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06b4fcf-5918-48b4-968a-31cc7fa8f27d",
        "cursor": {
          "ref": "88b2d879-ba0b-47ae-9cd1-2b24af3bddee",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "812c9b92-d327-41c1-a7bf-9e2f36b59d03"
        },
        "item": {
          "id": "a06b4fcf-5918-48b4-968a-31cc7fa8f27d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6d6f241a-2295-4198-ad9f-a3c71efea613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef76d99c-033d-473b-88b0-f36d4476e187",
        "cursor": {
          "ref": "fa30e30a-892b-4561-9fb0-f269248597af",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8fb04fe2-349d-4d7b-96b5-d64862481655"
        },
        "item": {
          "id": "ef76d99c-033d-473b-88b0-f36d4476e187",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96a22d80-ffc9-4853-b65f-cdfcc2e9b38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615e7343-687b-42e3-a690-3ba564214961",
        "cursor": {
          "ref": "5b2e8299-1ca5-489a-aa79-5756f7a36cb8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7aadb5d1-3529-4e89-9ecb-19c46d8fa1d3"
        },
        "item": {
          "id": "615e7343-687b-42e3-a690-3ba564214961",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d89f5e32-49cf-4dc1-86c5-523db12ea4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e916db5b-c68d-49fe-affc-9fe6da7bcd76",
        "cursor": {
          "ref": "f4d1b635-30ad-4a46-97ec-cf8da215a398",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "176fa7f4-2f60-4f33-bcc2-a01ebbe60754"
        },
        "item": {
          "id": "e916db5b-c68d-49fe-affc-9fe6da7bcd76",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e596bab7-7916-4527-b426-486a29c10d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6e58fb-2d07-4a58-bc0e-8919e59f2379",
        "cursor": {
          "ref": "c53d85d2-ecb5-494e-8206-b8c292d80de3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d0bd4785-95f7-47dd-806b-f426a5500d24"
        },
        "item": {
          "id": "9c6e58fb-2d07-4a58-bc0e-8919e59f2379",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f651ae3-20fc-4285-bfd2-4fe25c514916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b697fab8-aa3f-408b-a305-efeee24443a6",
        "cursor": {
          "ref": "49da8d13-bced-420b-a827-c11362594e9c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "65d5b328-06e8-4691-9241-bb0cdd40e863"
        },
        "item": {
          "id": "b697fab8-aa3f-408b-a305-efeee24443a6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b78a1feb-ebb7-4d82-b772-a3314468d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb24e38-f551-49a3-8a09-4ff02bfcd585",
        "cursor": {
          "ref": "7a03b521-f043-418b-af9d-c8844685b7ef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "301db645-6350-4801-baff-f89343563cb9"
        },
        "item": {
          "id": "4cb24e38-f551-49a3-8a09-4ff02bfcd585",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8253001-f3e4-4f7c-9682-005950dc4a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f693c53-c420-42b0-b717-b2a684c16824",
        "cursor": {
          "ref": "9bc69688-7912-470f-b632-d53144cd75e8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "07a63aba-7955-4b84-8665-6b8dfcec137f"
        },
        "item": {
          "id": "7f693c53-c420-42b0-b717-b2a684c16824",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa08af29-273b-4ac7-b7e3-04d571fbfa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7554544-eb78-43e9-9a72-f039e169fa94",
        "cursor": {
          "ref": "64a37f1d-61c4-41a0-bd6d-79ac6184e69d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "358a708a-d9ae-4409-84da-c1ede293bb8d"
        },
        "item": {
          "id": "c7554544-eb78-43e9-9a72-f039e169fa94",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d1db5db3-be04-4bb5-abf5-e0cc6cc7f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e358b430-7207-4500-b723-cd04360e1e75",
        "cursor": {
          "ref": "448ff567-8fd3-439d-bf06-0bc246b4a72d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "726a872d-945b-43ba-9da9-7f4adf966c23"
        },
        "item": {
          "id": "e358b430-7207-4500-b723-cd04360e1e75",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e41ae1ee-bf4f-4250-b10e-2b8c832d15a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d037ff-cca8-403a-8caa-f6795afb3bbf",
        "cursor": {
          "ref": "831fb6da-4bff-4119-8c72-8c4845b79e9b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d1bf3d69-9808-49fc-8d68-ce0d97cfd9a1"
        },
        "item": {
          "id": "01d037ff-cca8-403a-8caa-f6795afb3bbf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aec2ab97-550a-4bf9-a11b-b21c4f338e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58af5181-1615-4079-81fc-10f2cae0a5d0",
        "cursor": {
          "ref": "1730b99c-ded2-439d-a865-9463142247a5",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e70a7d5-a7dc-41ff-a33e-c58df18f0306"
        },
        "item": {
          "id": "58af5181-1615-4079-81fc-10f2cae0a5d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e1641b5-9864-484b-9fd7-3331b2e2c0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6c015b-8d95-4e63-b089-d0639bcbfa42",
        "cursor": {
          "ref": "4212ad83-a5c7-4acf-b001-27ddad2a8419",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b8649f44-0e18-4696-81e1-25c01506b099"
        },
        "item": {
          "id": "dd6c015b-8d95-4e63-b089-d0639bcbfa42",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a7f88f15-95a8-47bd-972d-f0358f15303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7e792e-188a-4ed3-b3cf-f27181959076",
        "cursor": {
          "ref": "6edc5ad9-1f30-4059-a31b-20170b4eb722",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "306b9d08-7042-4b73-8ec4-d534c020ab62"
        },
        "item": {
          "id": "fb7e792e-188a-4ed3-b3cf-f27181959076",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "97356db6-7bce-4394-b3ee-ce997e12e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649d1ca6-e7ac-44eb-bbc3-5705304a3552",
        "cursor": {
          "ref": "0939af28-78fa-4e91-8c69-18a86631a74b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9b7b25a4-07b7-4062-901f-58bebb2688b1"
        },
        "item": {
          "id": "649d1ca6-e7ac-44eb-bbc3-5705304a3552",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a6fe9fc-8881-426f-adde-8acc79711b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06911977-913d-40df-bcdb-cf84f8114bde",
        "cursor": {
          "ref": "9fba3345-d790-44b5-92b8-351266233088",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6a290531-bdd1-4ef2-be3f-ff48662bc6d0"
        },
        "item": {
          "id": "06911977-913d-40df-bcdb-cf84f8114bde",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "97b938e1-7bcd-420c-90b0-e57949b78962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c2a5ae-5a3b-4954-a297-bff0c1b6d096",
        "cursor": {
          "ref": "188649a1-327c-46ac-bd83-39da9a3bd2cc",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3fc0dc89-c1f4-4a80-b72b-49e459d0dd53"
        },
        "item": {
          "id": "b7c2a5ae-5a3b-4954-a297-bff0c1b6d096",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c862d74-2874-4417-b4a2-58be3809089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3111aef2-5d4d-4516-8ef3-6f2cbcbf6516",
        "cursor": {
          "ref": "2995199e-9c78-4294-a24a-408f640eb06a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6bed0df9-1e48-4bd1-9da1-a0153945131d"
        },
        "item": {
          "id": "3111aef2-5d4d-4516-8ef3-6f2cbcbf6516",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbffc0b2-f321-4ca6-a348-e49092ee9179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f19fa0e-9373-4cbf-9f32-46faf02f28ef",
        "cursor": {
          "ref": "dffafddd-b879-49ca-ab40-4f0ab138ac33",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "77488f3b-3c63-4897-b1a7-baa6659fd3fd"
        },
        "item": {
          "id": "4f19fa0e-9373-4cbf-9f32-46faf02f28ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b34eab2e-ae34-46ec-b986-da910d43c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853a61fc-410a-4cbf-b2cf-19bd86ee1109",
        "cursor": {
          "ref": "943db852-af20-4130-8e9d-d22d7ff66b8a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0bfd5db5-866b-467f-bd82-992d5ec62234"
        },
        "item": {
          "id": "853a61fc-410a-4cbf-b2cf-19bd86ee1109",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b13eeb8a-772e-458c-b879-ff9fe409dccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c20cdc0-c6f3-4a45-8020-1d678ecd10de",
        "cursor": {
          "ref": "fed96413-ea48-4185-9344-48b4fb0da393",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f31c1c22-861a-4234-b999-80fac9a66663"
        },
        "item": {
          "id": "2c20cdc0-c6f3-4a45-8020-1d678ecd10de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e241da89-1372-454e-8d1a-ebee2bf39fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6830d4-3bfa-4bef-b9fa-826798e9ab3d",
        "cursor": {
          "ref": "12d70003-a48c-46c5-bce8-f2e890d752fa",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ad9a358f-81ae-49b5-9c16-3b7c22c0a13e"
        },
        "item": {
          "id": "1e6830d4-3bfa-4bef-b9fa-826798e9ab3d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "591898a8-48f5-47f2-9e9c-bec3d205794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79420a27-7bcc-4170-9763-6dbb62fd42f7",
        "cursor": {
          "ref": "3bab0fe3-944c-4f5d-a282-8b02d08bfaf2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80ca6410-76bf-4c28-9136-7c9e13c5e87c"
        },
        "item": {
          "id": "79420a27-7bcc-4170-9763-6dbb62fd42f7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0c484875-d7c3-4465-9b19-58a592f64795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5249ea-9d37-49a3-a259-ca44a482f731",
        "cursor": {
          "ref": "9971109f-5959-447d-af7d-c6eb7ecb9a6a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b8d6e5ed-9a59-4224-85be-d224d08603d3"
        },
        "item": {
          "id": "8d5249ea-9d37-49a3-a259-ca44a482f731",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dbe1af22-5a77-4462-89ef-068cb30c616b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9008f99-433b-498c-95aa-0ea25a67c992",
        "cursor": {
          "ref": "9f5e357b-c17e-4c9e-b7d5-5383887e3874",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8051e215-6c5e-453d-9be4-96c75af099e2"
        },
        "item": {
          "id": "d9008f99-433b-498c-95aa-0ea25a67c992",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9b18161-5baa-46ab-a9d1-1edaf3946547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97e0780-7982-44ce-8d38-e4882f2d3297",
        "cursor": {
          "ref": "dfe830d4-2b7e-4595-97ee-2f56bbce16d0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "af2371e7-5fba-4768-8499-893cc7c6155e"
        },
        "item": {
          "id": "c97e0780-7982-44ce-8d38-e4882f2d3297",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "50d625af-2516-4bc0-abac-b3acdd000f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c70c63-974d-4520-85ee-6283d9b63d59",
        "cursor": {
          "ref": "3d1aa7f1-6eca-433a-bcd3-514010611743",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "faef3e28-a924-42f0-acee-0c9bfc0ff19f"
        },
        "item": {
          "id": "38c70c63-974d-4520-85ee-6283d9b63d59",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "210644be-ad5a-4007-8cc0-e5c61315f346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62a98f-554b-400b-9d04-22a0a48c394a",
        "cursor": {
          "ref": "b916fa86-d3e4-4ff2-b8d7-91763ebccb77",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a358a8e-0df4-4d55-926d-7afa42579a0d"
        },
        "item": {
          "id": "ea62a98f-554b-400b-9d04-22a0a48c394a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60947bcf-10b7-4af5-8f43-8fc462973037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb51f28-81f5-494c-90fb-923a066e7658",
        "cursor": {
          "ref": "1fc844db-0026-42b3-a814-2bb1a11674fd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6bee022f-5fcf-45ce-a5f5-482f90c50685"
        },
        "item": {
          "id": "bbb51f28-81f5-494c-90fb-923a066e7658",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab51bbc6-e462-4187-bd05-bb10fb5dd2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a2c48b-c71e-4a5e-b765-449a32f24b19",
        "cursor": {
          "ref": "c26155fa-ad20-47b5-bd7e-862bf3b187d3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e0f379b2-7d6e-46dd-bd01-1e999ac163c3"
        },
        "item": {
          "id": "17a2c48b-c71e-4a5e-b765-449a32f24b19",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ba941d4-7f1d-44ec-b3e1-62b401b7ea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0475d2fe-be25-4e6a-87d0-8f13dc557789",
        "cursor": {
          "ref": "eb44cb07-b8e8-4dff-bb13-113e22ac6ba1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3e27d7aa-7a43-4de4-a82a-7efa1b0d9a81"
        },
        "item": {
          "id": "0475d2fe-be25-4e6a-87d0-8f13dc557789",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a938ef5f-f175-455e-978b-e02479a5392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee365621-164b-487b-9444-4699b43612f0",
        "cursor": {
          "ref": "290b820f-2c58-45e5-98e1-c21b1ef561da",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8c8658f6-2608-4da3-8cee-f4f74359dfe7"
        },
        "item": {
          "id": "ee365621-164b-487b-9444-4699b43612f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fac031ab-1037-4586-8296-1feb6a1c6c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5473df2-909f-4bf8-9d99-7b51a876d1c3",
        "cursor": {
          "ref": "6412ef19-3b15-4dd2-875c-040ee09bc524",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb59ed43-6c3e-4794-a1cd-2b5a935937c5"
        },
        "item": {
          "id": "a5473df2-909f-4bf8-9d99-7b51a876d1c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "afd85f53-7c4c-451c-9a05-e8380fee0e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec564f0-98ba-495f-8f14-3f8f1276d7e6",
        "cursor": {
          "ref": "8e6c445d-9772-4b47-8527-f04a2c62b9bb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "75d0e1f3-90e2-43b8-8e39-297a6f3d3069"
        },
        "item": {
          "id": "9ec564f0-98ba-495f-8f14-3f8f1276d7e6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ea6facb5-8b3f-489e-a810-a19c5060e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b4f635-b634-4a71-88fd-ee8304cbd6be",
        "cursor": {
          "ref": "23852c5a-02bd-4b83-bbca-949f047a907c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7527e398-50dd-4097-9714-bf8bd581a1c4"
        },
        "item": {
          "id": "03b4f635-b634-4a71-88fd-ee8304cbd6be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f9859a5d-41b6-48b5-8622-2103eafd2487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27534303-8907-49b4-a835-b64bdc9d8e2c",
        "cursor": {
          "ref": "27d0afd7-6fae-414c-8f9a-6d6a2899dabd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f71b80e-8d66-44b5-bae3-871049cc1544"
        },
        "item": {
          "id": "27534303-8907-49b4-a835-b64bdc9d8e2c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74450efd-581d-4708-9828-008c8d68e8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64767e7c-2125-4e0c-907e-ce09d638a5be",
        "cursor": {
          "ref": "deedba97-ecc2-472a-98f5-a79fb1cd6f7f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ef9802fb-0e6a-4e19-9381-b1deaaf3d339"
        },
        "item": {
          "id": "64767e7c-2125-4e0c-907e-ce09d638a5be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0a97691-f8dd-4834-bc53-f602878319cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccae3cd-86c0-4f6f-97b9-0c35f1d8ba9c",
        "cursor": {
          "ref": "17efde62-92bc-44ef-98ea-da48ed56980a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2b85b1b0-4c9d-4cb4-a564-7b4ee9b5f5e7"
        },
        "item": {
          "id": "2ccae3cd-86c0-4f6f-97b9-0c35f1d8ba9c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "879cb96e-29b3-480d-a554-b2fc7ffd2969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c7d43-fc4c-42ce-b770-b903534c2d67",
        "cursor": {
          "ref": "6334faca-b56c-4fd1-ba21-3f3746a6b4a8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "27b7f2b8-dbd0-4684-a18f-c6b3dbf18eaf"
        },
        "item": {
          "id": "aa5c7d43-fc4c-42ce-b770-b903534c2d67",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc895fa6-dab2-4651-a1be-b016814df6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a6430-e480-4c57-8eaf-708acad48ef3",
        "cursor": {
          "ref": "19307f2a-c4ca-4f32-9ec4-51f9bfdd3d13",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "da7d721e-01c9-42fa-91df-fe77edc199aa"
        },
        "item": {
          "id": "7c3a6430-e480-4c57-8eaf-708acad48ef3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2d20038-af99-4ec9-9e9e-350fe4b8f4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214474f7-767a-4d2d-b0ad-c085e75981fa",
        "cursor": {
          "ref": "9874cec1-d9fd-4dda-8273-0098a25718b1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e18a2789-2eff-4939-953d-de316ccee584"
        },
        "item": {
          "id": "214474f7-767a-4d2d-b0ad-c085e75981fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6362173c-a899-42fc-831d-4d32c133f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f5fcee-6de9-40b6-9138-cc9bdbf8ea82",
        "cursor": {
          "ref": "8d942e09-7c3a-49e4-a311-cef183ca6cdd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e9003cc-5847-43d7-bb34-fd5f6e093a37"
        },
        "item": {
          "id": "e8f5fcee-6de9-40b6-9138-cc9bdbf8ea82",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c51d6e19-3df8-496f-bffd-673e001589e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45853327-3643-4a4e-b8ae-3824cc56cd86",
        "cursor": {
          "ref": "3caba74d-ce33-4a48-a1b3-faebd4e447c3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9254a7c2-f075-4fdb-94b5-2167138ca2cc"
        },
        "item": {
          "id": "45853327-3643-4a4e-b8ae-3824cc56cd86",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bca253b3-790c-4da9-90db-d1b211d46166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c4ff3-1a47-4170-8de7-2e35c391eeec",
        "cursor": {
          "ref": "ed40ff7d-ff0a-44e0-922f-5a4b5bb9c92c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d8186a3-1826-48a9-b8ae-bee0e65dfb99"
        },
        "item": {
          "id": "9e7c4ff3-1a47-4170-8de7-2e35c391eeec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c92f35cb-416a-493b-acc3-c7fc9e93bb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f45920-f884-4b6a-ae49-3fd963244d20",
        "cursor": {
          "ref": "b5c2ae0c-9408-45b9-bbb1-3bdbf6c663be",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c610e000-3e6b-4141-ae9d-ac9d9ec4a58e"
        },
        "item": {
          "id": "38f45920-f884-4b6a-ae49-3fd963244d20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2be0facd-6863-4369-b790-09dadc9e28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e93bd04-0d89-49b0-9be0-193ae49824b7",
        "cursor": {
          "ref": "1f5db4d4-7452-4255-b741-6922d87191be",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9b006158-96c8-4be0-b724-17907acc3466"
        },
        "item": {
          "id": "0e93bd04-0d89-49b0-9be0-193ae49824b7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "21122de2-2778-4994-9ad3-f10eaadd698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f159b282-c3c8-4542-941e-244456ee2f07",
        "cursor": {
          "ref": "aafe39d8-4344-4920-a76c-cb5a9e013ea3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "845a69e7-8ba4-4c6c-a678-4984c0a3ba75"
        },
        "item": {
          "id": "f159b282-c3c8-4542-941e-244456ee2f07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c1eda08-e2ae-4d88-9e89-f7fefff2abb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45138482-63f3-4dec-aea5-a64959f398be",
        "cursor": {
          "ref": "2e259358-5711-4960-b619-0795501e8e1d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad2cdf57-b7af-4072-b870-0742da477b35"
        },
        "item": {
          "id": "45138482-63f3-4dec-aea5-a64959f398be",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c30981cc-e77e-470f-8256-89e84d159600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e224be-3d9a-4aac-9e5c-485c96c0ba44",
        "cursor": {
          "ref": "50d7cea5-9c5e-4342-abf1-47b4c109eb2a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "06510c13-bed9-4d5a-a057-5f9688aaa61d"
        },
        "item": {
          "id": "b6e224be-3d9a-4aac-9e5c-485c96c0ba44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "23ab9a7e-a599-4f0d-b816-da684f2653bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132059af-ca41-43d5-8a4a-a8df8bb764da",
        "cursor": {
          "ref": "2aafb833-33e9-4670-b370-c27c1f6fb863",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d4a3ba6e-10cd-4cd7-99b4-3e63a00f6648"
        },
        "item": {
          "id": "132059af-ca41-43d5-8a4a-a8df8bb764da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "28ef1e41-6117-492b-9ef6-9a951fcec86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5001a538-eea9-418a-878e-699b28dc4c1f",
        "cursor": {
          "ref": "d078b779-3ed7-4888-8041-5fe411cefd7d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "58a4b1b6-f2cd-41a1-8319-34441813a1b9"
        },
        "item": {
          "id": "5001a538-eea9-418a-878e-699b28dc4c1f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "674f8803-b17d-4883-aebe-91722ad62da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb212194-0c65-4310-a5e9-13249b3756b6",
        "cursor": {
          "ref": "391af66f-625b-43e9-97a0-e5320f52b91b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3bc4154c-ce07-4ad2-8b24-aa51f033bb13"
        },
        "item": {
          "id": "bb212194-0c65-4310-a5e9-13249b3756b6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17a7fef5-a141-4f59-a6c0-2696ba4eb8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831671a2-f772-4bc8-8733-fca2b14fb5c3",
        "cursor": {
          "ref": "13a1a324-a3dc-4e23-b4b4-28afdf15eb20",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "85b2c44e-11de-4cac-badb-7e19a9073869"
        },
        "item": {
          "id": "831671a2-f772-4bc8-8733-fca2b14fb5c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a199e835-452c-4974-be9d-20f47fa6d7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e7dd1c-0ff4-43ff-8824-97f5a0275a8c",
        "cursor": {
          "ref": "f1db05a2-d206-4859-a652-64f5544e651f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "88a7bba5-2857-4f99-9952-7966125ed9a1"
        },
        "item": {
          "id": "d2e7dd1c-0ff4-43ff-8824-97f5a0275a8c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b0bd111-f87e-4852-b1ac-6e07fec7b9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0ecfc6-efc6-4627-a0d5-82ae5f7db19b",
        "cursor": {
          "ref": "66d72fac-576e-4d51-b746-8030b2f0489e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b28341b5-6de9-4e56-b81f-b5348f04d31f"
        },
        "item": {
          "id": "8a0ecfc6-efc6-4627-a0d5-82ae5f7db19b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "64001945-c47c-49ec-8497-989245c1933b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45331a5f-7aa9-45f7-bf08-79e46c3a68a3",
        "cursor": {
          "ref": "4693fda4-ae24-4769-894b-459313c82051",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "213167ec-a7ca-4f04-abf8-47fb34ddbef2"
        },
        "item": {
          "id": "45331a5f-7aa9-45f7-bf08-79e46c3a68a3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bbb7abf8-6c91-42eb-83f1-081ab377efde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01953af3-977b-40c1-8e9d-712167970b59",
        "cursor": {
          "ref": "58fd755a-a872-43f4-9e5b-7a06b8f6bfa1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9c6ff3d0-99b6-442d-9273-4728d4f1bf99"
        },
        "item": {
          "id": "01953af3-977b-40c1-8e9d-712167970b59",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eabe018c-49d3-4dc6-86d6-18e562345b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc2d04d-6e99-4ff5-9515-29affa82cc54",
        "cursor": {
          "ref": "06de74c8-321a-4ee3-93ca-61f3c35ee708",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4a51f3cb-a84a-4865-a933-0ab5bafef1ca"
        },
        "item": {
          "id": "5bc2d04d-6e99-4ff5-9515-29affa82cc54",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f5795534-632a-456d-b897-5e267e1358bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b86077c-8b33-4bc3-ac1f-2862d1c4fe0f",
        "cursor": {
          "ref": "695c8e51-a20c-4af4-a90b-525827685204",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aacbcdbb-db11-4724-9083-82032f1f536a"
        },
        "item": {
          "id": "1b86077c-8b33-4bc3-ac1f-2862d1c4fe0f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "88cee8f8-ebd2-41fa-82b8-4b75942252ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c427b42-2025-4cc1-8041-1673e0234cf0",
        "cursor": {
          "ref": "f3bc0499-fecc-4e01-bc5e-e5f7359b31d4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fbb513b3-087d-410a-ae11-d32367cea7e6"
        },
        "item": {
          "id": "7c427b42-2025-4cc1-8041-1673e0234cf0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5e712d66-a539-4e96-91ea-7a3874148a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87916201-eeb6-408d-9695-beb12ae9bc0c",
        "cursor": {
          "ref": "c6a1416e-07c9-4230-b6cb-90712bfd902e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eb80702f-1704-48e9-a663-6a2455d2f328"
        },
        "item": {
          "id": "87916201-eeb6-408d-9695-beb12ae9bc0c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6619aa74-26b0-44ee-ac85-7273b5510752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b09a244-29b5-4b3b-82e3-9a9e9dc874a5",
        "cursor": {
          "ref": "184ad1cb-d00a-4b47-828b-fc915f432d85",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "781d99cf-b0bf-4172-a764-a50bb270f3d8"
        },
        "item": {
          "id": "2b09a244-29b5-4b3b-82e3-9a9e9dc874a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3208659-c3b4-4352-939e-bc02130f8ad4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b38956-69bf-4e06-89ce-f64883bbe9bd",
        "cursor": {
          "ref": "d22a352b-a222-479b-9325-6b8faf34ab57",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "be2225db-179f-4616-9861-ce730730b384"
        },
        "item": {
          "id": "55b38956-69bf-4e06-89ce-f64883bbe9bd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86e557f2-3524-41f2-8937-b271fe1c36b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c5e3e1-ace8-488d-85f7-e5cb2987495e",
        "cursor": {
          "ref": "54900242-7588-4074-9997-a9cdacc33dd8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b73849f5-1bf0-40eb-a4e5-786bc015932b"
        },
        "item": {
          "id": "b3c5e3e1-ace8-488d-85f7-e5cb2987495e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "33d3dea2-bcc3-44e1-b2ae-b3ecf1b66680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb829b2a-4f7e-4558-83ad-21ddacf80ae6",
        "cursor": {
          "ref": "180a2acd-a7a9-4227-b7c8-be4af4799fec",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b0acece4-5eee-40fb-9134-cd1bb6d9347c"
        },
        "item": {
          "id": "cb829b2a-4f7e-4558-83ad-21ddacf80ae6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f3b1232-19f0-4704-ba8f-1a49f0bfb08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81daec-4be6-4505-85ac-8718b925ad7e",
        "cursor": {
          "ref": "0647bb3c-ee4f-4bc4-8b52-1a40fd810c7c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ff79e571-c0d8-4ead-a618-3c64802b18b0"
        },
        "item": {
          "id": "db81daec-4be6-4505-85ac-8718b925ad7e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "06441f99-13be-4b1d-97e8-93056c2bae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fc4bf2-4735-40f5-9a61-d83900016dc0",
        "cursor": {
          "ref": "e3600caf-0fa6-47b9-97c5-8926eef6c812",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "246b0a34-7c4f-4797-bdf3-90238e5d4753"
        },
        "item": {
          "id": "06fc4bf2-4735-40f5-9a61-d83900016dc0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "724676f2-a8e6-4c74-b672-46140df910c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d4bfcf-0385-488a-b7ec-6df3c7ac59bf",
        "cursor": {
          "ref": "7795ed36-4826-486b-8185-e21eee22b7cb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "91d6a286-d52c-42a9-995e-cf7bc85fc231"
        },
        "item": {
          "id": "60d4bfcf-0385-488a-b7ec-6df3c7ac59bf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "91b98a22-5090-4379-adfa-5c8a41c81b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d4282-1392-4cfa-bacd-61f3b65f0055",
        "cursor": {
          "ref": "4d545c9c-1021-4b17-9a7e-63d8ff7946f1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ead4efb-e8dc-4aba-a303-7bd801ca5790"
        },
        "item": {
          "id": "4a7d4282-1392-4cfa-bacd-61f3b65f0055",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5c523760-8fb5-45c7-97bb-1bec35cf2e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08176025-71b0-4952-9f9d-6c60ac56426c",
        "cursor": {
          "ref": "55068657-d149-410f-ba45-450861d09343",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e55a9d15-65e2-4f58-b2d8-b552cc8278ec"
        },
        "item": {
          "id": "08176025-71b0-4952-9f9d-6c60ac56426c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "12e96b8c-8eb4-4f1c-8408-f5c1236c7e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4da979-0162-40bc-adc8-00c9bc5f1c69",
        "cursor": {
          "ref": "bfb28418-829f-4f27-8b21-649397ea6a85",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "de17eb00-c81a-4617-afd4-16a70bf53d85"
        },
        "item": {
          "id": "3f4da979-0162-40bc-adc8-00c9bc5f1c69",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "22dcb57e-1808-4e44-9adf-33ad935bde44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87aceb9-de6e-480d-bc90-4d75646f4f77",
        "cursor": {
          "ref": "8926ffb8-c96a-4ea6-b3b1-33f0107c93f9",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "25cb1ebb-3b49-4b58-b231-8493f682d352"
        },
        "item": {
          "id": "c87aceb9-de6e-480d-bc90-4d75646f4f77",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "34cbf016-712d-4979-a070-43b77e2d378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb07d28-9d9d-48b8-b265-be7bf2db4888",
        "cursor": {
          "ref": "2471d5c0-0272-4c69-89fd-3b04c907d3d4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "56baf717-125a-4cc7-bfbc-bb73dfcbde36"
        },
        "item": {
          "id": "0fb07d28-9d9d-48b8-b265-be7bf2db4888",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "49501374-0c47-49ae-96bd-e7100aac0869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fe061f-a2f7-4f49-a7ec-ce5883f85a98",
        "cursor": {
          "ref": "76a7b49f-8bfc-4ae8-94f1-28dd43d9c135",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e34fbfa-d63e-4014-9753-eb70f7ca0491"
        },
        "item": {
          "id": "b4fe061f-a2f7-4f49-a7ec-ce5883f85a98",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7c34dc8f-44ab-4025-b51b-6665853a98df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21ba734-6869-4f90-b2c9-391ca7863363",
        "cursor": {
          "ref": "566f25d6-85b7-4c53-8861-905cbd83de8e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1c51fefc-f3ff-48a6-b598-87a5e653f918"
        },
        "item": {
          "id": "d21ba734-6869-4f90-b2c9-391ca7863363",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13ee23b3-6f04-4a33-acbb-088754efbdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e6a0d-d139-4152-91a1-ae4e42bdbb7d",
        "cursor": {
          "ref": "6cd6a356-4c3f-4e21-a7cc-24ac160a51d6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba521d23-efa4-4dfd-bdc9-135c6050aad9"
        },
        "item": {
          "id": "912e6a0d-d139-4152-91a1-ae4e42bdbb7d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f368f13b-67f7-4bfb-ab68-38f0e9317ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d84e3b4-5702-4384-a080-fee3c29ee02e",
        "cursor": {
          "ref": "aa6405dd-4b30-4d06-9410-1c8aaaee5139",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b61b7500-f27e-4d00-82ab-51d24435dc16"
        },
        "item": {
          "id": "2d84e3b4-5702-4384-a080-fee3c29ee02e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9251256a-b15f-4476-b30e-b84c0abf81b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb6a700-14ae-4976-a304-3f5bed5fa4e9",
        "cursor": {
          "ref": "b4331ad3-97d6-4dbb-9103-43f05ea2cda4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8639318e-595d-4d22-8a21-ab42e28e2129"
        },
        "item": {
          "id": "aeb6a700-14ae-4976-a304-3f5bed5fa4e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2c6646f-5b6d-4103-9e0f-d0fd0ce00b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d5e9c9-7749-4721-a984-4ccd4dbf23d3",
        "cursor": {
          "ref": "d70d0ecc-d67b-4246-a578-e82686709d07",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64b0c516-b57b-4196-9c8f-852be5017e7e"
        },
        "item": {
          "id": "81d5e9c9-7749-4721-a984-4ccd4dbf23d3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4159b9e6-b8ec-4507-9970-133c6963e1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740aff43-6396-4f9c-9801-bb1a8c0ec213",
        "cursor": {
          "ref": "25265170-32e9-4d77-b3ca-9d4b18e36bcd",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "63474687-89b5-426c-84fc-cd7cce62e413"
        },
        "item": {
          "id": "740aff43-6396-4f9c-9801-bb1a8c0ec213",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e2ade6b3-c384-435a-acd7-876f6da972eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fab673-be33-40f8-9cad-b6c66fe799cb",
        "cursor": {
          "ref": "bd9f2bf7-46c0-4f66-a6d4-0cef09189afb",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "53c83f7e-0971-4df4-a4ac-13f28ec77b3f"
        },
        "item": {
          "id": "32fab673-be33-40f8-9cad-b6c66fe799cb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c7030e2a-a2aa-4359-ac41-a7a15c39bc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aecdee8-276a-4472-89c5-f937d5fba526",
        "cursor": {
          "ref": "2310812f-a442-479b-a7f2-1fcb39208116",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d67d760d-7397-4251-ad6a-7e3d3c9424b1"
        },
        "item": {
          "id": "2aecdee8-276a-4472-89c5-f937d5fba526",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "861c1ad3-7462-4edb-bb83-8117622647f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d0ddfd-3a5f-4971-b97b-d8e7abb7b3fa",
        "cursor": {
          "ref": "a26bd223-908e-4c94-aab2-cf891df375fb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "41a4278b-5c94-4655-b267-b9614267d4f4"
        },
        "item": {
          "id": "f1d0ddfd-3a5f-4971-b97b-d8e7abb7b3fa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cc392d80-f075-441c-9301-e0e78dbfae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c53eb16-daf1-4de7-b5eb-f139356fa7ae",
        "cursor": {
          "ref": "4dc97f2c-1b01-4be2-9d3f-5c9e9e1e74c4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4852d3b2-67d2-4d0c-92b6-4175caefd36c"
        },
        "item": {
          "id": "3c53eb16-daf1-4de7-b5eb-f139356fa7ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d7fb156a-ae59-4619-9abf-ca19c4794859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae6e25a-b7bc-4bf5-9328-33826c67da69",
        "cursor": {
          "ref": "6c6968da-d637-49a2-9522-4153f1fa4b64",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4cba3702-7f95-45f2-b5ea-0884bf5901bf"
        },
        "item": {
          "id": "6ae6e25a-b7bc-4bf5-9328-33826c67da69",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9b9f157b-945a-4cb2-b88a-6651eb609729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940d645-fa77-4482-8198-c3b06776959e",
        "cursor": {
          "ref": "23045828-d615-48dc-bff2-a702862a64df",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61c31fc1-b0e4-4a38-b2dc-97bde6906729"
        },
        "item": {
          "id": "d940d645-fa77-4482-8198-c3b06776959e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "495aa6f5-ded9-4618-90dc-8d6cb3d4b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378fb639-042d-4335-915a-50b0c460c78b",
        "cursor": {
          "ref": "5f50f780-7317-4f42-8a91-12ffd3c05e81",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "86c55c80-34a5-4e58-a786-da0f41b47e40"
        },
        "item": {
          "id": "378fb639-042d-4335-915a-50b0c460c78b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6bd082f0-9723-4480-ab8a-d77dcb841376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acff94f3-8204-4f93-979c-bd14ce60cd87",
        "cursor": {
          "ref": "6e0f5196-9522-40da-813f-bb2e9c876682",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0d58adc4-0e47-49f5-87ad-b3c8c962cf03"
        },
        "item": {
          "id": "acff94f3-8204-4f93-979c-bd14ce60cd87",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "17c95fcc-7e50-4ad9-9cac-0abd8a341f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27756d7-41c3-493d-ad15-45d21be733ff",
        "cursor": {
          "ref": "6f7faf0b-27d5-4aa3-b2df-0be20facabcf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6172421f-2761-4615-a829-ba44de85c829"
        },
        "item": {
          "id": "b27756d7-41c3-493d-ad15-45d21be733ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "caf73d0d-b4fd-4be2-9cb4-2993f8fdb647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c320a9d-68ae-4da8-9b08-71e248d68682",
        "cursor": {
          "ref": "d1405170-e742-412d-9119-1f625c40827f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "12aa877a-4a03-451d-a804-747182b2c3d7"
        },
        "item": {
          "id": "0c320a9d-68ae-4da8-9b08-71e248d68682",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "328ec2a5-57f5-4182-b4f6-26378252689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf63844-3075-46f4-9fcc-c42211ecd73a",
        "cursor": {
          "ref": "acf25fb6-5608-49d2-92bc-98182811fa24",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3418b704-75e4-4d5c-ad93-160464b150e7"
        },
        "item": {
          "id": "3bf63844-3075-46f4-9fcc-c42211ecd73a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0053e404-096f-4ffe-9fb6-02e6873180e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d473e896-f5e1-4ae3-8d9d-4c412acb8031",
        "cursor": {
          "ref": "25d12390-df5d-4287-97ac-7db4fb52ec1a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69bfb95f-a3e8-48bd-8337-f6d505e97828"
        },
        "item": {
          "id": "d473e896-f5e1-4ae3-8d9d-4c412acb8031",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e14b1fc0-b972-4fc3-ac65-c6f01d1badc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4be17be-9dd7-4d36-b55f-827e644f651f",
        "cursor": {
          "ref": "24461654-5251-4693-b5b2-4979e301c188",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6fe7589c-fb24-4a91-bfc8-aa22276727ef"
        },
        "item": {
          "id": "d4be17be-9dd7-4d36-b55f-827e644f651f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "88115d83-ee01-4a64-abf1-2b5e882fd755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab25b97-0549-46f5-a7f4-d726c814a532",
        "cursor": {
          "ref": "076bd2f0-e2d0-4f58-9d6f-56ebe017e0b7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ffb364ab-7a4b-447f-98da-3ae1a7d7bd03"
        },
        "item": {
          "id": "2ab25b97-0549-46f5-a7f4-d726c814a532",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07090de5-ecba-43cb-8a08-c2bc3f284b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f676308f-df2b-4dfd-9cd5-93626110890e",
        "cursor": {
          "ref": "23266c11-0554-496e-b6a3-bfeb07d292cc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f355d954-4318-413d-9433-ba6ade4f81e5"
        },
        "item": {
          "id": "f676308f-df2b-4dfd-9cd5-93626110890e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "817c4576-c134-4db4-93aa-f58e7c392efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dbe2c9-efa9-48dd-85e1-1185f8696ea5",
        "cursor": {
          "ref": "3eb2d13d-6b59-40dd-b548-e5d32c22e12b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6d56f630-4370-44e7-8439-8071a083f4ce"
        },
        "item": {
          "id": "29dbe2c9-efa9-48dd-85e1-1185f8696ea5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a2d32128-48ea-4cd5-bfb5-98c4008e8adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a99b028-b42a-4d2d-a2e6-5f17a3880f88",
        "cursor": {
          "ref": "45a10b2e-5d7f-455a-be3b-8f28db6b37b9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "170dc264-2d3d-43d2-98d4-c511999c1f15"
        },
        "item": {
          "id": "7a99b028-b42a-4d2d-a2e6-5f17a3880f88",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3443077d-5608-486a-934c-853f0f83d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d9732e-4c41-4fe4-b7a5-427a8b2c72d3",
        "cursor": {
          "ref": "3d794ce1-463a-4328-b27a-a3532548a18d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5a14e4fe-5b5d-4f24-86a4-b72211825525"
        },
        "item": {
          "id": "22d9732e-4c41-4fe4-b7a5-427a8b2c72d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dce28f18-b3ff-476c-8433-6708a97abbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa31265e-b00e-479e-bcef-eea6824da295",
        "cursor": {
          "ref": "85fe4d95-eed1-4a28-ab5e-aab5151e1e71",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b3065ff7-4cb1-4288-ab9e-3a338adf0af2"
        },
        "item": {
          "id": "aa31265e-b00e-479e-bcef-eea6824da295",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "77fa904a-3ed3-4352-8ca2-8faaa538364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110ebf6-aca6-4ffe-a025-05ef28f7115e",
        "cursor": {
          "ref": "f581bf57-27f4-4201-a323-a6f491d6f6fc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b043fb3e-2ea9-4f6a-ae70-c54266a7520c"
        },
        "item": {
          "id": "1110ebf6-aca6-4ffe-a025-05ef28f7115e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dbefc078-267d-44d3-a1de-9c0a11a29401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3a020f-6d82-4f8c-a9d8-0d987c173ac3",
        "cursor": {
          "ref": "22a45668-5101-4605-b923-3ca72a6efedf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "508019fd-2ab0-4249-89ff-ac24a0fb25f1"
        },
        "item": {
          "id": "6e3a020f-6d82-4f8c-a9d8-0d987c173ac3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "05a1ca04-9a83-4f54-8801-9e57f0c9eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab41a52-fcb1-4d67-aefc-ad0782cc2586",
        "cursor": {
          "ref": "d3bf3164-02b8-4295-bfeb-347f302d2a7e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cd6791ab-4ee9-4b8c-a6fa-30bccace14c9"
        },
        "item": {
          "id": "8ab41a52-fcb1-4d67-aefc-ad0782cc2586",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "087cbaab-545c-4314-a152-786b93513c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980685e-1b00-47cb-901e-63a6e7154a02",
        "cursor": {
          "ref": "eb1a9ce0-445c-4253-aff4-68803bfbfbf6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5ae20a5b-fa09-4b5e-b990-929dd3226e32"
        },
        "item": {
          "id": "1980685e-1b00-47cb-901e-63a6e7154a02",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7821d4bf-37d7-4185-9298-96e26552420d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e2f99e-11d8-4d30-9a7b-58166b0aac25",
        "cursor": {
          "ref": "7b66e265-495e-4ca9-a54c-659d2e85df0b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "98e012c7-9cca-4bd8-93cf-11c6bec2bed3"
        },
        "item": {
          "id": "42e2f99e-11d8-4d30-9a7b-58166b0aac25",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0a2c521-4ddd-43eb-a130-96a14875f1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3ca79-818d-4fe9-8883-c33fda20e112",
        "cursor": {
          "ref": "25e3d2fb-0a6f-45bf-9174-7b369ba12ffc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d7f130d2-463a-40b4-afbb-4454dc730c97"
        },
        "item": {
          "id": "7ed3ca79-818d-4fe9-8883-c33fda20e112",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "657ddf1c-66a0-47a9-9f99-477d14d5e076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a350de-9a43-4cbf-a2f1-25369fb86f36",
        "cursor": {
          "ref": "8e4a273f-2dd7-4dab-a01f-cc75b98befad",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "391a952e-537d-4b8d-8491-d428e79f7368"
        },
        "item": {
          "id": "d9a350de-9a43-4cbf-a2f1-25369fb86f36",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e45dc509-2c47-42c1-a59b-e9104cd384d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e7258-0a30-440d-bd78-2c8bdca0d288",
        "cursor": {
          "ref": "02522c14-dfc6-4866-9cd6-0ddcfa837878",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d84574c8-fe5a-4946-88f8-ce8190297a01"
        },
        "item": {
          "id": "7f9e7258-0a30-440d-bd78-2c8bdca0d288",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6dcdee03-9810-48d0-9f5d-69b0143a7528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e5332a-847c-4abd-a2d2-c54aad1ff1f3",
        "cursor": {
          "ref": "591b0bd8-ad71-4378-a88f-89be0c45d3f6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15e8e694-3798-4ced-b7c7-1f496efaa777"
        },
        "item": {
          "id": "19e5332a-847c-4abd-a2d2-c54aad1ff1f3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0ebfc911-9b8e-4c7b-9d5f-42f7c075ba4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e47e54-5b74-42ac-8222-ead7283c2b6e",
        "cursor": {
          "ref": "e6bead2f-d91d-4be3-8bf4-25ea037904e7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3a2ffecb-14f5-4b47-b76e-9d3387b59e52"
        },
        "item": {
          "id": "a8e47e54-5b74-42ac-8222-ead7283c2b6e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "560d9277-e26f-4fbc-9b7d-1c2c66a052aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3771e8c2-04f2-434b-9e79-de7e3e3b840c",
        "cursor": {
          "ref": "397d238c-b87c-46fa-a98d-619bd60a96d6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "814fd8a6-9bba-4166-9e0b-4b103a609f52"
        },
        "item": {
          "id": "3771e8c2-04f2-434b-9e79-de7e3e3b840c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d174bc28-71f6-4bd3-8a57-42e7790a9dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8c3a2c-8085-47e1-bcf3-8797ab2a5d18",
        "cursor": {
          "ref": "9e57a2f9-34ef-4e99-b672-1a339f9d04c6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0d6cd8dd-f6a0-4a17-bf41-dddc304e29c3"
        },
        "item": {
          "id": "4b8c3a2c-8085-47e1-bcf3-8797ab2a5d18",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f9a2e55e-4831-4feb-b784-252bbb027fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202a18fe-c387-4728-a35c-3e1896382bcd",
        "cursor": {
          "ref": "54a26f4f-8bf7-410a-b348-30cdd314956a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "add6878b-4ef0-4600-b83b-e1ef8b7dda2c"
        },
        "item": {
          "id": "202a18fe-c387-4728-a35c-3e1896382bcd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8411441f-2ae2-4e5d-b19e-4a26cf424219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b802f14-0990-403b-a304-19d9761839b5",
        "cursor": {
          "ref": "bdbc5e93-3264-4a48-9a22-ead734a8d3da",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6e31ff37-c5d6-4235-b414-6cf26c3e25a4"
        },
        "item": {
          "id": "4b802f14-0990-403b-a304-19d9761839b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4f16169a-9a9a-4823-ad77-e502ec10fd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c780d2-2390-456a-a088-193d9601878f",
        "cursor": {
          "ref": "2d21e244-3a85-4c4b-bb00-e7344cdf8a0d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8838aea8-7642-4308-bbbd-dab59476a925"
        },
        "item": {
          "id": "b2c780d2-2390-456a-a088-193d9601878f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bd5d887a-bb40-416e-b75b-fa7405ee6f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2432b56e-291b-4d29-bca1-73a05d0c7297",
        "cursor": {
          "ref": "0743c492-b7bb-45c2-9074-6f5d6a439e33",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5cb4669f-2a8e-4eb1-9671-be16c1aabfbd"
        },
        "item": {
          "id": "2432b56e-291b-4d29-bca1-73a05d0c7297",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5281ac17-c6df-443a-90df-6476ede62fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c175b8f1-0571-4397-a60f-b4d82f0ba772",
        "cursor": {
          "ref": "7dd5694a-2c64-420b-ae1e-816098c802e5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f1e16260-bf13-42cd-bbd4-90015192598f"
        },
        "item": {
          "id": "c175b8f1-0571-4397-a60f-b4d82f0ba772",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "33737f85-ad61-4742-be47-55691a1729cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae627405-effc-42c8-bd2a-0441716ae077",
        "cursor": {
          "ref": "0ac6a298-ae92-496d-b9a6-0de31b7b17f2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5db338a1-728e-44f0-aab8-a5d5eb91f24e"
        },
        "item": {
          "id": "ae627405-effc-42c8-bd2a-0441716ae077",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6ecc80e-8acf-4110-a7d1-591b37f3d4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a57491d-0759-423c-bea6-96cacc5155ed",
        "cursor": {
          "ref": "6170cd34-1068-41f1-af18-177f6fc7b90b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f168e742-5598-4f72-94d2-8e869c8074c6"
        },
        "item": {
          "id": "1a57491d-0759-423c-bea6-96cacc5155ed",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "086773d1-ce04-402b-8ac1-670416c5001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f665c2d-8933-4665-9d22-970c08bec3fd",
        "cursor": {
          "ref": "1dccd8fc-282e-461f-8287-d89842de38d6",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4d81c35f-be0f-4afe-87aa-544e1eb3217c"
        },
        "item": {
          "id": "3f665c2d-8933-4665-9d22-970c08bec3fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2003a1b-5f11-4e40-aefd-bf6a62c5da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeadcb7-d3f7-40bd-bb54-2a78fb38671e",
        "cursor": {
          "ref": "45b93c21-b017-49ac-918d-94e2c63c5dec",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b4f12a0-e618-4618-a4f8-750ef514ebd9"
        },
        "item": {
          "id": "bfeadcb7-d3f7-40bd-bb54-2a78fb38671e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ba47313-1e43-447d-80d6-406e488b627d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cc0581-f1db-42fa-9551-4a39b7539d11",
        "cursor": {
          "ref": "1ab7f709-41be-4a85-8fe8-5d580d0d0ee9",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "732857ba-8f12-41db-ae5e-754375205bf2"
        },
        "item": {
          "id": "14cc0581-f1db-42fa-9551-4a39b7539d11",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "99f974cc-ee27-4250-ba99-bf574617a5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658118f3-df05-43c1-8838-262361abb743",
        "cursor": {
          "ref": "a6496899-64d9-4527-a89b-5b0ac7aa9972",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aa7baa7e-42f2-435a-8833-62f776e91d00"
        },
        "item": {
          "id": "658118f3-df05-43c1-8838-262361abb743",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8b13a04c-3396-4fe0-9f48-c961d980cf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1414315f-85ae-4ac9-a0f3-fc9a05321080",
        "cursor": {
          "ref": "294b5c14-d731-4ea0-8189-4790d4a02433",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "07fbd820-07ef-4361-bd84-d970fd30ca15"
        },
        "item": {
          "id": "1414315f-85ae-4ac9-a0f3-fc9a05321080",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5dd522ae-5ff7-4234-876d-893291caba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dadc33d-b98c-4868-b4fd-8f145df22db9",
        "cursor": {
          "ref": "8a1fb627-ccea-409d-a36b-060e5857859c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c4257431-5b92-4edd-9e5d-679a77e28aa7"
        },
        "item": {
          "id": "6dadc33d-b98c-4868-b4fd-8f145df22db9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7529e13d-f85c-455e-ba7f-97196d165515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26dbbcd-ea35-4862-b0a1-4f5b3b82449f",
        "cursor": {
          "ref": "a175d214-0a86-44cc-9775-31b38c2fe7cb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "71426184-8ab8-4fc6-9eba-79cb6ed1f64c"
        },
        "item": {
          "id": "a26dbbcd-ea35-4862-b0a1-4f5b3b82449f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b891f22e-ab15-463b-b5f8-9a9626ee808c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff10e27f-54ea-4f07-97b6-d327f35b66c6",
        "cursor": {
          "ref": "9663375e-13c0-4753-801f-61e2469b2cc6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "06659c8f-e839-46b1-b6cc-10f24cd98da6"
        },
        "item": {
          "id": "ff10e27f-54ea-4f07-97b6-d327f35b66c6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f7faed9b-76de-4b91-b1e4-b8e6e6f2e068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45dd1b-bda8-4317-ae37-8c287420ed4d",
        "cursor": {
          "ref": "5c19b679-f445-4c8e-b23d-0ef18aa6cf18",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "db64b2c2-7891-441c-baf7-5fdeb2954476"
        },
        "item": {
          "id": "7d45dd1b-bda8-4317-ae37-8c287420ed4d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "153f1268-e3d4-4467-93d0-de6bd1b29990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d028cf5-581a-4c01-aab9-8c167665e833",
        "cursor": {
          "ref": "f81e2386-ae20-46d5-ba08-0efa7da3aeec",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7a6431c7-2ab0-4607-843c-9b8dfc34912b"
        },
        "item": {
          "id": "6d028cf5-581a-4c01-aab9-8c167665e833",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e4123d9d-bf62-44cb-a254-cae2ae56441e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed36e6-cdc8-4e90-80a0-67ec55fd54b8",
        "cursor": {
          "ref": "f1365223-4fb0-4c72-b5d3-f8341416635b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46211d3e-c8d9-4f7c-a5c1-44c2d793e698"
        },
        "item": {
          "id": "04ed36e6-cdc8-4e90-80a0-67ec55fd54b8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2a96e9ba-f287-4af3-b7ec-5b24dbbd7ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af644c44-4f50-4a74-a67e-038b603dc49c",
        "cursor": {
          "ref": "e9b3c24c-e559-474d-a2da-31bda27287b8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "062aa65f-58b3-4f0c-bbb6-0ac10b121fb3"
        },
        "item": {
          "id": "af644c44-4f50-4a74-a67e-038b603dc49c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0bb343e7-7f23-46d5-a9f8-83b4e957b896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86f31c-dcb9-4753-92b6-e22264949bf8",
        "cursor": {
          "ref": "67d0f96a-8ad0-45a2-82b0-80d7c91c2dcb",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b55da634-42bc-4c0a-9f1a-cd234d5a8328"
        },
        "item": {
          "id": "1d86f31c-dcb9-4753-92b6-e22264949bf8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "013c4a39-2cb3-425d-a8b6-035f98b6987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2322ab9-6926-4d15-a4d2-c152da7d7acc",
        "cursor": {
          "ref": "234c3c3e-45dd-42aa-862d-ab4433278152",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d49e326b-0647-4af7-a8ec-e709d25ef905"
        },
        "item": {
          "id": "a2322ab9-6926-4d15-a4d2-c152da7d7acc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "121c997e-bd5d-4125-9752-7b45431bc725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd71b4ad-e8ce-4fd3-bd7a-f3ee52621f63",
        "cursor": {
          "ref": "90ec674e-447a-4022-9d28-82fbce070dd0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "70b3b71a-e138-4dc5-8a3f-a0003fea73c9"
        },
        "item": {
          "id": "bd71b4ad-e8ce-4fd3-bd7a-f3ee52621f63",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5835b53-2003-4dd8-b7a0-592a6f6fa3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a26c0-3912-4827-be1d-f7e93e86ef56",
        "cursor": {
          "ref": "2d0d3ad3-848c-47ed-a5e2-3d91ab0abe47",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f1e5a5f-3464-4631-94a9-c2ef19c01c30"
        },
        "item": {
          "id": "238a26c0-3912-4827-be1d-f7e93e86ef56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b19a1124-571a-4bc7-ae62-77997549b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768960ca-f08b-4b7b-a364-6f26d37c5b82",
        "cursor": {
          "ref": "20009ea4-3996-4067-b7f4-fd0dcd7d444f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3e808f32-06af-4264-8069-57302adefb8c"
        },
        "item": {
          "id": "768960ca-f08b-4b7b-a364-6f26d37c5b82",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "337783f4-c3db-4185-aa45-e32f49f8eadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beab4c2e-a81f-401a-8764-247de2a7becc",
        "cursor": {
          "ref": "c079d6de-628a-4f29-992d-880e09e1c389",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f7deca64-1e24-4a07-b15c-180acc34516c"
        },
        "item": {
          "id": "beab4c2e-a81f-401a-8764-247de2a7becc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "79435935-a907-4e9f-a6a0-240311a9205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de97361f-3200-4b8b-ba09-5ec4d0cbf4b4",
        "cursor": {
          "ref": "257ea0b8-76d4-449b-b940-f98f33e770c8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0c6a2e88-27d0-4559-ba91-02aa1fb9634a"
        },
        "item": {
          "id": "de97361f-3200-4b8b-ba09-5ec4d0cbf4b4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bb096c53-4b5e-4765-8eda-442e82a5fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f383fad7-2186-4a47-9bb2-23088741ce29",
        "cursor": {
          "ref": "6d6161a2-828f-41e9-a6ed-0cd495e5258a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7fd8fe2f-8983-4867-bd1a-4eaa7288216c"
        },
        "item": {
          "id": "f383fad7-2186-4a47-9bb2-23088741ce29",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f0dc94e9-34df-4390-a3de-b51c4c06b652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd478e78-78c6-478d-9de6-c9d7a0380094",
        "cursor": {
          "ref": "3a4873e6-fff4-4a30-ae8c-c6b62ffd9744",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9561ae82-1be1-4a77-af12-ffe203862056"
        },
        "item": {
          "id": "dd478e78-78c6-478d-9de6-c9d7a0380094",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3132febc-b1f2-41c8-8f55-8f98b48561d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f42f43d-6440-44a8-8aae-a9d2b216a18e",
        "cursor": {
          "ref": "51cea3d5-fc5a-470b-9a7a-838f5122b4e3",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1b6f0db1-2e17-4139-90f1-75ecc8cd62fb"
        },
        "item": {
          "id": "7f42f43d-6440-44a8-8aae-a9d2b216a18e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6ae761cd-aa61-4e96-b537-5311b67002e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3919ebf4-56fb-4939-bc89-33c31d0a9a67",
        "cursor": {
          "ref": "238758c9-64a1-4af0-a254-96877e156bff",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "73cee066-3f6a-4631-8b8d-b2acad2d1b04"
        },
        "item": {
          "id": "3919ebf4-56fb-4939-bc89-33c31d0a9a67",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2cf63ee2-2d26-4d10-87b2-f241c88d2204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5acbef-8f0a-4a9b-8498-55f0d25a2eda",
        "cursor": {
          "ref": "84af686c-4913-4d1d-9bbc-8a6b6bbee5d6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c7542ac6-883e-4ea0-88cc-ff289ecea798"
        },
        "item": {
          "id": "0c5acbef-8f0a-4a9b-8498-55f0d25a2eda",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "636b5eed-a750-407f-82ce-7eeec3bea43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa7cbe-f2ca-4c6e-9332-e2d1eab2720c",
        "cursor": {
          "ref": "27b271e0-ae29-4742-af60-5e3e69c40874",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "826e7c90-1a03-4e5d-b0d0-908eca0e5bc5"
        },
        "item": {
          "id": "baaa7cbe-f2ca-4c6e-9332-e2d1eab2720c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "45700e08-ca4c-4331-bfd5-138da1b8c7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b45416-c454-418c-b296-08b6c24050e9",
        "cursor": {
          "ref": "f6591480-5c73-4b37-ba5d-3ea4877777ed",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c7aecbdb-1ebe-495a-bc3c-c4559e76023e"
        },
        "item": {
          "id": "f7b45416-c454-418c-b296-08b6c24050e9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fff8d250-795c-433e-9539-d02020195929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc2bb55-9289-4bfe-b628-3eaea19a648e",
        "cursor": {
          "ref": "e1f2dad6-f4d9-45e6-9d05-c9c9fce9d67c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "da8be890-611f-46a5-ac79-f6af757a4ba0"
        },
        "item": {
          "id": "7cc2bb55-9289-4bfe-b628-3eaea19a648e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6d3bc97-c307-456f-9a0a-c874dffac31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ae4f53-c892-4da5-b277-9bf2c9e1477f",
        "cursor": {
          "ref": "4eb0c0e5-c1d7-4887-bdbd-f904e3797954",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c10fe6b-89e5-4062-b44d-7ee51df2658d"
        },
        "item": {
          "id": "63ae4f53-c892-4da5-b277-9bf2c9e1477f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29b15595-6a98-4cd7-b90b-06ac133263fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa8934f-5d9a-4045-a63a-481d618ec604",
        "cursor": {
          "ref": "3e3eefe1-5ebf-4bd8-906e-80ca1dbf87a2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "db037bc0-ed5d-4cae-9113-b85f51da5f45"
        },
        "item": {
          "id": "8aa8934f-5d9a-4045-a63a-481d618ec604",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "06df6866-c66d-4ed3-8ce1-824a78a09f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9476e93-f393-4fff-9ea4-e0386581295a",
        "cursor": {
          "ref": "e7841cf7-20d9-46ed-b217-b2cbd64546d0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0b865d46-642f-428b-b91c-4e1702af880b"
        },
        "item": {
          "id": "e9476e93-f393-4fff-9ea4-e0386581295a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d05ca851-6df0-4c8d-bf38-e4a420e56c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c09b4b-84fe-4f87-b9a2-a2fae8d47bf4",
        "cursor": {
          "ref": "ba330b30-cbee-46a0-8fa8-78b33a4b0d22",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "50fff29c-3506-4114-aa3a-1131d74af359"
        },
        "item": {
          "id": "42c09b4b-84fe-4f87-b9a2-a2fae8d47bf4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ebcb972-35b0-451e-b372-bf9c8b725152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc73b03-4313-4b78-bf24-7ebb4b7bd6cf",
        "cursor": {
          "ref": "5314b503-c181-435f-a2da-414068952497",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9198ba60-3103-49c0-95e7-7c2b10ab674d"
        },
        "item": {
          "id": "4bc73b03-4313-4b78-bf24-7ebb4b7bd6cf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fd582538-c6da-4b75-90c2-4709e16c700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ee0f34-929a-434e-b2c2-13c669c78c54",
        "cursor": {
          "ref": "1e6a1fe5-94aa-49f3-9110-ec1bd8246c07",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e29f6a26-350e-47a3-b163-fa433264c222"
        },
        "item": {
          "id": "01ee0f34-929a-434e-b2c2-13c669c78c54",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bee425df-e527-47fc-9ac6-16b310950cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bcddd9-1fba-4e04-9686-941d782388fa",
        "cursor": {
          "ref": "d8e2c873-abaf-44ba-b130-ad9ee28c4f4e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6ce5b1da-0731-4f75-8099-ed48e5e0e761"
        },
        "item": {
          "id": "d8bcddd9-1fba-4e04-9686-941d782388fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c1732443-3c7f-441b-84f6-39db318a69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2679e33b-5c54-4a7d-8926-960619393d70",
        "cursor": {
          "ref": "e7c1442c-2ea4-4f12-a444-34825affdd0c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "775ecff8-d431-4dc1-840f-85d628bf26d5"
        },
        "item": {
          "id": "2679e33b-5c54-4a7d-8926-960619393d70",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "657b73f5-dad4-4cde-bf0e-a8b5437cad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9518d7-473c-4718-857b-2fbbc9e2c0fe",
        "cursor": {
          "ref": "27b2aa43-8c7c-4596-8082-7b18732d761e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2bc05761-f65b-468c-9541-fdf732ba2b96"
        },
        "item": {
          "id": "ec9518d7-473c-4718-857b-2fbbc9e2c0fe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f4d3bcb-9ae1-4004-a5e2-a022cc5165c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a7a7a-c34f-4867-b08e-a45cd9bd1486",
        "cursor": {
          "ref": "8c8a78e7-93ec-48db-866c-777e1228bf17",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1df32871-6f81-413b-a9f3-555fa65c1743"
        },
        "item": {
          "id": "e46a7a7a-c34f-4867-b08e-a45cd9bd1486",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "890a2f4c-54cb-40ac-b608-f67718ed1512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99af27df-d80a-483a-b0e5-9d89364c64dd",
        "cursor": {
          "ref": "eb91b329-3c9d-40d0-8a4e-cd3f6d4d63a0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "39adc586-e00c-4016-b57b-43ad0b5d7f93"
        },
        "item": {
          "id": "99af27df-d80a-483a-b0e5-9d89364c64dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4f327a8c-94d9-483c-95bc-d068ee439e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b00a68-61dc-4e6e-a9d2-be10fd3f4697",
        "cursor": {
          "ref": "3c88ad55-55ce-4a0c-8d9a-5052d2c8c72d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4618cc6e-cabe-409a-afb2-1ed2a468440d"
        },
        "item": {
          "id": "96b00a68-61dc-4e6e-a9d2-be10fd3f4697",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c06dd259-88ad-4362-a8ec-61a8e4cb0398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6c039-09fa-4330-b41c-e9ab9fa64dce",
        "cursor": {
          "ref": "6a85b7ad-1278-44b5-8d6e-ab16a89ac279",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3a67fe1c-5361-4edf-893e-63c43bc07db9"
        },
        "item": {
          "id": "40f6c039-09fa-4330-b41c-e9ab9fa64dce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "520939dd-e730-4566-8736-d2925d4582fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb3ade2-45a6-47a4-96f9-1ac9d60e5c28",
        "cursor": {
          "ref": "fe714e75-1054-4256-93e8-dee1ebf1d93a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7957294f-8cb0-4cc2-bbd0-8e5115339d7f"
        },
        "item": {
          "id": "eeb3ade2-45a6-47a4-96f9-1ac9d60e5c28",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d63f026-0cd5-49ce-93b3-bd650bd084e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8110fe56-1a98-4651-bce2-d00f2c3f5776",
        "cursor": {
          "ref": "8470c11e-9c15-40b4-bfcc-b748ffc074f4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "37697573-4595-4404-8202-e3a6e0bc2936"
        },
        "item": {
          "id": "8110fe56-1a98-4651-bce2-d00f2c3f5776",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "67d9dc61-e1f2-45e8-8828-fc816f9f3604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3f0227-86fc-4f7a-99d4-4b2c8fb167c8",
        "cursor": {
          "ref": "c38703d8-f5da-4e4f-b4ee-079ac25987f3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "da06cd83-b607-493e-8519-049d5b1d535b"
        },
        "item": {
          "id": "5a3f0227-86fc-4f7a-99d4-4b2c8fb167c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5f7f1bd5-a3de-4835-afc9-bfdb314a178f",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1240e0-e0d4-4e2d-a99e-39470c919f43",
        "cursor": {
          "ref": "308bc509-472b-4901-892d-72ba8d374742",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ea1d7dca-89e8-4751-99db-6c82b9bc07ae"
        },
        "item": {
          "id": "ad1240e0-e0d4-4e2d-a99e-39470c919f43",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c96e4df2-0cb8-4b87-b968-a228212a5ae2",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce9d338-df47-4bc7-9d3e-4a5906f0431a",
        "cursor": {
          "ref": "acd162b4-7706-409f-bd5f-7313de202a0b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "905838d0-d1af-46d9-8473-5f76af81e333"
        },
        "item": {
          "id": "6ce9d338-df47-4bc7-9d3e-4a5906f0431a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e6450e9-9ab3-45cc-bfad-30bc45f26357",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0f7e8-28a5-452a-9d7b-d0b1a58a19af",
        "cursor": {
          "ref": "84cb673d-f3f5-48a7-b2e3-25ffb4492a45",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "62fc9b91-ae3c-4578-a06b-07e8acc7d5bf"
        },
        "item": {
          "id": "83c0f7e8-28a5-452a-9d7b-d0b1a58a19af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "011fa557-2d26-4094-995c-31bc78089341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c0f7e8-28a5-452a-9d7b-d0b1a58a19af",
        "cursor": {
          "ref": "84cb673d-f3f5-48a7-b2e3-25ffb4492a45",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "62fc9b91-ae3c-4578-a06b-07e8acc7d5bf"
        },
        "item": {
          "id": "83c0f7e8-28a5-452a-9d7b-d0b1a58a19af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "011fa557-2d26-4094-995c-31bc78089341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78998057-44eb-44e6-845e-f90fa16a9e2d",
        "cursor": {
          "ref": "d1d73ac0-3a19-44f6-b778-e26440f312b0",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1756475c-13c1-4f45-a2a8-a9d02eb35953"
        },
        "item": {
          "id": "78998057-44eb-44e6-845e-f90fa16a9e2d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f20194d-254e-4897-8fef-7615b8ac2f7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd41b3d-3605-4add-99d3-2ed7b2b2876c",
        "cursor": {
          "ref": "b4f6024f-a24c-4366-ac41-44c729f3406f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0074c6d2-d935-418a-8932-01dfc83379f6"
        },
        "item": {
          "id": "2cd41b3d-3605-4add-99d3-2ed7b2b2876c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb33e2b6-108a-4713-901f-2cd3dbc51226",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}