{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4b3d18ef-0139-4853-b2e5-b5dc6ec9e767",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ce6a9737-e883-4922-9b4b-6ed929e27d21",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf8f944a-211a-42d1-8ff7-76ff43880b75",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "62c4882e-7f26-4e72-a644-2a3330d7314c"
                }
              }
            ]
          },
          {
            "id": "6e431c7e-1b9f-4c22-b7a9-ca666a0ae638",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e36b658-dba8-451c-b20e-0df7512cfc81",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4ad2830d-7fcf-414f-a6c4-50e9096d4365"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b2a57e7-f77c-423f-ac34-b179c4034595",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "74f03a75-9043-403e-a9a3-cd170e927076",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3ab525d-d9f5-4188-91e6-985e47eafdfe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ca7cc0-dec1-4afd-9c7c-679fcb8d1d92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a48d229a-2e5f-4b3d-bbee-ee79616d296e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0051df19-5e1d-4a4b-9c75-474404981a46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bad877e-49b1-44b4-ba2e-7a48b552ec76"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa003ae2-b9ae-4ed4-bb7b-1b1ea72815a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63b93a75-6dc1-4e90-b0a7-0d19a0de0f94"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2089a359-740d-4580-b8bb-a796c5d14338",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ecf1f061-ab2d-43bc-b5d2-926a799434eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0c9b549-063a-43c0-a610-ec24b63942be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db5a5443-b24b-4927-9779-8971ad39b6fb"
            }
          }
        ]
      },
      {
        "id": "c7b9f16f-f3ce-4b6f-bb08-70cdf39a2619",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c1b2402-680c-4a66-bf6d-3893cdf918ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c85995a7-9850-4c8f-a17b-fade7dbc8770",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "893da4e0-a99a-47be-8fad-a07d7ddd6beb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263773fe-cae1-4edb-81b9-f1b7fd196b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36152960-9749-4e91-820c-1eb1d25bc7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163aa70b-68c5-4365-9cda-3a83a46d13e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76b75f3-e145-4d26-8931-63721c79e33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b013890b-d811-4c07-913b-cbec1cf11c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f146fe3-4706-4fea-957b-1462e9e754e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d30b8-e817-4bee-bcfc-014a490e6028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58bf10ec-addf-483e-80d1-6b0d562cf2b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a783f12b-8885-4329-ac75-895bd146642c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ab06d00-5959-4b8d-b231-9f80b8b62a3c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff63b01-7a57-4360-9da1-df68fff9b83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "492804cc-bb95-4f98-819f-a48baa7ab1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22037e8b-dad5-4a6c-8cd4-98d9a84cd244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513894f3-4eaa-4c43-b6da-0043624819d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06bc6385-a882-452e-bc9d-2e25352260d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6556c3fd-6a08-4207-bab0-6fbd8379afbd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60fdf06-65f4-4f2a-946a-10d3d33c4ffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "257b26ae-ed3d-49bb-90f7-261e88731553"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7955c62-8686-4fdc-a361-9d24430fe6c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "280e4750-29e9-4335-8647-d4e468d2619a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d1409e3-5663-4f75-a6f7-6c643f0e6c1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10db6124-7a62-45a4-a3d3-84c46f67e24c"
            }
          }
        ]
      },
      {
        "id": "e548aba8-6eab-44d3-a42a-8c3796d87bc9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f714b7b3-f85a-48a1-bc3d-1c830b485622",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e81cfa8c-8afa-41b7-965e-f64376c18cf3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9ac46cd5-f3a6-4b1e-9578-5967495f6997",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d87d8-e3be-4386-800b-5ffb112261cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544aa5fb-eb44-499a-ac68-8172aabc272e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f81512b-358c-49a5-9212-c25587f84d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6089682-c960-422b-af5e-f7d6f3985bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be6a612-9e9d-4bb9-a05d-91edc6965b35",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b334af4f-74ed-4126-996c-51e3ac0fe378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81425c1f-4c16-4a65-b1e4-4ef6968a71ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5dce89-54c5-4a78-93e1-ebeee6a46407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a835e8-c6ab-46ef-80c0-aaff92e9c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1654d607-00ab-44ee-b676-207f89c504c5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918a675a-9629-4616-ba89-47aa7b6f3c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671ddb75-81bb-4904-9d54-5d4ca2a4f4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e6c46c-ee45-4e7a-a0ee-4a14c1a23b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f06a7307-28de-427b-84ef-278a94359a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569e03b1-1f4b-4324-bc90-2b7fe66596e4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beaf062-c6f5-451a-a3ae-6f758761f155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9560e5-8c29-470b-8aaf-f977dab21dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d454372c-de2b-4ab3-a695-6bf373397031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed91c4c8-95e9-4a7b-8ffc-c80a0a0f133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30370a4f-7018-478d-ac9b-0f18062b6fc4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1764799-cf41-4c7c-b9e3-c63fb3262ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815e01c0-be98-42e6-9738-5a6e51d23a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dbcef9-cf83-4282-ad53-9f1b9f59fe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b77eeaa-26a4-4a83-9fbb-eae3f7104096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6e3cca-1b90-47fe-aa23-bc6e7f33ed24",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd23508-3375-40a1-b464-de53a167b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60851ece-41a1-47a1-a9a5-85a0c7dd8d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd8775c-2098-4c9a-8837-e685bb6b221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "640d2cb4-53e1-4021-8bba-f4e3703e163a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2248669-708f-4645-9e1a-55a887905410",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977814bf-0743-4683-a941-efec3e16858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78205c7-7f80-480a-a9d2-8bbc4df50a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f562ff-558e-456f-a8dd-40c4f37c3f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a4d0f5-c94a-4e24-afe3-dbedeef4b986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a166744c-70a3-42bc-80a1-dba5077fea00",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24048d22-0345-4f89-8d53-3b00e140ae3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a08e26-74bb-496a-ad53-06ccde4655ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0b6650-d210-4e2f-9ee5-25aa72922377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e5aadd1-9fcd-461e-be81-b1dd72966054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69695c3c-296f-4b52-b0f9-d5d855db88e1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1817d9c1-7bd0-43f6-94b5-a9586e749b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fe9603-6b63-46fa-bd00-0f6006d28938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4be6ca6-ef8f-424c-9405-44c74a476eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc93d3e1-918f-46e3-9a7f-3540e5d384e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4bb0ae-a081-4dbd-8cf5-8b2fe5ea1f38",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c98969-e2ff-4f4b-88e3-4698a303d899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b6300b-fca1-4ec3-92c2-a1ac8c88d5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41714955-0140-4d58-be14-df61a9286922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f3a4086-e0d2-4ff6-b4e8-431d18b4a811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3205cd-502f-4af9-bed9-e1d965f69d21",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1028556b-7e0b-4ea0-a7f2-d8b7e88e2a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88db3cea-de09-439d-98ee-9a1a0245c82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2837553e-d8e6-42ea-aa38-4af23d56c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de26839-6ad1-45c8-9d10-9bed872e0e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931db160-2b93-47e3-b761-3bd0da8b042c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ebc527-d49e-411d-ae62-38d78ff8e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6975f7a2-0a06-461b-b55f-49504996e630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbb299c-615f-4604-910e-c5e9a9b959b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12482f50-0a22-421e-be80-dab4537aef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff357f49-9905-42ca-a708-ec08709dc8e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851a715f-7537-42df-b69a-c914dee7a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fe0732-d79c-4a29-a3e5-3cad3ee0272a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9364ff44-de54-4be2-84e3-4c5ca7acaddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d616eb-05f8-4809-9bcf-ebb2d5189a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fa4efa-6e3d-4a90-8c99-8954cc09e0fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c51816-f3bd-49c4-9586-872a86ced5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bab3d00-63fc-4143-994a-46fa796e2627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a13b23-0423-4b36-b7bf-a9e72e59cc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "351097e6-d3ff-439c-9813-a4b6215794f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bdbbc4-7eca-404b-a43c-f50e214d9f1d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61237aa1-c49c-4046-a372-228ff97dda7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748276d0-c49d-4cf0-bf2d-5423cedf5876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd382624-1fa2-4359-9a9e-cd08257bb993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed63869-c20b-4e92-9685-9cdce99387f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e68559-0977-4043-b6e0-1f58c876e875",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5926796-8891-4077-8c89-a59736b7e685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29d8195-4766-4df3-8190-cd4207c5ae64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397a2461-fe40-4250-9ef5-907da317a675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ec5863-1b45-4ecf-9837-f6e82cb9496b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517bc2df-9e98-4d46-b435-bbd91ba57be3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78696fa-4c03-4c82-8966-e972d346d310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1460db-1280-4628-9cb8-ff10fecca095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc9eae3-9f47-49e1-8b63-eef9f89e6cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28a4de3f-f76e-4ec4-927d-5e9212dd6cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71dfa2a-410b-4feb-ba3b-76f202596da6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc5acf-8234-47cb-8ca8-6a375a9c9626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fa0732-c7b5-476f-ac4b-72469f24f568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95312f49-d6f0-4676-a92e-561185f60122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39549264-ffed-4b22-9cb1-7766dc0fe211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8a008c-afd6-45b3-a13e-1b15412db328",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6df88c5-984b-464e-b7dd-b7587037823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e341c1-95de-4300-9ef8-2988e0d0e2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6fce1-e694-43c2-8819-8c68f30d8f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e034400-fc12-498b-a1c5-8dfa5f05e3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd164f-7f47-45f1-acd6-297b8f165e2d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b1dd87-7694-41fe-b768-ac8330ea6c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7088cc66-5fe4-416a-b51d-d0cb202c42dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b856f6f-faa6-4d86-b39e-8bd264f0e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14102b22-196f-4a37-9c37-aea0f5b27b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a0d3aa-9021-4262-a824-44ef0c942690",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a72a118-2743-4ea8-9b4f-d2c85cbefc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb509dd-eff7-4025-88c2-d11f973f5b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e711cfc-b30a-4c81-9db5-40d2c3136357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28afa442-db19-4458-ba6e-6ca3a447e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3e7d3-c5c0-4734-acb2-db5752d338eb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82796694-cca4-4559-9c58-d14a2f7d4837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3243122-7f50-4717-acfb-4d493fe9d6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4121764-beeb-4a8c-85cc-f03d2134e755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62aed01b-53c2-4705-a9b8-9bc576883c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f42de3b-6894-4291-ba56-70bdc9fa0a14",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9eea57-03cb-460d-8f2f-f7d66840d4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54423399-1b3a-4ae7-a9f9-712494c23a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cb996e-f2c7-455e-b0ad-304daf6c3b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "670fac56-184b-42d2-8525-f68061ea9944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168cdbfc-b72a-4acc-9201-200606faaf28",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cb0698-edc0-4024-ac16-e70cf0e9219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bbcc15-7fdb-470a-9019-afa0d712a69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bd844e-8409-4455-9ea8-052e7c5e0859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "030485c7-c125-44cd-b8a4-8c0664c6bbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9b24e5-f1ed-40a7-b2a3-0a48f6e59707",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad3dfe0-ea7d-4b5a-a388-d46d2467265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cb6a87-06e1-4b4c-89e0-78ef827d7069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29999352-be85-42a2-a630-82df8fbdd5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67c20ef-4323-418d-b800-88966b930c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f388de84-f1f2-4837-80d6-8bbd9bbc79dc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da67bcbe-22af-44e2-a09a-e5b1ac26ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25f5ead-1daa-4ff7-b75e-5c7407371ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73681f75-822b-426e-819d-f14024158ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89ce088-c515-498c-85cd-e2e8baf35106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed8de10-43c6-4511-9c56-33da681728ff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48533078-89b1-4873-bbe0-21b0791e3982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9735cc-d3ec-4499-aa54-c20a4b78f986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a19fc8-5e25-48c3-abb1-373d2a2445ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c046df-ab9f-4a64-93d6-988f0dc29d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df06b49-61eb-4512-b657-ab1b4ba6d0d9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cc8b16-e373-48b1-9afd-b02047b79364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95909777-1b43-47a5-bff6-add1372c8a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0499e320-f627-4d89-9543-ae04552c0d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4c7f1c-60dc-4db1-af52-8cb331e91bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a859d3-0749-4808-b542-5b2ac271b200",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f2627-63db-46ea-9628-ea74ddf30fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e5a28a-bdaa-4193-ba67-bb8e7ed59ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c1dc7-78bf-43c0-9f29-ce4998c65cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d34909-5b94-41ff-a1a5-0daa659f6305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25effcaa-2b85-406b-8b0c-88b230c93718",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1019e0-a29d-490a-ad4f-5927319cd9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e81c90c-fc0e-46f5-8514-c2c9e298c18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6dee4a-4484-45fa-8511-fcce848c8220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e28b972-c05a-4465-912e-0493aee3439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254af0f-1fc2-474d-b91b-95039a89531a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b03919-5ce4-4a23-840c-d6ba908ca3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc201d24-6fe1-42a9-981c-a632d7f76026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddbf566-bb5e-4295-be0f-708d3c934f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2a3e8b-aedc-49a8-b195-fa7284ad9fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ace3a2-0e88-456b-bc1d-3c18f9943c8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b1ac4b-0bee-4a61-9fe7-4df806f96cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05b6802-a484-496a-aed9-e43a3dbd006c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2683fe-6454-4a25-9120-be2f4cd309c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38dd647-775c-46a5-8da3-2ae6765e5ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347285a2-397d-45e2-810f-4d06aaa9b612",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d2b39-7208-4ca0-a2c3-15994f899782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b000f0d2-f6c3-4488-8fd3-d0774d1c1f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bb0730-6467-44e6-bd95-e99dd06b47d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7716b330-0883-45b2-8aef-2f9cd24d5e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3c2843-78e4-482e-bb28-fad7ee29715a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73130ce-e22d-4782-97ce-76cf6946fb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f300ee-4346-4e28-9ce7-6bb0dcfda711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a3ee7-e472-4775-87d9-377bbfbcd6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6849f86c-6ca0-4a75-a198-78ac4f73b538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7e9ca0-aa89-4be8-9831-1f453a3017a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b6e767-0e3d-468e-9876-ce7d54eebabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a562966d-5862-46c1-ac34-3003a995ac2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ef237-c31f-41ac-8ead-53e7000de7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9214fc94-b639-4033-b2dd-120ed7b02f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97caa164-3b79-4c3b-8321-761dbd16cd0f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d9f741-21b7-4e10-92e8-2ac86b1a0d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51e129d5-7241-407a-81df-d08628142c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc42222-4f2f-4166-8611-5da98b9f676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d2b0c3-7506-4378-9878-56bae8ff9af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9f505a-131f-44e3-bf6b-c8362444525d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6032b2-f47d-4f2e-91c5-d13f32abbd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af933a6-6d7f-4c4d-82d4-147ef15648be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d616f330-28ae-4736-8d82-65da38ade8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82bb5691-e8d2-4930-afa4-b1140c5039be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c562c6e-bb08-402e-99ca-3d479f2913f0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c43809-21d5-4647-8098-3e4093f4af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9e837e-d079-47b8-a7a7-39b21b4d1fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445d4930-b9a8-42d8-96ff-3c233c496435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d752fbe-020d-4ee0-a16a-4d7da5d9bf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bb3de0-64b5-4cc9-ac3c-8ee7190e6a5c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2901b7e-0a17-4127-850b-1795efa32562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24779f5f-12ef-4970-a95b-cbd8fc417ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0690b6df-3697-4354-bf0c-f81ab016d199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a981fea-6a42-4ca9-92e5-04728f5f3b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fcbe91-5539-41e7-890c-f877faa38712",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b45b6d9-15d6-4682-be3d-08ed516a110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae11d232-ba3d-4285-b3a1-7d303fd784e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9031e41d-7a5a-4fc7-a14f-65a3d5b97885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41aec43-39d0-464e-930a-f8b5a2aa70db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd820f9-d736-4743-b4f0-c64150c07ca3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14231b98-a71a-4f36-b03c-059ee9a1e0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658cb43-188a-4c40-a8d4-d1e718b19825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd71c82-6c66-4d65-aab1-356a671d47d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "861e7c9c-8483-41ff-a555-11117369cc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2457d1ca-0e50-4603-842d-2767e66c5d88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ef86f9-660e-4a7f-bba6-4fefd8dc8677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ff8c43-493b-4afb-9897-ab83a723b373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5d9158-556d-473f-b3a9-9cb022447f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a60f502c-9aa0-4f2f-91bd-911c5904d882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4861ef-1186-40fa-9e2d-06e1644994c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fde73fa-0383-4427-abca-dd57bbee3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caf5cdc-3a86-46da-be8b-e0bdac01acaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e87f88-5967-41dd-8184-101812017e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed56a2ed-a014-45ae-8567-0c43ea45ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8064139-a567-46eb-8f47-00a712a65ba5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62349ef-af4c-4196-91f0-c1ebb3064987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9847c5bd-b4c9-49a9-a505-0e4ed7422638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754ff04a-a4b1-4c9e-aab9-1c71823f31fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "968b767f-75d8-4271-8058-02d1a46f8267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d71992b-7312-4ca0-872d-f948e3c292e6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5068f36-c472-4158-9e23-4872c5624d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8dc62b-f48b-4759-9b7e-823d44259035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9abbc0-d139-4b5c-82d8-5c3e388f6fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f835d43-7e01-428f-a9a2-90e706e481ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b54f6a-9103-4b20-b807-73d3f3a1c37c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7823c228-b979-444d-a2cb-c9c8c14ffe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94be9533-fe6d-42f3-bc79-531ad0e4ff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50eb5fc-2306-4a9f-b4cb-2bb72bf79263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "277cd3ae-9a8a-4fb2-a90c-04937124eff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09123b0b-018e-48a1-ba43-0c58282fef70",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e151cde-7737-4452-bd25-b5e91095b3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2a88ec-cbc1-485f-80ae-ebf6fc3eaa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3aef2fe-187e-4a45-be8e-fa680acb8d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddd4463-a619-4f9f-ba40-4281ea3df01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7648d56a-815a-49de-b8f6-0aaf41c243ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9733b27c-cf53-493e-8251-3b01160f1a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf09eaf-5c33-4eb1-b694-626b9d99ff0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90db635-f699-4a5e-be3a-c1ed6e3fdbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a293ed8d-cdde-4d96-b381-1d3a89fb7bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc54e8b-dd5b-42a9-b717-d125b2fe0602",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2339103b-91a1-4b29-8b53-d140971bfcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392acff4-784b-45db-8a1f-bcf1a0dc1a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea8a6d7-2aa6-4c28-93cc-c59ada78017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0af2cec-91c6-400d-acfb-d5812bcc783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa845c8-28c3-46cd-9d3c-137d76ac9b32",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5383379-bfe8-4575-aacd-d1abaebdd44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66a8765-0810-4c60-a1da-eccaf40d85d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdc4e75-d857-4f07-ba50-617e19a15917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f45fb0-b42b-4d4e-9496-7586f04f6cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849d533d-7477-4a32-ba56-2ad087cf8b06",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d570505b-9c56-4dda-9ee7-a1c846757647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ed56d8-3127-405d-b95e-fec150496bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2de7c4-e744-49c3-a78e-0b9428076e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "de91b674-4ce0-4dc4-bbbc-cf870ae851d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6938379-bfca-46e8-aa3d-ba713700b863",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707085b5-e14c-421d-b523-76a6149f298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e140014-3bd7-487d-bab7-e17994172b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5732e35-cf59-4884-b765-1e2a83158475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcf1444-7019-4bb6-aaec-efc1c82af2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6642b0ab-c70f-449d-a4fb-02639657180d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cf4900-d582-413f-bc82-3d03fb4018f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17af2b92-6ca5-4c9d-b542-0be18b29d201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deb085a-876c-422c-9e16-73dc1b2ab33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4bef43-180a-45ba-810a-1c81b89e8a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1548ff3-455b-4d74-ad5a-ff3b0a03f153",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4d7c3-faf6-484f-a29b-f91b5a52dea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1df0e7e-077d-48b3-8ac5-20a1b05b23ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6408d82-389c-4355-97e8-d8e9af35efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e19765f-95ab-4d17-a9e9-46249e62408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d9ecd-a0f3-4453-9b64-aea8b98d3060",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82fb4ad-3a05-4f26-a7e4-7006d8c7a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e88c66-aad5-49e6-9f22-e19a032a61f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1668e6-54ec-4551-b238-6a438df52926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d11433-c7d1-43ca-a7cc-6010aad3783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dae749c-3b4c-4500-8f17-6db5fb7ae571",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f23e65-c864-487a-b3f2-92d03cf964db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d7f979-61a2-418f-b5f2-7c4ab32eed55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337ee53d-77e1-4682-89d7-98d0877e67f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6d9dd5-9a44-4723-b37c-ea8f2c66ee68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1780facd-ff94-4bcd-a222-61a07ce28a6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca711a7c-3a6c-4373-a2f0-00a03315158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cf2e38-b869-4b4f-ba93-228fd067aa00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7537120-31fa-4dfb-bb0d-364a4e6e3176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c86fcdce-82fc-4692-b179-16520b0db09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0836f97-a28a-464a-a95f-e1a5b2e02e66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bc906a-af43-49f3-bda2-6d24435ba1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b4ce8d-ecb0-4b3b-95ee-491baf6de5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0525b97d-6e22-4a4b-b69c-c70386c018fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f16a8e-af71-45c5-9fc6-c04865c77f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21539a85-5054-4365-bc2e-689b98d9de85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a487c9-b355-4bc9-b467-e40556c45626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7b58df-a96b-4032-94f0-f338f9490c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb2c902-b04c-47c5-bf53-fd277531752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe94d841-4b17-4231-acbd-91052dbdcf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27cbd46-cc31-4f68-aff8-4baf9d972ed0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a70e8-d433-4243-8f73-088c9e859236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da303dc-2848-4976-a8cb-544a38eab5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae6ae7-bfa0-46bd-a5a8-70b2aafe5399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fee8e60b-7f39-437d-9170-b6e0aaeaacff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934bb623-96a2-4e29-abe6-14f05c705216",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505a34a5-4c50-4045-9851-203c5253167a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa47183-8061-491f-8c39-4b98808bd0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5792554-b6b7-4660-9d6c-01204b22455f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e578597b-a4fb-4baf-98e4-593947ef7713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806d6998-bcbd-4096-955e-1499057de122",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e2b338-4322-4df8-991c-eb32dedc72ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3537d23-dbc9-48a0-8ce2-6cae77d88bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c2ddf5-07e4-47c1-8ff4-c203a211e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3068c13f-302e-4801-8615-9c77d5550af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0898d-fd00-40e8-9523-4b634852459c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d5dee2-1aea-44b3-a8b8-80e9bf7e197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea69d629-b992-4bf9-8dfa-fda9f2fef02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e8f1c3-7131-4e3f-ac3c-8a5434128f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "772816ec-c8a9-4013-8de3-2dcaeb985b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c0b1f4-8727-4e62-bf92-0aab7241cc73",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd19e15-3044-48e9-b5c5-394624df336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61086ce-a6c9-4b58-9623-d74db497004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78061cf9-4726-4499-9787-413844a1c230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca9077f-9c6e-4682-bea0-8d95fe6b2b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b762fa5-acf5-4674-8227-865813e203c2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e41058e-5378-4726-8007-9cb80c8fc5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d3b56b-35b5-4032-9931-4bb0f7e5f15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891e2e0e-930b-471b-affe-8f9ccd8708a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "862eef76-6707-42f2-a6c8-32a17456e1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67269ad8-7b60-42f6-ba13-56b646c9402e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce19d47-2d1a-4de2-990a-4c3d9a17fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e96662-28b9-4b1f-a6ec-2667f432d1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf479b67-acff-4b4f-923b-12846cf4bb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d239c3-564b-498e-baf1-03d58be5cb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129207e1-3bc1-4911-bea1-7b0e1811cbc1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9023c3-f9b5-40cc-aaff-549572d797b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc197dbb-3309-4acb-9ada-e80d34891b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba2170-5017-4f2b-b958-ce8ad4362385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab4e5b-613d-4309-8a7b-42fb6eb91989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b062c01b-8693-4224-afe3-f2cae93a6742",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368f4d4c-8211-4301-96f8-490145233fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8720690-be26-43e3-ba73-8b11af187db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5a6ee7-a72c-455a-8074-ec2e50a5b75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf227d5-3e86-45ed-a95a-bd2c80394920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720655dd-49b3-4bb6-acf9-646c88de5e29",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d34c427-d68f-4a66-8b24-1a8e83f35977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081e1d0d-bf20-4ff6-9834-0da70e783cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1650259a-49a6-4810-8cea-a0101b0fe058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ae5829-ad87-45bf-9ce3-318768acf324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab7778d-cb68-4c2d-a430-11f792e61dc0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8ebc88-a384-4017-9c29-f334b009a581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8717a4cd-58c0-4275-a4c4-aceabd85b7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c957a4-11a3-4465-bf8c-a4f6c725dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31acd957-c568-450a-87d8-71ed1a2b378b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b79d047-08ee-4cef-8f97-b6318791b5f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cf3778-0c51-480a-9d15-5e5b7493fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c204d37-f43c-4648-b46e-72c59feb3715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d952c-680e-4258-bca3-fe46966ce66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ec31e6-314c-4d10-80ab-00ac919408be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57336c2d-a8bf-4521-a72b-d2c262b43f6b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968b33c-3b8b-4539-9d64-5d5c2c06ce8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915e419f-3799-449b-a69b-5f43c4dad177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb484b-38c9-469f-b420-a4b14adf7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26430fb5-8357-4ceb-93a6-78c677242b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639b27b8-ac9c-4ec1-aa3c-f0d162a467b4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5961f-3516-4ee8-b379-5d648e8fa65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3515930b-ca69-4897-bde1-afb5ccde7754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97cc903-b3a6-4a0d-a317-1e86d3a55e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4558d449-8981-4932-b313-f9ff660ab16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a38ee8-c4be-48e7-a5c8-79e51b990e46",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c3f186-47f8-4a08-8dd4-346117ee75b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d9e923-9e73-4f3e-81fe-377ed1c31f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbd1a0b-a991-423c-a278-14b85ec97b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e90d109-87bf-4b27-91ad-9ec34d0abfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731bee18-1437-4873-b7de-8abbc3e2ac2d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35493cb5-a571-450d-a4b7-06b017a148f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c104c24-8ee0-434e-9531-228097515d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb80493-5388-4703-a79d-93742f077378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bcc7ea-4412-4acc-be1b-9e870306588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3136ea45-a39a-4b39-9778-d9ff7c5d0983",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9e4ac7-cd4b-4f02-8fdc-159b5d9b8050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfff586-8757-42d6-8039-f9e9267a346a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d5717c-d4ab-42fb-9416-d9c509ca99a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "512fb518-8e34-4f69-9f9d-3a4520544022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e08b302-59f7-44b7-a6b0-686b5cc9f779",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57dee26-3380-4650-864a-61ce2f6e316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34443411-fb60-4360-a7a0-a925072db337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f5bf4a-33d1-4e03-824f-ba5fe6d06f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecd726a-acf4-4515-838c-0a0e05d67c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420de92e-f493-49e7-a0b9-bf401858e66e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e6bdf6-105f-491e-88be-519b02770ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8d1a02-75c5-4350-b063-b5aadbdf66f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f718ed02-611c-4a94-89d5-79d07938587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab0dfc-de99-49db-977a-40f24c7df180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82753663-44e9-40be-9aa1-6446c799366f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a997ead8-4e15-4a3f-9419-b1c85fa4b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d0cebb-9b31-45de-8cbf-82f65e812928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c8d1f7-da02-49da-8afa-99983a36f180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaa2cba-db44-4772-a368-830be0f2245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6779eba5-ff43-4ba2-af94-9ccbb8d00439",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11894b8e-d73f-4b47-bb0a-0b3e71f4c046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adc53e5-97b2-442c-bdf2-2e25b7703a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14edc3a-70ac-4522-9047-3cf4ffc4f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6295b9-77f7-4899-9ea0-8ee319cf0836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd832286-6ab8-4ec8-8be1-7a67b9634019",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebcd22f-338f-4ea5-b209-7a0e13c8b29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad01313f-d102-4344-8bd3-18cff57ea3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415671b5-e672-4bee-8a56-8957e3be495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47e5697-93c5-45cd-9e87-5c0d7f057a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4cf890-8e94-41f4-9b5e-f7133d948cda",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ced515-7e3b-443b-8e95-3c9c306ae61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8733e0c-e4d2-424c-8521-3a0abcf29ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f73747-0ee6-4dbb-97bf-12411d4040c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcb862d-cfaf-4015-a671-ad5271a8cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b47bd08-2d5e-4a28-b349-019fc9d99df4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de8a213-df30-4d59-bc26-9e588211fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e9caac-fb4a-4e84-95ce-4d144b80fb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1583af2-cccd-4bdd-9ebc-c23993573a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01dfbc3f-c9f6-4325-afee-55dbe73ca3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02c9c22-5c6c-419b-9afe-90f33c91eda4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6309ce21-2a43-43cf-a4e0-ee8520cf6037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492d3bc4-29ee-4966-b8ed-6b390945df36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887ab5a0-5598-4f5c-b839-a8dba3301c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebb88ae-cd44-4147-81bf-ceca00ab914a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071eb874-10b7-4647-af97-2b24989d5565",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f881840-0a2c-4aea-a522-a2b65b3b5776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f126d17-9581-4d09-9db3-b63fbc0c5243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b802c015-21f2-4e91-aeab-99d8c34c5a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5f69a8-5ca3-4d76-9c56-8c757134ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a2a81-35e8-453d-9c77-fdcea3714e5b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a3a720-56c9-4721-bd97-1acb5d13114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23962aca-32f2-483b-ba5e-0a29ae74ff61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f42ffe6-af10-41c4-aa83-e30a9bf038b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6a502b-e414-41f9-a69b-ddfa757c7add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86ad2e6-eb97-4383-bcd9-7ed7c4f3e248",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332278a5-0ca8-43d5-9e4d-0bbfb50a667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f37b43-61db-4d89-a84e-527ba2d517bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1350196a-1c83-48ac-a5aa-0b0dba412289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2940e62b-1506-4b93-a4fe-2c36c9a46eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b11c79-f2f1-4f62-9bb7-893bae32e317",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29de7e79-ee70-4151-bb16-a2569f4554e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f1945b-6810-4a1c-9c3b-b3e51f15b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ff1d5e-4b30-4009-8572-05d5cb8ad6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d51c8a-77bf-4ebd-bda7-a38c98d54f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aacc3b-334b-43be-a00a-72c8901c539b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611be16c-3db3-4f5b-a469-2c99fd24c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49950329-3bf7-4b47-87d1-871bccc49e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f27ba8e-4d72-41be-83e9-11b9c2b2078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec21c396-e61c-481d-92cd-08f56cde7aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6007c618-ae76-4367-940f-4b75808976da",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1462cb-1183-4de0-9269-50f4f72c975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808f75a8-084a-49b1-abb0-9021105e22ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ab3754-a4b1-4b99-b826-984b40bf9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9172e117-ac83-4fbf-ba20-e9f88941e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ed089d-8230-4471-873a-55bba8a46e73",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb1a3cc-1905-407d-b215-2d428e7ec311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c036c6e1-f715-409b-9dcf-f165724324ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77404a7-4588-4fac-847b-2967bc1ad89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "68249c9a-876c-4552-9f9e-7749e44b2c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa2705-60bf-4ae8-8420-3ea81975a46f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0725b14f-dda2-438a-8af4-ae68fcb9d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7997c4d-c1c7-4b22-9275-8583f580b809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d0ac33-c3e0-4d30-9fb3-d9c72fe2a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78fe78f5-820c-4678-9c8e-8950b4d09be4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b21fffdb-79e2-4441-8c6f-45e3a4a1febe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6b8b1b5-02e8-461f-b7de-41e99432d683",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5060e2-f01a-4c8a-be64-9bc045dae8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dc69ab2-51c1-4f43-be33-16cfc206e42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66258c75-336d-4b0e-bb32-c8f005915e7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60fba51f-0b2d-4714-a510-728fb674671b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3f8f7f-1fd5-45a4-be72-1d5ea4cdc4c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb3fea71-c336-42a2-a4e9-bae1232cdf70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d65b519-2465-42a5-ab89-1e07f3378719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bf720ef-80b9-4a80-bff8-5570df7a836e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8e9b512-9bdf-4e32-973f-670427bc1e0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7480e36-87d3-43e7-ab50-8fde0f4e412d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b9d460e-d25a-40a0-bdf5-f18d15837105",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bc6db82-898c-4afe-9fd4-6c63e45a85b1"
                }
              }
            ]
          },
          {
            "id": "875bff1b-fd2b-4953-89f6-c5f4b663022b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7b2dcc1-2de5-4424-8f20-0d316d340698",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dbf7d4b7-86f5-46fe-807b-d181162cf651",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a40a29-6e2e-4734-8e4b-83a8d3056362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b750f2c-c39e-491f-b0c2-b19eec487d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac9e7c7-d4bb-4774-bcc5-b0f93d9afe90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3201f2d-af8f-4270-8de8-03417d61bdf4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef4da3c3-b450-41aa-9448-55e5bb7c3571",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ef3efd-a0e6-4e8c-b5a2-fe1a9fe9e843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "950e2b2b-203e-4bc4-8c0e-c59b0307299e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e36c917-e28c-41f6-988c-0cd332e2e59a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2aa4ab77-0c4b-48b4-9fe9-431d36ba885b"
                    }
                  }
                ]
              },
              {
                "id": "5e4f7bab-8b31-495b-998d-655f780d3fcc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5556b3e5-4e6a-4359-bcdd-07f743eb3233",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec18e107-396c-4023-91aa-00674011b3fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc5344eb-1b07-48a1-97b8-5e678b1146f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ec6530b-6105-4475-b041-56e9a91db540"
                    }
                  }
                ]
              },
              {
                "id": "fdce52ec-41c3-4066-8b14-d0a290bb39d4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9b59166-258e-434a-8865-2fff447052bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4acb668e-a87d-4a29-aeb3-9f50e11d699d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b720454-5b27-4a26-97f3-a31e39616897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "310d3c0e-3a2f-4651-af65-db1e88fbe981"
                    }
                  }
                ]
              },
              {
                "id": "42e89188-3487-4554-bf7c-6fd90b82801e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d20c93c-c4d8-44c4-85ce-26d142d4e117",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f6fdf00-4c83-48ed-97ea-60d2350a749c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67a79db7-9ca0-42be-8c97-c5a36a7f716a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a49f9434-3546-4037-8d3a-cfbbb4d0665d"
                    }
                  }
                ]
              },
              {
                "id": "c277b676-eb62-4663-9db0-b79537451900",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b303d34-f2e7-415e-bb9a-808daa1195aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbbe1673-f3b3-487e-8980-fca7afae8bad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efb0bc6d-6097-4af5-90ed-982af067ce6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b9666ad2-5655-4e65-9c38-28fc9c7f3396"
                    }
                  }
                ]
              },
              {
                "id": "59b65cb8-960f-450c-9c0a-49778302440d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e08763ee-bfb5-4a94-9b71-8c0031d5de25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a78c7d85-64ee-4c76-8de6-b2015c0a7832"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8b4d971-1e35-4863-b28d-be3ba0292c10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e92fa31-6171-47c2-aac7-06e30fed3b2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28d14c0b-c69d-4b0f-b869-9625796380b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "050a4b02-ad29-46b9-9b08-d19e4e93c888"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fdeaee78-a3cf-479b-b02b-0e17d6379f98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "169c3ed6-227b-4930-8bd3-c6c636bf0e56"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f820da3a-5a29-46e6-91f2-46efd12d7917",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a256dd7-e8bd-43d3-bc73-48da7ead6887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bb04ee0-26b8-4114-a10b-c42b3c954951",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a4a5023-c8c4-4c0f-90d1-ec7e9d7fb6c6"
            }
          }
        ]
      },
      {
        "id": "73daa456-d9d3-4304-8de8-6416a017eaea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8b07f492-9f4b-4ef8-b69d-d83bd64f521a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8d636ef-4c6b-43bb-88a3-c6d962c323aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04c80a52-6c54-44e5-a2de-b4e460767acd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242b1e9-3159-4022-a4c6-35741205eb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8754f6-b5d7-47b0-93b4-3aa01e821614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b9b93e-fdba-4460-905f-d39d718a55f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75829db6-fa91-4670-8c0e-693e24f7fcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3b7ef-44d9-4769-b32d-6c0d11e38d2d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85d6ff-ae5c-4aee-b215-0a7b861f27e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dec2e4-1e80-450f-83fb-e03688c8e7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95521ab-8c8d-4a0b-a38c-d016d07ff0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70dfdf32-6020-47ef-b32c-01958fb7fd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5498f0-301b-4e03-aede-e8434b6a52b8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db129e75-75ac-4981-9079-111ce3a4a2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99183fa-05fe-4d2a-b893-d071fd0bf3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efab21f-eef3-4bd2-b8ce-93ffeb89118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "001bfbee-05b5-4a80-8f14-4a3d13276d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20d1a1-1150-4644-b9b9-006cf1b9b06d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b266585b-1e1f-4fcf-9e0d-c2c3c1cfac27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f1b538-a517-4259-9920-ac15edd53f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06510f4f-9d37-4f1b-b84d-ade960932ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60451cd9-d3ef-4340-a0a3-84646879ccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c19f07-b226-47fe-b748-00d1887389e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f0df8f-7dc6-406c-8586-25dbeb94fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b98a0a8-3a92-4b26-b2fe-1f57ed87bc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a52f4f-4c08-465d-abb4-fa611e7518b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "979dc73a-49f7-412f-b560-99671821498a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b136d-cf36-44f6-89d9-dc541a061ec3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c618756-9aa0-4411-ad0f-215f033d039a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994a77b4-7cd8-41b5-b531-fc870dffb456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c68aa3-46fc-4c89-84d7-a329cc4a9530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7584856-c8e2-4591-aea1-63c50cc81672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e2f36-24ea-4671-8c20-c5a0b09bf5f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f58066-e633-49ce-a2dc-bd51a96ce462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3b7213-287e-4df1-921b-335b198c92cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4689593-f143-44ef-b705-87f8a7951e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c92e3b-3fa0-440f-aeb6-d9f7a89704c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f413638e-f38f-4889-bfd7-233a1ff81394",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161b6428-aaa3-4c56-99e4-f542f574275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8214f67c-df40-4da8-bd63-dd38374c68d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb39c999-812b-488e-ad75-21776f2d11a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8407786b-c34d-4d0f-82a1-5af5dcc1ee8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373ef3c5-9469-4d0b-a49f-b233fcbf13d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e01079-1eb6-4800-8a87-e4db2a2cd1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258bd62a-6a2d-4d90-b9e9-738e2e1425ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd981cb-04cd-47d0-9a97-31df8807dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81dccd30-1b50-433d-b46c-1b45b7be39fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ee617b-8507-4ab0-9e9e-5cead1afbde6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6848fc52-fe88-4a29-b713-014221d4c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ef3c49-2830-476c-9618-b142f87551ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb46b1-6a05-442b-85ef-c8137c362a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7201e2e8-f6cc-434c-a7f6-a64d769fbad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798ec887-36a3-43a1-a9f5-84fe1004bd17",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495b9747-8867-4e14-bc27-b0a024180ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a07c03d-c89e-4ab0-b2e0-ed25d52e0ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4d39f6-f69f-4f1e-8599-91a885a8ec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "50492fb0-0851-4a15-8052-4fe71c0c5d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e48c1cf-95ae-4d74-991b-07ecc11c0a16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ab6f1d-6994-4334-a5c8-42861df5e955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d52a5c-96cb-4fb2-923a-748733e90f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e289db3-324b-446d-b57d-ec4a5b599e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db075529-ea20-42cc-bc8e-4b0609a62034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf0ce5a-25cd-4535-a382-39c3015dbf3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3a23a8-1e1c-44e5-9597-e755eeb3ca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4cca21-b355-4a8d-bb51-c8e614f292a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5237a81e-4a46-4cd6-89c5-468ab483e63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3eb96b-4655-4dc4-b710-32713d4f0130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6697e418-5ccb-4f40-b98b-a7b547116dc1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d93426-0fb9-4254-800d-b1872940c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35787ede-7863-46af-bc8f-56d014d0b350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b13ba73-e70e-46fe-b421-df23eb24b9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "538f32ea-a2f2-4c3d-962a-a43bc37d43c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe83ba-82ed-4a90-ba46-b5e6f7a140ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01459835-eb46-4f6e-94ff-be4df4b45171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f59bb81-b5f1-4db1-aee9-4feb1f340ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2b28eb-9f65-4867-a2e3-b38fb9bfecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "13194ce1-3654-42b3-8426-968115d18b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4996d824-83c1-4e56-8a18-b9f0407a816e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be15cba5-c2d7-460e-b0ce-4a1b64fa1e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69a7e2a-5da9-4013-bde3-84024add6d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e490da0f-af59-42e1-b56d-a7bd475b8dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba785b7-f715-46bc-a8e4-21acf874902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b91c547-e7da-408a-8374-f07a7e61b662",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef249ad-789a-4d38-9b02-2875a03b07e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16db822e-e4bd-4c57-9c3c-a7a7f4b5cd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bbd50d-68b7-4d84-8230-b7f223d73732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a713fcd-d7bf-4cbe-b4fd-fb5062efdff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1e5b5d-5c61-459b-962a-3059295c46ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1b58f9-4c9b-43bd-aee0-9254f083dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799ffbbb-19f6-40c4-a689-324fe7edd051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea346717-09b4-41b3-8030-0dc230499770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1400df17-1d89-47c7-9445-63c3e36c1a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c67d129-4f32-4919-a9c8-aa5d785eef6a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4859f5-784d-4866-9d9b-91feb509b84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2043320d-20ef-48d1-bbce-57fc8684d2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e12f183-559d-4756-ad0c-35264429f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5d5801-e4ac-42d8-9c2a-65f7be2b4e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797d82fe-8abe-4b6b-95e1-e44db56a9fd4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee4ba84-2552-4b93-9f38-f0380a3bcaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a337ea4-ea2a-40d3-82bc-29217a82f131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c868ac5-719a-4bcc-83d9-9820b035491d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd45fd2-1058-4695-ab75-242fa7bcf43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14d9495-7e5b-43c8-be94-59ed1faebaef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717eb331-7766-4400-b17e-7bee8604c652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018bb3c8-33ff-4482-a10b-e3d46015ab61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0546dd1-ccb8-4bdf-a097-fa606e39c94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9bee72-835c-45e4-b484-3fdcbe034abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff080ccd-9548-4d8b-bcde-23d9e78812c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23800c7b-64f1-461c-adb6-b64cb02bfc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d09c195-e098-44da-a47a-008d1b35f67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c65966-d54d-491e-89ba-84d017586970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9babf45b-319c-4d10-ac76-1e902b202aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8ac71d-2ad2-4f08-b15a-5b05fd1f07db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e9ca9-544d-4eff-9861-6657bc426f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a891bed-c819-437f-8400-6df404d52e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870d9901-5ff4-407b-a59a-43f02978eba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "090d57b5-467e-4d42-8478-7190ba599b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8935b2ee-6219-42c2-957b-b34de4ad4b98",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51373376-11fd-4b03-b35c-b92f8142c8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce93425-e458-4cee-a655-ce6d933f4720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2796662-6219-4a48-989c-158b99c8be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c730dca-334d-4e12-8c3f-295d0b45b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fafc82-e21e-4c24-8da1-db7e101235e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aeaccbd-004d-4361-b5ae-c31650bb4023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5e12ec-6a13-4797-8a87-20178f61f484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fe4efa-9d05-4173-a73b-7b125f1debca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487ca6ae-0786-4eef-90a3-bef9117e4335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426e2a9-d82b-4973-89c1-5a1b14898d3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65935c72-bc23-4761-931c-9ae9b61f2489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f36ccda-bb81-4fc6-ac6e-8bd59c1dc985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb10398-f926-4d41-80f3-9471d310a75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436f29c6-d0e0-440e-bc87-4060a07ce0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b645cc7-1e60-4fb1-9f29-231e0319c1d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fdef16-2673-4670-afd2-8031f4341534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040e7bc6-fcaf-42fe-bfd3-2f859a1e454c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd8777e-b2be-4b22-bc07-afa35753102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d16600d-a073-4990-8457-ccf9764369dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87603d9-b01b-4bfa-b068-071a500ebc1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3930d263-f1ae-4c77-8742-28aae59f8c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63919dc1-7d27-4b7a-8544-8e4a7a755a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101deacb-3b87-4d7d-b338-22464c772d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7f9dab-7676-46c9-b2ea-acf65682c253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964ec04e-7d7c-46e8-9dc8-c84e10664587",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a08229a-8323-4268-b1b8-5d54013e502b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79f197c-ca73-47b2-a11f-77cfdf78b6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201c54c5-2469-4ff7-8d39-709ea0347c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b820d56-3ecc-4185-94f1-c7949d1f3400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e56d9d-f593-4006-b207-a8e855563833",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56840441-a321-4288-b8d8-ae490881320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d0e387-d57a-4cdf-8577-40d010134729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a733ce-2541-4690-bfb1-812b022b0e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215602c7-01b0-4b9a-8942-e965d61176d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0d5857-4cb2-443b-a15c-ec26f36281e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa59a2c9-9031-409f-a4ff-95e5e8fef31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681f4c3b-b9c9-48a8-af27-0b9526d1899a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df3f52b-3619-4039-8185-cd73e33803a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e0d981-e7ea-4941-9ae2-139afb5a7604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d12e13-cae1-4869-ab99-5a2d1792440c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045c4131-20d4-40a3-9a55-559f5c26adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739cf87a-acd0-4d77-9679-12c993b53e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ba1b0a-1afa-4bb6-93e4-12a5235cb5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677ae1a8-e5bc-4ee0-8e75-32fa37b8c26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c341bc6-511b-4333-8629-b05d7b9041b8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a238bef-0fb3-4d9a-9853-5ff7df499213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c38d002-f51e-49e8-896b-f1e1395a9946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3394e791-b676-4f63-936c-42e5462e01d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6368584b-dbf0-439c-81dc-9ae251b741ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ed7a7b-ca96-4df4-bc1b-42689c894689",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1627d918-2ad9-48d8-9148-2a7f615272c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1206284-e850-49f1-b55e-d9cb62a758cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd021807-2fc8-4078-ae8f-c38fe6c5531b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff3004f-8e62-4905-ae95-5e1ed60e8ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8238fd-3ffb-404e-9fc0-4554508c0570",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2678db-fd19-49eb-b389-b8c1dcbac8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb342c95-06f4-4c91-bf7c-50abf909d25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd675c6-c2ff-4b9a-8498-8b65d51ad601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d48ad1d-6047-48c0-a1f9-d861531940ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6873e98-34e5-4b9d-8039-499cd030e1ee",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa5a808-690b-4b4a-8ee1-f908e1cebfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b839a6e-6994-490c-aa75-d8d0b602189d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8b9b6d-f8ef-4565-80db-9a8d0b4419a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcc3273-4d76-4e7e-8d6e-fe052d15c901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2005863d-866d-41ca-bb20-a42369d3d6f2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a5ad70-a6a2-40d0-994e-1962aa44d1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfb3c61-d10b-4129-8cf8-7a760616b3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b59ea1d-0526-4c48-80e6-294349d1c0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d870ae-176a-4d28-9823-e4905232a455"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4c32581-fe39-4bd9-85e1-135e0ab1d622",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c67ebe5-697e-4b5c-8a32-e9da5a355398",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126df44-639e-412c-ada0-501316502229",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "554c587c-8eae-4797-8480-788c30857fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be9a36-29ae-4879-929f-6d0ecdf26f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73a2e52a-b51c-4ee9-8804-5a5ef5cb6395"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5e71945-a564-42a9-9218-ea65528f3df7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26759fe0-7faa-4178-b424-84914fcb322c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "128e5875-6d47-43a5-905f-222b3e6f2588",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76211c47-179c-4eac-ba17-fbbca8165805"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80f749d5-ff9b-479b-9809-6afa241ec61e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c266f30-ceb6-4356-93e5-83ceeffaaa6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d2407b1-9854-4479-aa54-eac89852739c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f125f8d-e8b6-4ee7-aa84-00b3d6183f86"
            }
          }
        ]
      },
      {
        "id": "74cf0324-158a-4e59-aa88-3b398be4ed98",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3061b210-721b-4e3c-94bc-8555ef797235",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f51bb906-30ea-4f3d-b3e4-d1ffb5b802e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f56db955-2d0a-4eba-b3db-dbaec7d0db54",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e6678-ccf2-415d-9955-59b2a03cde61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b5cd4b-5cef-4f23-8268-cbada320add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc91e2d-59d4-43bd-a6ed-0694a6e1ee39",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfcfb76-37be-4374-898a-f2761c7f892a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296e5346-265b-4e7b-ab46-bb634224bba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a453d2-a6e0-4073-aa31-83583894cf0c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d76958-6974-400c-a454-95f2c0705122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fde97d-1be6-4140-9d12-de5c871b4b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af46c1b-b9e4-4447-87b3-da6d34eea0ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d118808-78f5-457f-b011-8d3a4e97760d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b98201-96fc-48cd-8957-523a81d17f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d467cab-a803-4925-9269-24ecddabcd9a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6900f-e02f-4762-ad7a-c202ac25d17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf1e93d-b9fa-4b54-9351-1af21e071e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc2fd5c-0456-4852-b530-d0808c60b7f9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558dd5fc-cd02-4923-bc16-1ea533151984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1677b59f-abb3-4f76-bbfc-ecaa7bb16f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9eff36-e203-40cb-a0c6-6d95e275089a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a9255-0958-40bd-abf1-a6133fa57dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cfd48f-dcf9-4d8a-9985-7eb485bd95be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830baa9f-5474-4728-8df3-4ba7cb230a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1e5869-f63e-45fc-99f4-3089b52cccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f03a758-e609-4c4f-bbe1-347f6b9eacf3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3da8b3-ce01-49e6-a63e-e9d42c89f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbbb3e9-4508-46db-9fea-e16fb51a0dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7d3c17-7685-4024-9c9c-f20aaaf2fc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d474a1f-506c-49e6-9f28-139b90ae1f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9eaa15-1769-411b-b132-40551b0961d7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63df1c7f-3a29-4851-8a05-02c593433da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b517f04c-9147-4790-8138-ea0fd20d487a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b5d2e-b606-4ad1-88e3-0dd465949336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c1461c-8582-4925-bf5d-4de8d3cb7944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c65143-7438-490c-b0ff-6fd402c09d8c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc0c9e-c6f2-4a1a-8aa6-aa67fc625a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe8662c-419f-480d-af78-47e7a2265864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd2fa14-787b-47c6-bc98-381360022c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d4b430-7ca9-4189-a59e-a22c49ca1517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a53f1-ed04-4b06-8b40-bf2293eac3b8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a92d28c-b692-4f5a-ab33-5f98968e1d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8ee049-6af2-48fa-a3ab-cc0413566ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379bebaf-0440-49ce-8b34-26d18d847379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84992166-a8c6-4682-a150-d6f3e0548101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3312da4-b298-4508-931c-5a3e7629c66c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916cd82f-7fa6-45ce-a56c-803cc63bc093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad18fd98-0e6f-49ee-9174-979d0d8d5fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa2fc6-9973-40f1-b55d-eec3fcefc7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbde0ba-3b61-4b98-9c6b-de62628395a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06166034-d2ef-4660-b44f-e2c32a978790",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a526ca1f-5fd3-47b6-bbe4-6c824cc6ab99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b4e966-14c3-4b9c-9b19-78b5493deffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357b2795-8a8b-4892-9d71-6e0930940606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27cc7c6-3613-47e0-9d41-5144c78e2040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f97e919-62a4-4d86-b9bc-b1977304a691",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683324f2-52db-47db-a0b0-a5ead2f4d782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ab931d-c77d-4d83-9ab8-f8a161731111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4767f8-1ac7-4ca8-92e3-eee5954a9d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8615da1b-3bab-4a04-990d-f10630cb016d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90d651e-e868-4f49-9a3b-08d0334cc3d1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cd5963-1154-4b25-9c40-1f1022f30494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1559b213-ce5a-49c1-a73b-cb33b65fa28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e79610-0b94-4374-a0ae-f4050220a23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d039dc8d-6c47-47d5-8226-160684c1e734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9f81fd-dfb3-4b48-a390-df9deea489d4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e67a3fc-382a-4521-a5d5-8678cbdb3b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247b7083-6ec4-405b-ba2a-60c71c81a869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e663ef54-b8e8-46c1-9216-0875fc1c138c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57269c7-6bf3-452a-8ac5-49f2763a5811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7540f8-49d9-407f-b280-95a782d9be64",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c947e9d0-7319-4ab3-ae38-6ebc7e39c77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a374d040-3f6f-4f71-9fc7-ce2db06858cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb90950-a4c5-4d5e-bd18-def2f6370fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e990ff7-35d5-4ea8-ae60-572ce2e8f697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20d3e4-4896-418c-9d05-7a58b702612c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c966022b-9dbb-46ac-8a37-3962ae2b63e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691231ca-bcd2-4b71-9e66-bae3085bad9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf8f31-b943-4b15-8fa6-5d3ca99476ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7437d4eb-b3f4-4361-b766-b69013e30123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add10e8e-492e-404c-8c60-d131c82718b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd122b9-42b1-4bf9-b976-f4af98f78274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c962b61-27eb-4af1-a4bf-8ea1f818309b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefc8828-3765-4482-8d4c-5df69d4948a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e06e2e-826e-402b-a531-8cc100598424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3486a1f2-a70b-464c-9d3e-abd5c8381d4e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ed6b45-a5d7-4566-aa24-f7ed7c4fe317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9ff24c-d40e-4464-bf80-d571c673ed2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef40ea0-4d81-46ce-9fb1-2ce7eb0e85b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9cb5ec-dadc-4d05-b728-cfd8cfedbe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a6bba2-f95a-4da7-bccf-194b69a48fca",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbdb56c-7df9-458e-8064-f7abd93e916d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e787de-04e7-4690-a49a-0a6421827163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38865e-2707-4aed-9a75-3afa7c450d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b608ba5-02ad-41e4-8559-f84e29d04c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06de595a-0b85-419b-b5c6-4fbe648809de",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d53c9f4-b803-48df-a0ab-f8a0ac16acc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85e6af4-caf4-464d-a321-a9579c4cd513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfe3181-f267-44d6-8e92-2c6e3e6f9d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50486dd1-b1e3-4554-befb-bb078612b4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529f43d-bd50-4702-8432-89e2e7bdf1d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9709506-ae15-4610-9d39-808edaf87c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7b8242-abb8-4c46-bb76-ed7418848b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48401444-1efb-42e9-9483-12123eef708b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5c4d91-b8f9-4545-970c-060fa437b32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9946e32d-d784-4f47-9675-5a6cb7aff49c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631e6682-fa42-4aff-b32d-f8eedf54949f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fffb95e-7db1-4699-8d90-472726d7b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fafd12-ea92-4013-b690-9b38dd570e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8189bb69-13e2-4600-9bea-d03962f54a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216b69a7-7d9a-4fae-9688-155a4ea5c764",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d791009-b510-4bd7-870b-24343665cfe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef97d6b-b9c0-413d-817b-583ccb40a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4313ef3-ca86-41f5-9abf-bad71e684f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0917dc7-774a-4cd2-8e6b-8f182742c733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dc2310-7d02-48d1-b7a4-8612214580ab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45069c00-a230-42fe-a65f-0dc9b7bbbefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea4631f-6f18-4c9b-86d6-19a653ee37e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab79198-f96c-4883-9bfd-cdc10075b1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb2d2c1-acca-4994-b6ca-b6bb9a6d6279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0274e256-7df4-4b41-bf35-d7631f01d40a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec9f649-9c4d-48ab-bb05-12d736370feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746a82f7-f3e7-40bd-a015-af096fee3d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6982b0d-743c-4ae0-9392-97a083ac9449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb611aec-7d96-405b-9853-ce5ea7d3cebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a879465-d729-4085-829d-372585ae9f8c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fb76d6-285c-4e65-9856-0d224058cfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b29be8f-16d1-4860-b56e-8c07d56cebd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3e1df-c195-45d5-b4e1-447e07562cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746bb53c-50f2-499a-9f19-0f215487642c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b18a507-bdf8-4e7d-925f-8d3c1799c326",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262fa40a-20cd-43c2-9e82-030da136f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85551ab7-e76e-4c5e-8f0c-a61a2e56516d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97341ee-d558-4f6b-9356-50c12df89611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ffc0cb-2616-442e-9920-d06d25725b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59bf19e-4f26-4fd2-836f-7566f025bd35",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d25f054-07ee-45d0-b465-f36f94193bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c40964-2908-41fd-94c9-e66ddf1f824b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a67c51-933a-4d69-9355-16cb235dea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936cadb5-5c15-4a1b-bf82-79c6a0385dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56558c1c-99f2-42ee-a260-6f7e16fde574",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac13bfea-5e49-4a7c-bb75-c3812da88a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebf6318-29b6-430a-b086-4d1169d83f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e117d8-ae3b-48f8-8de1-5e42a85467d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe51150-6050-45c6-bfce-ae81b6731aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f27845-f925-463c-b1a4-c8987ad6cc0f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05ca5b7-08b4-4b74-be4a-ece3558ffc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadf5f37-7e16-4722-94f6-c778b2bb1d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d121e98-d899-4591-8fc4-eeb7dd2ecd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936af6df-4a22-424e-9924-8238efeafeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4de867-c744-4a5c-915e-7baa279fed33",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8b0f4e-21d9-4865-ae06-7d6f0ae5f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecbec2cc-593f-42fa-9ec8-9c2ecb9cb4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c6fde-781a-4d8c-9514-de14779bdd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ad7ea4-d103-4456-8f87-53b39d2f7d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365da9f6-4e8d-4513-9dd6-fed2840e0dcb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1364dc8a-5b0f-47c0-b76c-ba1fbad242c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d558c1-fe62-4dd2-9363-442bf1607e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3125692-3277-4361-83c3-6bf2b1268fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91162525-2d5f-4571-901b-a960223f9a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf75d07-aaab-4e19-b27d-f36a84b3d3f7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c23b7e-00c9-4092-bfdd-d6cfb68f93b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9504cca4-5dab-4f73-bc2b-6d559231e406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee742d-9f44-4d39-bb9b-a8f5fbc537c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560fd591-724f-47a0-8002-0c062a849716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9f279-c1a6-491c-a0c6-32818362dfab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da40df18-5fa5-4578-9785-ba145c930077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758a3365-9b2a-4476-b4b3-d7d821b44a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d476ad9-75d3-48cc-a936-d4ac3eef499d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bbbb70-7375-45e9-bbbf-d3d849128335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff5dad3-6c9e-467b-b23b-420febe82fcb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30136ba-d255-4e77-b249-be6e1e062487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811860fd-ca63-4860-9352-6ee9d7677107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcf6140-e62c-4178-84c7-aa6134d7d9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffacee1-ef35-4b05-845c-5010530ae8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be80f4aa-ddd6-4aa2-aab5-32906f3cf013",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea86c1e6-a5d6-486f-bb9e-d73e883a4c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778f7f7b-a5a4-48dc-8df2-dcc0eefb9b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7a0fc0-f8bb-4b21-ba03-a50b7ccff2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afff095b-e529-4f6a-9839-bedce68a3a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9b4b83-cab7-4ade-a2fd-0801fc91502e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48e1b94-2baa-4a50-ad01-46cb02221bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967de317-976b-4c64-a52f-c845cd9880b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84261a9-aeaf-4a6a-af2f-bc1360498c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbaf44c-e618-4e59-a795-3c6dee29e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4c4b22-210a-4a02-ac6e-e42d41b9052e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb1babb-36c1-4ca6-a9f2-3d9980fef412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96648eae-6e53-4c68-8084-4129f9ed6ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b701af70-c320-4630-bbd8-2a6664bdf6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbb62d6-352a-4b9d-ae57-e0d69354c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e1226f-81c9-4b15-99eb-2096641a5f0e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56003163-2f5a-47be-bef1-b83b45f9cf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a758d3ec-fa23-451e-81eb-4a9b29252ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaa319a-1d48-404f-aaed-b29f307811ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d053274-694d-4de7-8186-dcc11a7e7f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bc373d-7209-4d05-910e-3218b870de47",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaabba71-e460-48af-b441-9d907ec7db52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9977b244-6eab-48d5-8201-d390ddd870fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23af84b-a99e-44a1-9069-5a16bc883910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51b744f-a61f-4a7c-84af-62f90fad1bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a0db8d-c680-4bb6-a314-398107b905a6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7229d017-f8c2-4c45-8069-b64fda21ff30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e5ceba-8ccd-4167-b1d2-0def84da4e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b42872-9d4f-47d1-8686-d7acc4f9e48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879a6248-718a-46e7-8277-ec844c4334df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d071e-7ab7-436d-84ee-7f028eb1d7ba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23967e80-b55f-4f24-98b2-a14c7a815a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c48086-232e-4cdd-b5bf-01de5a9bde97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3472e9a-03c4-43ca-8aa8-135258b0cb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d5a046-6e4d-4867-8a35-88d1afa679fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819fdb77-108b-44b2-8e56-c35b058e84da",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83083d3c-f452-4e0f-aecd-2e7dc0d7d02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2373e1b8-f67d-4410-b0c2-f97b897be551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3525a331-e5cb-4f60-97c7-0b2e4a4a0a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91088024-3b32-494b-ace0-c5e6e9fb550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da822426-70f5-454b-af7b-200ccd0bf073",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e8dff6-cfe6-4bac-bc74-7d77459714a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ca0f96-7baa-4162-89cc-9c06264e8174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1aa473-39be-427c-afe9-6818fe536459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75904fef-e872-45dc-86a5-1d1e65b948d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093b781-745f-4702-9212-947a010f5d71",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9836e2-3f32-426d-b404-3039b561b0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c900f7-8994-4e4e-beae-3f15a567e4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401f5f9f-c24d-4dfd-ad44-78ceaf546e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2855c925-f761-45a6-9bb7-eae90e688a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc60a0b-6dd3-46ee-954d-7693f73066cb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a693577c-a23d-4a7c-aef3-45d69737d575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aab97c2-f7c4-43de-823e-c88c30ef22f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65c091-3f2c-4a44-8db7-992adb984633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ee5e2a-8566-414d-b3f3-eb64041def98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93e2342-16ec-42ff-9cfc-58c85d5231e0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f53de0b-b30f-44d2-8d96-b3801cbc3134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccd4720-a6b9-446a-928d-40aebcf5a307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705e42c4-dbb6-42d6-b306-db775eb39f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b789c23-608c-4464-92fc-0794d4443f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d5c189-d4c5-4af5-b00b-44900686585e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246ce851-c61c-4cfa-84d5-0895c015d84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9189ede7-01d1-4295-b4a9-60d6a6d040b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783db3c6-1fd0-42a6-83ce-97d92d665f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e4dfbd-de85-4a9b-9a19-3b60c0bf64f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc5cf79-f7cc-4c71-8de4-de268ff1dc77",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa7f474-cc1d-41aa-b86d-e18378a19419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490d4b13-97c2-40b4-b43e-4ca66890362d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef451e7d-c239-49c6-a099-d4498434fb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f4aa6a-4baf-4d2e-b1b5-32110a78d9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b4fbe-57c2-4dc2-93dd-f813b6cf47cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71d21ef-f4a3-41bb-b805-b08e3e759e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6162b77-fa7f-407f-b474-2b80689ad123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25109774-685d-49e1-9f6a-9b276696fce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a6bccc-faf1-494a-801e-8b316bf79f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e918456e-b589-47c8-aa9c-8a8ff2c97b02",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8634b26-5248-4fa5-89dd-497ae660f30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f5d888-c0d2-4c22-8633-bac601a1b771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f08bc6-c23b-4f30-a71d-41feb6bb741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca923af-fdff-432d-934b-f8c8245b62ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0664d9c0-c6e3-41c8-851a-6920087c129e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed3da5a-37e8-42f7-a190-e2fdb71fd1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae618c2-cda5-44ec-9b7b-a8b8635191bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75defe5d-2c31-4673-84b0-2938316e1e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786af265-e917-4518-9576-479ddc03ff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5f7ad8-8896-4a3c-aea1-92613f2e401f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f565c7-e988-4282-9108-1335fe068226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7ac56a-a656-4061-a953-d013a708bac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca7f5ec-c5bf-4d1b-999f-fc71ace8742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c21bf7-bcc9-47c1-a672-3e5d7b65c405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967086e0-1e4a-4723-b97b-bfa9382e6481",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fff8cf-4379-4a34-8039-2de7080a16cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8705b9ad-9115-4314-84f5-0bc596ed5eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94afa1a4-bd2d-465a-83d6-ca87c5bb4666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09ece60-55fe-49b7-9ff8-1c56e8321f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850942cc-ad6c-45b9-a5e1-d1c94ebcc9c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f918b513-3962-4262-b188-dcb27acbf773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e666d1-799a-4a38-a9e3-4b207c9278ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c343b8-f76f-48bb-b9df-188c69ef2df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a815e14e-e624-488c-8a18-a72b6302bb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47311a5a-bb1b-4e4c-8b33-55f250cf7d8a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653356cb-3ddf-479c-8cd4-f9e7cd20c652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f666da8-8438-4999-9d27-eba3d507e4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5ef0a7-dca5-4edb-b4e4-7d37e1a5f12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40362b89-1539-4699-8ac4-5057115fa959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276ebeb5-161e-4b3e-ac31-f228361c3d56",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282119d9-ccf2-4f44-80c9-b5ea665514ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19306cc6-98cb-4721-a208-81cbe92fb250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd165c2e-0cc6-4f48-b3c1-fa9c821420b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389897af-237d-48b4-8a69-5e918c57cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae2800-0624-4c89-9fdd-7789a6968143",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7637b51-6da8-43d8-9791-71b59926c372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4867ccd-c21b-4659-9458-6465b459e608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f513462a-bef7-4c7e-862d-6f1ac12ea6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beca78d-15d5-44f0-82c4-c88e25d39414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4d461a-68f7-4c3c-a0fa-75235c0daaec",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d2e82c-3a7f-4dcc-b59e-3d9e2804a6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069b3e04-401c-4946-bbdc-beb1e90a31dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454dfc5-8e8f-4098-b7cb-dd20ad490d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9057e23c-958d-4a1d-b919-5db35e15a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a9afa8-a302-4727-ad9a-fd90ae6a8bbf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14601f2-ac18-4a12-bd47-2ef813907cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960daea4-cfec-4927-ab82-b46f7e029ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2479e94f-e97c-48a5-b78d-8ea4faca1b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bc33f8-948c-4ddd-8e54-dbaf3a49c360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6779c43f-d2a9-4a35-8490-f9d3e043d6f4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f0a8e-7087-471f-9f62-b7e1a1940abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f3d82e-2de2-4518-8578-691ff918054a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba4bf26-ffe4-4a83-8385-a04f89d1edb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa699bb-5c1f-4660-b35b-3d5e2f9a7b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80223fb8-ca2d-4a4d-b9c1-c9b599109bba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49445aef-5cc6-44b4-886b-a993ced6f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f25cf9-2054-46f4-890e-47592b890ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18de0282-55d1-42bf-bd4a-1f97ecec4165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be795657-3e96-4f99-99e9-57ba89d199a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c536ab-e04d-4b82-be23-1d7f7102b2dd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cae6a3c-a085-4088-8811-c8b8bb0c98bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5d7658-3c72-4fa5-bf96-8ebc2e8e4548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e60d773-9801-4329-a349-7661368ba1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab08715c-6016-4b2e-99b8-1cdb63cef03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6450886a-fff8-41b8-bd8f-5bbd6cb6c3d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219d883d-6767-47fe-8573-4e70862f8bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304db262-ea1c-435f-b254-1b56e9a55fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1a8ebc-6eb7-484e-a01f-35cef2ab0e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd351a3e-efcc-462d-9cd7-6731432f62e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7447dba3-a428-43b6-962d-91802fedd69f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ab6592-e6de-4b57-961b-5576b5500d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed627ad-91f5-48cf-afb0-adf751b41dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48cfc68-8ee9-42a9-9ba8-1f045bfef68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947daed5-42d1-4e96-b4be-732751d686b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc47f9e8-a72f-4fde-978d-97b7c1aa0d5c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136c1849-739e-4862-bf4b-c2d4786a1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a129137d-86f4-4fb0-88af-046082b33edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b2e6d9-cb70-446b-b233-c098913473eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e35962a-ff14-4e45-a1c2-d82b98570c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14e1856-ae8c-45fb-8fda-cb769ef68aaf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b667a424-ccac-448b-a1df-99d07a90c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73351e13-418a-42b8-8431-1d01a69a59ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8354b09d-d5d7-46af-8e81-9a623502e19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cd7d21-0d13-4db3-9ec2-993d5e618b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac3d5e1-c65b-4b3e-b87b-d3cdf9cba55c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2736567e-c17c-4696-abe6-8721242ca57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbec2a2-e865-426f-85aa-6b18961cfb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bd6ebf-1b6b-444b-96a4-d3acfd5057ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f172957b-b286-45c2-8d4d-a69d83c1556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf1c725-f511-4309-802f-9b00b5cf80f2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7636ef-4709-4355-b931-25b1372393c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8972a2-2f52-4798-8259-9516c207a0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f45240a-84da-4a4d-892d-3c825aba4b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2635be-5a6d-44a5-9e2d-e7c09140174c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4327fb4f-15b0-4f72-871b-d2cdc7b7cad8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c78995-6878-430d-b9e3-9ac40249956b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa03505-b030-417e-b5ca-d2337b4a3990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f51d3a-d1a4-48b4-a589-af1680e2865d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34420f05-78f9-47df-8238-98e56a1a51d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491e7a8-2efc-4f81-81fc-1f571c138c14",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0574ab5a-cd32-4c98-9f74-720c81d5b44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a75779d-7a4f-41b4-b28c-8e9f0cdfb247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b92ac8-4249-4ad0-8342-8b6a55544bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfd3101-db1f-49fe-ba33-96405a9a02a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a0b889-3689-46ce-9c76-fe5498c51de3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48b4af1-631d-4e6c-a4ae-4ea1e327e6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35180c41-ba69-4ad7-9ecf-cc8e9b484f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4234f6-a1fc-4ec3-81bd-c0678d5fe018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dfb92b-f567-4573-9ad1-5dd72b79ddc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f7ac86-03e4-43c0-9a7b-37666f50292c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1695994-733b-498d-9a91-f190328b7a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bef75ec-3857-464e-8bf1-cf2d866eec77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c53237-9eb4-42ce-aa2c-9d338d976c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd896559-2074-4177-a66e-2c5a3cce3e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e166f-eeda-4660-994b-eb1463fbe169",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a9c518-10f0-435a-9576-6cea3208cae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f8a92c-c298-4436-b004-5c5c06e0c33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608cf58a-ffb8-478c-b37f-b4c6da9dc20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8121e1f7-19fe-4f6c-9d85-776fd9971775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a9cd7e-bb72-40ef-b8ce-60bc85d4cd43",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f46159-4c75-4bc3-9073-5c4e5dee3e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f0ecac-9fe8-487b-bd3a-c6d35f24605d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f2dad2-9d21-4dd3-8af9-4a9fad434ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b268aa1e-9db6-435c-b2bd-7cc65ccfc75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd430885-2af9-4d67-a5b5-738bb6dfef1e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9780b913-64be-493e-9cdd-a813366bd825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b673710a-baf2-4554-a969-ce7faa902501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17def2fa-31b8-4ec5-b5e3-222d56ba6b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb36148-a76d-4aae-8e2a-a39e30bfb7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243fe8b9-9e50-49a8-98ca-8d2c2e94ec41",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bede191c-4bed-4483-a059-bd7829feeb36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb78544d-7405-475f-95ec-b5f321846f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c189e35-7cfc-4616-b06b-5399aabe04ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a3e2cc-75e5-4044-ac1d-eaace2963b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2fc20e-6454-44e4-8177-8710150e2b7a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7eaae0-b601-4def-bbbb-08ca52a73b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf90fb6d-ea4a-4c9a-879a-810fa4b85988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42361ce7-9b8b-453b-b257-1a2bc469b477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e545f25f-760d-46bc-a5bc-21ff904513f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fc539d-dc35-4850-9ac6-eb5fb23efb3c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1e6967-d45d-4e39-8d96-17dc10f743a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38808a9e-afe0-4810-91e2-f537129bbf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb229dcb-2e70-4a13-b73f-03edf1d4927e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e2d68f-e0d8-4491-a438-b7b533e9f412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b6d9f1-6298-4063-9676-d0f16264c94c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e537e647-dc1d-499b-a8ae-815a1bb36a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90538218-d330-4884-8a90-9d5adc53f663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5a5915-32fd-4f24-a7c0-4482feb720c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6539090b-af21-4e1b-bd71-577e4eb695bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531578ba-d5ca-478a-9e20-579b20bb2009",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f639d0-8855-4749-b791-d4bceeaf311a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d047d4-2e8c-40d8-bf4f-b41df0a1180e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e260fc57-15a9-4014-9234-bdb3d8875406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52af636a-69e7-4209-927f-9998407f8961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ccbbfb-9398-4fe3-85fb-d08a2c6e4304",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e07026-cefc-4303-983c-3e0af513fc48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3e6b533-4228-431b-96c9-ee30db53b5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5432be6-34ef-4939-bdda-cd9b52cba6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da587f0-92eb-45de-a0e9-96f0d998346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d538651-50fb-4ef9-8d24-51798fc3a1bf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e33bdec-d06e-4757-9474-15d327bd0ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743eee2f-52b6-4794-a93d-0547dcd0b7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92add6c-600a-4c12-8794-35fc4a78baa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5783b063-7765-476a-a271-6569feff1de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2061886-9955-4cc9-a57c-e7602ac3e20f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a403bd05-22bd-4151-91aa-ac916a6167ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a690be6b-5796-4f65-beae-2aa0a5247eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70e2807-e76d-4644-a441-595b858202f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ae6700-5d9b-4fa4-b4a8-c2c187f2cc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f077cc-1dde-4451-8f40-8aa6a4220c6c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68cb252-376a-4666-b81d-8f758bf3f56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5623c1a2-786d-499a-94ab-3973e72232bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7ba99-cfd6-45e1-9ca5-1c018f6524d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e3f458-3d25-4f3a-838d-e0be70f71b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d3d438-a9ba-4a86-99f8-55709926ffca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0f07dc-4cc1-49ab-b5da-e5f5b97eddde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde734c6-77e8-4af7-99be-a7d8a31c8d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed0f5ae-b15c-464b-8696-be0857dcbeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bd20e4-3b24-4a0f-a881-5a87c0e43ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854903a3-7a09-41c3-b257-84849991cb3f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144cc2e2-57b1-43be-9782-b7b248c22d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9a9a84-c021-4026-9ee3-c3b6f43b9b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538fcec-5c63-463d-9c67-38ac306843c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f627266-d768-49d3-a751-55cb945f49b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecf1fca-0180-4e3b-bab4-30c05f8386f1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9164b163-cea5-4896-ba05-463135bb30c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "216b7412-0ee4-4314-b55a-fab58065943d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd56f0e4-b90e-4036-8fa5-0ae6289a83ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f23557f-340b-4bba-89e1-a97bd67078b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e89a05-3921-480a-9096-b2aae261e6ff",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64c32b4-3635-4f48-990c-38bbe9728f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672c72d4-740d-4a23-a02f-e2e17ea0e494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277c751-0b97-408a-a3c3-443ce149624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788b850a-4ba0-45ee-92a6-deb8007c4a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229a6d04-90fa-4e9c-b97d-4f23ea155008",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b4a55-f66a-44e9-a93b-5297fbb3ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91415ab-5187-4ef2-bae6-5da450993b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1dde4a-5f09-423e-b6f1-04667da578ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5496716d-e7a4-437c-b523-141ad7c52dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7751cb89-475e-481e-be07-1e8ed927df9d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc50875-0e66-4d0d-ba60-29c6f0f09dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d28aee-d9e2-4bb0-b299-24666951345e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724df719-f7cd-4614-8c10-6d69ce681b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea4b80e-d6b1-407f-bd7f-42bb0315498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3d79a8-959d-47de-8c2e-62f22a2dd0ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ef119-43e9-4511-9a9e-b0e4ccb62994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9b26cf-e0de-43cc-8e2f-c93f9503b70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959a1763-cdcb-4a87-9c78-76f18a0e8571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d1a062-92ff-41c5-8c64-aedb78348e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11865eb-d268-4d76-9f77-9614d4aaae0b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c401bdfe-532c-4b4b-a5eb-cea7adcc45e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633e0caf-dada-43b7-a100-78077a82be3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6b4f1f-b19a-4cd9-80b5-c07d51c4abff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f93850b-41d3-4764-b52c-62a3678c8db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56352ac-2eaf-4ae8-ab8e-ef436408fff5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3024d96d-27eb-415d-8230-b82893fbe096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbd6b7d-5711-419e-b992-52724389122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b0e1a-63bd-4ae7-946b-619f74721410",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea69f90b-ae94-4bb5-a122-3302d097d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f12331-bc9a-454a-997e-15bd86049b1b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2d67a-0b9f-476d-bcad-204f079c0015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7112116-e3a4-424b-b2df-4fb99cb74dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3584a971-3b3b-4386-927c-f85805f58cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0e6df1-9815-41a2-8501-cd850614d164"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0894ec0f-4133-4428-92ba-6f6dd9097f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82033f5c-0f13-4d51-ab8a-dd9d6166e089"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5e891aa-5f6a-4c4d-9d7a-9985aa18bdd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "642ebe4e-9762-48c6-ba49-dc96c6f935ee"
                    }
                  }
                ]
              },
              {
                "id": "59e43d8d-88ac-4a87-b072-bed46017981a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "969422fd-ca45-410f-b4c7-ee4f082fd454",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e10af-1c67-4232-8f58-3e7642843c82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5ba0b705-7883-449f-aa1e-e1709046891a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a666477b-6e4a-437a-b00f-608c591de180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a3f77d3-11e6-4406-9702-f7e1a81349b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8064e673-1fbf-45a3-bee0-c0e058e37b9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "498e6495-8b48-42e5-81c9-47e7c56886c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a037c3f7-5fe3-4e64-abf2-caa80ddd1e5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc773c96-f49b-431b-8c26-a67d3d508efb"
                    }
                  }
                ]
              },
              {
                "id": "0e10c5fa-b7e0-4810-85fc-fbc44c42380a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "211a84fa-d169-40b0-ac36-e6e2b273d781",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8767af52-6533-4b5f-bb60-5ff579e63150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d421fb73-7e90-411d-a591-5406a3f062ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb2f628-469c-45b5-b53a-373a11ff2c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8fd781-a85f-4dd0-ae46-a1a81f100600"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bccda395-1b0b-4b71-b6e0-7409841fad65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1315e47b-5b74-4d86-b9ed-6a1fb22d4aee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ec1434d-61c3-4e67-b9f1-cece47dc1ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dcfce58e-87d0-4efa-b9f0-c144f33c4aa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7276372a-3ee8-41e9-995b-0d2ec714596c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a44e9dec-084c-463d-89e7-46611b303e2c"
                    }
                  }
                ]
              },
              {
                "id": "d2df8d5d-5478-4f1d-8b92-a2379f97d12e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30c52d7-eb5e-4d10-b445-6302e5ecf925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dcde89b8-1616-4f47-a948-1a5b0ecfc28f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1925e09-fae9-4817-9cac-d9ab90f2fafe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283ce00d-90e4-4cac-a432-e29c0fdfe427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e2fdcfd-e38b-4aca-b05f-7301e12a9cf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4d3a6d02-4e54-4670-8e54-aa4de0edead6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c257c699-a636-4f37-ba04-d840cdb8a6ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71c5fb30-a410-4414-95d7-fae1a6ae097d"
            }
          }
        ]
      },
      {
        "id": "996aa578-562e-4f03-8237-53730803c8be",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "47330814-db23-4069-b884-dad9bc338edf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "983106fa-face-41c2-8259-66e76511a214",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "beeee2c4-a929-4bc6-85d6-f8baaab94a37",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7d1595-61b2-4d54-be9f-95cec9ea211f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00f47fd5-92e5-4632-bff5-a840c00a07fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef3593-1e45-415c-97f7-923107e28e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd032862-8011-475f-9545-25fae02932f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e19b6be8-6041-4563-8e63-30bb8218b54d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e967a000-95f9-4fce-ad33-3437321a9988"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b48938-56cc-4070-81dc-266a0df98cab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b8b0625-1731-4a3d-bf25-acf2443b67ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03b14c0c-f4e8-4dc4-88b0-9246082f183e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03aecefa-2b52-4839-97d5-09bafda78e3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ab9f536-d5d0-4e51-a66b-13a2fb096aef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6750322-764a-47da-9197-3be2472d4d52"
            }
          }
        ]
      },
      {
        "id": "a052e01a-ac3a-44c2-a4c2-191ff8a731c9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "baa132bc-affc-4f5e-9b35-c0bdbc33f24b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e4fadf3-4b89-4d6a-a6a6-e61bb5a9f654",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f77a0ba-7c57-416a-8395-0895195615e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f9b66f-9b69-4cca-8b9f-1191af2793fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d20cfec3-bf87-4535-8242-c6d16a1394c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c509b8-7606-49ed-b5e9-2dc5da053d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d91eac6-0998-40af-940b-f8cf8d5544a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c149d939-8fc5-4872-8366-2cf543479877",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f7a249d-ce67-4346-9823-560fa441417b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "401db5f1-bc8e-4137-a24e-894d90a1e587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c52013-a9f9-4c32-ab79-5b0bdff46f7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b289d402-6431-42d9-b199-fab0d539ed25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10be13ad-33b0-424c-82bd-84aeab7429a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f587212-efc4-42dc-8f52-1f1c59c0e9e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3581f11-beba-4a26-b8be-e7d99ccb4241"
            }
          }
        ]
      },
      {
        "id": "4276aa68-b414-4a86-81c4-e515e367db31",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "07325591-3a92-4f81-8e1e-4e21df79b36a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ce6a140-10e6-487f-91c8-4c62e50d1836",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "476fbe86-d6ae-4dd6-917b-45f31b38d583",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa716b20-9f52-4148-a43f-07b03c6c900a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4835928a-5d2d-4057-83f5-6ded845af2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c433a2d0-cb0c-4470-9253-ab1f2b42afa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e493d16-0baf-4249-ad37-993517ace531"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "180ca70c-5135-46c7-ba10-2a3a621ca724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2738434f-21f6-4b9a-8713-796ec3a28daa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e0b7e62-7fdb-4a1c-979d-af2c4a39fc74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3cc33c1-4b7f-4bb8-859c-94030981ea95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d6884de-5498-4212-8368-c68b92e9e9b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b761767-68ca-49c7-9e86-ca063acdbcf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0262785f-ceb2-4c03-b39d-1bb11682d469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79e11b5d-4d79-4151-bae8-2059de11af95"
            }
          }
        ]
      },
      {
        "id": "52c27930-739c-4806-90af-6bd26daf1ce1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce282bd7-7cc3-4ea2-970f-4849c997423f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbe19c0e-028e-4e9a-abbf-fde6d8f14779",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2d17f16a-24cf-4219-9663-36482f7f13bc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7f1f496-cebf-4d21-ad57-a2ddd90b9fc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a674bccb-7ec3-4eaf-96cc-7dc3ab3e2d4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.35317460317459,
      "responseMin": 8,
      "responseMax": 638,
      "responseSd": 42.148338170760795,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725151890742,
      "completed": 1725151906364
    },
    "executions": [
      {
        "id": "ce6a9737-e883-4922-9b4b-6ed929e27d21",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7bc15ea7-b0f2-4dd7-88ff-7d74a40e65c6",
          "httpRequestId": "a11c0f91-b49e-4cf6-8030-122794781f79"
        },
        "item": {
          "id": "ce6a9737-e883-4922-9b4b-6ed929e27d21",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a46a2d4c-b7b8-46f7-b14f-3dcee49ca9bb",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "6e431c7e-1b9f-4c22-b7a9-ca666a0ae638",
        "cursor": {
          "ref": "8f474741-b8b1-40a9-8c9e-7b034bd71067",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "09af19f5-3703-498a-8a63-65e62e2b5b3c"
        },
        "item": {
          "id": "6e431c7e-1b9f-4c22-b7a9-ca666a0ae638",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ab0a8973-4948-42b9-856b-e9cfda81e4d0",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c3ab525d-d9f5-4188-91e6-985e47eafdfe",
        "cursor": {
          "ref": "85e11731-bee6-402a-92bd-e73cd9bb5cdb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "baf55d4a-1f23-4049-a4b0-db40b04d7ba2"
        },
        "item": {
          "id": "c3ab525d-d9f5-4188-91e6-985e47eafdfe",
          "name": "did_json"
        },
        "response": {
          "id": "f794954f-fbb7-4118-be0c-f4fe36830281",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893da4e0-a99a-47be-8fad-a07d7ddd6beb",
        "cursor": {
          "ref": "15722d3e-4bd9-4bc1-bc32-ccde01b763fb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d1deab2-7ea8-496e-9ee0-76989f148af8"
        },
        "item": {
          "id": "893da4e0-a99a-47be-8fad-a07d7ddd6beb",
          "name": "did:invalid"
        },
        "response": {
          "id": "f5e19142-145c-4c0a-9dce-b8caac846d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893da4e0-a99a-47be-8fad-a07d7ddd6beb",
        "cursor": {
          "ref": "15722d3e-4bd9-4bc1-bc32-ccde01b763fb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d1deab2-7ea8-496e-9ee0-76989f148af8"
        },
        "item": {
          "id": "893da4e0-a99a-47be-8fad-a07d7ddd6beb",
          "name": "did:invalid"
        },
        "response": {
          "id": "f5e19142-145c-4c0a-9dce-b8caac846d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163aa70b-68c5-4365-9cda-3a83a46d13e0",
        "cursor": {
          "ref": "44229b0f-373b-4499-9582-879d29ee8c30",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5233e05a-374b-450c-b40a-b6d873945a0e"
        },
        "item": {
          "id": "163aa70b-68c5-4365-9cda-3a83a46d13e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e1d2929-83c9-4247-b82e-513f4f38c1e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f146fe3-4706-4fea-957b-1462e9e754e7",
        "cursor": {
          "ref": "5296463a-d956-4757-bd82-8063889a5c39",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "93d67d05-0bb6-4c94-ab8b-230c09b9ae16"
        },
        "item": {
          "id": "8f146fe3-4706-4fea-957b-1462e9e754e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9e648863-ea9f-496e-815e-73319ab604ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab06d00-5959-4b8d-b231-9f80b8b62a3c",
        "cursor": {
          "ref": "26a87d3f-95cd-4ad1-942e-f428934450eb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "755f2c06-d4cd-4c15-bd61-61c377e27773"
        },
        "item": {
          "id": "4ab06d00-5959-4b8d-b231-9f80b8b62a3c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "af8a89e0-800e-4393-b50e-3a825c3d6bf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6556c3fd-6a08-4207-bab0-6fbd8379afbd",
        "cursor": {
          "ref": "c1d17680-df82-4beb-83e9-ad2a9584b9d4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "afaa53db-fc24-4724-b7dc-3cf508d2e418"
        },
        "item": {
          "id": "6556c3fd-6a08-4207-bab0-6fbd8379afbd",
          "name": "identifiers"
        },
        "response": {
          "id": "ee68ccf3-52bc-40a1-9c7e-f91d1c2bc10a",
          "status": "OK",
          "code": 200,
          "responseTime": 233,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac46cd5-f3a6-4b1e-9578-5967495f6997",
        "cursor": {
          "ref": "1ddb9f54-3c92-467e-bfca-056d787ff853",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "857e1af4-1439-4f94-a24c-22e9302504b8"
        },
        "item": {
          "id": "9ac46cd5-f3a6-4b1e-9578-5967495f6997",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67244365-73ad-43da-8a2e-8cc8aacd97bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be6a612-9e9d-4bb9-a05d-91edc6965b35",
        "cursor": {
          "ref": "34575c8a-db0f-4012-ad39-16ad7ba3c26f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "596a89fe-faf8-486a-b33d-26d7e4cf10a7"
        },
        "item": {
          "id": "1be6a612-9e9d-4bb9-a05d-91edc6965b35",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "58992f34-0d43-41da-9ec4-6646c1fc740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1654d607-00ab-44ee-b676-207f89c504c5",
        "cursor": {
          "ref": "fa53cefc-da59-4a37-9415-a0b7b433f329",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a12c8e45-a16b-4726-a5cc-08b4f258f7a3"
        },
        "item": {
          "id": "1654d607-00ab-44ee-b676-207f89c504c5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "94a2d3c1-f166-40cc-adaa-d384cdfc9664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569e03b1-1f4b-4324-bc90-2b7fe66596e4",
        "cursor": {
          "ref": "4c2000b5-02e5-427b-8830-9cbdbaf76c8b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5db91c35-8968-4b90-9c06-5dcbd1c58d91"
        },
        "item": {
          "id": "569e03b1-1f4b-4324-bc90-2b7fe66596e4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "24098a69-7d22-46ab-9fc4-ee6de6817046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30370a4f-7018-478d-ac9b-0f18062b6fc4",
        "cursor": {
          "ref": "2133335a-f004-4255-9e13-87628389a6f9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "33fa429d-8410-4919-b773-40811b767da6"
        },
        "item": {
          "id": "30370a4f-7018-478d-ac9b-0f18062b6fc4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a99499b2-979d-4bdd-88eb-af0c9aec4132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6e3cca-1b90-47fe-aa23-bc6e7f33ed24",
        "cursor": {
          "ref": "29844a3b-f23c-4694-af92-c99975a61681",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "171ce7c2-73de-42fa-9260-06adf84c88f1"
        },
        "item": {
          "id": "bd6e3cca-1b90-47fe-aa23-bc6e7f33ed24",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0687aaf5-9c72-4ff5-9e0d-49dd3d4cd787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2248669-708f-4645-9e1a-55a887905410",
        "cursor": {
          "ref": "cae707af-b55b-4318-b76d-aa8b5f816d65",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12d6b11f-1f7d-4bdf-a40f-98c57e60ffbf"
        },
        "item": {
          "id": "f2248669-708f-4645-9e1a-55a887905410",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "62642932-89af-4fc5-b3a7-e4f1d58e349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a166744c-70a3-42bc-80a1-dba5077fea00",
        "cursor": {
          "ref": "d5e15595-51ad-4215-8597-6ed8854f6b5b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b563c537-681b-4b4d-9b9d-0b3486d835f1"
        },
        "item": {
          "id": "a166744c-70a3-42bc-80a1-dba5077fea00",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb3341bd-1ce2-4797-a03e-f7091ad883dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69695c3c-296f-4b52-b0f9-d5d855db88e1",
        "cursor": {
          "ref": "3489b31b-9c75-459c-ac0d-f78ff7b7b676",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5f188727-f7af-4a4a-b4c5-07dbfeb2ea89"
        },
        "item": {
          "id": "69695c3c-296f-4b52-b0f9-d5d855db88e1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac50315e-a18d-4394-bf41-f5ae6753cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4bb0ae-a081-4dbd-8cf5-8b2fe5ea1f38",
        "cursor": {
          "ref": "7fb2be58-fbaf-4fcc-88a8-e7f4d00938ef",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9d8aba13-70b7-4590-8589-51a28224a725"
        },
        "item": {
          "id": "2c4bb0ae-a081-4dbd-8cf5-8b2fe5ea1f38",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea979c33-dd5e-4f26-8663-e632132b8bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3205cd-502f-4af9-bed9-e1d965f69d21",
        "cursor": {
          "ref": "6a971f03-d523-4d20-9fea-c539b5e420c0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b9d19a6d-ed69-4ad8-b72a-0cb39309037a"
        },
        "item": {
          "id": "3b3205cd-502f-4af9-bed9-e1d965f69d21",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc170d97-75d4-4ec2-9089-fe04fd450c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931db160-2b93-47e3-b761-3bd0da8b042c",
        "cursor": {
          "ref": "58376ed8-1aec-4032-b0be-0275615d2d7e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7884c0c-ea63-46cb-b89a-fb7bc71a58c8"
        },
        "item": {
          "id": "931db160-2b93-47e3-b761-3bd0da8b042c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c8f970b-6ffa-499b-99a5-7d29d1f443ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff357f49-9905-42ca-a708-ec08709dc8e2",
        "cursor": {
          "ref": "c6ce97eb-5e91-4648-a9ff-9bcc68ca144f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6cf7c5c3-a022-4373-b9bc-e192395c1dee"
        },
        "item": {
          "id": "ff357f49-9905-42ca-a708-ec08709dc8e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90bf26f5-90f4-4615-aa88-c591636f85d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fa4efa-6e3d-4a90-8c99-8954cc09e0fb",
        "cursor": {
          "ref": "d068ccfd-333d-4917-9125-891680f7a3bf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "63d668d9-b009-473a-92b7-41a1e7ce7592"
        },
        "item": {
          "id": "c9fa4efa-6e3d-4a90-8c99-8954cc09e0fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1dacfa78-88fc-4fda-95d0-87e438458878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bdbbc4-7eca-404b-a43c-f50e214d9f1d",
        "cursor": {
          "ref": "5ade52f3-ad2c-4fd9-b6ff-95cd3feb48b8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b78f2e9b-47da-473d-9915-552b4916a1d0"
        },
        "item": {
          "id": "b0bdbbc4-7eca-404b-a43c-f50e214d9f1d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ea5286fa-2a6a-4aa2-8b68-8bdfaf84c5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e68559-0977-4043-b6e0-1f58c876e875",
        "cursor": {
          "ref": "dd28c262-a052-4d1a-a5ba-6dfb792f9a1b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "50302645-5272-47e8-983f-754f7574856a"
        },
        "item": {
          "id": "58e68559-0977-4043-b6e0-1f58c876e875",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "65934e86-08ac-4b28-afc3-5b275c48996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517bc2df-9e98-4d46-b435-bbd91ba57be3",
        "cursor": {
          "ref": "a58f8961-cfa2-4d4d-bbfc-630b7c45e798",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f7d6b973-b2d3-4fe9-8103-73d2a74c27cd"
        },
        "item": {
          "id": "517bc2df-9e98-4d46-b435-bbd91ba57be3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "316694bb-c8c3-47fe-818a-78a9168f3776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71dfa2a-410b-4feb-ba3b-76f202596da6",
        "cursor": {
          "ref": "2fadbff0-457e-4cf6-b883-f02ac4726509",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7401b298-aeda-448c-a657-5b9afba81fa2"
        },
        "item": {
          "id": "c71dfa2a-410b-4feb-ba3b-76f202596da6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e0c68798-7d63-49ac-a15b-3975dd7b54bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8a008c-afd6-45b3-a13e-1b15412db328",
        "cursor": {
          "ref": "adb8eceb-6f2c-4f2d-ad5f-af2e9cbf2098",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b82a663e-dd4b-44f0-a68d-6c0d9a932062"
        },
        "item": {
          "id": "bd8a008c-afd6-45b3-a13e-1b15412db328",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "51a5327d-1ff4-41d2-8dca-2ade3f12ea3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd164f-7f47-45f1-acd6-297b8f165e2d",
        "cursor": {
          "ref": "d74d2514-9ada-4737-951e-765de487a2eb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "15e291b9-641c-4d9d-bb09-906b8b956d8a"
        },
        "item": {
          "id": "65dd164f-7f47-45f1-acd6-297b8f165e2d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e2ed6798-566f-4398-bfc2-285b158a05b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a0d3aa-9021-4262-a824-44ef0c942690",
        "cursor": {
          "ref": "0fa05dc8-6d78-4bac-aa48-ee2d71bea845",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35a9fc48-26c1-4c27-82ee-d6e9741126c2"
        },
        "item": {
          "id": "b0a0d3aa-9021-4262-a824-44ef0c942690",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d9b7f6d0-3c2c-4a07-bf1a-bda69c07191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3e7d3-c5c0-4734-acb2-db5752d338eb",
        "cursor": {
          "ref": "e3c9420a-2e20-4b29-8cf3-abb99e838467",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "29683910-8488-412f-b70f-67a09485acad"
        },
        "item": {
          "id": "dfe3e7d3-c5c0-4734-acb2-db5752d338eb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b7370576-b856-42de-adbd-f625a07a9dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f42de3b-6894-4291-ba56-70bdc9fa0a14",
        "cursor": {
          "ref": "7606a974-f2d4-4ecc-b336-c715831fab67",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "082173dc-55e4-41fa-bc09-f3cffadbb26d"
        },
        "item": {
          "id": "8f42de3b-6894-4291-ba56-70bdc9fa0a14",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fc930e75-1c02-4b5e-b0ed-c6dc9d1bc814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168cdbfc-b72a-4acc-9201-200606faaf28",
        "cursor": {
          "ref": "e54ef456-2de1-424b-91db-50122bcb38c3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d40f91cb-7912-486d-a25f-f2cab923ab54"
        },
        "item": {
          "id": "168cdbfc-b72a-4acc-9201-200606faaf28",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7af109a0-9f4c-4e9b-8f61-059b0f0e0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9b24e5-f1ed-40a7-b2a3-0a48f6e59707",
        "cursor": {
          "ref": "cbc9f561-e8b0-496c-848f-8e30017e9e30",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bd3eb512-524a-4af9-a8c9-35ed76a3fd74"
        },
        "item": {
          "id": "9d9b24e5-f1ed-40a7-b2a3-0a48f6e59707",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fce8ac8b-13f3-4396-af88-daa3dfb4fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f388de84-f1f2-4837-80d6-8bbd9bbc79dc",
        "cursor": {
          "ref": "9a187b1c-0c15-4d27-99a7-bbef50537d93",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "482e3cf0-01fd-4201-b158-851bb51cc97f"
        },
        "item": {
          "id": "f388de84-f1f2-4837-80d6-8bbd9bbc79dc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f2e13533-2e30-408a-a03c-68a0fa2bca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed8de10-43c6-4511-9c56-33da681728ff",
        "cursor": {
          "ref": "c44171a7-79b0-46ff-83ff-bd208a948b5e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "257cf97e-45ed-4d66-9ec0-932243c0a697"
        },
        "item": {
          "id": "4ed8de10-43c6-4511-9c56-33da681728ff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e4a70c8d-8f6d-4741-b998-18a1a21e5a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df06b49-61eb-4512-b657-ab1b4ba6d0d9",
        "cursor": {
          "ref": "79e7fa3b-6772-4b80-adc6-21ea5d832273",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2b77bdc9-d856-41f8-9b1c-4fdf61376bb5"
        },
        "item": {
          "id": "9df06b49-61eb-4512-b657-ab1b4ba6d0d9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a5a7ea16-1747-4819-b586-67389b8d1fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a859d3-0749-4808-b542-5b2ac271b200",
        "cursor": {
          "ref": "a09ac2dd-ff92-4540-a34b-9b8f56a751e9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9fa7434c-f17d-484c-a062-d72949525d1e"
        },
        "item": {
          "id": "33a859d3-0749-4808-b542-5b2ac271b200",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be80ac36-3d63-4725-a1ed-39e9e1367f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25effcaa-2b85-406b-8b0c-88b230c93718",
        "cursor": {
          "ref": "2b5b3622-b4b1-4ac6-ab57-66b7944861f0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a3ba5d63-471c-4762-ae85-ecab2949ae1a"
        },
        "item": {
          "id": "25effcaa-2b85-406b-8b0c-88b230c93718",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c412cce1-4d1b-437a-b661-43ae968e901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254af0f-1fc2-474d-b91b-95039a89531a",
        "cursor": {
          "ref": "1c469356-6d23-477b-b9b8-eb76a5fd70e8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d1a9e7cc-0592-4757-9484-beb54681159e"
        },
        "item": {
          "id": "a254af0f-1fc2-474d-b91b-95039a89531a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3e9af7b8-8f22-468b-b12d-7081a368527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ace3a2-0e88-456b-bc1d-3c18f9943c8c",
        "cursor": {
          "ref": "391cc315-8cab-4901-bfee-0414c14b9504",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8afe098c-5b2b-49a5-9afb-354cc6afa63e"
        },
        "item": {
          "id": "f2ace3a2-0e88-456b-bc1d-3c18f9943c8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cb879e83-ddfb-47a1-8729-b3b41eb63f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347285a2-397d-45e2-810f-4d06aaa9b612",
        "cursor": {
          "ref": "583334c3-da50-460f-99d3-ee34a4a11426",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b74ee4ab-39af-4065-b8ec-e13b3fa109d0"
        },
        "item": {
          "id": "347285a2-397d-45e2-810f-4d06aaa9b612",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "56db75f5-a0d5-4d31-8da6-6985a1d0d559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3c2843-78e4-482e-bb28-fad7ee29715a",
        "cursor": {
          "ref": "3018ed0f-6ba1-4319-97b6-14b23b579124",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "854510e2-2f1a-4c9f-9a8d-9fe0ef10bee3"
        },
        "item": {
          "id": "8a3c2843-78e4-482e-bb28-fad7ee29715a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3346d64-1fbd-4e92-98fa-8b3858d11b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7e9ca0-aa89-4be8-9831-1f453a3017a8",
        "cursor": {
          "ref": "f07323eb-0323-4e5a-b0ab-8e95422b54ba",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2effff23-7b83-4643-b0be-80e494c7c7fa"
        },
        "item": {
          "id": "4a7e9ca0-aa89-4be8-9831-1f453a3017a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "da838bb4-38e0-417c-a47c-05800c74f257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97caa164-3b79-4c3b-8321-761dbd16cd0f",
        "cursor": {
          "ref": "14612715-41b7-42be-bea9-6ad48843adea",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "82f8de44-9003-4aeb-977f-ad6a810d1e1d"
        },
        "item": {
          "id": "97caa164-3b79-4c3b-8321-761dbd16cd0f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7237ecdc-ca1b-49a1-ad21-860ac71d0711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9f505a-131f-44e3-bf6b-c8362444525d",
        "cursor": {
          "ref": "f23b4615-a18a-4e39-bbfe-d236c85a1871",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "63e30a00-1738-470f-a00c-7c899cb32991"
        },
        "item": {
          "id": "4f9f505a-131f-44e3-bf6b-c8362444525d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "124a26bd-4f3f-4949-b2cc-17275c603bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c562c6e-bb08-402e-99ca-3d479f2913f0",
        "cursor": {
          "ref": "7e7ef5a4-fddb-438c-a56e-d23cab72db72",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "931893a4-2eeb-49ae-8d44-d135b0697732"
        },
        "item": {
          "id": "2c562c6e-bb08-402e-99ca-3d479f2913f0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "58422b51-1c14-479c-9cda-019f0318e269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bb3de0-64b5-4cc9-ac3c-8ee7190e6a5c",
        "cursor": {
          "ref": "95ee3d37-c66e-4bc1-8d0a-09e3444c722c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "774f9b43-8043-40ce-9ce3-9ce0d7e97bbe"
        },
        "item": {
          "id": "40bb3de0-64b5-4cc9-ac3c-8ee7190e6a5c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73892e0c-a623-446e-afb0-1eef0744dae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fcbe91-5539-41e7-890c-f877faa38712",
        "cursor": {
          "ref": "7703808b-795b-476b-8b41-bd38b35e97ed",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5efb8f5d-a20d-4c51-a208-297dbe31e099"
        },
        "item": {
          "id": "d0fcbe91-5539-41e7-890c-f877faa38712",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "83ec001f-4ebd-4103-b6a3-c09ca66e8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd820f9-d736-4743-b4f0-c64150c07ca3",
        "cursor": {
          "ref": "878f1c77-120c-40c2-b189-691e2338104c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5f378a8b-6ee9-4728-8f90-812a84938796"
        },
        "item": {
          "id": "6bd820f9-d736-4743-b4f0-c64150c07ca3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6cba2cc7-46d1-4a61-b208-6b9ec18dd929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2457d1ca-0e50-4603-842d-2767e66c5d88",
        "cursor": {
          "ref": "fef0ad41-0c2a-4ea9-a2cb-ce0753d7fe1f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9e9befe2-7cd5-48dc-8450-02441cfa30ec"
        },
        "item": {
          "id": "2457d1ca-0e50-4603-842d-2767e66c5d88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d868b28-8d8c-418b-9c50-d87971b50648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4861ef-1186-40fa-9e2d-06e1644994c5",
        "cursor": {
          "ref": "202d205e-4443-4583-8611-dd3ec42da0e6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0b0ffb4a-123f-4423-85ab-16375c455cad"
        },
        "item": {
          "id": "0e4861ef-1186-40fa-9e2d-06e1644994c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f0dc8e60-5be7-4a51-a57d-1cd19d022fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8064139-a567-46eb-8f47-00a712a65ba5",
        "cursor": {
          "ref": "37ed4e21-f3ef-46c2-a679-5c51e547051e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "95be77b8-66ed-4656-a28c-78985e89b200"
        },
        "item": {
          "id": "d8064139-a567-46eb-8f47-00a712a65ba5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "20a8b8a0-249c-40b5-9890-6ff46af6c323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d71992b-7312-4ca0-872d-f948e3c292e6",
        "cursor": {
          "ref": "469107b4-9d33-489f-b3a3-c81c152f9681",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cd75539f-dd39-4266-8e50-dcf87d2b64bd"
        },
        "item": {
          "id": "5d71992b-7312-4ca0-872d-f948e3c292e6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea1caa9c-def6-47f1-aecc-fe1831634fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b54f6a-9103-4b20-b807-73d3f3a1c37c",
        "cursor": {
          "ref": "1166059a-d81f-4e32-ac00-ce3b90c07f65",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e1b2faac-5b48-487a-8c85-1fa17599a278"
        },
        "item": {
          "id": "36b54f6a-9103-4b20-b807-73d3f3a1c37c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c90e47b8-785d-4139-8c42-0f9530637a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09123b0b-018e-48a1-ba43-0c58282fef70",
        "cursor": {
          "ref": "1d9c55c4-0266-4ea9-91a9-5743c74f13e5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b68441a-dc87-42a8-a3f1-8ad73b220b68"
        },
        "item": {
          "id": "09123b0b-018e-48a1-ba43-0c58282fef70",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cfdab6c1-44fb-464f-8afe-629b7043f8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7648d56a-815a-49de-b8f6-0aaf41c243ae",
        "cursor": {
          "ref": "1c8065ee-0866-4ce1-a66b-7f4caac27736",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0c3da619-a44d-4c1f-98eb-012b46c484c1"
        },
        "item": {
          "id": "7648d56a-815a-49de-b8f6-0aaf41c243ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d423a45c-1984-4650-ba37-de8036756d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc54e8b-dd5b-42a9-b717-d125b2fe0602",
        "cursor": {
          "ref": "f86d9628-df61-477c-b13f-a6507dba6b50",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d82f8836-4d2b-4330-8b41-c4fb5d5a0e3c"
        },
        "item": {
          "id": "6dc54e8b-dd5b-42a9-b717-d125b2fe0602",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a5335e05-a81f-4164-b235-ee7451acf0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa845c8-28c3-46cd-9d3c-137d76ac9b32",
        "cursor": {
          "ref": "a647ff82-20eb-477b-8744-6f0d1149c7e4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8ec4ec03-227f-46d5-b4c9-ac946f8e16c7"
        },
        "item": {
          "id": "6fa845c8-28c3-46cd-9d3c-137d76ac9b32",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cbb617b9-67df-453d-b14c-d278eddfb591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d533d-7477-4a32-ba56-2ad087cf8b06",
        "cursor": {
          "ref": "bcce3719-1cd1-4858-bd7a-5856e328142c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "056ec4f3-db8e-4d77-9473-7f29b3eda018"
        },
        "item": {
          "id": "849d533d-7477-4a32-ba56-2ad087cf8b06",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b4e3042c-5b7c-4364-a810-655ab18755e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6938379-bfca-46e8-aa3d-ba713700b863",
        "cursor": {
          "ref": "30ae9efc-c6b6-42e4-8bfc-d421742333e2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3e9d6541-b85c-41a5-876c-dbb19ec6cb4d"
        },
        "item": {
          "id": "d6938379-bfca-46e8-aa3d-ba713700b863",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "06c4cc10-0b9c-4942-a4f1-9e6fbf1f8ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6642b0ab-c70f-449d-a4fb-02639657180d",
        "cursor": {
          "ref": "7d32835c-81da-4372-9829-8aceb985423d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "be9cc7d0-d860-4eb8-b910-1684fec82cda"
        },
        "item": {
          "id": "6642b0ab-c70f-449d-a4fb-02639657180d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b290ef3f-ae36-4df2-9e61-bf24b26d2a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1548ff3-455b-4d74-ad5a-ff3b0a03f153",
        "cursor": {
          "ref": "c20eb7d1-a628-4cf0-82df-2b0ae0b333cb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a622a602-3bd2-420d-ba56-2dd73dd4d7ef"
        },
        "item": {
          "id": "a1548ff3-455b-4d74-ad5a-ff3b0a03f153",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "97dd3e21-ad5f-47ab-a8dc-5cd574054791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d9ecd-a0f3-4453-9b64-aea8b98d3060",
        "cursor": {
          "ref": "3ea81499-73f1-4179-9801-f7c62a30e147",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c61d2cc1-cbf4-4e7b-840d-17567cc4f8a1"
        },
        "item": {
          "id": "1b5d9ecd-a0f3-4453-9b64-aea8b98d3060",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2e8b5ea5-1a0d-4cfd-92d2-64fe8686a1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dae749c-3b4c-4500-8f17-6db5fb7ae571",
        "cursor": {
          "ref": "415b4456-250b-45e5-abfe-dae7f53306d0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf435e60-695f-4737-bdd5-ea34fdfababe"
        },
        "item": {
          "id": "7dae749c-3b4c-4500-8f17-6db5fb7ae571",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4d2a1232-324d-4029-b91f-6bd43ce12f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1780facd-ff94-4bcd-a222-61a07ce28a6b",
        "cursor": {
          "ref": "f0cc7d46-eaf9-4a02-965a-fbd533fd24c9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5f849998-5e6a-4345-a0d1-328a2fd2c718"
        },
        "item": {
          "id": "1780facd-ff94-4bcd-a222-61a07ce28a6b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ce58ca84-4b3a-4524-856f-8775316c499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0836f97-a28a-464a-a95f-e1a5b2e02e66",
        "cursor": {
          "ref": "cedf9969-1107-434b-ba36-60f1b9c68374",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c3234f96-b492-451a-a8d3-4b781d764cde"
        },
        "item": {
          "id": "a0836f97-a28a-464a-a95f-e1a5b2e02e66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "14b0886f-543b-4b8f-bba2-061447dfa6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21539a85-5054-4365-bc2e-689b98d9de85",
        "cursor": {
          "ref": "a82b7031-ddfa-4c8a-9096-96d6a37e0cdb",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "12c13469-068c-4ab6-924e-81e043239d21"
        },
        "item": {
          "id": "21539a85-5054-4365-bc2e-689b98d9de85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3795dcec-3c7e-48ca-a8f1-3c97a0744f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27cbd46-cc31-4f68-aff8-4baf9d972ed0",
        "cursor": {
          "ref": "5beafecb-d202-4cce-8f57-3d0154574e3e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71a9c0ea-496a-4042-9de8-ddd5c000f56c"
        },
        "item": {
          "id": "b27cbd46-cc31-4f68-aff8-4baf9d972ed0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "17428d5d-eb87-44bf-9e10-1bda0ede0f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934bb623-96a2-4e29-abe6-14f05c705216",
        "cursor": {
          "ref": "66025ec9-efa3-4263-b808-706d18658770",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5d3253f9-0c63-4d44-bf94-66549fcce53f"
        },
        "item": {
          "id": "934bb623-96a2-4e29-abe6-14f05c705216",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ed8656e-dc84-4057-95c2-d86c7c20d202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806d6998-bcbd-4096-955e-1499057de122",
        "cursor": {
          "ref": "44d4afd8-3dfb-4530-ab6b-ab50a26f7f12",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e6e5a5fb-d748-4b98-9f4d-d6a35cdc29e8"
        },
        "item": {
          "id": "806d6998-bcbd-4096-955e-1499057de122",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8eb019e9-3efb-4437-a553-79b1797d4405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0898d-fd00-40e8-9523-4b634852459c",
        "cursor": {
          "ref": "1748084c-262a-4ea6-988e-e0fab63a6535",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b40c02b-dc2e-4ddd-acc3-052230303ee6"
        },
        "item": {
          "id": "a3f0898d-fd00-40e8-9523-4b634852459c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dfbaf122-15d6-42ed-830c-de9fa5d5db87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c0b1f4-8727-4e62-bf92-0aab7241cc73",
        "cursor": {
          "ref": "3eec293f-9a1c-4fba-b715-3be4b8327ebe",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9a024df4-9044-49d9-ac05-efd4287afe6a"
        },
        "item": {
          "id": "34c0b1f4-8727-4e62-bf92-0aab7241cc73",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6db8eb60-1eac-408b-b893-5c485f6ef1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b762fa5-acf5-4674-8227-865813e203c2",
        "cursor": {
          "ref": "29a8c0e6-a705-453e-8237-d15dbe82369a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6f6250fd-a575-4eb8-ad7c-61d2cfaafd81"
        },
        "item": {
          "id": "9b762fa5-acf5-4674-8227-865813e203c2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "72173964-d7de-4025-a3da-56c8a8f14802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67269ad8-7b60-42f6-ba13-56b646c9402e",
        "cursor": {
          "ref": "02129a2c-0210-4829-8467-877ef76349f8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f74df734-63c4-4766-b7c3-dba2c67e1f8a"
        },
        "item": {
          "id": "67269ad8-7b60-42f6-ba13-56b646c9402e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5b94ee44-8b6a-4ab7-bf4e-f9ec5a166f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129207e1-3bc1-4911-bea1-7b0e1811cbc1",
        "cursor": {
          "ref": "25eaaea1-ff74-4403-b644-7c6051821a21",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a0ed681a-39b6-4e65-a711-aed38dfc4aaa"
        },
        "item": {
          "id": "129207e1-3bc1-4911-bea1-7b0e1811cbc1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "49bd7b4b-a251-4757-841d-8212f217e51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b062c01b-8693-4224-afe3-f2cae93a6742",
        "cursor": {
          "ref": "72f4dfd1-73bd-48c4-a99b-54eb38ac2823",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9dac17d5-eea2-48c0-8bee-cd8441172096"
        },
        "item": {
          "id": "b062c01b-8693-4224-afe3-f2cae93a6742",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e81da449-44e5-414c-bff4-8f45cbf21f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720655dd-49b3-4bb6-acf9-646c88de5e29",
        "cursor": {
          "ref": "f94965b5-6ac7-4ac4-a050-e964891a00cb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b346dbb3-d0a5-43f0-bf60-489c7df4f987"
        },
        "item": {
          "id": "720655dd-49b3-4bb6-acf9-646c88de5e29",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4ec5df79-1772-4133-85fc-003f41f2a3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab7778d-cb68-4c2d-a430-11f792e61dc0",
        "cursor": {
          "ref": "a1a39946-a089-4bf8-af5f-00535c5b19ba",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c4465e92-7807-4617-9f34-ac1124669556"
        },
        "item": {
          "id": "3ab7778d-cb68-4c2d-a430-11f792e61dc0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d1dd730a-c489-4f04-a52f-edd3c2c3b1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b79d047-08ee-4cef-8f97-b6318791b5f7",
        "cursor": {
          "ref": "1137c04c-f8a3-4c97-b436-88126310901a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cef92407-f4ee-46eb-9c95-d2abaafe3227"
        },
        "item": {
          "id": "8b79d047-08ee-4cef-8f97-b6318791b5f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2c59ea83-70af-4bae-81c6-dd883e35d44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57336c2d-a8bf-4521-a72b-d2c262b43f6b",
        "cursor": {
          "ref": "26886ad9-bc8b-47f6-b7a6-7fc1f13e0dff",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e5778f20-e2a5-4fbe-8f08-58d358fbd640"
        },
        "item": {
          "id": "57336c2d-a8bf-4521-a72b-d2c262b43f6b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e18f0753-b575-4ffc-abc6-08e25501093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639b27b8-ac9c-4ec1-aa3c-f0d162a467b4",
        "cursor": {
          "ref": "3c287c52-4170-45c3-9258-f097361a423d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "53565a5c-de8f-4925-98d1-1fe1d16c5358"
        },
        "item": {
          "id": "639b27b8-ac9c-4ec1-aa3c-f0d162a467b4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fc920850-50e9-4831-ae28-13af16bdd0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a38ee8-c4be-48e7-a5c8-79e51b990e46",
        "cursor": {
          "ref": "62f493be-5a5d-4f89-8152-f8291a567fc1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "43dc777f-c202-4c43-b43a-3fab27ea80d5"
        },
        "item": {
          "id": "28a38ee8-c4be-48e7-a5c8-79e51b990e46",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0e2df39-8d3f-436f-bc9a-c5fa1205bf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731bee18-1437-4873-b7de-8abbc3e2ac2d",
        "cursor": {
          "ref": "ed5450ac-a786-4f7e-afe6-64dcba233399",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "87d2ca9e-2028-4462-8704-3ed834132116"
        },
        "item": {
          "id": "731bee18-1437-4873-b7de-8abbc3e2ac2d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ab24a6e1-0ebf-4f1b-b628-f942ded782bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3136ea45-a39a-4b39-9778-d9ff7c5d0983",
        "cursor": {
          "ref": "42a16ca6-d421-4503-a7d1-d11827f5ec8b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e51d518a-c802-4837-86a3-7a19db8cbc6d"
        },
        "item": {
          "id": "3136ea45-a39a-4b39-9778-d9ff7c5d0983",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "12be8b7c-212b-4417-9e16-bc16c1b4e6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e08b302-59f7-44b7-a6b0-686b5cc9f779",
        "cursor": {
          "ref": "5e7203a8-0f67-4afd-b8e4-0e288c315177",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "81086e0d-816c-4413-bbaa-b4c772b9c8f3"
        },
        "item": {
          "id": "7e08b302-59f7-44b7-a6b0-686b5cc9f779",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a7f93e15-c39e-46dd-8d18-088ec6b64d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420de92e-f493-49e7-a0b9-bf401858e66e",
        "cursor": {
          "ref": "26a359cf-ab20-467d-b5d7-28da2252f06c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7e6f8ff0-930b-4ac4-a1f5-8394bf44513d"
        },
        "item": {
          "id": "420de92e-f493-49e7-a0b9-bf401858e66e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e3f650f1-39c3-40d0-ae08-1b91c1f3c273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82753663-44e9-40be-9aa1-6446c799366f",
        "cursor": {
          "ref": "f3d19dad-e41f-4580-8303-6d051bd40e56",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "426a327b-c38f-456e-b3cc-1e18ce6f2f46"
        },
        "item": {
          "id": "82753663-44e9-40be-9aa1-6446c799366f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee0e9547-36df-413f-ada1-5034a0a76b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6779eba5-ff43-4ba2-af94-9ccbb8d00439",
        "cursor": {
          "ref": "198137a4-93aa-42ac-aec6-c467c535785c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b9e48881-53f3-4596-a49e-ef0f815eed89"
        },
        "item": {
          "id": "6779eba5-ff43-4ba2-af94-9ccbb8d00439",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0c9bd09-6f85-498b-80e8-fd0d1b841b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd832286-6ab8-4ec8-8be1-7a67b9634019",
        "cursor": {
          "ref": "473ab5e0-0587-4d5e-a84f-aaa0d13ed2d7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b8efd53d-9129-4cc6-8f80-bcba4ecfc15d"
        },
        "item": {
          "id": "bd832286-6ab8-4ec8-8be1-7a67b9634019",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c9368f25-4954-4f39-b557-ca94003e3367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4cf890-8e94-41f4-9b5e-f7133d948cda",
        "cursor": {
          "ref": "a2e9b7d3-8d44-44a6-87b4-e0042ebbfcc6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6711a28-4aba-4f74-b650-88f109579b36"
        },
        "item": {
          "id": "eb4cf890-8e94-41f4-9b5e-f7133d948cda",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "47776880-bce8-4b77-89c6-8e59784976b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b47bd08-2d5e-4a28-b349-019fc9d99df4",
        "cursor": {
          "ref": "7de8c8b0-302c-45c7-b06c-8e2f559f4243",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f9301b1d-1a10-4db0-b92e-52ae39442696"
        },
        "item": {
          "id": "1b47bd08-2d5e-4a28-b349-019fc9d99df4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc94c040-2d1f-4e8d-83aa-1a84c8b35522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02c9c22-5c6c-419b-9afe-90f33c91eda4",
        "cursor": {
          "ref": "73a259cb-3f28-4734-8879-c4cc5597d5aa",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4b5f111e-fca9-4899-894c-c14998e6d353"
        },
        "item": {
          "id": "f02c9c22-5c6c-419b-9afe-90f33c91eda4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "466804a3-5fdf-46e4-8571-e639bceaa34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071eb874-10b7-4647-af97-2b24989d5565",
        "cursor": {
          "ref": "2ec1ba73-8d2a-4d67-a7a9-8d17822f1de1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "36fd1bcf-d236-4b96-ad35-e633b4079a9e"
        },
        "item": {
          "id": "071eb874-10b7-4647-af97-2b24989d5565",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b90ab5e5-85da-4743-b013-d82f744b5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a2a81-35e8-453d-9c77-fdcea3714e5b",
        "cursor": {
          "ref": "2bc225ba-c8b5-4e2b-be02-53628e21895d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fafb14d6-2f5d-46c9-93d5-bc10fb8111ad"
        },
        "item": {
          "id": "db5a2a81-35e8-453d-9c77-fdcea3714e5b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ea41c37-3326-42bf-a6a3-bcc42336fb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86ad2e6-eb97-4383-bcd9-7ed7c4f3e248",
        "cursor": {
          "ref": "648de854-a042-4329-b09a-a61438b6c8e2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6a8507ef-ce1f-4313-ab3d-d1295ee8e998"
        },
        "item": {
          "id": "c86ad2e6-eb97-4383-bcd9-7ed7c4f3e248",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce165803-61e0-4070-aa84-8e7335d2ac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b11c79-f2f1-4f62-9bb7-893bae32e317",
        "cursor": {
          "ref": "8c615eed-b758-406b-ac92-2a6a10860fa8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ad3c96d2-e569-4291-a71f-e9f941e17050"
        },
        "item": {
          "id": "f0b11c79-f2f1-4f62-9bb7-893bae32e317",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4ebdf17b-e7c4-4dab-a836-e348ba24c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aacc3b-334b-43be-a00a-72c8901c539b",
        "cursor": {
          "ref": "a2dafc2a-ca2e-40d2-b273-62c1c5d098bb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "725ba4a1-93b5-4191-a5cf-823d1dcac9f3"
        },
        "item": {
          "id": "88aacc3b-334b-43be-a00a-72c8901c539b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "afa6971d-dda4-4fcf-88d1-d6d7f27819b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6007c618-ae76-4367-940f-4b75808976da",
        "cursor": {
          "ref": "dfa768fe-6515-40cc-866f-e5d9b1f34195",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1e36ff2a-2d8c-4c53-9dc4-843818aa9ff8"
        },
        "item": {
          "id": "6007c618-ae76-4367-940f-4b75808976da",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "389275fd-d70b-4d05-b3a4-470f465fe58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ed089d-8230-4471-873a-55bba8a46e73",
        "cursor": {
          "ref": "34ac5060-920a-421d-a3ee-2e872fe19ad5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bca5144a-152f-4963-989f-a3fcade5366c"
        },
        "item": {
          "id": "78ed089d-8230-4471-873a-55bba8a46e73",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8fe8b5a9-b90a-48d9-af38-5d94b2158323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa2705-60bf-4ae8-8420-3ea81975a46f",
        "cursor": {
          "ref": "c94e0642-5ccc-494f-a1f6-5a4c59146fe5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "471970b2-3af8-4a69-90c0-89738eddf04f"
        },
        "item": {
          "id": "a5fa2705-60bf-4ae8-8420-3ea81975a46f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f74dc0f8-ecae-451d-be28-1f7734cfe62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b8b1b5-02e8-461f-b7de-41e99432d683",
        "cursor": {
          "ref": "d7485780-7621-4354-8f00-ffcc792e6d21",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b01b19da-25fa-472c-97cb-f247a3293504"
        },
        "item": {
          "id": "d6b8b1b5-02e8-461f-b7de-41e99432d683",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e13cd747-3921-4150-9333-63a336cba19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf7d4b7-86f5-46fe-807b-d181162cf651",
        "cursor": {
          "ref": "b3b2892b-99ae-493f-b714-955201a19c1f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "17ef073f-fb2d-4faf-b67c-36417daf2527"
        },
        "item": {
          "id": "dbf7d4b7-86f5-46fe-807b-d181162cf651",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a32b9492-7e0e-4035-8059-bd51c32f6613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ef4da3c3-b450-41aa-9448-55e5bb7c3571",
        "cursor": {
          "ref": "7fa340a3-a0ea-492e-93ac-084addb9be7c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9f2e06cc-2799-470c-925e-722cdab4ae1c"
        },
        "item": {
          "id": "ef4da3c3-b450-41aa-9448-55e5bb7c3571",
          "name": "credentials_issue"
        },
        "response": {
          "id": "200f04a9-d5b5-4562-b9ea-1727567244ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5e4f7bab-8b31-495b-998d-655f780d3fcc",
        "cursor": {
          "ref": "5f5efa8a-4ce2-4bfe-b48a-e75760e2fe74",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cffcc9ad-6255-4435-b7db-cb8caf93b367"
        },
        "item": {
          "id": "5e4f7bab-8b31-495b-998d-655f780d3fcc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a5707e51-45ad-40ff-a9a2-84d3e96a7715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fdce52ec-41c3-4066-8b14-d0a290bb39d4",
        "cursor": {
          "ref": "7e304b59-af57-48a7-b70c-251ce29d788d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3642151a-3404-4954-8c01-152c2a61d134"
        },
        "item": {
          "id": "fdce52ec-41c3-4066-8b14-d0a290bb39d4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "86f7afc0-a3d5-4c5c-b973-0ff83f3a3fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "42e89188-3487-4554-bf7c-6fd90b82801e",
        "cursor": {
          "ref": "13a6d952-35bd-4444-852e-29a648a470e6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3da8cbe2-0d4b-46f7-8618-b778e0ead236"
        },
        "item": {
          "id": "42e89188-3487-4554-bf7c-6fd90b82801e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "42f96fc9-6cf1-4448-aa2e-4cd4417d4d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c277b676-eb62-4663-9db0-b79537451900",
        "cursor": {
          "ref": "95759e9e-393d-444a-8f6a-7e4359d0975b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c0f90f5f-fdf5-49b4-b361-24396be87755"
        },
        "item": {
          "id": "c277b676-eb62-4663-9db0-b79537451900",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5a7fec4a-4af3-412f-a19a-7ecf68444ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "59b65cb8-960f-450c-9c0a-49778302440d",
        "cursor": {
          "ref": "dc33b60a-a7e6-4d70-95b5-9809af8b4d89",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5072475f-7211-4358-b1b5-ab2c51707f2b"
        },
        "item": {
          "id": "59b65cb8-960f-450c-9c0a-49778302440d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe190974-ce9b-4e88-a08e-3cfb20e430e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "04c80a52-6c54-44e5-a2de-b4e460767acd",
        "cursor": {
          "ref": "bcc8fd3c-c3ab-470e-8571-8c2d023d8596",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cc3bc3f4-5ff1-4dd2-ae2b-20ae44cef450"
        },
        "item": {
          "id": "04c80a52-6c54-44e5-a2de-b4e460767acd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b02653b-4c75-412e-a202-a85c8739fe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3b7ef-44d9-4769-b32d-6c0d11e38d2d",
        "cursor": {
          "ref": "611ed678-0f40-42dc-aa25-9bd069308f73",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7e8acb59-e17e-4e4e-86c5-b94f163b7d1e"
        },
        "item": {
          "id": "33c3b7ef-44d9-4769-b32d-6c0d11e38d2d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0b0c991-ec14-4809-9254-9339a00cb26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5498f0-301b-4e03-aede-e8434b6a52b8",
        "cursor": {
          "ref": "4b7c66cd-203b-4d01-8936-3bf7c860e7bd",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "392e93da-a0f3-4cc4-a07b-7d99384d0989"
        },
        "item": {
          "id": "fb5498f0-301b-4e03-aede-e8434b6a52b8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcaf52f6-85ff-42f9-be52-3248112653fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20d1a1-1150-4644-b9b9-006cf1b9b06d",
        "cursor": {
          "ref": "432d1955-8700-4196-97ea-7d97c019629f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1277b22e-6933-494a-8b4d-2726a089b89b"
        },
        "item": {
          "id": "1c20d1a1-1150-4644-b9b9-006cf1b9b06d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c57ddf54-2933-40c7-a03b-eb3527f2d7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c19f07-b226-47fe-b748-00d1887389e6",
        "cursor": {
          "ref": "bced3666-c029-4e16-9389-dbc48298b9bd",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2189bc1-112f-4f85-a12f-ecdc34ea3157"
        },
        "item": {
          "id": "05c19f07-b226-47fe-b748-00d1887389e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "91236fc2-ee60-42a2-8df3-6124cd7dd957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b136d-cf36-44f6-89d9-dc541a061ec3",
        "cursor": {
          "ref": "e40a0c54-f3d4-469f-8958-2adb19c0b8b2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8172e541-4017-44b3-8c76-68ce9994ad24"
        },
        "item": {
          "id": "1f2b136d-cf36-44f6-89d9-dc541a061ec3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2891f594-e836-46e6-8006-a055a114065d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e2f36-24ea-4671-8c20-c5a0b09bf5f8",
        "cursor": {
          "ref": "048b35dd-555b-4388-b1d0-f011e102f196",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b0a3759-6e9a-42c9-aea3-6869324e0a75"
        },
        "item": {
          "id": "f62e2f36-24ea-4671-8c20-c5a0b09bf5f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10e5009c-d26a-4398-828a-fe54c30d0eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f413638e-f38f-4889-bfd7-233a1ff81394",
        "cursor": {
          "ref": "dba7c805-edd4-4842-a947-c680c4ca1562",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c79e05d4-a0a4-4c76-a3bd-086abb9ed93e"
        },
        "item": {
          "id": "f413638e-f38f-4889-bfd7-233a1ff81394",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e61ed60-96f0-440b-b321-5fc6fb79e49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373ef3c5-9469-4d0b-a49f-b233fcbf13d8",
        "cursor": {
          "ref": "d139a2c9-08e8-49c5-9fcb-84487e4ffe5c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7173645b-4d64-46be-839c-7cc575e34fb0"
        },
        "item": {
          "id": "373ef3c5-9469-4d0b-a49f-b233fcbf13d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca19d877-84fd-4300-b470-12b94923e513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ee617b-8507-4ab0-9e9e-5cead1afbde6",
        "cursor": {
          "ref": "72702f08-07c9-4cde-be88-5c1e1dd60b84",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "42694c2b-9ccd-49a4-9fa1-237cfb4386fc"
        },
        "item": {
          "id": "93ee617b-8507-4ab0-9e9e-5cead1afbde6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6297f011-8d8d-4913-8199-197722c02ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798ec887-36a3-43a1-a9f5-84fe1004bd17",
        "cursor": {
          "ref": "33ac93ae-9c0d-4e57-9032-290c214ba09a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "54f9c2cd-3dd0-493c-9420-a9cb80579573"
        },
        "item": {
          "id": "798ec887-36a3-43a1-a9f5-84fe1004bd17",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c71a78e8-28e9-446f-8115-bc78e6e823a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e48c1cf-95ae-4d74-991b-07ecc11c0a16",
        "cursor": {
          "ref": "9a8a61c9-fea5-49bb-8583-962baf4bb259",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9f5b0db9-6470-46e8-b7fe-cd99803f7925"
        },
        "item": {
          "id": "0e48c1cf-95ae-4d74-991b-07ecc11c0a16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "30fa262d-36d7-4496-863a-42c6314f2b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0ce5a-25cd-4535-a382-39c3015dbf3e",
        "cursor": {
          "ref": "72396d57-1223-4410-ba9b-9e0423dcf96f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "527f6f38-364c-4dc1-bc8f-556a6f125f79"
        },
        "item": {
          "id": "baf0ce5a-25cd-4535-a382-39c3015dbf3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ef423150-1fbe-43a9-aafd-7133e31549ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6697e418-5ccb-4f40-b98b-a7b547116dc1",
        "cursor": {
          "ref": "86bc7551-044a-4167-980b-a8903fcdde9b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a3104cab-68e9-46c8-b578-e01425538b83"
        },
        "item": {
          "id": "6697e418-5ccb-4f40-b98b-a7b547116dc1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "34518f8e-4dc0-452d-815b-e9e7d58ead00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe83ba-82ed-4a90-ba46-b5e6f7a140ad",
        "cursor": {
          "ref": "75bf1ec9-fc2e-4fe8-a169-9a1f156817ce",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1ef7f926-df67-42c3-acda-6496a950c43d"
        },
        "item": {
          "id": "bafe83ba-82ed-4a90-ba46-b5e6f7a140ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "29f2e229-0a1b-4149-acdc-e0e5f291cc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4996d824-83c1-4e56-8a18-b9f0407a816e",
        "cursor": {
          "ref": "bcbd4a98-f0cd-4659-bea6-68295e2b70da",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7deaea8-ec4d-459f-b75d-f8a9399f3bef"
        },
        "item": {
          "id": "4996d824-83c1-4e56-8a18-b9f0407a816e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c39667b7-75d0-4894-9f8c-cfdc6708db77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b91c547-e7da-408a-8374-f07a7e61b662",
        "cursor": {
          "ref": "14a65090-0f68-4c58-8136-44fb2c9ecce6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1d9dc78c-fdab-44ec-8dd5-90e24e778c3c"
        },
        "item": {
          "id": "0b91c547-e7da-408a-8374-f07a7e61b662",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9faceed1-8f1d-47c6-87b9-cf25587754c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1e5b5d-5c61-459b-962a-3059295c46ff",
        "cursor": {
          "ref": "a2f87ede-2bfc-4681-98a1-f4bff8503243",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3e867d45-eaa1-4a5f-83bb-c200b5864f10"
        },
        "item": {
          "id": "3d1e5b5d-5c61-459b-962a-3059295c46ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c0070fd-97bf-4810-ba4d-e3e4d0e61e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c67d129-4f32-4919-a9c8-aa5d785eef6a",
        "cursor": {
          "ref": "77617e90-16d3-4f04-9c52-17b2927d3aa5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aa366bc3-892a-40b2-9a16-32ccd4f96e20"
        },
        "item": {
          "id": "4c67d129-4f32-4919-a9c8-aa5d785eef6a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3cc223f-60ab-4940-a187-592bc655a6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797d82fe-8abe-4b6b-95e1-e44db56a9fd4",
        "cursor": {
          "ref": "0feeefe4-b4a9-4161-922c-f5e201793848",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a1aac646-482a-4a67-aa1b-b7d15eadd941"
        },
        "item": {
          "id": "797d82fe-8abe-4b6b-95e1-e44db56a9fd4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a73981a-4191-46f1-840a-84e22a57b6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14d9495-7e5b-43c8-be94-59ed1faebaef",
        "cursor": {
          "ref": "9a4ec611-4024-4afa-897c-9e55511e356c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "260cbd7a-f54f-4a76-b7cf-c9f9f30ba4a9"
        },
        "item": {
          "id": "e14d9495-7e5b-43c8-be94-59ed1faebaef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ead54259-aac1-45ea-8eca-c6c20db1bedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff080ccd-9548-4d8b-bcde-23d9e78812c7",
        "cursor": {
          "ref": "02a3b8dd-97cd-44c2-bf02-e115fc26b7e6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9cca7efd-b7e9-49bf-8df5-07694772a5b7"
        },
        "item": {
          "id": "ff080ccd-9548-4d8b-bcde-23d9e78812c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7ef9694-1e3f-4c65-be02-8e6e32aba619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8ac71d-2ad2-4f08-b15a-5b05fd1f07db",
        "cursor": {
          "ref": "4f0a1dff-9ced-4e3d-885e-9ca00d704fc5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0509e4b0-2601-4a92-b8b2-032bbf1ee295"
        },
        "item": {
          "id": "1e8ac71d-2ad2-4f08-b15a-5b05fd1f07db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48962a42-810f-4852-b22e-f42bae68cf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8935b2ee-6219-42c2-957b-b34de4ad4b98",
        "cursor": {
          "ref": "a44ae302-570b-4dc5-835f-d01849772781",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "76761385-7955-46d1-b22c-85e39e0a8fe0"
        },
        "item": {
          "id": "8935b2ee-6219-42c2-957b-b34de4ad4b98",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aef01ecc-9614-4698-89e7-0cb5622569e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fafc82-e21e-4c24-8da1-db7e101235e6",
        "cursor": {
          "ref": "75142293-dc33-43d9-be82-8ead8ba9df13",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aae658d3-18df-4aca-a328-22138c9dcce5"
        },
        "item": {
          "id": "f5fafc82-e21e-4c24-8da1-db7e101235e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "105df9a6-c218-4c6e-a9ee-ba9f5eed431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426e2a9-d82b-4973-89c1-5a1b14898d3a",
        "cursor": {
          "ref": "0810c646-a09d-42ae-ac86-6dff41a4c535",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "677d6c37-5da7-4781-bba3-b79ae02b28c1"
        },
        "item": {
          "id": "6426e2a9-d82b-4973-89c1-5a1b14898d3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ef8a41f6-df03-4e05-bef8-96c83d7d66a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b645cc7-1e60-4fb1-9f29-231e0319c1d9",
        "cursor": {
          "ref": "a2d31a3e-62b4-4e50-a749-3cb51ca71f38",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f396d8ac-b67e-4a28-a656-721df14ec75c"
        },
        "item": {
          "id": "1b645cc7-1e60-4fb1-9f29-231e0319c1d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "19723dc9-cbda-4c31-a586-36465842e622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87603d9-b01b-4bfa-b068-071a500ebc1c",
        "cursor": {
          "ref": "b6ad8593-3238-4fa0-8366-e79c9ade11a0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ecf6b54e-f148-4802-bae5-3dc082d256b9"
        },
        "item": {
          "id": "d87603d9-b01b-4bfa-b068-071a500ebc1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e78509a0-c991-414d-8ce6-a8cdc81027ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ec04e-7d7c-46e8-9dc8-c84e10664587",
        "cursor": {
          "ref": "6bdf4260-7220-49f7-8621-88d1ec4d0fd2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ef7c0ed6-c7d7-4515-9ce2-a25d7d1ec427"
        },
        "item": {
          "id": "964ec04e-7d7c-46e8-9dc8-c84e10664587",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16c6b958-aaac-43ae-b01d-2de2b0c5ebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e56d9d-f593-4006-b207-a8e855563833",
        "cursor": {
          "ref": "177d0512-0c87-4961-8de0-54f5d0318e8e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f0bdd321-40a8-41a5-968a-8776c6e6b33e"
        },
        "item": {
          "id": "a3e56d9d-f593-4006-b207-a8e855563833",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "965869da-971e-47cc-aa35-c33cf163881e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0d5857-4cb2-443b-a15c-ec26f36281e8",
        "cursor": {
          "ref": "31360949-28c7-4a81-a9bd-1322f88c16d0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a99c978b-34e7-4c52-8ebb-f5f75b647013"
        },
        "item": {
          "id": "1c0d5857-4cb2-443b-a15c-ec26f36281e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "09abbc5d-31c9-449a-a52e-14ea6e9fe2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d12e13-cae1-4869-ab99-5a2d1792440c",
        "cursor": {
          "ref": "e74b6f70-26e4-4dd2-a85d-b4dfc71f6c98",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6eab4b37-11b9-4609-a669-7dc7c5dbd0ed"
        },
        "item": {
          "id": "b1d12e13-cae1-4869-ab99-5a2d1792440c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2f765913-189c-444f-95ae-b25537ca0456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c341bc6-511b-4333-8629-b05d7b9041b8",
        "cursor": {
          "ref": "ae4dcdab-f655-4460-8687-01a2d4a98548",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6773e566-f9b5-4453-8c34-0c6a0fc26625"
        },
        "item": {
          "id": "0c341bc6-511b-4333-8629-b05d7b9041b8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "47d1fdf8-99f9-488c-889c-21fac76d28f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ed7a7b-ca96-4df4-bc1b-42689c894689",
        "cursor": {
          "ref": "b2757d61-db21-4ade-b41a-d5476ad4abb0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3642ac3a-155d-4aff-8ce1-4168d3f8cf85"
        },
        "item": {
          "id": "a0ed7a7b-ca96-4df4-bc1b-42689c894689",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1e9642c4-e153-4be8-90c6-1935936c0a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8238fd-3ffb-404e-9fc0-4554508c0570",
        "cursor": {
          "ref": "c6a6fef2-bd76-4db4-8246-923c9deb7d37",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "de69aca3-333a-420c-8a5a-62a1a45d6c85"
        },
        "item": {
          "id": "fd8238fd-3ffb-404e-9fc0-4554508c0570",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0d1ead6e-b47b-4e65-be02-12dac7e15a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6873e98-34e5-4b9d-8039-499cd030e1ee",
        "cursor": {
          "ref": "87e0e69f-96ca-4dc5-9a96-d8f4ab530a02",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "74e527a2-d9ce-4408-ba47-8dc77d437146"
        },
        "item": {
          "id": "a6873e98-34e5-4b9d-8039-499cd030e1ee",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "082f17b7-617a-46fb-a3c9-e03dca9c48bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2005863d-866d-41ca-bb20-a42369d3d6f2",
        "cursor": {
          "ref": "2c6c9b1e-a29c-428b-aaeb-819de1295dec",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "54678278-1547-4185-afd8-26554ae78db8"
        },
        "item": {
          "id": "2005863d-866d-41ca-bb20-a42369d3d6f2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f0f74282-cf2c-4ddb-bf19-613f3f6bd415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67ebe5-697e-4b5c-8a32-e9da5a355398",
        "cursor": {
          "ref": "d9ac61b3-1a02-47e1-a2cf-4b781bc3a426",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3c15dd5b-81d7-4bbe-90e0-5831d587d546"
        },
        "item": {
          "id": "6c67ebe5-697e-4b5c-8a32-e9da5a355398",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52e57b7a-3fb0-47fb-a26f-ccd07f16539c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56db955-2d0a-4eba-b3db-dbaec7d0db54",
        "cursor": {
          "ref": "84ba4075-38b5-4d3e-9629-f403b404c630",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c909be86-5475-4767-b6b7-0ef388219497"
        },
        "item": {
          "id": "f56db955-2d0a-4eba-b3db-dbaec7d0db54",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c38b0022-eeec-4e14-bf94-6b367321c5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc91e2d-59d4-43bd-a6ed-0694a6e1ee39",
        "cursor": {
          "ref": "2d80dab0-ce7d-464a-b3d4-891bc3e654ff",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "53b816e3-1087-4984-a1e8-5019a02c794b"
        },
        "item": {
          "id": "bbc91e2d-59d4-43bd-a6ed-0694a6e1ee39",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "239cc27a-37d9-4653-a9b5-45483eaa855d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a453d2-a6e0-4073-aa31-83583894cf0c",
        "cursor": {
          "ref": "f3a9d662-8a17-493e-ac16-27098b54134d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "54e7a8f9-8b02-4c43-8c91-636e36473d27"
        },
        "item": {
          "id": "32a453d2-a6e0-4073-aa31-83583894cf0c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0c34eb69-ce58-4a5f-8759-a340636529d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af46c1b-b9e4-4447-87b3-da6d34eea0ab",
        "cursor": {
          "ref": "f5f8e8f9-890a-4e14-be30-72d8f054bb32",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ed6cf0c8-7ceb-41f5-a40e-6d4a4c397345"
        },
        "item": {
          "id": "7af46c1b-b9e4-4447-87b3-da6d34eea0ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0435b318-a7ea-441a-84e5-cbfb64cd4077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d467cab-a803-4925-9269-24ecddabcd9a",
        "cursor": {
          "ref": "e504e463-1220-421f-ba94-a4a9c5091d61",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c6bcae3f-a87a-44d7-ac5d-04c6101af9bf"
        },
        "item": {
          "id": "7d467cab-a803-4925-9269-24ecddabcd9a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1919d4c-ea14-48e6-9ea4-9f81c0e8a2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc2fd5c-0456-4852-b530-d0808c60b7f9",
        "cursor": {
          "ref": "9c679074-5b47-4edc-a19b-32eb466346b1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "60fc7938-f3a0-4658-9f2f-985337a04376"
        },
        "item": {
          "id": "edc2fd5c-0456-4852-b530-d0808c60b7f9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "31e9ed9b-9483-46bb-aebc-77c16708f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9eff36-e203-40cb-a0c6-6d95e275089a",
        "cursor": {
          "ref": "7533aa93-53c5-4dc3-a689-35270b81c525",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40056989-8a77-4c72-9c06-6cbb6fd38bd9"
        },
        "item": {
          "id": "9d9eff36-e203-40cb-a0c6-6d95e275089a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d6362d45-598d-4aa5-8961-b54866370b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f03a758-e609-4c4f-bbe1-347f6b9eacf3",
        "cursor": {
          "ref": "0cf40891-ed83-4f75-bfcb-e6228c55fe14",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90f45d4f-67fc-4a1c-8404-8a92eed6c076"
        },
        "item": {
          "id": "4f03a758-e609-4c4f-bbe1-347f6b9eacf3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6daba676-9f32-4100-b8e7-fea7ec26732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9eaa15-1769-411b-b132-40551b0961d7",
        "cursor": {
          "ref": "7897021b-fe1d-4b63-8b2e-fe24068af26a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9f07010d-fd60-4931-8d60-d8d4e52726bc"
        },
        "item": {
          "id": "9e9eaa15-1769-411b-b132-40551b0961d7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f32a0e4e-af6b-4f37-93fd-4f057ea1419b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c65143-7438-490c-b0ff-6fd402c09d8c",
        "cursor": {
          "ref": "dcc28e59-0394-480c-b889-593709646e61",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2eb57780-5c78-4690-8967-bb737d627234"
        },
        "item": {
          "id": "84c65143-7438-490c-b0ff-6fd402c09d8c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ee8fdc0f-def4-49e1-b4cf-774c01a4f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a53f1-ed04-4b06-8b40-bf2293eac3b8",
        "cursor": {
          "ref": "a4f9e183-250a-44e3-bf4d-9084c72a108c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f9bbdffb-f3a2-4d7a-96de-35fbca23f070"
        },
        "item": {
          "id": "3d2a53f1-ed04-4b06-8b40-bf2293eac3b8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2b0b9fe6-7223-450f-b551-dbff4aa2bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3312da4-b298-4508-931c-5a3e7629c66c",
        "cursor": {
          "ref": "44d21407-ad89-4423-93fe-a7f8c37f9800",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9f031300-1a5a-4044-90d0-c4c3d23b6f94"
        },
        "item": {
          "id": "e3312da4-b298-4508-931c-5a3e7629c66c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f148ef0-60d3-4851-9c7d-7d379c0978b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06166034-d2ef-4660-b44f-e2c32a978790",
        "cursor": {
          "ref": "770b5567-846d-44b3-b214-297e6fc707c2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "38d17cae-07a5-4519-b54d-ae2f4c7a42d9"
        },
        "item": {
          "id": "06166034-d2ef-4660-b44f-e2c32a978790",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0934feec-ded5-4613-a017-c6ef5d4b5993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f97e919-62a4-4d86-b9bc-b1977304a691",
        "cursor": {
          "ref": "40a31c04-1326-4aad-a617-0237a3c27833",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "39566b11-733c-43f1-aaaa-464ad599327a"
        },
        "item": {
          "id": "8f97e919-62a4-4d86-b9bc-b1977304a691",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ef7312d3-b61c-48e7-909d-d97b58afb296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90d651e-e868-4f49-9a3b-08d0334cc3d1",
        "cursor": {
          "ref": "e6f5fb5f-49a7-45ef-b03f-8610a7b44f04",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c3f3b2c5-3d07-4ddb-baf3-52c686e3eeec"
        },
        "item": {
          "id": "d90d651e-e868-4f49-9a3b-08d0334cc3d1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "298efd6e-3917-4a09-a61d-f7f82241ef37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9f81fd-dfb3-4b48-a390-df9deea489d4",
        "cursor": {
          "ref": "c8a77788-39b0-4599-b76c-d3d68a209ccb",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "14ae0c50-f3aa-479d-8851-ce1b790d8c88"
        },
        "item": {
          "id": "bb9f81fd-dfb3-4b48-a390-df9deea489d4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28d11286-073c-4671-a78d-1cf3cb774a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7540f8-49d9-407f-b280-95a782d9be64",
        "cursor": {
          "ref": "fc08be06-4297-4ae1-bc15-b96c7f00dc08",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6ecf8713-5898-4e20-9643-e66f93bcc979"
        },
        "item": {
          "id": "0d7540f8-49d9-407f-b280-95a782d9be64",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "14413421-391a-4fbb-8ec3-9000e400484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20d3e4-4896-418c-9d05-7a58b702612c",
        "cursor": {
          "ref": "c63bb90e-9e40-4026-a596-c3a66f521192",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bf92ffa1-8e0f-46ea-9295-09ab6decf8fe"
        },
        "item": {
          "id": "4d20d3e4-4896-418c-9d05-7a58b702612c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "51d16937-1c38-43f1-aed3-17a439299641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add10e8e-492e-404c-8c60-d131c82718b4",
        "cursor": {
          "ref": "2253af4d-6554-4395-acb1-52d867028c2a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9e450784-f7e4-4451-8cb2-477e7bd91741"
        },
        "item": {
          "id": "add10e8e-492e-404c-8c60-d131c82718b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e1e1e574-e2d8-4dbc-a3d9-0d7fd1e55919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3486a1f2-a70b-464c-9d3e-abd5c8381d4e",
        "cursor": {
          "ref": "96111519-e790-463d-86ce-1380641763c7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c4e83cc-fda2-4ec2-8e6f-66c839616a68"
        },
        "item": {
          "id": "3486a1f2-a70b-464c-9d3e-abd5c8381d4e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e6147117-0505-475c-a6e6-5d6d13caa240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a6bba2-f95a-4da7-bccf-194b69a48fca",
        "cursor": {
          "ref": "512c4ab9-ab30-4375-b589-f9bbcabbda66",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5b406841-2ba2-443b-8530-104088c68685"
        },
        "item": {
          "id": "f3a6bba2-f95a-4da7-bccf-194b69a48fca",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4f50bee-cb76-4b8c-b8ce-ecee00c3806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06de595a-0b85-419b-b5c6-4fbe648809de",
        "cursor": {
          "ref": "3561bced-12da-4dd0-b504-57157b9845d3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "344fc51c-fcc4-4bdb-be6d-40dbf5030097"
        },
        "item": {
          "id": "06de595a-0b85-419b-b5c6-4fbe648809de",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "06461191-bdc0-4222-834c-c3883d66a9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529f43d-bd50-4702-8432-89e2e7bdf1d4",
        "cursor": {
          "ref": "13a35b87-2a8b-4605-a60d-0246ce8df7ee",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "719e836a-e04e-4d3f-8385-9f439b145cf4"
        },
        "item": {
          "id": "2529f43d-bd50-4702-8432-89e2e7bdf1d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09d1a5e6-927d-407a-94fd-a2121f468d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946e32d-d784-4f47-9675-5a6cb7aff49c",
        "cursor": {
          "ref": "ad03c4a6-572d-44aa-b93b-04d992a39aee",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b10fbceb-85fc-4cc9-be87-6e151e632452"
        },
        "item": {
          "id": "9946e32d-d784-4f47-9675-5a6cb7aff49c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f033689b-d6f1-4f35-a8d7-fbc187e4d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216b69a7-7d9a-4fae-9688-155a4ea5c764",
        "cursor": {
          "ref": "5d02760c-7d70-422c-b00c-9fe02abce10d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f106e4e-6fe4-4d69-b6c4-86b8bd1ab5c5"
        },
        "item": {
          "id": "216b69a7-7d9a-4fae-9688-155a4ea5c764",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fe06a6b7-cb9e-4f8a-9f41-05d5ac971bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dc2310-7d02-48d1-b7a4-8612214580ab",
        "cursor": {
          "ref": "8bebc3c7-b618-422f-acc2-72a9d3f0eb18",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "075dd956-92aa-46ed-acd5-775f7f8f785f"
        },
        "item": {
          "id": "31dc2310-7d02-48d1-b7a4-8612214580ab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0efa498e-b1b2-4f7b-87d7-ce148d1a3afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0274e256-7df4-4b41-bf35-d7631f01d40a",
        "cursor": {
          "ref": "7111d4d7-7d6d-4f6c-8151-7ed19f3ba061",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4410b599-2f58-4421-8cf4-a98a52872d08"
        },
        "item": {
          "id": "0274e256-7df4-4b41-bf35-d7631f01d40a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6a188e69-5683-4d5b-a7fe-11e36e498b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a879465-d729-4085-829d-372585ae9f8c",
        "cursor": {
          "ref": "9bc4db28-0aa5-438f-9b70-4ab1376bb53e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d3ad85e5-4261-4e77-ab3b-9000eb9cb9d8"
        },
        "item": {
          "id": "0a879465-d729-4085-829d-372585ae9f8c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "033deab2-0839-47e1-aff4-cff4ce39cc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b18a507-bdf8-4e7d-925f-8d3c1799c326",
        "cursor": {
          "ref": "2f663a9b-3a88-4494-83d2-7cad395d6e00",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa6d2904-7a64-42f0-8500-b165443cbef0"
        },
        "item": {
          "id": "6b18a507-bdf8-4e7d-925f-8d3c1799c326",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "85d092ef-bdac-4963-8e5c-98fb3c2dbe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59bf19e-4f26-4fd2-836f-7566f025bd35",
        "cursor": {
          "ref": "254f7852-0dcf-4c1a-8b48-e9222aeda07b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dab56e08-a03f-48d5-b2b3-a6a8b51ebd61"
        },
        "item": {
          "id": "e59bf19e-4f26-4fd2-836f-7566f025bd35",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d95b3d6b-1007-4871-ad99-98b2e87cd266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56558c1c-99f2-42ee-a260-6f7e16fde574",
        "cursor": {
          "ref": "2cadeb0d-d8b2-4c0d-a443-3664912c741a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "22568581-4926-4123-a8a9-b596ea598ac5"
        },
        "item": {
          "id": "56558c1c-99f2-42ee-a260-6f7e16fde574",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6401de29-ce5b-456f-b6be-94e79be1bb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f27845-f925-463c-b1a4-c8987ad6cc0f",
        "cursor": {
          "ref": "6a8a08a2-a638-439a-b412-8a6fb8413072",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e8497d34-67c2-41db-b655-8acccb4c342e"
        },
        "item": {
          "id": "91f27845-f925-463c-b1a4-c8987ad6cc0f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e03d3f71-87af-4d03-8879-153f666746b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4de867-c744-4a5c-915e-7baa279fed33",
        "cursor": {
          "ref": "2047740d-bb9d-4c36-866e-d6391f55d6c4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "56e3e07a-b51a-4219-b51b-319feabb327f"
        },
        "item": {
          "id": "0d4de867-c744-4a5c-915e-7baa279fed33",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dd19daa7-76a4-470a-baf4-a69989ded851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365da9f6-4e8d-4513-9dd6-fed2840e0dcb",
        "cursor": {
          "ref": "4332d5b8-5072-424d-a9d4-0a015a78df89",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0cebc4b7-2a73-4575-83e9-787a6044cc9c"
        },
        "item": {
          "id": "365da9f6-4e8d-4513-9dd6-fed2840e0dcb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "06c82a8f-b100-41ae-8acb-fb334b817d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf75d07-aaab-4e19-b27d-f36a84b3d3f7",
        "cursor": {
          "ref": "7b50bba3-2b0a-4e78-b417-f8fd1df454b2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "97312a71-a8f7-4a48-bc63-c6949d0736ea"
        },
        "item": {
          "id": "2cf75d07-aaab-4e19-b27d-f36a84b3d3f7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "45e4cddb-4128-4a27-a438-2aa501bdb688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9f279-c1a6-491c-a0c6-32818362dfab",
        "cursor": {
          "ref": "8268c212-1b4b-4ec3-a1f6-44d4659cb3dc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "155c5658-418a-4536-aec2-e88dd1131147"
        },
        "item": {
          "id": "d6e9f279-c1a6-491c-a0c6-32818362dfab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4abc237e-4cbd-4a79-91d5-32ff1c5e17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff5dad3-6c9e-467b-b23b-420febe82fcb",
        "cursor": {
          "ref": "77fb9e3d-44a0-41be-8d57-6c1deaf4afc1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9d6b0d23-2571-43b3-bd48-bc0feb51fec4"
        },
        "item": {
          "id": "6ff5dad3-6c9e-467b-b23b-420febe82fcb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "074e3eef-6b5c-4463-bba1-b83a2046e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be80f4aa-ddd6-4aa2-aab5-32906f3cf013",
        "cursor": {
          "ref": "3b5195f9-d890-4848-8fd2-d3a412fddfc6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d251e29f-f345-4e4c-b34e-82e31408f8e6"
        },
        "item": {
          "id": "be80f4aa-ddd6-4aa2-aab5-32906f3cf013",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09fb2b5c-d940-4f31-81b6-b89cbb568d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9b4b83-cab7-4ade-a2fd-0801fc91502e",
        "cursor": {
          "ref": "40cd8413-7ddf-4ee1-bf6a-a946c7c22c59",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "762f9887-8507-44e0-bb65-ba2da25bf916"
        },
        "item": {
          "id": "9c9b4b83-cab7-4ade-a2fd-0801fc91502e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "00771bcd-753d-4d48-8d5f-32fe2ea630ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4c4b22-210a-4a02-ac6e-e42d41b9052e",
        "cursor": {
          "ref": "af4dbc5e-196a-4e9b-8bfb-c2002c1c6cab",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "41ff08bc-68cf-4a1b-825c-e5d16fcc61a7"
        },
        "item": {
          "id": "8d4c4b22-210a-4a02-ac6e-e42d41b9052e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b798ba55-92e8-4dc4-80fb-6a12b57e2387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e1226f-81c9-4b15-99eb-2096641a5f0e",
        "cursor": {
          "ref": "7629cd9d-eeba-4647-81f9-78b744887474",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "39f5c903-18f5-4d25-841c-cf35d9fd7488"
        },
        "item": {
          "id": "19e1226f-81c9-4b15-99eb-2096641a5f0e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e89c9555-beac-49fe-9d47-182ebcd44720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bc373d-7209-4d05-910e-3218b870de47",
        "cursor": {
          "ref": "bc758392-c8c2-4256-b2f8-f0a1f22461ff",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8fda23cd-6f9a-471f-8504-5e035286cc73"
        },
        "item": {
          "id": "03bc373d-7209-4d05-910e-3218b870de47",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4ccaccd7-06a1-4b3d-910f-393d0af98d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a0db8d-c680-4bb6-a314-398107b905a6",
        "cursor": {
          "ref": "abe42820-eeb7-4030-9b4d-2cb1170af73e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8bce9594-9638-48d6-80d7-8e3643bb7f73"
        },
        "item": {
          "id": "f3a0db8d-c680-4bb6-a314-398107b905a6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "22afac04-862e-45c1-a72a-9ca20380270e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d071e-7ab7-436d-84ee-7f028eb1d7ba",
        "cursor": {
          "ref": "636ce5d7-e514-4997-a536-cc4a8800dae6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c63e1d32-2fac-461c-adbd-a636048a32f5"
        },
        "item": {
          "id": "3e0d071e-7ab7-436d-84ee-7f028eb1d7ba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ec3b30a6-afc2-4efa-be75-4e2b6ea7059b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819fdb77-108b-44b2-8e56-c35b058e84da",
        "cursor": {
          "ref": "26f650cc-f529-4aa8-8e77-d0f6fd38da77",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "173eba69-4934-4a07-ad7a-d70a14dceee5"
        },
        "item": {
          "id": "819fdb77-108b-44b2-8e56-c35b058e84da",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7eb71cf6-1f72-4b42-aa62-1d4aaaa606bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da822426-70f5-454b-af7b-200ccd0bf073",
        "cursor": {
          "ref": "69387b73-851b-4f0d-ba5d-175eb7706a71",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6ec7e398-269a-4ca4-93aa-26ae4bffc749"
        },
        "item": {
          "id": "da822426-70f5-454b-af7b-200ccd0bf073",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c5d5d7fc-0ed7-41c3-8a35-862946a49fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093b781-745f-4702-9212-947a010f5d71",
        "cursor": {
          "ref": "c5c26125-c40d-48e3-a3e0-9ef984e577ab",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "54a268d7-4239-4354-8e5f-ac83100dc96a"
        },
        "item": {
          "id": "1093b781-745f-4702-9212-947a010f5d71",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7fd53469-cefd-49d5-a936-8c954c7e4809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc60a0b-6dd3-46ee-954d-7693f73066cb",
        "cursor": {
          "ref": "353af1ba-20bd-4b35-a1f2-388140c773ce",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a1284cbb-e728-4912-bee6-c6187ee154f5"
        },
        "item": {
          "id": "1fc60a0b-6dd3-46ee-954d-7693f73066cb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "317986f9-5760-4f62-9f67-7270c29a7f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93e2342-16ec-42ff-9cfc-58c85d5231e0",
        "cursor": {
          "ref": "6e87a2d7-4774-4c4c-b917-51739c7c9847",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8cc728ee-faf6-4469-a3ac-aa5b674887b9"
        },
        "item": {
          "id": "d93e2342-16ec-42ff-9cfc-58c85d5231e0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "72a4617a-4ec5-4570-bd79-685419205bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d5c189-d4c5-4af5-b00b-44900686585e",
        "cursor": {
          "ref": "f881fdb8-bdc1-449c-84b2-0218daa3d9a4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "74805fb9-a8be-4ca8-814c-a054e50d0228"
        },
        "item": {
          "id": "36d5c189-d4c5-4af5-b00b-44900686585e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f77fd706-cd34-421e-a180-7a6e48d6d48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc5cf79-f7cc-4c71-8de4-de268ff1dc77",
        "cursor": {
          "ref": "4ce2c3c7-0c3f-464c-bade-6f7d423ab855",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c633b469-5715-47fa-b57e-7d2dcf845cba"
        },
        "item": {
          "id": "7cc5cf79-f7cc-4c71-8de4-de268ff1dc77",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "965683df-83e8-444f-a764-91e9aecf0db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b4fbe-57c2-4dc2-93dd-f813b6cf47cd",
        "cursor": {
          "ref": "7878c42b-e7c8-4b4d-a68c-b58d87498f81",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5ba089b5-4600-4037-b01d-bc7d787fc0ed"
        },
        "item": {
          "id": "676b4fbe-57c2-4dc2-93dd-f813b6cf47cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "51fb5ef1-bb8b-4c95-bcc4-aa84b67b15e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e918456e-b589-47c8-aa9c-8a8ff2c97b02",
        "cursor": {
          "ref": "b394184f-5b64-4c47-8997-8bdbc2d2ac8c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b4125fd8-f68b-4830-a894-0e00f6de23c8"
        },
        "item": {
          "id": "e918456e-b589-47c8-aa9c-8a8ff2c97b02",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "32255e70-2d11-4aca-99de-c7ec803803e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0664d9c0-c6e3-41c8-851a-6920087c129e",
        "cursor": {
          "ref": "1f21e004-64c3-4c1d-b922-2f8eb0c8c284",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dc2b4f31-b915-4755-a96a-eafb8c945b95"
        },
        "item": {
          "id": "0664d9c0-c6e3-41c8-851a-6920087c129e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "70af9e0f-ccda-42d7-93bc-b58cad2bf0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5f7ad8-8896-4a3c-aea1-92613f2e401f",
        "cursor": {
          "ref": "ba4d161d-bf32-41cb-ac78-3689ff298f28",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c74a3df-f127-4d9e-bc1d-a9321e95b1ce"
        },
        "item": {
          "id": "ce5f7ad8-8896-4a3c-aea1-92613f2e401f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b153d96-753d-472c-b9e1-e1ff94ea9140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967086e0-1e4a-4723-b97b-bfa9382e6481",
        "cursor": {
          "ref": "088583ed-dfef-417b-8ee6-c24a3788ddb7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e49c4ca-d36a-4364-8811-cdb29a3103c7"
        },
        "item": {
          "id": "967086e0-1e4a-4723-b97b-bfa9382e6481",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c537837b-1884-482a-a8bc-36a7f9b3e147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850942cc-ad6c-45b9-a5e1-d1c94ebcc9c6",
        "cursor": {
          "ref": "811ecacb-f58a-4076-8e30-4bfaecc1cc30",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e5abdb37-6af1-44ba-9c9a-f43b990bc428"
        },
        "item": {
          "id": "850942cc-ad6c-45b9-a5e1-d1c94ebcc9c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f74a111c-3ba2-423c-b899-4ae6067b39fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47311a5a-bb1b-4e4c-8b33-55f250cf7d8a",
        "cursor": {
          "ref": "0d4e25df-adbf-42c0-9d36-57d957cd7ec6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c4ecbf81-3ef2-48d8-b280-31b4df0392f8"
        },
        "item": {
          "id": "47311a5a-bb1b-4e4c-8b33-55f250cf7d8a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f283657e-7b0a-49a4-add0-bfa8434f05ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276ebeb5-161e-4b3e-ac31-f228361c3d56",
        "cursor": {
          "ref": "53925282-f66c-48c4-9627-a0843af27f10",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "119115b8-066f-417f-90ef-36a229094ef8"
        },
        "item": {
          "id": "276ebeb5-161e-4b3e-ac31-f228361c3d56",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a7bf4224-9cb9-4c5e-9864-c92d6d08dac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae2800-0624-4c89-9fdd-7789a6968143",
        "cursor": {
          "ref": "ad03df17-261e-4a06-a82a-94a2daf41ae0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "82897b24-070d-4126-8379-2c1c6500a29a"
        },
        "item": {
          "id": "48ae2800-0624-4c89-9fdd-7789a6968143",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dc3c0687-7fd4-4f2a-b7e4-1f3f17c7832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4d461a-68f7-4c3c-a0fa-75235c0daaec",
        "cursor": {
          "ref": "0e0ebfd4-609c-4eb8-bea4-126732f076f3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f98d5d56-311b-484e-aaf8-744ed8bcaf48"
        },
        "item": {
          "id": "2a4d461a-68f7-4c3c-a0fa-75235c0daaec",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7b199dc1-8ac5-469a-a8b3-6f2f0e7f36df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9afa8-a302-4727-ad9a-fd90ae6a8bbf",
        "cursor": {
          "ref": "8e9265f6-0288-4fa9-82b8-5d2b02801e5f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "34853ecc-ffb6-4e3e-a7c4-8c0cedf00f18"
        },
        "item": {
          "id": "f9a9afa8-a302-4727-ad9a-fd90ae6a8bbf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dae11ab6-db00-4805-9f97-acd4214fc3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6779c43f-d2a9-4a35-8490-f9d3e043d6f4",
        "cursor": {
          "ref": "3a0949dc-2201-451a-b051-ca5e6ecdae74",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c03963d6-4b4a-4be2-bef0-eba1424ba1c2"
        },
        "item": {
          "id": "6779c43f-d2a9-4a35-8490-f9d3e043d6f4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7155c4cc-f01b-422b-a3a3-5acd06dddb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80223fb8-ca2d-4a4d-b9c1-c9b599109bba",
        "cursor": {
          "ref": "5955b7d3-a615-4b5c-8757-80f4927a4c34",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "913d42e4-a0a3-4b55-91db-8a40d7fb6cc2"
        },
        "item": {
          "id": "80223fb8-ca2d-4a4d-b9c1-c9b599109bba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d40cd652-2899-4db8-8652-d2c8a1b149cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c536ab-e04d-4b82-be23-1d7f7102b2dd",
        "cursor": {
          "ref": "90101bea-04cf-44a9-bca0-ad9d48bc2e05",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ad4447f-e1ff-4e73-84de-cee50fee2a6e"
        },
        "item": {
          "id": "60c536ab-e04d-4b82-be23-1d7f7102b2dd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4130db4e-8cb9-46bd-9de3-674f46bb97a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450886a-fff8-41b8-bd8f-5bbd6cb6c3d8",
        "cursor": {
          "ref": "6974f68c-90ae-48cf-a14e-210fc22b1dd6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7e328c34-1012-44e6-8cbd-8dfca5a05f05"
        },
        "item": {
          "id": "6450886a-fff8-41b8-bd8f-5bbd6cb6c3d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f1543019-4fae-4385-bd72-2496b58ba694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7447dba3-a428-43b6-962d-91802fedd69f",
        "cursor": {
          "ref": "4b73c056-2b2d-438f-b988-b1fdd0d7da00",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "900e3b43-fe57-470e-9749-f21ad51be8b0"
        },
        "item": {
          "id": "7447dba3-a428-43b6-962d-91802fedd69f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "73877e8e-803d-4bea-b774-641148aaa28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc47f9e8-a72f-4fde-978d-97b7c1aa0d5c",
        "cursor": {
          "ref": "ad41cf3e-fe73-4893-8429-dd514e2fd1ee",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "404ee74f-9c7f-4062-9207-57589645bb66"
        },
        "item": {
          "id": "dc47f9e8-a72f-4fde-978d-97b7c1aa0d5c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b89d91ab-79d6-471d-b403-4dc7d1cd3230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14e1856-ae8c-45fb-8fda-cb769ef68aaf",
        "cursor": {
          "ref": "c7b3a02b-c012-4388-9165-ad980ce7e67a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "929cac82-1dcf-493c-9cdd-fcaf10bf27cb"
        },
        "item": {
          "id": "c14e1856-ae8c-45fb-8fda-cb769ef68aaf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f7eb492-d2de-4687-bea5-f0d88358dfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac3d5e1-c65b-4b3e-b87b-d3cdf9cba55c",
        "cursor": {
          "ref": "ede5d91c-c37b-4923-a361-ea87f51a7595",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7a1bd153-1109-47c1-adc0-af9d588f9d1e"
        },
        "item": {
          "id": "4ac3d5e1-c65b-4b3e-b87b-d3cdf9cba55c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "047e005c-f30e-4d6c-9678-59d5635b89e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf1c725-f511-4309-802f-9b00b5cf80f2",
        "cursor": {
          "ref": "173a66df-8aed-4c65-94dd-6dfca9d3a52f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1678bd1d-160f-4df4-bb95-40028c7cd25a"
        },
        "item": {
          "id": "bdf1c725-f511-4309-802f-9b00b5cf80f2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9c778081-9bd9-4477-a5ef-ffeddc070cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4327fb4f-15b0-4f72-871b-d2cdc7b7cad8",
        "cursor": {
          "ref": "671ee60c-d972-4076-b906-0bb8314d6d01",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "64e20f59-de23-4f25-bbd9-0f557c57efd8"
        },
        "item": {
          "id": "4327fb4f-15b0-4f72-871b-d2cdc7b7cad8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6c204665-a661-4b8e-9af8-5c952ae87995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491e7a8-2efc-4f81-81fc-1f571c138c14",
        "cursor": {
          "ref": "13d3ce86-16de-4bfc-be03-f80b66da4b59",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "caf8b4e9-cf46-4ec8-86b8-f9546b41d9d2"
        },
        "item": {
          "id": "2491e7a8-2efc-4f81-81fc-1f571c138c14",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00233e5b-2a67-4f55-80e9-a8e006976501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a0b889-3689-46ce-9c76-fe5498c51de3",
        "cursor": {
          "ref": "bfec3d66-5355-49d2-935a-8116cc63caae",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "544dad99-2a1e-4505-bb88-d9bf65ad5de1"
        },
        "item": {
          "id": "80a0b889-3689-46ce-9c76-fe5498c51de3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6bd0d1b9-b215-4745-8d5f-f4a4e389746b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f7ac86-03e4-43c0-9a7b-37666f50292c",
        "cursor": {
          "ref": "f8baf864-09d8-4f95-9e58-62d4327215fa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "736a8a90-4e95-4f7a-a11b-6a7c1c906761"
        },
        "item": {
          "id": "92f7ac86-03e4-43c0-9a7b-37666f50292c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "65524f15-8d4f-4659-b87b-df5ff1255091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e166f-eeda-4660-994b-eb1463fbe169",
        "cursor": {
          "ref": "24defc2b-03dd-454b-b641-8a0f4267cead",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b829da32-23e7-449d-820b-5a736c87d1c1"
        },
        "item": {
          "id": "ab1e166f-eeda-4660-994b-eb1463fbe169",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "42f5109f-d71c-4fd7-8d57-213f1a6df44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a9cd7e-bb72-40ef-b8ce-60bc85d4cd43",
        "cursor": {
          "ref": "81047f44-f680-457d-9bb5-2b297b7ec443",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9fe6f0ef-d12a-4af3-a667-523bf0cc326b"
        },
        "item": {
          "id": "c9a9cd7e-bb72-40ef-b8ce-60bc85d4cd43",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8d3019f-40b3-4a8b-88f9-8270c418fc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd430885-2af9-4d67-a5b5-738bb6dfef1e",
        "cursor": {
          "ref": "3dd9b26c-a7c1-4c9b-95d3-fa7592b650b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "89d75238-cce7-434b-b942-38cbf1f49a92"
        },
        "item": {
          "id": "dd430885-2af9-4d67-a5b5-738bb6dfef1e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "105499de-1936-430c-875e-1a745f243e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243fe8b9-9e50-49a8-98ca-8d2c2e94ec41",
        "cursor": {
          "ref": "e3ec673e-6d43-4ff0-ae39-66f05454d346",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5394013b-81b8-440b-9d78-84acb412379e"
        },
        "item": {
          "id": "243fe8b9-9e50-49a8-98ca-8d2c2e94ec41",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ab5422c-7081-4d0a-b919-3240df6d09fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2fc20e-6454-44e4-8177-8710150e2b7a",
        "cursor": {
          "ref": "c92517cf-9f06-46f6-9291-0297dc769ae7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1dfccef2-ebc9-4b57-a066-cc5abf12bd57"
        },
        "item": {
          "id": "df2fc20e-6454-44e4-8177-8710150e2b7a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "46fc3c18-a622-4d1a-ac50-5ee2d296cacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fc539d-dc35-4850-9ac6-eb5fb23efb3c",
        "cursor": {
          "ref": "e82e70f3-0aca-41e6-8cbf-3b3c02a1ea9b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "92974b9f-738c-4dc4-9d4f-c0ca62b1b86f"
        },
        "item": {
          "id": "c4fc539d-dc35-4850-9ac6-eb5fb23efb3c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ff9f9fca-345b-49cd-9dc5-ffebddf1eead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b6d9f1-6298-4063-9676-d0f16264c94c",
        "cursor": {
          "ref": "ab1f412c-d73b-4608-8563-8119ddc04015",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3fc2e2e6-05d0-4968-8d4f-373f87c36bc0"
        },
        "item": {
          "id": "f5b6d9f1-6298-4063-9676-d0f16264c94c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3098b54f-162a-4e0e-9f73-0f0d38cfcaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531578ba-d5ca-478a-9e20-579b20bb2009",
        "cursor": {
          "ref": "35a3f4fd-4c5b-492c-927b-34739be12410",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "24a3b01d-bf93-408f-bf12-e10e4ac521a3"
        },
        "item": {
          "id": "531578ba-d5ca-478a-9e20-579b20bb2009",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3371daca-8be1-4631-988c-52d506e7a165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ccbbfb-9398-4fe3-85fb-d08a2c6e4304",
        "cursor": {
          "ref": "c9aa8bfa-1d9b-4c96-a73f-81cd524c208d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7780c651-4b24-4744-90b4-fa1f4b61fb76"
        },
        "item": {
          "id": "d8ccbbfb-9398-4fe3-85fb-d08a2c6e4304",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e969176f-c03f-4d3b-8f23-cde089266836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d538651-50fb-4ef9-8d24-51798fc3a1bf",
        "cursor": {
          "ref": "0e22be2f-45d6-4d1b-8347-cd5739a6e748",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "72d77a3d-dd98-4403-846e-eef09eef5013"
        },
        "item": {
          "id": "7d538651-50fb-4ef9-8d24-51798fc3a1bf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1965520e-66a8-4215-a605-8a4c976a6973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2061886-9955-4cc9-a57c-e7602ac3e20f",
        "cursor": {
          "ref": "f60a1e10-77ff-4a42-8a96-5394b3f9079a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc02ab4f-bb78-4b74-8b02-c613e9a1f6a9"
        },
        "item": {
          "id": "a2061886-9955-4cc9-a57c-e7602ac3e20f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "049da889-a3f2-47a5-a6d1-a48a46ec8398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f077cc-1dde-4451-8f40-8aa6a4220c6c",
        "cursor": {
          "ref": "3784c83d-37b1-420b-acb2-b21346f2c16f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4a17d0fa-cb54-46c3-a808-05205f58366c"
        },
        "item": {
          "id": "b6f077cc-1dde-4451-8f40-8aa6a4220c6c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "20612fe3-d6c8-46fd-b904-74ca23ab8c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d3d438-a9ba-4a86-99f8-55709926ffca",
        "cursor": {
          "ref": "2fa1e528-6628-4101-b73a-aca98d4f4185",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4615695a-e5d6-4494-80f7-d5868823f2ba"
        },
        "item": {
          "id": "85d3d438-a9ba-4a86-99f8-55709926ffca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f2abc94b-4406-482d-833e-623223773b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854903a3-7a09-41c3-b257-84849991cb3f",
        "cursor": {
          "ref": "dae5db23-b2fc-4e8a-9fbb-cc700ef8284b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7513555b-cca9-41a6-bf0e-297be00c7806"
        },
        "item": {
          "id": "854903a3-7a09-41c3-b257-84849991cb3f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0a53b9aa-990c-42af-8463-024aa5209eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecf1fca-0180-4e3b-bab4-30c05f8386f1",
        "cursor": {
          "ref": "76b1fe53-24d9-41fb-8b86-5b2503c57a24",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1775d8da-e6b9-445b-8bce-dabf7124426c"
        },
        "item": {
          "id": "3ecf1fca-0180-4e3b-bab4-30c05f8386f1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ffdd0336-4bd8-4c62-9603-2049a30b736b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e89a05-3921-480a-9096-b2aae261e6ff",
        "cursor": {
          "ref": "9d983f57-a57f-43e3-8a04-4edc0eb8e84d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0f9eca40-4f19-4d21-afbd-742320b29d86"
        },
        "item": {
          "id": "83e89a05-3921-480a-9096-b2aae261e6ff",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5b4c27de-2633-4cb8-8f1c-abb35d0160ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229a6d04-90fa-4e9c-b97d-4f23ea155008",
        "cursor": {
          "ref": "e097f9a6-ae15-4655-a8ad-20299ef8dc33",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b5b577e6-a6da-49d1-99d5-71fdba1a0121"
        },
        "item": {
          "id": "229a6d04-90fa-4e9c-b97d-4f23ea155008",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a084b873-43ce-4895-8b8b-5e34731091da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7751cb89-475e-481e-be07-1e8ed927df9d",
        "cursor": {
          "ref": "c328949b-2ca9-486d-a16f-d102f65d25d5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "acf5c870-3c0a-4273-bc51-cd6e8d06f5b6"
        },
        "item": {
          "id": "7751cb89-475e-481e-be07-1e8ed927df9d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f8afe1d7-7e1c-4ed9-bb02-910822422323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3d79a8-959d-47de-8c2e-62f22a2dd0ef",
        "cursor": {
          "ref": "bc472267-538e-4646-9226-8ffb4bc1f4b5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3819ad68-1b86-4348-9360-e2ff118791aa"
        },
        "item": {
          "id": "6b3d79a8-959d-47de-8c2e-62f22a2dd0ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ef64f543-892b-42ca-b956-6e9bce2e44af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11865eb-d268-4d76-9f77-9614d4aaae0b",
        "cursor": {
          "ref": "9cb63235-0fe5-4dea-8c2c-3a79e7df5aff",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9cbdc58c-ebe8-4860-8ee9-ddca9a573dbc"
        },
        "item": {
          "id": "b11865eb-d268-4d76-9f77-9614d4aaae0b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ad8db4a-c50f-43ea-9fac-a3416a63ea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56352ac-2eaf-4ae8-ab8e-ef436408fff5",
        "cursor": {
          "ref": "2825e88f-64c4-4e3b-a66d-5eeebb4ef21b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cad81216-b897-4ddb-8ed8-14e0934245b3"
        },
        "item": {
          "id": "c56352ac-2eaf-4ae8-ab8e-ef436408fff5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d666ee85-d261-469a-899b-c238ebee6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f12331-bc9a-454a-997e-15bd86049b1b",
        "cursor": {
          "ref": "5910e660-0a6f-499c-ae81-eff9c25c7e11",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2bf926f1-4a65-4b4e-b230-274ba7a80d93"
        },
        "item": {
          "id": "00f12331-bc9a-454a-997e-15bd86049b1b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ee66bf4c-e9e6-4089-accf-88057abea101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969422fd-ca45-410f-b4c7-ee4f082fd454",
        "cursor": {
          "ref": "fc033bd8-879b-4f61-aedc-9514f61afe6b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13cd2153-5495-4c70-907b-de50291f9f9d"
        },
        "item": {
          "id": "969422fd-ca45-410f-b4c7-ee4f082fd454",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "acf4bcac-6b89-45ec-990a-1b85896aa4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211a84fa-d169-40b0-ac36-e6e2b273d781",
        "cursor": {
          "ref": "388073f7-888b-438a-a05e-a34891ac9a8b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4f50c1b1-a81e-40bf-b215-424446364d4d"
        },
        "item": {
          "id": "211a84fa-d169-40b0-ac36-e6e2b273d781",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7243330e-79c6-425e-87f3-7633ecc7538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "1315e47b-5b74-4d86-b9ed-6a1fb22d4aee",
        "cursor": {
          "ref": "0e9c32d3-cb0b-4824-aa98-e1640d659836",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a46a2e5-7311-40bd-9626-283fc68bc726"
        },
        "item": {
          "id": "1315e47b-5b74-4d86-b9ed-6a1fb22d4aee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e50f5d2b-1e93-419e-a850-71feed5679ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "d2df8d5d-5478-4f1d-8b92-a2379f97d12e",
        "cursor": {
          "ref": "5ea36714-dee3-45c3-9653-87eb242e5701",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1a789c22-6860-45d7-aa91-8b29b253d845"
        },
        "item": {
          "id": "d2df8d5d-5478-4f1d-8b92-a2379f97d12e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6b845da2-57c1-4e51-a764-1d744d8c1726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "beeee2c4-a929-4bc6-85d6-f8baaab94a37",
        "cursor": {
          "ref": "867e9504-ed34-4899-b2f4-503d356663e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be623f03-f8c1-4583-84e6-9cd8a116a195"
        },
        "item": {
          "id": "beeee2c4-a929-4bc6-85d6-f8baaab94a37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e270147a-7680-4cc8-a586-d2d2627c664e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeee2c4-a929-4bc6-85d6-f8baaab94a37",
        "cursor": {
          "ref": "867e9504-ed34-4899-b2f4-503d356663e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be623f03-f8c1-4583-84e6-9cd8a116a195"
        },
        "item": {
          "id": "beeee2c4-a929-4bc6-85d6-f8baaab94a37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e270147a-7680-4cc8-a586-d2d2627c664e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f77a0ba-7c57-416a-8395-0895195615e2",
        "cursor": {
          "ref": "c101ef49-67be-433e-b3ef-9a8ab0638f6a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fc581c64-1f00-4607-81df-66dfa636b81a"
        },
        "item": {
          "id": "1f77a0ba-7c57-416a-8395-0895195615e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c38a050-eed0-4ff6-a6fa-2b821befa3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476fbe86-d6ae-4dd6-917b-45f31b38d583",
        "cursor": {
          "ref": "b1ccf4d5-ef2e-4a60-a276-89befeea8fdd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30e08c9b-0e69-4c59-bfc8-966a4cdd41c8"
        },
        "item": {
          "id": "476fbe86-d6ae-4dd6-917b-45f31b38d583",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1049ea27-ae67-43d9-981a-b0d099eab425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}