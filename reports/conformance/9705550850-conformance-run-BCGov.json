{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e9326ee2-a8d6-4b6c-8436-478d47577cd8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "86934a65-b81a-42d7-a51d-95de2649a0e9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c92d2dc-915b-4b6a-a1ac-fe88c8ce155c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2a686e38-0cc4-4810-8156-94f1de143020"
                }
              }
            ]
          },
          {
            "id": "33c153ef-4072-4355-ac2d-f585b69d4be6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7449883b-a01f-42f7-aa42-fe13b41ea2b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d44a5c7-edf5-45d0-8ced-687d2819a745"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d3c10db8-4328-402b-82d4-546236838ab9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c1438be-8d58-49b3-b526-e24e6154b4c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe55bd98-aee9-4f91-a3e0-77cff2b1780d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb1e6a85-0ee7-4081-afc7-a412e4d423e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1c8a7c8-43c5-4bb8-8dec-2f2e896515fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "baefc719-5e42-4251-8387-987fb5d5c3c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f922800-ef24-496a-8c87-112d8077d453"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e65ada7-2008-4e1e-9e66-7bbc8c45a02f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da088a3d-0e45-41b9-a177-bd051e8ef5a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9b36a8-0155-4e72-96af-2d8694a2f721",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "944a5dd1-26b3-49ab-8ad0-049da67e4313"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc5d4eb5-c028-4920-8843-c2aebe09eb39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9599084a-58ae-4f19-b6bf-6fededf8e76a"
            }
          }
        ]
      },
      {
        "id": "7b2edce6-dd2f-428e-aa09-81d9264ce514",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a8b99976-22c5-4431-b987-bcd84d98e2c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3793f90f-d985-40d8-9b35-839b17bc3af6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5c85e45-c0bb-42f6-9afc-27974cd17b06",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c60e52-0bfb-40bf-98e1-6ec16121563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5628e9c3-bd22-4c0c-9454-6cb9fe7cc6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51311f9-598d-4e36-b047-7258cd17eb76",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd154212-f28b-4c73-b5a3-74e8e07006d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51470d37-c458-4f02-8ab6-185b818e1cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5542233f-19a6-42ca-8613-13d154372d3d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2636e12-6b21-425f-8864-3fea983c4b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b7afb8e-3340-4de4-bb65-a2f92aecc509"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0eb29278-5b5a-4a66-887e-e345c7f5414b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5436a2d3-f337-4711-8ad8-9b9a913d2f93",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe8bc41-8913-41c0-b308-a079521677cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8467371-3088-4c10-8452-85a258b541b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fda303-4e3d-47ee-9849-0141fe893103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4852c22a-4a4d-45dd-bfd5-f5c340250e33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f87ec01e-3958-49ed-a2b4-1d83c438cedc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44aac2ee-21ea-4218-88ad-cef53d6742d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a8010c3-c640-496b-8827-4b531b0251a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5e87e45c-78c7-4fe3-a310-498d6bd228b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf90760b-fac2-46db-b069-f704ff6a0ee4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8cef466d-57c6-4506-a3c1-b56f5b4774ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3532d519-db19-4f4e-8478-1f39d2b191ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "023f4747-f9e0-4aaa-ae2b-e6666c4be4a1"
            }
          }
        ]
      },
      {
        "id": "1d21b7e7-b050-4f14-97be-7b9c65c69b1f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6ab6b576-0335-4452-a4d6-0b338cf54767",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b192c821-2da9-4e1a-9d18-d624cd5668c4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2b4e7fac-46ea-4c70-a915-00cfe1e5a851",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6c2ec8-b960-4df5-bb69-68ee848a01a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dddb618-6860-4d32-8330-ebf1c4e4ec85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b98356b-1e68-41bb-9bed-2ab5d8c01960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d78dd3-c1a1-4917-b430-c363aa99a26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7ba89c-816b-4e4f-b4af-6cd4abfd5755",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122c470-d030-4176-a6a2-2067f128f5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbc1887-6184-4518-a161-51fcb22acf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0067ab5-836b-4478-8757-212f07ba0e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87e85007-3a7b-460f-9ed8-ad3bab2c1666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806271b1-0502-4cd0-bb5b-5810ddc57467",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd637f7-e7a4-46a9-a4a3-23dac4ab1373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99053ea7-af17-4400-a7b1-d096c16f5615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4d3af3-683c-41ca-8ec8-aba9326f4e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb9707e-139c-48ab-9bb1-9caca43dfb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b53f2f-806a-47c7-97bb-2d500954b11c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3751adc6-9060-449a-9ce1-45963c3ffb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58dd20d-52b6-469c-8377-7f92b8248fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5e1621-8b31-430c-8f31-4d757cb5d431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ebd602f-d1af-45be-9375-7003cbba34db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9e4c58-af1c-404c-bf6b-df3570aa5ef6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a6d240-170d-4493-a605-f3dcb7fe835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c86cdcb-fb1b-4aed-a1d6-3f82623ab499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d008fc-8011-4240-aec1-8c6fd15de0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d09d4ab-036c-4b5a-8784-f74c39967f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04455e5-a8af-4237-9c2e-3905f2384ad9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd84c2-0ca7-43ae-acfa-ebe4ee78e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4be5ca-bb4e-48f4-bd01-4eb9967879f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f673117-3f72-42a0-bf23-eb13038f9b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40219b3c-0c16-4adb-b46d-6d83838a7d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2e72fb-ef55-41a1-b5ba-c25fae6c971c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f797e60-345f-4eda-a0fa-732e4b0c4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e213b147-8480-40a3-a252-cee078da36f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a152f5-4cc0-4266-a4f2-1e2aa0fd5938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bae5d35-632c-4681-86ae-51e7fdb24d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f651598e-2bb3-4d9f-ad44-4fd6ab0693e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f42760-6d6a-4d92-b863-afba3c33fe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567ad77f-e804-41c9-858d-43b7e81be391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d52f7a-5fad-471c-9b41-9a24883cc21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1add5f79-e8d9-4792-a3ec-3a9ba6f17d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168814b-c958-4b30-8f6d-c5bdbf2ce639",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7e86d3-51dc-4a97-b47b-b39467687853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54a569f-f428-4296-bc83-a40cb51cd343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a8353f-0ea7-4894-8349-706a88ca7733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d4c4ae-39b8-4014-8cb4-38f0ee274119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06de1a7-4fd3-4239-9f12-4031d2f5418f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644a4c9a-990b-46dd-938f-7cd843dee5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7afd88-5d0a-46ab-aa8b-ace7e955238b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105970cb-d0fd-441b-940d-ea0d0ed2c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e6c915-2325-4779-999c-15a1ba590dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a84690-3dff-4e75-a3c4-2a5b6800bbc9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46b4ed9-0c72-44a3-bb0f-c65748a17aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21284c11-c6db-45ac-a32b-f82ba71868f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb5f117-03c0-420e-9b7f-a04d500b0b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eaaff21-0105-4f9e-9425-b7655e50e395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd7ea97-edce-4532-a7d1-f0318db01aae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8860c82-cf7c-4353-8afd-d92c433102aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4945d37-a88b-404a-ae98-bb589ade85e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e143b-4718-4963-bfbb-994a4aedba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "995e523f-9ef4-4acb-a2a5-5251ff267475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5fd2ae-c136-46bc-896b-b36277f28ad2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc11e6f9-552b-416b-b35d-9cd9f338865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c338e567-4f58-485e-a538-8fd0ba10c0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de79cd1-4fc9-4d6e-8691-3605f3853613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f16a5629-4cec-4f87-886b-cadb132fda87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2283a3d-7742-40d6-b2d1-f8689ab23d47",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e667f913-9742-4f8c-8344-8a7782ee99da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660b0438-01d1-49a2-a279-a49bd85d175c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb7d30-9b4c-49ae-973a-34c365714d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1198237-a3f7-4bdb-b567-a81325183854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f6f123-986c-42b3-941a-9e15d2af60f9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8767a6e-a4d6-4641-97fa-ccebf1aefce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b09f6f6-fb66-4e12-ad0b-62c744c4ad0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e433f1-4d9d-40e8-9936-c9460be558fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a15f0a37-e196-41e3-91a2-eaed3d80f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f0835-8c88-4f5c-81b2-fa942030b381",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae845bc-9c41-46db-89f8-c27c6ed55f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab979a5-8cfb-4ebd-a3c9-c801b1ef3826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b673ff-a19f-4c14-afba-4bf33d165736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebb5178e-eedc-4206-bea2-a7fce9ad443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da692639-fa12-4444-bb5a-ec57647edd84",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc97148-03b5-4a37-ac68-5db8785c2771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9608f585-99be-4887-89d9-5a9406c48e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5b5869-dd75-442b-974d-7d0a77396fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6bccf01-983e-4910-b642-a90b7107e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f24822b-22bd-4c11-941d-3f84edb18df7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca3ba06-0994-4ecb-964d-52b61ccd288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6344173-07f7-4e6b-96c6-05d2c8c3a349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ed32cf-a2f0-4d7e-b8df-555b6ffd2915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "293288aa-f125-4f89-ac51-538f6a4c86ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03492c28-3523-4c5b-8926-1892be54ea6a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14210bc0-c020-4314-8544-619e2bc959f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd415122-120d-45e3-a531-bff2044ed0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e520443d-dbb4-45d6-bc89-8db0c8a5258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e97557e-e198-45d2-8aa7-e0dc3a60dff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76036465-1434-46f0-b1f9-cd74f0368570",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df8d10f-2073-4826-9804-96abc28912c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9006ec29-c16b-491b-8098-9b33ece6c287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64ef497-6c80-4435-9a11-039aff4028bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f4f099-6b36-46b9-b25b-162e2d08ff66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8200e78c-6735-4290-9b91-58fce928060c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0706d2b2-095c-421d-9041-a5fbe76e351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6785972c-d863-4169-bd37-52c0a7899062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e9de15-1520-4cfe-9665-6e5d0125d3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3edacf7f-834b-4e35-8935-a1119db727e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ce4c09-fd96-4a20-8f80-a597c5d59b49",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e5b7a-074b-4edb-93df-091317d29eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df45966-1849-42a6-94fa-360a919199f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669b3983-1e1a-4d57-b81a-a96c1722a7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d3bab-5bab-47f8-a45c-c24c7ddeb619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b81f8f2-73db-4b31-944a-5bef42a9a3e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b7e415-c23a-4f5f-b1e2-500e962f64ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e70663-c019-4bbf-92ab-efd6170677ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb69d45-3360-4000-87c0-29d48062591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbe8a65-1a8c-44b5-929f-d7956bde3225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd4f0e9-3252-4ac8-a230-b171905a9d2f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d90f59-0f6e-4e43-8cb5-deae525aabc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afdaacd-0ab7-44fb-9646-ff7f35cdafff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad34af8-6bda-4e18-8a05-a7638347efbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2741dc9e-b600-4224-b3e2-e6806ebf12de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbd2c2e-14f3-416a-81b2-da3f7d8416e8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b6f9c1-bcdd-48d5-bd1d-3b35d16b72d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e232dea-29f0-4931-a75d-93bae3adee11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7f5e9f-90d9-4b45-9369-0399d02794c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78aaab67-89b9-4ef5-97f4-69b6aa00fdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e14c95-4f99-4f17-be88-b19d577b0194",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d794d63-d59c-4f83-b45d-56def1efcce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abefe59-b5b8-4b87-b0bf-9a94f9064866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47eccb9-ff7b-4241-9763-075580e493ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b323b8-1265-458e-ac9b-030e26e67925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba976af8-7ec4-45ab-8040-f943b0d083fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c3fbf8-c481-4797-beed-2e92b956d04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c063b19-28a1-4243-b0b1-364a0c952b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5c6cc1-d28f-42eb-9135-44ec354ad951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3029a7c8-05dc-445c-9cbc-37585d7e265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f82035-4a2b-4e7a-abd6-c6db45b50bbc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb540f29-aa1b-44ff-98b4-7c6871d1b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc2edaa-b16a-44e8-b528-b92673aed04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781c62c-6842-41fd-9306-fd8b95021ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e70e018-1e21-4dba-94b2-33f0c2d93b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a3183-1862-424e-acd3-d025943d07b2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aed3951-b2b7-4416-84ed-26ad001f7acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eece6e7c-d402-4bde-afad-cae2576e4830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28853a1d-12c9-4d5e-b419-8a9d1a409512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfb0c3e-0582-4598-a6d4-1bc6895ad164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2648fddc-e62a-41ac-9de9-63629abb369e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423b1352-1f7b-4dca-9fb9-a8ec594eb9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9b610e-2dc8-43c9-a777-90f8329ca3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d7d2a4-ecf2-46b2-a954-908105ab7d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "83db64f6-4aff-4740-937f-d493efd14226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82016efc-7d72-4d9d-8eb1-85b441062dfb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412d593f-b3f4-40d0-8e21-8f0feba63fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b816b59-2473-4e5c-a516-187591e1a0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d148cd0-685e-4aad-82b6-906a8e2a6f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e33611-76dd-4d28-a4c0-8df8844f1c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d9fe76-24e9-4136-9223-c9b64408d4e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0b8ba2-d639-4e89-a90a-26319a4d9acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c82005d-e80a-41ed-861b-71dcd25f19f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87db8e-a741-4660-a256-87c40f0752c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9d1073-f6b0-41a4-a14d-90a69c9f0668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be51ae9e-39e2-4a25-8870-91591feace5d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db09e24-2a58-4da5-884e-04c047c7975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f146a90-6cc6-426d-80be-3241470f30bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6731907-7606-4a8e-9ad8-6aa3e9b3fce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e57461d-e32c-48f9-960f-e29ebd51cd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e55c53-fc7d-4a1b-af8c-a651aede6c3d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a7cc98-2de4-4d28-8ef5-d867319db301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72785920-5350-4fac-aa44-f66d16190456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c766f-a96d-4191-abaf-d238beed7fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53b36d1-5ccb-44aa-8e3d-d5167e6f18c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9458a96a-9cd3-4a54-a91c-7912539c30d0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff3ab34-27c5-4841-9a45-56c980e27fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04c0fca-07de-4a52-9126-3608fc1c0a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecf018e-24de-4f44-9c27-221711f35e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "455dde7d-35b1-499d-b354-bc954a84c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42658679-5a55-4c3c-8ad2-53906d90e947",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113332b8-2e36-4622-a65d-0f7630c8f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "909669cb-9d0a-45a4-b0d0-7973294c083f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb0d84d-e3f8-4aff-9200-7b3f9c886816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9636f21-5d25-4c3a-96c1-0600e4045357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7f3692-5a0e-4db7-991d-f967861929d6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bd2552-6484-48a7-b00b-10dd27646cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f5710f-fb9c-4f7a-802b-687bf0ffe4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1093935e-dffd-4e0d-8854-ce4ad57bb106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a19cb3-75b2-4a15-9b77-5120596d7523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ce364-7d81-4728-864e-19587e09f138",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d762a-e4d1-4308-b915-a5e1fca61b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564aaed3-b78c-4a8a-954a-6d1debd73c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba645892-b57e-47a8-8fc3-1eefe22aa1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a901af-05b1-4e8e-abd7-33f5943d5b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c18a242-9d85-4ca0-b89d-73375e19684c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c73d00-0b47-4897-b394-2b73892e54bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43c9855-7acd-4012-a856-686b6d00fcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ead1ca-bb90-4851-8498-8fcbd8a37116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ade21de-239a-482c-bd86-5218946b46d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078cf3cf-74c5-44d4-b500-ac091507ffe3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7812d012-7155-4af7-9b7b-8c0d768688c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49169c70-3d6a-4b14-aca1-61dd9cda3ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad1b48-35fa-46b8-b252-5d5263f9d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfed9bea-d390-4f23-8e4a-db05730e3fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773dad0f-2a44-46e1-8477-79d16a2b15f4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3172cf-9f26-4b69-84e8-5ba352044cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4167cbdf-0c22-439f-9773-506531a3fc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf8bbe3-0393-4cb6-a206-aa61ddd8b360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5248feef-52b5-4391-a04c-031f58ebd3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb442f5-a347-4efb-987b-487b4bdaec80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d203325-c746-4965-ad1f-a01f09dc1b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987ef2f9-ccad-4baa-8818-4d4f1deea874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8074d25d-ea3e-4468-aeba-32fc1af36cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6e39a73d-1010-4df1-90c4-f1be0ed3fc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc731e6-0c12-4248-941d-2f4d8a7bea2a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ecaa67-3738-4507-a5eb-c6dd7ed5c288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580b88f6-8cc8-42bb-8abb-687b3143f0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a939f69-845b-4b6c-8df7-fc6001d1619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "987d61de-b6e7-400f-9d71-e5cea5ff9aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0ef12-5ef8-42af-91c7-dc57aed31ebe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ac32f-4546-4333-aea3-6a502c7c4dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b332be2f-9e9d-401f-ab66-bc1224260704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34fc80-2200-4b3a-a4f8-cbfa1b8fab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d11e89-8123-4565-8f6f-418d3e7187ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98362449-2413-4db4-b1ef-e535ce9df460",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cd5f79-0e34-47d5-b72a-fc6afdfca782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7249d5e-3eff-4bec-9fe7-db6e953f796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403a8577-6b87-4407-8344-920cbb65c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7fbeef-14c7-4790-af1c-30cd7581f657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f4610d-608d-4a7f-9f45-643d4b010332",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382bfe95-9d59-4e49-97ae-4c70e1bb2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0bb202-65aa-4b91-b27b-6738aba06ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae53a5-de4f-4bc7-80cc-1cb9243aed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49372467-7092-4217-ac69-b888333fc561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec042f15-9d90-495c-8003-f2d7bddbb564",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ded85e-0134-4eee-b5a9-a03f42dc0b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29de6deb-12c4-4ee3-b427-a04f9bb80d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac448ce-2264-48be-b608-9dd387d86118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c101a07d-0616-4cb1-b17a-3bf477d06b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e9e2d6-c694-46ac-ad01-04e6c874c263",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c697e-ca84-4df1-9c86-6b58a5b67b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c56d23-2749-4520-bbff-a34831589aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb286e6-4784-4a4a-bdab-0519e677697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d72680-acb3-4997-998b-2b7db11cbad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf51354-d836-4401-a1e9-2d2021f14905",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80453aa-2607-4e0b-9f6c-a3044dcc35a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a213ff2-bbeb-4fce-903d-0a63fe5a9e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f84ec8-a237-4166-a8eb-857307caf2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f7aae1-7b2d-414e-9b89-175a1ecd870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfadbf6f-8b4e-44ba-bdff-d0b5fa3b814d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4752e18-0edf-4e0f-85ce-08cba0b8ea5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb640a6-8f9d-4145-92cf-62c34ecb9516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f75b30c-1788-4c4f-ba82-b7d6ec15df98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f115b2b5-36b3-4030-8110-dcaba9c13dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4c53c5-184f-4401-863b-9c4da085c299",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff14f36-7f4c-408f-8e15-b5699455b3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a442b8-28d2-4998-93fc-606ead33a8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd05d821-230c-4ff8-91e4-2ad3be841899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "38effe1d-0f6a-4d26-92f5-8fd05257e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512724b-85e1-4bfb-b62e-ce58e18e8e42",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabb49e-2511-4891-b568-7101563c36b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f267342c-10a8-4207-857d-23c2a24ff159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ca669-d86e-4a18-be0c-79bf2d83aeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7eee15-c328-4fab-9384-1a3ce3953d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99cdcc6-420e-4bc8-b0db-ffc51ce05d1e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0f05fd-7567-4780-bd42-299fccfce92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07035d68-eb9d-4e84-87e3-19580a964173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26e6c98-9f7b-49e6-a2a8-ee5d5be4a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "174fd2bb-c25f-4f78-b54a-495bae5c3df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381b1ad1-c39d-4d7f-83e0-dd9f3ec1e9e8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3006b94b-d618-4480-a495-573d03dca3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4a2d5d-1782-465c-adef-52ecf1bd6032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7cdf35-30b4-435c-bcc3-c6ed49956cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e0f504-caef-449d-b4fb-2d8a84d9f3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d157c-1f1a-4701-b307-b2b3cc8f9ad5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6d9c56-d85a-45e6-9196-e15ad40b5d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97bfff3-47e4-4758-bdf2-ca1063e28e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c29611-f1a8-4944-bbc7-44983f83115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d366d57-eca3-4551-9dae-ceb94c30108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6986e87-f9e2-4822-806c-c9ca6c810cce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a94edc-3e97-4fd7-8fad-cc54aeb94f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1d8c78-83e0-4b6f-90a8-285da7f50bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05696232-9468-4d70-807c-acabc705e33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15ea9588-d423-4866-a1d5-36e966813bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbbaffa-c7d5-4307-8297-8ee47ec337bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1a6e8d-8f92-4fcd-9331-79fe2675d82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6821df7-26aa-4a0f-8dc8-43f08407c77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66794969-b95a-45c2-8cb1-bacfeaf5bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4596c8-c07c-4d87-8291-f77215d45a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ba8685-fd94-4f41-ad6d-af1d456c4967",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e993726-b6a6-410b-b3dd-b2c137d37440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ab8033-f7a5-40dd-b6cc-111d68430002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c1b2fb-da90-4b7e-8143-563f919f8f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e86541-0751-44e1-bd56-9d0ed3132c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046940f5-a4e2-4f53-83c4-56711ce77553",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fc9c71-d4a4-40af-b0ee-42e8395e2763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65ab6c2-a571-4b59-9533-f3df5057ca88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ee36f0-3468-433f-8649-d2afeb006c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12bb2128-527b-44fa-9da1-8f0944391bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eccc4d-7556-4ff8-aa26-3236195f1cd7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f507fc6b-3ad7-4876-a20a-6947e3909434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7362ef3d-b709-43c7-870f-fc20a5214c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264068b9-5acf-4025-b376-110d0a90b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4315a569-f1e5-49ee-9937-bda5445d458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc709625-5a31-4d13-81f5-35dcb7c9e7be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a107d5-42ef-4bad-a18b-0a497cc31fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a734e341-ff48-4322-a206-0c4fdc3e2cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0e38c6-0c8e-4bf7-817c-abf01bea6fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a21c0415-0547-4283-bc2d-673de21c8d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901aad1a-db46-4448-bffa-7c0387576280",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6bdae8-9d85-4bc0-aa63-9f5b3d0012f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1004fbef-4712-4da5-9e3e-1cb3b615f2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07811a3e-48f2-4fe8-93b1-925ba16d8cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "04958b74-9b21-4ed0-b52f-5a0be75723b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b6a00-b6f9-42c3-9cc8-907974f5ebda",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70605f59-c301-4d15-9612-8bd7e9017300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a651dc6-2d21-423b-b334-cd83ef3d283f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926b311-82c1-464d-b887-36bfa407fae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1e4708-98d5-487a-b52e-b98f648499c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c764ac-6298-41fc-a041-3435a397144a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54362b8-38ee-4f2a-b5e2-cb5a09b9ff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbb7764-8d32-4230-a93e-78fcbc6932e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc5925b-b5bc-41c6-85db-062f53f54b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68f92af-d9e8-40d3-a64d-94a2c55db7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0c6738-35ce-4f09-9ac6-c527b0a65ae1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc445dea-451f-4133-9c12-7c7c3e6eff54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2c59f0-a1b9-4104-9a1c-e9bfd2f9d965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaffc70-ccda-4063-ac56-060598c68df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a2b8f8-c962-411c-9f78-9ae7c4047858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0212f3db-5846-49d6-87a2-ffe40485a2c2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fde03d9-f5f7-4b40-aaa2-a94290bbefe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915edfde-4bb3-4f76-a4ee-1f218f69cbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b32d187-153f-4eb2-81df-d090c3f09631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9a859a-dab6-4128-9afc-785633983b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e978665-d0e3-42bd-a3cc-0067c16391b4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d912cb-33f1-4f1c-9e6c-12e0cb3c2a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a894162-f1c0-4544-ac08-b7c9083afe86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a3182-a565-46d4-bee4-b909c8e877fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cab779d4-3a23-4c10-b6ac-8544a6678081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5753a3a2-1c54-4dae-a9a8-d6efeb9d17e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6946be-c664-48f9-92a8-64b5e2cb2513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72963833-6168-41fb-b85a-54a89c2df14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a779fdf8-7dcb-48a5-8a19-a2b8c99ccde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37301aa-4523-48ad-a609-f12b305f3dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3233c4d2-8f70-4483-837f-0bd2a58f799a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d8233-217c-4391-9076-21c15ccd10fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc3e5cc-2956-4ad8-b46a-aec03c0d1704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb3c7b6-73c5-47aa-854a-7e1bd2757790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaec23a-9531-400c-851f-f3ceaca46ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63429cc-e0b8-420c-be99-31530655e617",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a63c7af-7d49-4676-8704-2c711bcf8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a648508-206a-4230-b15b-fbf764a7a127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17c4bc6-8997-4b4d-8057-c726102c0be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0d37cf-a951-49d8-8b67-03cc1ed68949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe60ec5-5c5b-4143-afc8-58b084922217",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b2a620-638b-4d44-984c-4523f0a1dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2b8432-db98-4b4e-95e3-367ac69df4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d815c49-bab9-42ac-81c9-cb72d6c1aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a15ba2-637b-43fd-beff-10f61d26e242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde1f18e-183e-4398-9fa5-f120bbf94cbd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9e21cd-f7ea-4a2f-81f1-3e108cc38864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8449e85e-a6c3-4972-9cf3-417cab51c26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56ff0db-b83c-415d-bd59-6a6967fa4491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb1ab90-d7dc-4fb0-9cdc-8cff4dccdc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9fdc29-dab8-4cc0-be73-fcd94a723ba1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceed46b5-b43a-4591-b17b-c5ae4d956ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787d6bea-c168-4b29-ae06-94f50444e06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640e642a-de50-4bd8-afd4-28cbdadd28be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5b9705-e71f-49fb-8de9-820264eb6e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969d75b6-2671-4c17-a62a-2c930c3d7356",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c36eab-1d0c-477f-acd4-f83c4fc2b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f2d007-3d50-4a79-a14e-fe0705ec093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0f9df5-d2e7-477b-85ed-7d2d320913a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f200aa7-d71a-4bfd-9b04-e6fe8a10dc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e50638a-fadd-43b2-94e5-19339fb185a4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd297d8-daac-43ad-8d29-242c433d1e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b38a0b-9029-4b44-a205-283cd32a2b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655702e1-b7ff-4b7c-a2f1-74325f74197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "615e511f-cbb4-4eae-88a5-9fa3f40e6da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c939f274-70f7-45ac-ba6b-ce09d0fb57de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7999e6-d2eb-43ff-801f-104d965c0bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd781e3c-a74c-432e-877c-77ae3733d4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a68e0e1-1ef6-4ef8-b98c-73e2c795db3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa967b44-18f7-4335-833b-b8ad97415942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288a47bf-5c71-4d1b-ad9f-58df213556be",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74b2ab4-a8f4-4c2f-8ba6-619d3b58ce44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71219ba2-9215-4d64-a382-ae898b7394a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a4bc1-fc97-4018-be3f-6a5086d1d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52c18ab2-0a45-41c7-a5eb-62f42edd6a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb764c7e-ffd5-406c-ae80-377abbb353d4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48f8051-e134-4a43-a05e-193ac6edf08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0c09ff-e451-4478-84ac-c72275f11170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc3886-9b49-4cb9-a635-5177152419a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51d6881-7ba0-4720-8586-40b23387fe4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cac2ce7-6b2c-4d14-809e-d15260fcef20",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b7b9d-f1ec-4758-b1ba-82a93d733152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f08369-22f3-40c6-babe-952b8ce1e70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f2136f-6207-4677-8c13-947df0927dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4acf10fa-8e57-45ab-93f4-c7ea54f5f9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92409d3-ca5e-409e-bed2-1b79f32ff270",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7831cd96-4538-421b-a856-cbdba82dd234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594d4845-2987-4c48-b37e-d1c19df89de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c1533c-1af9-4632-bc98-1cd950200600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "063c2183-bbef-404a-ab77-d849a34e38d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67fed8-e72c-49f4-a6e4-59e72d885ca4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1afbad8-30b2-4e95-a065-9644ecb4910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e2cebc-be7a-45d4-9439-6b00b87f9e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa63fef-a1ff-45c2-a17b-a95fc20fe7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "703dbe6f-0b04-494d-a190-a6d87c1fab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6375b1-b661-4523-9c2b-d738131f14d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b5cf5f-c23f-4651-b766-d402bb4ce316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcab16e-5053-46f5-91eb-686a252d4910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a322eb-82ec-4a66-9b73-d2e1b57113c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ebf5e4-7212-416a-8376-471bfd27edac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903af890-3299-4833-a098-b277c9cac5d0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c323de-9a9b-48ca-a1a2-65c87509b052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1498209e-0efe-4c5e-893a-6fcb6f4ba166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9712d590-b61f-43ba-86b9-7e2f2388317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2c9ec1-aaf9-4214-b74c-b5f34f22977b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5084ad49-1e7c-465d-808b-4b758342f592",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c45a5c-4aa6-4ded-93b9-0de9f1586f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48b1e8c-6c9a-4529-b083-04d4e25b8779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d999958e-b2b4-4472-b522-b27e2cee4b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "614029c4-73aa-4455-ae8b-0f77c3f74fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf82a377-fbd9-470f-82b2-1b71eaf38cae",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c825bb33-f754-45ca-907d-5a68aad7a572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89757ef-19c5-4fe3-9566-8f6ba84ae904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a340e81-984d-415a-82e4-428903b5df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "801867b3-ae27-449b-a565-6764baa6e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6acc24e-16a6-427b-ac7e-a2b1e31129bf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59d4448-f535-4630-89c7-3831eda3b90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4cae9c-3d08-4b7b-8629-63b90a8d1733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1122975f-28ff-4801-ba5f-693ae156a94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d16d54-4e6f-4e53-8f46-3e1f2e5a4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8de21a7-3286-428b-b6c3-b09748b34e3b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb0e055-b901-458b-8532-4101e03dd5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19c545f-67c3-4f5d-9171-aee52d01e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef03e041-44dc-4c7d-9dca-aa5e707d37cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97151108-6c37-4be2-be0f-5d21a8fe83fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8366d82e-051c-4c21-aaeb-ca479417da2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20126bcd-b6e0-4089-bc8b-854ba9cc3703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430cac0c-7bd6-44c9-9382-e436bc646277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6958574d-3f70-4aec-8780-fd384325f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6391dff-ecbc-47b2-80c9-7ead1d1d0391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d314cd34-54fb-4fe6-a318-b99b6cbbd102",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d913f0c0-d56a-47ee-8ad7-3b2d1c78bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35649aad-990b-4b07-9cfc-883936eb26a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275fd33d-82e0-47e1-89f6-6d4c7057fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d47101d1-1c53-4ea4-b9b0-50ebd759a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c52b3e-3aca-47be-aa4a-70f559aabe7c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6031e955-add9-4a20-8ac1-2fe3f82191ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92683bf-9c59-4b4a-aa89-e8aac5c97954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25c5360-b2e3-40e4-a199-8f082ed291e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6ad194-d511-4118-a045-0b5cd705e802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0d3384-1b65-4652-985c-765a3e4dc19d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf335c-cda1-4391-b260-69d6220d4433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb0842a-d6f9-4800-90d1-cc0e878e9086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa13117-dbdc-49b3-843d-c885063f9273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "abe09f80-0c34-4674-af79-2064efcb59be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38668940-371f-4da1-92d8-3f78a5502235",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98579a78-fe55-4c01-a3d9-cc09295302d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83f51fa7-3f4c-4576-8832-23944fbb5af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5718998-b295-4878-96b2-801d1d429a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bd04d9-ef27-4d74-b242-b500898da9ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0aac0385-3bdb-4d1e-bbf8-2742dd705cb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e66d12ea-31e8-4e78-bf7b-ce3e89fdbbae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc0a2ff-97b7-409a-bb81-0500ce549ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6beb942e-4c4d-4acb-bf89-471e35103a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e278d4-9099-4b45-9a58-83e1932275fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceefc3cc-7f5f-461d-8423-86c1b67aadcb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e27d520-2fad-4f95-b9f1-c0a9fe276d04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73702645-67da-4d37-946f-7b7b790e3c31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea19e3b6-427d-483d-ab90-8761ce27f553",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "785b3eff-d09f-4054-896f-c95c87b85e9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c79fb53-284d-4561-acb5-2131fafd2363",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42e0566e-dae9-42fd-a489-2a4e509d6221"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5299a159-3d20-41a9-b93e-03b392944919",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69cb6054-3adc-48c4-8fa1-d7da7b572575"
                }
              }
            ]
          },
          {
            "id": "17ce15d6-3588-488b-a822-43751370a9da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb29d654-75d8-4d2d-850b-ad708b61ae97",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "850171b4-d06c-435f-ab76-001f7602259b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63743aa3-af53-4538-ac1f-bd32dcec6eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6d6c4e50-349a-4860-8780-42cc44273fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc63b065-eb29-4dd3-b9cd-635b1494951c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9694fdd8-e84e-4309-b691-1b65715c1567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2bda77e-f3d9-4322-9727-8b53355db46f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2243784e-741b-42d0-bd5c-0ba9ecf58afe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8043fcc5-41a0-4093-9378-aae9dbc0a154"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1be40cd-e0f3-4c96-a65b-34712409f751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78002978-c22e-45ae-9e92-5cb60ef8d8bb"
                    }
                  }
                ]
              },
              {
                "id": "3ad3b750-d6d1-4d99-8fd6-595288cfe063",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f411a8d0-69d7-4f75-804f-4e00cdf6667c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4018024e-c552-4058-ba83-f9492314812d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13309324-2f00-4f95-a628-e2df48c01868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c90f9c4-4c6a-4e73-8614-4695b6a85962"
                    }
                  }
                ]
              },
              {
                "id": "0388589d-e786-4fbc-879c-625eccad6924",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0af5b50a-2cfe-46be-a34c-7e524ead3edc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "391abff7-6385-40d2-8d5f-e94a2b43cb4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc73b23f-94f0-40c6-b1a1-9da09f30d174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8166a1f-c5d6-47f9-8034-69d6b8f26edd"
                    }
                  }
                ]
              },
              {
                "id": "1c626220-2873-488d-974c-161eab2d0183",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62d23c8c-dc4b-4d94-8ae8-0a5b43e99d3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab7b0abb-9a42-40a8-a884-aea70eb78183"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35c61088-7d85-428d-bfb2-c59a3bfb4636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6a6487cf-4858-4825-a2f6-3dd6a8fa531a"
                    }
                  }
                ]
              },
              {
                "id": "40aa5243-0092-493d-9468-6a7c5417382b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed32b418-8369-4de8-88c7-fd346d9800ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09762b21-4b67-4c41-9e3d-aead2cdbf4f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b14e0c0a-1da3-4d91-b946-103b72bddd45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "783822bd-9bbe-416c-bd98-d98deb4630f8"
                    }
                  }
                ]
              },
              {
                "id": "62871e43-d2f0-4b25-9e40-02b57e25573f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "801f3e3e-4e7a-49c8-a727-7af5218baa69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a5e0d5f-b250-4d67-a210-d0e8fcb6a523"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769e4405-bbd7-4886-9143-44d974aced1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28d16425-b3a1-4b71-91c2-e0bc12f6c458"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75cc7f95-1a98-40d5-80b6-8cae58077595",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "456fe570-cf91-4bd3-b8f8-d20310485794"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f1b638d-f33c-4e88-a908-84702e989290",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6ab2b83-c91c-4e7e-8381-a01ea8622a06"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12c0124b-8634-472c-a199-b87256ba6c5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "52e6c703-68c8-4de6-af0a-f84ac65d4850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9f05530-8268-4de0-aed6-8e143782e796",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4ab048f-757d-4c8d-bb81-76855380ee8d"
            }
          }
        ]
      },
      {
        "id": "40914e13-79b0-44c2-9c2f-85f1ea0bb111",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "564c3a04-02fa-4f56-8d24-6efd2ae0fc31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83fdebfa-66fb-408e-bb5e-55c31b98b16f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "310a9d2d-6423-4444-a728-37770285f9fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b752c1-e42b-4578-bbea-c24c922bff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09dcb81-dc25-4505-9076-3cd8304848df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317b3fa9-da70-41c2-a8ab-5a617a63f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "92169d71-77f1-4b9e-91e9-8e46dc575cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc07e4-9611-48db-9875-9049abbfe8bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7857d592-13c9-4823-9a72-6b241240ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64801b23-0326-403b-9b4d-fae838084f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2f7097-40a9-450e-9944-ba6d17a84365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38a9a59-39e6-4130-b746-66af12414bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd4ccf1-2745-4da1-86e3-bd68fc277943",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29af2c6a-23e3-47b8-bf0d-debe9fe4ff3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d971e1a-acdd-40e1-bfdd-cfe0f35d2c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5902562-2f6f-490a-a242-dfc1519f9d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "254c30c5-9a8a-498d-a707-ee0747ca9800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d4a6de-dc02-441a-8bde-9346c4468241",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c71d345-e08e-4f3f-9e26-7825ce0d7808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be11d0f-8a56-4920-b9e8-10f684195357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e77294-0eab-4aec-932e-21b220d6affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d93309a-636e-455d-b4a4-42c84e986be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb706b2d-4a9d-448c-a986-0fd8a636e1d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b53048-2fcd-4d79-b713-fd5acf95a272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e526b82-8e8b-4ed2-a19b-6f31e9cdf29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782995c2-3560-49df-b0f3-3c8f8431d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b548bbe1-99b5-4351-a27f-224b9ffc2bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8eabb1-2850-46f3-b473-c49d00d9216a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0aa4b1-ddab-4567-9941-a6de2dda59cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8edf3fd-c973-4348-9597-a4c90253dbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d47817-be05-487b-a43b-7ab77803c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9110113-989c-49c0-a259-065220cc612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b866e0c-5fd9-41da-9d6b-6256fdce7780",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee4a84-2969-4724-8adf-c3cb895f32c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac75d81-8acd-40ba-b2db-02de435acbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bb2217-dcb3-4571-8494-aaf61f66c4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78585bf-c0cf-4e52-af0a-ddfbcfda36b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4b6ce6-3dac-478c-9858-010dfd408eba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3679aa61-450f-4cac-a343-aadbaec01b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2501ad-70b7-498f-9b62-6c5ae84fa572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f7e8bf-a359-4548-b0b0-d42087180c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64285366-a067-4072-af9e-364fe585497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9bd75-3262-4bee-bb6a-87a9ff6e8b13",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c86533-d152-4874-8ada-ee6dae32de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d565da-2c6f-4a6f-b414-d7323f5d9290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400b2150-97c3-410e-aa1d-68ef1a7403d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "813c27b7-e137-456b-b7fe-d6940fec54f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b20157-d10b-4e8f-8e8b-c287ea6f713c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28384d3f-19a2-44ff-a49b-c57a382d9d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9102681-9fad-4b4e-ae73-ebec6af0b6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8c5fc0-79bb-4a46-bcc8-5b412cf3283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f232a3-a98c-41f2-bbf9-8cec4ae8a160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb43954d-d3eb-4839-8422-6fec38171560",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7a0c03-f368-456b-aadb-f33e62484023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5b44a9-db29-4ade-950a-a3bc47ccf215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0262c423-54c4-42b0-9272-1f405285a269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d557a09b-e7b8-44cc-ab68-e8fca41f070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c793bc-14dd-4b7b-9828-c316169a8c44",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933342d5-12b1-45ff-b464-cb13d0ebd4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7e51e9-4a72-4995-87ac-08c506f160ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7447aa30-aa37-493f-b8b9-ffb057f5f6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e97ae1d-22fd-4f39-868f-b91bc309bacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc4f596-bf3e-4520-b907-8cf90e7263ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207a9b92-62a4-495e-ab50-475fb4eb52b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493457f0-9af1-415e-a0c9-74efe58d1037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa13d0d-2515-49b4-bd2f-d21b40a38815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a03ec-b6d5-497a-813b-dccbe79f8b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f778c384-503e-4a72-a6a7-c8343a38e4cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b2b69-041c-4d1b-b586-a80d8021ec06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baecc62b-dfcc-4098-a763-0f6dae3532d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e8113-2d04-4193-a09f-6a139941ee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd73c488-715d-4656-9229-d49c9e821c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897a3ac8-e12a-4136-ac95-6fed71d1d30e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc18131-d596-47cf-a717-8faf0ad02593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590ca64c-4ba4-42e8-97e1-a38b45319012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390beb37-8147-4032-a911-4ee956c6601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ff16dc-2056-427d-8c67-bd08bb777ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91394ff1-f138-401d-b693-48bcfb0a731f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac95b806-c9b2-4a8d-a1b6-c52c41a7c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0ef857-650e-44ce-9e8c-51af1976f59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5da30b-404b-4d23-8ccd-cfb39b353c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd0dacc-1476-46e5-a659-9752c4f22086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db586f6-8e96-460a-a12d-1c767b99feab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab9fd73-34c2-4005-885c-a41635aad39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab42478f-acc5-4550-a608-79dd98d13ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b17ea9-5bf4-4c21-88ba-443d3d16af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a323609-2a85-498e-b3d4-dbc07e4f543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4948e4e1-7a66-4b4a-b8a3-173801db9eab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6441a0-cea5-443c-92ec-36795c14a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1125269e-fe90-468d-b8eb-3360d690f722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12c7cf-09bf-42cc-8ca2-3af90a969b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1aeb10-7a50-49a2-a6a0-df89ba6456ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfc18a0-c00a-42ee-a3ac-bc7a1cdfb358",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e7fb80-90e2-4840-bafa-4f1a0c21e9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc86a26-b910-4d39-ae2e-9e269db25ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b75b9f-b1ae-47b4-9b1f-b0973088516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d813e795-483d-4d2d-a095-f879022784ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12eb0ea-ece1-4b93-82c6-adf422e60e94",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b8f356-88ec-4d3f-9e7b-01e8c8cc4a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a2d3dc-d9c7-453b-83b7-da0e20b36faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0474a5eb-5a3d-49bb-9f26-f469e2b2a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eb6cd5-ddd5-4d6a-b946-f4802ef3c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5653e1d6-acc9-4e4b-8ef7-084ab8f0d08d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a824a257-d8e5-426a-8d56-bf7e6ae3ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c218b10f-fc6e-48be-859e-95835774e70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61159244-c7fc-458d-862e-3c285f4cbd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4613c7c8-c4df-479f-94a3-f2502666686c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad5a209-a54b-4cee-88d1-e3d9bb5deb7b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d7f048-3ca4-448c-92ef-03601da0b2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1545a87d-5988-41e2-99c3-0385f41a867e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187fb84f-e19c-4ea9-b265-ce248afe2ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f8a789-e6c6-4aba-bf75-3c7bf412798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e70ae44-d512-4624-99af-0add64ed950a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0053e15d-75ec-4e3c-8c61-ba523972cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc18e8f8-5a72-48d1-8d2e-c2630d2b3573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ed44a-2462-4325-8c59-5c3ba719a748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c4c73e-fc92-4afc-9472-10fb45df7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef01e488-bd41-49e3-8ff2-e4f5e48e751d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1889476-6d85-45ca-85eb-5a36ae512a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64df7949-bec1-43d0-b020-ef7ae7891551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25efb84-7ce0-427e-99c3-588fc05ba270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131ba108-b4f7-476e-b6ad-920a71c8e7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4251f0-69af-48d9-8fc7-0c957c975850",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa92e3-c575-4dd5-9c98-956fa60d2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b21afa5-3872-4475-86d1-e9a452fd99fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac22c6-7e9c-43b3-867f-014f8d3630cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68284704-169c-4bb5-974f-2da3ffa8618e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc37f5d1-4cee-42bc-b802-3d5b35b60435",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af0571b-8501-4251-99f4-c603aaa9a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca171718-5b64-4984-945f-36e4434c6f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96c219-c011-466a-a6bb-51dac509468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e0d763-c234-443f-a82b-85726a7c468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1561540-fb57-460b-b47a-1a9168e0483c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e4698e-45e7-40d7-915f-5da69f6f10e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617b2729-60e4-4004-8e1c-2c9a9e9d3a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b5ac8b-e32b-47a3-ab1b-8ad02fd3cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a163211-4e1c-48f6-a144-f6b68d631500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae55c03-65fb-4d67-8c7c-1a83fe11ee2a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3ac65-e3f7-4100-9963-b1ed7eb26dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77665c1-232f-4579-860a-89191fc12ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc30615-854c-4d3a-b1c6-2c2eb478b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8096ae0-a8e5-441f-b16f-71a92fa9b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27378d9b-c174-4156-bfaf-89a58c05b21c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9d10e4-d8c9-4d37-8808-86f004e2f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a50b286-e1d6-4947-ab1e-2bd6f78b9a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc3dc50-864d-486a-8704-43550e0432ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f939ef9c-9445-4ba5-92b2-d289046017ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeafa4f-6d6b-44b1-9b50-a7d0d9c363b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0ff9fc-9917-4b18-904c-0c5dd159a7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a5b30c-936f-4748-ad96-01f92e1ca933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30504f9-5c0e-45db-8ce2-23cfcbe9b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f75496d-b98f-4c66-9de4-1f254e3901ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33843e8d-8701-4ed3-a98b-7650d08d9716",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fe041a-29e4-4e07-a9dc-e527862d4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61df0e0d-b9ec-4bf0-862a-46078b7f40b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d9317-441d-4b63-b7bb-71c9d7789343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f21d62-c0c1-422c-b194-2b4b83daa3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804fa0d4-a9a3-4cd9-bd83-4776f11e11da",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c081910-dc62-42ea-b2eb-cfd63d4685c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f70c74-4f58-42ca-9c8e-84238abe3b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f8eae9-dc42-4587-ac07-5291affe4a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79d1ca5-e765-452d-9428-5a2b4769c1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53209509-622f-47c9-a0d2-e9898c7a56fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11018842-ef69-4135-906e-49f85428f828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7585eb5a-97d7-435c-815b-75af49ea0ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6704b6-5d6a-4213-a730-6d109ed336fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1612cd8f-3470-40fe-a080-2463e911d13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa6a391-b821-4eb2-a5a1-a95daee8e937",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1750fa31-f6e2-49b6-9dc5-0a8227ed6531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f3c559-1bdd-4acf-9dac-92e94573725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713960ca-8149-4840-ba8f-716504e25fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da47e188-a1a3-4453-b5b8-58f6ad4e2a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a980dd9b-f140-49ac-aae9-6c11452aac57",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1776564c-bac5-4a39-aed9-7c8f13b2973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df89a769-43b6-4610-bf08-78e5f6d1361e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc1b67b-91c7-4098-9e4c-abb47f35efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c417c5e-861d-45f7-994e-91edf950d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59fdc8f-90f2-491f-bf35-d02c865fb483",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41b949d-267d-4e92-8556-ce667b475f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d1459a-4c7b-4171-a6f5-95ea60f5e016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b211cf-153f-4743-859f-fd5adcb026ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a36880-a8c9-4b06-97be-9d28bcb19d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b1ac92-8ba6-4b9e-8dda-9ddad0c194f0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991531f8-5d1c-4bdc-ad6e-98bde93eca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417efe42-6b83-4d59-a96a-a51771f9af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d41845-5c01-461c-84f5-c0e296c55d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c9de75-8a08-472d-a075-be25675f1c31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15ffe00e-4a0f-4312-9fd0-35e52bf94401",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf980411-f558-4f40-af64-d82c6e6e5fd6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49138f26-2064-40b7-98be-ce1c8f8e2dce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd9acd8-cd47-4ee2-a60c-01726ccc63ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b3ccae-fd0d-42a5-a697-cfb5577f06ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bfaaadb-8683-488b-a437-85469ccf3c06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d661e9-b897-4a64-a6e9-a5d0fb11b0c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cb3e090-5dc3-420a-9910-e6da1c452480"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5de8ff1e-b90c-427e-b1fa-69d9971dd944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4a458d2-c123-49d0-a0ce-6dde899aca0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "122d1bfe-0ee6-4332-acf6-dee46dca3835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f1b0d90-329f-4aba-87e2-a773ad247876"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9f3d7a9-2eeb-470b-bb37-7ed6afebe202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15163722-4c67-4726-af2a-b87a1ba63f03"
            }
          }
        ]
      },
      {
        "id": "3455b6ef-49e8-4e9b-adea-7c56b5e7b5f3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d04d3dc9-66e1-49e8-a09e-6e6b7beb7e5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8f1fb25-b25b-4c6c-9100-a97cf6da4201",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b7139a1-73dc-4417-898f-557172377e17",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91071cc0-f249-4ffe-91cf-bffd02054ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e6e39e-2fbd-4309-8591-c2e1468bd824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a77674-13e7-43c8-a996-5ca0b3ec76b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe028704-31da-4d1a-b26f-3a8a49d0b715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d932be5-0c54-455d-a86e-28ec33d27170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f613553c-51c1-4335-ad43-5e823c385f04",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28743809-25dc-4620-a48a-4eafbbd4486c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ccc848-4dfa-41c8-aa9e-0fa59932d646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17a699e-5e7a-4b19-8237-95782abd5737",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea310d-ac84-4f00-8da5-1f3d9ae994f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9861dc35-5502-4508-bf7b-59e9213c4f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bbea9a-d181-40a7-bd6a-c6453438c39b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c4a98-8c8a-4804-91ef-8c379a487443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b686992a-7b9e-4ef5-a000-425e9490715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f321dde5-7db5-4a3a-8140-3e409b6ea0c9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a7350-c7e8-4cd2-a392-6c8562e72a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5feee6-3835-4c2b-b72b-6038f8b0dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b0a996-0fec-4202-9650-3c31e0e24e1d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9c3ca2-732e-4d82-a9f9-8ab3292185b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde445dd-33b3-45e8-87ac-e117424f322c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639bf907-5b20-4e46-ad93-7da8dc622510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59729017-bba4-430c-94bc-214cc2f8fae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f885f746-1a4f-44ad-bf29-8334274a4aec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e73730-cf64-42fe-9aae-404dadfde54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b8c1d5-9c51-43fa-b570-c8c3daf30174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2badc2-bd12-4a8e-9f8b-1edf5892136f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111cacfa-ea94-44c0-bf3c-35f2edd7411d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d0edf3-cf66-4494-a306-758a7e91539e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b79dcf-a48e-452f-a307-7870d3d263b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b471bd-db3f-454a-862e-d69d0bc455f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82476df1-1beb-4847-9304-246755b038ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c744e-a93d-4290-8e0d-a2f80b1ec938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ddf1a6-434f-46e1-8205-0700271404dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5227b05-0f78-4d5c-9c53-c9cfa22325c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35587fdc-7f4e-4793-8dfe-507ca6e1e825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d6e91-b6b5-4725-b39e-0254d7c734f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aecb6a-e2bc-427a-8de1-3aaa8deb14b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3a163-4dd7-4700-b8c5-5e0648c792ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec93f2a-0650-406d-b2f5-e398c8cd007d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cede0a1c-b9e4-4595-88f2-c8001c1dc7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7a7d53-6f06-49af-bcb8-746dc5f4a8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efa51af-452b-4a53-80a9-3c2e68df5e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4086f82c-491b-4b26-81d8-4b8e0dede8a3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0e70d5-ae12-4f52-b90b-1a6050a1506b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e722cf5d-5cf8-4e08-9f64-8d1dc3322425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02910dfb-6872-44d7-813a-f5d2f997df47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870186c8-a836-4ee1-b25a-69673babf946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b55b3c-a221-490e-8562-8d04ab68869d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49b175f-d57b-4fe7-90f1-a4e8ff2ceb5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21080f14-1468-4637-9b8b-d551b2636fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee5e630-353f-4794-89af-77e725966ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0d204e-279a-4bb7-bb68-8e5ae09858d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee05e4b-831e-48bc-b86e-5fef4f4c114e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f35307-7f1c-45a6-8f64-e5c7593bdd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890bc7af-fb1f-44ab-b9ed-6b30d2720441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee054e8-55d4-42b2-8202-144a49513eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7488b23d-1322-44d7-a567-f8b5d7e5efd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f824363b-a04a-4ee5-b722-49795388cc8d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38334715-b0db-46fb-accd-a3ac69a0017c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86548f9c-99a4-4dbf-bf56-9166c0e002cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f387ba-b175-4c71-851a-b2c5388709ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea14f92-d579-4ef0-a0c2-7d62618df49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a117fc94-aa08-40d9-a853-f30757983a2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c983a6da-89d2-416f-be51-1abad2c73742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a55f8b-903a-45d2-850b-0071b08e150c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e331c03-985d-4cc4-9d90-7ac8b3e069dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97758ad-3e7b-452e-9272-421dd03292de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b30868e-4c06-479a-a833-995dcc8453bc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caadd76b-44f6-43fb-ac34-ac941ee5fc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af58f4b-8bed-4204-b07e-03c04111d992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95afab0-6ad8-4f73-8986-c3a2f20e7097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99f3344-26be-47af-a662-526482272652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703995a2-266a-4bbb-a0c6-0f29eaaabf1a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e87c241-215c-47d4-a25f-37fc03cd9350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c92c9fa-9044-4183-88ed-e154c06d78f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2d44f7-5435-4e86-82d6-d934ebee4346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f57104f-1e7b-4ac9-9a71-6acec31df289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e76fbbf-3cc8-420a-b356-54f808663ac6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffc9368-680e-4ee7-b1d7-4d704009d1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d953db85-5901-4f87-87a4-c81121b2aac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3d71f8-adba-40f7-af08-23bf47fada70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cf622b-a67e-4b7b-8eaf-29a934729b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ae638f-aba2-4d54-818f-956ea0af3de4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba0999c-b897-4549-bf1c-a599e4a6d31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1575c67-5fd8-49ed-8e03-89eab478fa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587944d6-2c6a-4966-b1da-7ef2f5b6638d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9ef243-78e5-4665-9d91-74056c228f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebebbd98-321d-4a66-9cd1-f3a79b93362b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7659708b-ae2d-4291-9c92-f1b1ef25a44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d167e7f2-6327-4753-a165-810fbbb59f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7272119-27dd-45c5-8a51-f14d00d73780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b37a39-101f-478a-a776-2576c0a668f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cac361-da76-49df-976c-4c1138088368",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe472ce-ee18-47db-9b35-28e3e051551d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a907e95e-601a-42cd-882a-abf47b8b4b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904951b1-f1e9-4990-8d97-f194c610f2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4032eb9b-9e0d-4028-a6fe-7c9390d68149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec2a734-864e-4d91-b7da-3e4f6659a3f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c647f6-1716-4eab-a4d5-fe08a51d83e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7e31de-dde0-422c-9dad-403e2001fba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544acb72-acf2-4282-b0c2-32be46965dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88d4fd2-060f-46de-adbc-8e2f50ac3290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7222f3d-c00f-45f8-9f60-1ddeb1c05daf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be350d7b-4b84-4320-9b53-64b47c64c2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c0e286-978e-4ec0-a0ca-4e38cb3265bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690010f0-f546-4407-90ce-b6e01cf221da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000d4203-fd58-4a24-89e9-ba5b03b8a57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b746859b-05ef-43cc-ae61-5348ed81f576",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53312331-86b6-4321-87db-494eb1a35bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8627b495-953b-414b-918a-220c4a27d854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ff3ba0-04fe-419f-895a-b42b2cac303c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5f0c9d-ae74-4cab-be5a-efb9b56cfec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf103d5-9203-4061-8521-7069650a7deb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9c0949-192c-4512-bbb5-0d06b6b77fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf19eb5-6223-472c-8f9c-87898b2965c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422466d-dab1-4f68-95c9-c5a4adf38126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9869c5-e3de-46a1-a0fb-399d7925b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109082c1-2996-4381-9b04-8d114a423d8c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfe2491-ddb2-4a03-88ad-5d3d68fdc20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da87e81-7bc4-4718-9b01-512412580018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cfe92b-5d0b-496e-bf40-cfdcd5634321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d7de41-27b7-437f-ad1a-678cb768f627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d28f8d-87ce-4d7f-85a1-220fff50f6db",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b09f4e-8129-4b09-a7ea-9796eef20147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3410fb7-015e-4e31-b731-06e88b7a3807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff18577c-35f7-489d-ba72-771d89d94ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e2689f-ed0f-470a-b0c4-3f4e520c32d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26830cf7-bb7d-4088-85ec-bb6ff87cf1eb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5827ec18-3370-4681-9dd1-b1f5a61fc0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff72a021-a6d5-43ae-9306-e7fc3918fa31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8abb53d-052a-4152-b2ca-0d30917ec006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4608a3f5-ad0b-4631-a387-dfc55eee7e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30125578-1592-49a3-b1fe-8754e71d644e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141bd28f-f18a-4dc8-9855-6b2e8095ea92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "328fed01-2942-45d6-a342-31c446cad7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb78445-4396-497b-b4fa-a3e4e9b21e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a461b318-9c26-4324-a62d-ae532f83c172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c19790f-f171-4f9c-9d5a-edb5669d0b8d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d21762f-ffac-4aa5-83d8-3032da71e861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78455777-d18d-4684-80dd-24249d84888b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332c5384-b95c-4da2-afa9-d60abe5eb773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d2516b-c57f-4d73-8376-391d145b25b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307bbaed-a5a8-447e-bd4d-ad5f2c6ec9e0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eabbe5d-5eb6-4392-83e1-8b488bcc44d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cd4c33-f4fd-4077-a5e8-731ccff6955e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db35ca40-2377-4ce3-bb70-37a828a2df2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f926648e-a602-44a9-904b-f76ab66b58e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d9063-9928-4957-a282-19bfb7408046",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0fdb8d-3f38-4749-af5b-5756a9cadd3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42fecea-4259-4cfe-81a6-be506c346515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6755ec7d-8233-41a5-accc-53a44b8dc8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe5b9c6-3778-48ea-afdd-dd39e9b1ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a53163-4805-4cee-9672-b268cccc16b6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251c3ca-7858-4c86-bea4-cf825200312e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c1372b8-7bb6-4f90-9ee5-ecc8fd203c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5b42fd-deef-422a-b520-75afef7a3e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caa6f7f-c7b5-470a-a2a1-1012190bda0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6434273-fdbc-4424-a1f3-fb99e29c978d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b108a88-c699-46b9-abbf-2b095522db92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309465a8-c815-4a2f-b9fd-0287b9041c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8bb056-638d-4148-8be6-fb87ffaf8c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d46024-ef37-482b-861b-708a78a5983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f28f5c-16e1-480a-a93b-eac8de49580a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1ea835-204b-42ae-ad84-2b285afaeb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4c5810-8634-41b2-bba0-9be4f5325e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc68fcc-0ddc-4064-976b-c41700878026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb07107-2c15-49ef-95a1-66796e6d428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a47157-d24a-4bd2-8bcb-e7e17313a480",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049e495f-5784-452c-8a73-aeed798f6acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a3f56a-22ad-4151-b14d-8a63be38cda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59a3cde-b3df-4ec9-8659-d152999e1450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85afa42-b027-40fd-9b1d-f890a7d8033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353f395c-951f-49b9-ab57-1f176bd390b6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b8325e-6d1a-4b17-a93c-398980547429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d560243-691b-4379-a70c-289234f28af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95921232-63e7-4179-9ba7-88f70ec0e1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf87791-153a-4c2f-a50f-324e3baa0f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec028548-16e2-4a17-9409-aa0958753503",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d96b05-bf09-4270-ab3d-9c99a45c07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c113cd-fd49-4a5b-b864-6c01e343218d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3de34f-37b8-4105-be82-3abe7d187a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaeee9a-6bed-46d9-8564-832be94dd4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179b5a0-abaf-4840-9a5e-c205d19e8cbe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbbc309-3566-4640-b2e7-e75b94d0085b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523e6aeb-a92c-4cf1-a3f6-14439d8d7706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2674c7eb-d22a-4025-a1e5-f127500872c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf6dbe3-06b6-4bff-87e1-5477a3e19f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463033d3-27e0-4c99-9be0-08b3a1a91bef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d9c54-7ac3-4f3d-a1a6-cc5ba9e2c9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65669f00-3914-47ac-901a-06217a0fd536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3018ba5e-40cc-43f1-aeb7-f2897c992b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55954f0-ab0e-4943-910c-c7482346012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939cd113-68b8-4812-bd00-4bcba52c80f7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec79cdf-6bd0-4ef9-8f23-eb5808264877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fbaf11-b596-4cdb-b355-564eed6be88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5098b7b-fd45-4163-8ae6-902c440bd270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b17b72-a468-4e87-8e43-74d43764c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329326fe-ec9f-4ba6-a123-39c5ce745e7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8f7d6-a958-4f2a-81bd-71001909aa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dc74a4-351f-4ffe-a0ce-381c272cda26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0479c6-4981-498e-aeba-ff1299efe796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5686674-bcbb-4732-aa93-c1ea3147abc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5550b7-e457-4e49-853f-257e146fea3a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d902d9-ba31-4743-bb9c-699f80a1a92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac17866-d99c-4c1c-9afd-ad153445d397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0bb0f9-c7df-4f18-8986-a1970b3a0e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64882466-ea4e-413d-b417-feab8c5b46d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af0863-2e22-4922-9a35-45228dbc0fe7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e461bcbe-70d0-4cdd-9749-512491fd96d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ef907f-c261-428e-b077-b4e95d195f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f21e84e-12eb-4eff-9edd-eb52ce98c028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12af59c-258c-4eb5-b7b9-dc74bfb47dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6bad90-49ef-4cce-9f9d-535156ade62e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43061a38-00de-44e5-99be-123f008442df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a6ae48-9ee0-4819-a1e9-e3973fdbc627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8176e98f-a7b0-458d-9819-a89d527e1138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee30d8a2-2363-4b9d-98c0-49267d711cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aacf6f-0769-41b3-82cb-a8bef6cf966d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22252c44-87ce-4bdc-95fd-0c0010bcb3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc1b71f-7ac9-4d2d-b3cc-72e2e15566ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f452d36-e5dd-4990-8ba0-fc48d03215a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4778e5d-e0eb-4785-8a5c-06e0a577bdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7bd411-c4ac-4161-b471-a083dd92c4a8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f9097a-0cd6-49c1-afd2-119e5b7b1528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62217c20-d8fc-476f-b2a9-2428e5a4072d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8689bd6a-dfa8-4aaf-9196-8262597e37c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8ba483-ba43-4c5b-a98e-7beace3ab0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7b7fb0-57e8-4a0e-8c4b-5a28311813f7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91f8a4-d2b2-478a-9ee8-d60ae42494e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a2942e-12dc-471f-904d-4895b181ab1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45414bf-0e03-4c3d-9ac8-366b0e02fb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251bc338-0dba-4d62-bf76-604d7e3e9986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26472e49-4f8b-4f56-95dd-75fae82ed984",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2a4353-5deb-4b57-97dc-addd529084e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7bbd94-4108-4dd4-8d6b-06b437bdfdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d6807a-d3e8-404c-8b75-3842915dc121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8febd44-7d81-4962-a608-77c433ce2fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e96e318-b081-4564-a2b3-47ce36d8bf18",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6afaa33-55e2-4e18-a636-632b3f610905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60285391-9520-42ec-a036-867204665530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17080e09-d3d5-4130-b7bd-0144aa7bb6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995f69e5-7125-4bd8-a3e7-70c4466cc9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98b2b1-2728-4977-b84b-9dd046325745",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0729c0db-75fe-4cc8-95ed-a435307c7ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ed3b5d-69da-407d-b06d-b095107c5fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11229901-19a1-4f39-b3b0-1aff2f05556c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6df24d8-3ef9-43f5-8c48-cd8ac66df05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6673df2-bac4-4824-b302-c68776b4c3e2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb45602-99fe-47e1-8845-f6ae97496548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770243f9-42ea-4166-b843-8112b7468b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656910e7-7533-498f-b304-75922638ebfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a07d1b-ee83-4f5f-be18-bcae1f78094b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fb9033-23ed-4ac1-8035-34e0574664c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e9182-74a2-45ef-aade-398081a7eb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c126744d-1326-44c9-9f67-12cede590cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2a43a2-69f5-4ee9-b0b5-6cb95b928331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023b732b-a5e9-4eac-aced-11d2d08417d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df0f9e-8773-41f3-9e5e-fff4e00b9db3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07cd054-40e7-4321-9c48-12bcaf3585ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453f05dc-c66b-422c-a4dc-c92acb23979f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f732e140-5bde-4174-8c1b-1df8ce64cf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5bf897-427a-4811-b4b2-e7f432998cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9473ce-e5d5-4fc2-b0d1-8c234c7ba3d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e868fcba-a8bc-4ebf-8836-d831a370801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e623ca8d-dd40-42c7-bafd-4c803958a9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d2c88-7410-40a0-97f5-fb37d7576409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccb97e1-1dd6-42bc-b99f-fb637c621d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c303ac41-c892-4501-b15e-e0686541ebb0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b0d4a7-04f1-4fef-8ded-920a93bb9367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cfeeec-cb17-4dd4-8fdc-b64eb49d7745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e0754-f970-4dda-ba86-7a253663b599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a39117e-9fb6-4de6-b002-1a50558a5c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb02a85-5e61-47a0-ba92-8fb1458c9715",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee44dbd3-7df6-4d5d-915e-4a70c2501fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0274e4-153e-42d6-8ea7-f4b2ea7c1488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a332848-9c03-4b3d-af8b-e97763fe4cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3bf61e-e409-4734-9cf9-046adcc00113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d9f5ad-20f7-4c08-8e52-05b3b38de861",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af336d03-e9b9-4006-ba44-320868209b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3996b8ba-ca52-4aeb-8c93-1a89ca404a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f7010e-fd13-40d7-beb4-f50ea36bcfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c9dba8-c901-4ea8-a625-ce9c5305f1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3ebaa6-c5ea-4f51-8ef5-0bbeffe158b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9195a095-9e8d-4d60-9f11-eef0720ecca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4a03e0-0799-4e1f-b113-22281dc5b8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da16ae9d-2bc0-4a34-b89c-8d0f2c84ef68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fccedb5-e392-4a56-8dff-f888e27be6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f05dd-db90-457b-9693-e4389a84aa9a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71db6373-4e4f-4969-8bbe-e8e16d880717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24970cc0-8bcf-4a1f-b3ab-4abae28ee0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7060a83-f223-4f7e-ac17-e1fc6dfb393d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0f9ed8-9e42-420b-a078-28a895e839de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3188a4d6-7cb0-45ea-b034-96a024307791",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa00151-f114-490f-91bd-08d31f2bce8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278aadb1-27ad-4345-9a79-3d1c2050613c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4ad955-3c59-492c-8c5c-b5ac1e47a583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4e915e-a726-4cda-9922-4f7ecb1e1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07254a77-e1a4-414f-b141-2f726936d8ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba2df92-4a84-4376-b00f-f46d0582da56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefc6f8b-3d9b-411e-ae36-ad713e9ff1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec27d7-8771-449f-aa70-921fa80a208b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e381b9d1-c510-4919-b516-2ad060d95175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25afeef7-6d18-434c-92c2-e425f93481e9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c8890-474f-4fdd-a51b-9d9a65590022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f056ca62-8433-4771-9b86-b51ae0a7bb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5bc7c8-0d77-4dcf-ad1e-ddd9c66849b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f82af2-2f64-4b27-9ab2-bebaf2a9836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e6ad20-54a8-430b-af0d-26e0b485e32a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf75df6-6c99-4a5e-9067-81ae2ee693a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b61b2a2a-570c-4fd4-8c3f-2fa825bb997e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a54daf3-3fea-4136-8515-22d05fd48c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14236f15-f8b8-4129-882d-43d42b1abfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d25eb56-2704-40ad-b674-85ba5baf34e9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c063957c-31b1-45fa-88dd-82e7748fc55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caabfa16-faef-4d78-96e7-59455c8429d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55927237-203c-4b59-b921-78c03a267c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbab2166-d1d6-4e03-9d5d-43716d9da7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf49a58-0c14-4eaa-8598-7172b7230cf1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48d2462-8f13-481b-b1d0-b597a47d3ab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61666d7f-ebd3-4108-800b-39bddc7fd02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368179ef-2022-49c7-9936-6b05d10f7a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca51b4ca-92cf-450c-9ecd-d40411d7bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afcfbc5-f1bb-4d25-b366-61eeb54d08d3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c132bf7-b411-4c70-b5ce-15a9eb4adbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca120270-bebf-4472-b537-3b123cc67871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19edb0bf-ecc8-4777-97b2-7c25c725cf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3105a4-3233-4d4a-b31f-fc5c58be47fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c850e1ff-1076-4731-b3ec-74254d97d61f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd36a4c-062d-4353-aa77-51bc74197c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad0d41d-2e40-4203-89f1-ad8dbfd2ee8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b124f9-3a86-469d-b77c-610d202081a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e31226d-4885-4385-bcc4-ad5bca6588e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effef913-a815-466e-96bf-81980cee1490",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d626763-13bb-4844-aac1-4644ece4005d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8a14c7-793d-49b0-869d-f6c4645a1559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd73e78d-81a4-4a87-bf28-f9c8e4145f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d551449a-b98a-44b4-b8ca-bf266942ce35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d355ec-f21e-4c2d-bbc5-8cd2a8b1c82e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f7b66e-3e45-4411-858e-4f11d50589f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3877c577-cfd5-41fe-8478-3bbc51db78c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8b9457-95fb-4c48-8bae-72e28867b170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534eb76c-5033-41af-9a4e-246e58c3b006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14a35e9-85b2-465d-b015-bdb6cfbef234",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a02247-2af2-4348-8e2c-d97d25e54d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69abfd65-01f4-4532-b514-960d50ccbff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9ee495-cc18-453c-9bb7-60a1455fd857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc15cda-0f67-4b56-a148-9184c27b0d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475d3f2f-043b-4a97-83a5-27243b5d0db8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc67a9ca-6b8e-416e-beb9-e7ea887f3373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7faf05e-ad08-475d-a287-1a8ba3ea5cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3daede2-b248-4e63-ad79-d5c3919eac6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5a010d-5e43-4a55-b60d-1f8913beabfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1307847f-18eb-4208-8148-30ad88a00f0b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43cbbf1-9720-43c8-b943-49cc31ea21fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b1a186-9140-4c5a-9794-1cb82bfc1b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f8d817-5271-4249-afbb-ecb2f0839781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5938ca8-5826-4ef4-a2c7-d82e2a26ba1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1853ce55-2379-4869-b3e8-c8365ece725a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab359a81-ee23-47bb-a2bb-1d35afeb3a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fed8a8f-a1a3-4073-9b69-09ecd9870799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148f0da7-e090-49a4-b109-58375b0f838a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aefd62-5e7f-44bd-9399-acb306c212f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe9c665-971a-477a-976a-abdebc327ffb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22019d6f-fd56-4a1f-b6eb-7f8e7eaf9dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eba4008-1df6-4c58-8539-694f376ca4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527d2a52-e5fa-4b8b-afb8-2201925e4b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca8b09b-74e7-488d-afa8-73675dfc7d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2353773c-d1cf-49be-889a-74bf60bc6207",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43423d7-fd8b-4160-bc6c-9ced331f2c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5875a00-f689-4f8e-8815-ac7154b68734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55f8ddb-4fa5-498f-aaf1-d0b3f4b908e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542319d1-f217-4f14-89b1-82c81506da7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733a9177-804c-4c38-b9b4-82e15bec18d4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3857e56c-dd5d-41b4-ac5d-6af4ede4b746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4faf9af-c4c4-46dd-a512-883651763764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784413b2-9d64-47d2-9f1f-d3d7e893d9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b581c10-0668-499f-a393-0c59928c1ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6567c119-ca82-48c1-98fa-205fa4e0236b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2487839d-85a6-4b89-8cb1-65c919b361ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1ba6c7-2090-49a3-a209-3e072a4f8582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ddb8bf-9399-4931-9945-78eb8ce40709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a127a752-3a22-4327-9b09-fe0d8d52730b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7dafa5-7e4b-4708-b839-4c8b5d0845e0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2940d530-4e42-452f-a961-7f442ef86928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b629a255-1465-4cb8-beaa-d325002fd6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951ed078-6608-4cab-9c6d-1e4e579c7799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00179636-e7cb-4ae9-b574-51cce18b6e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae616cba-3c9b-4f31-887e-30a0e41f96be",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d783d639-05ea-4547-aaeb-1e771901bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4c0646-e229-4f9b-9258-3c3ee0df1468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3755df3-3cf5-4199-a4dc-5e9057e99b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde9e8d5-dcd0-447e-bad7-08398e5a9677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04080ce0-4c4b-4e02-abca-82d35826b01a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc909e4-225d-49ce-9f39-5ccb1cf94d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05ee308-dc47-4c9f-99ba-525e0c3cadee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb65281-0bf3-41ba-ac37-c864c8b49080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd7976c-d0c4-4a24-ba84-2bf430e86a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac63d0-3560-4ac5-95b9-57a6601d7410",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a4dfaa-a90c-4251-92ad-0dc670ed10c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22df1d21-08c6-4a2b-a704-28aaf2298253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7e47c7-f34c-4e3b-ad22-f0d5d80876a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c336e3-4e44-4c70-bc0d-15263d2e4e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7afd2b4-16c4-4478-a8bd-4c929e036ade",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a340bf07-920b-4167-8151-7e1335d617fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a71df36-ebe1-4717-90f8-cb8e88a185e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93d1d83-bb49-4455-a633-a9c768788acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f43a98-4ec2-4d6d-8ddf-d8943fdf7152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ec8a6c-1efe-41c5-aae2-f104bf99eaf1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7617e994-a702-4dcd-b9c3-7375285de679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bf5d29-e1d8-45ab-895a-210cd1893a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a6f948-c42c-432a-8cd2-22427f99f8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d7c532-ef99-4983-9068-52f61978e583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f35c3-6905-4e83-a54d-a848ae4e37dd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbba5b2-2102-44a4-bf05-f60ffd9bc1e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf02396-d031-4e20-8472-760a8766277b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b8a785-2a86-4d98-b4ae-f8d875df86c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38ed681-3a88-4a7b-a87f-c415ac689dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534890a4-c428-4c3a-818f-da49989594d0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ae2487-ac65-4a0a-bfb5-b02104d72a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf7ca13-1b3b-4423-bec8-cbe956e3ff7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969205a4-0faf-4551-acc9-ac190af1a24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa7191d-4e0b-48fe-9d61-387fd49e566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa25f8f-61c7-4205-9d31-4f121664a25b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ddad80-5a2b-4320-b894-a65957e0aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c09dba-0e42-4a93-99be-dc4fa7ca4347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d4278-7d88-4722-8576-1068cbf7667a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbcd38f-0578-42ec-bc91-af3ae67aae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd04985-46a1-45d9-8320-8092970de69f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528be6f4-b34d-4b45-9ab0-9e2ce5c7997f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd83522b-1cea-4bcc-8c39-6728c68fbfb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691248d-e3e8-441b-a2ca-06a16f72f57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef5ad9a-0133-4839-8d78-198ff3f8835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a244394-b294-4c5b-82ae-43d3e15488ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c18de2-3425-4f38-8114-93dbf79bb46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68743fd-5652-4a4f-9c89-8327bcb45a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc5af9a-00c4-4eb8-a8b0-06dcfbccbf7e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3383e003-5579-4529-8c4c-7b3390c5a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115135b-55f4-4cb9-b3a8-594f13de7272",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d937966-0da8-45a4-8de5-0bfbb5dff495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4578f254-17e6-4298-bd26-007b300e291a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9956ba17-cd6a-42c2-a0cb-4bc075bff7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb050fd-6e8d-4dab-b7c7-cad76619bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4704ab-0685-4d95-8d4a-f41c51300be5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae577d-8c44-4103-a2e1-303ad4125a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624c2e21-2ace-4efe-8b17-cae1b27b9234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713ba354-5c56-4ae8-b378-9ee5de221991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54479ed5-7233-4c16-98cd-66e89170b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c08867-d745-48a1-8db4-00f960755672",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe4194-6eed-47f0-8a59-81a70db5f273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095d191c-0d14-4bc0-a06c-640eb72cf18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0f2c60-0881-4ea8-94a3-6a4cf73ae2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a43ce6-bbe8-46c7-b145-ae6a5065c712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04360305-b137-465b-990b-6acf2d38ddc3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e65207-dea7-4073-ac34-f766cd626f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c3484a-5c5c-4d04-9605-6739a2e6acd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba053e56-2df2-4f5d-bbab-4eb480867547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978c6471-a8ac-4cf6-a907-79f72658b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4b5cf7-55a6-4bc6-a9f0-cbfc002cf802",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b7673f-5642-4a0c-82c4-7ebfe83ecfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033596cd-4e76-4928-8154-4de2a3fd40b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c09218f-556f-4225-bbbd-be03298b8b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0894da-e380-43b6-a2af-2421084f8f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8682cfe7-21bd-4d98-8d7c-7e02545c89b3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a33db-9e19-446a-b817-3183ed31c742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee91a0f-b036-4b58-9512-89c41437eb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94538694-ff00-4628-9680-f5ee8423d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580eb651-ee21-4746-9757-c739d58941c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b955e2f-5ddf-452a-99b9-6e629b55bc4e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58df2103-5194-43be-bf75-9557a08f08ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e955f46-20f8-43a4-84f0-64d80e2b9540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f1780b-a96a-4498-8753-4db0921e74b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77094486-970c-4cb6-a8fd-d0c8a0c86a00"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "122e66fb-dbf9-42fd-b106-c07bdbe8c85b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "011e34c4-41aa-43a2-8483-642365a4b3ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efc512d2-1d95-4237-9244-7b17377033a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8097c101-0988-4f18-8d54-8185ca528190"
                    }
                  }
                ]
              },
              {
                "id": "32daa7e1-36e7-4c79-84ac-96ddb48e4399",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fad325b1-3733-4ffa-8fff-efa8e8b95758",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75f8537-4fb5-4744-89a5-452ed91132aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0c0e4d70-53ee-4980-93e3-6a50ccb01d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a707a-7869-4941-a8c7-52506549aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ff1e96-edd7-4002-bed2-07b3e250298b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cb755e9-fa52-4eae-85b3-81a2512f69ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21cb3d3a-ff43-499a-8f62-1a4bbaa4e38a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "241c0dcc-3651-4301-a194-82504d5deaac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecfae085-72ef-4b76-bdc1-724d6039a826"
                    }
                  }
                ]
              },
              {
                "id": "e22c76c1-5cd1-46c7-8e56-a74786422c8a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9193c66-5aab-403a-b7a6-1b2355fd81ef",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fef499-ca66-4cac-91af-60b79bdb88c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fe76e94f-51ba-43ff-a69c-25024fc75fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d21d7d-c2b9-4362-a14c-7161650a2a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5bb0a6-73e4-4768-98bd-32f76f7899a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7d0f468a-2766-4975-b435-1248d6f36bc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe855bf4-0824-4359-ae72-46b4e0006c58",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e7a66b-3620-4670-ace5-a39e6aba79bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d43b47f4-0097-4cd3-95e3-58c650f1e20a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5779a6ef-27ca-4dbb-8530-4705ba605e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43d9c455-702d-49e1-bd73-813acbc7ddd5"
                    }
                  }
                ]
              },
              {
                "id": "7a51ec5d-a677-40b4-bd1e-3f21aecaaac9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e1523d-f253-490f-8771-800b4afcd249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a8f190e-02a7-4b88-9b56-b5a3b217bd5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eb6627f-7540-4848-ae52-858c4e860d9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c436e78a-fef1-45fe-a8de-e0e70d7d8682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c457d0f4-9dd4-4533-8d71-b4a883bbf77f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c6e83c56-55be-4122-aafa-c76d3b5540b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa105b27-ff94-4be6-ad1a-fc815c560318",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0743eae5-3edd-45a7-8c85-cc75aa1ff511"
            }
          }
        ]
      },
      {
        "id": "70b987bb-3c7c-40c8-aeca-0ab56b018b4f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d2fdb2c2-31e4-4a73-b6eb-4e0d254d0de9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95045ee5-4e7d-4c58-9f86-4ec38f50536a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a51b8792-6cf0-4fe2-9ea5-26f8b33a48e1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9e0aaf-cd1f-4688-bc93-cef53a51b98d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "53e89634-1f9c-4464-a917-d5c9ac918472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875d3a63-9df5-4510-80fa-bc9638f239d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a69dbfe-3549-4cef-b9ec-eb7954421bc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "112a9288-4aaa-415a-a7b9-0a337a5830cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6d26895-81d1-4449-9ffb-4086e9fc653b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a03d61b-c840-458b-84f7-4f1ab8288f3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04984b5a-2c8a-4948-b6cf-1b4cae6ea9c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01740b86-771d-48be-9c53-7fc964893c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f34747cc-a82e-45e3-99ec-8aaf39d3fce9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48358b82-f341-459c-96fd-de8779af15ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3d3d1d7-2b6e-49f2-876d-af341155075c"
            }
          }
        ]
      },
      {
        "id": "3076ae7d-4b9a-4675-bde3-8e25be95b334",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "928fcc81-d1f8-4e89-aea0-efda63b1dddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cf24363-cd10-4935-becb-3fba6b29b124",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d770684c-c6d7-43bd-93d5-0889d2cf1004",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1f10cc-1ab6-4f91-94d5-1a2c615654a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc133bab-a418-41d2-ab5e-aea54af1688d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf53ed-c4f1-4916-9768-8a0e9ef345e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aed2bb39-d7eb-42e7-9042-a05aa6f4f113"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3061a96-635a-4ea8-98f7-c1047b12d36b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192b424d-690a-4ba3-8e28-86ab2b87880b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c927567d-bc86-4f5b-a20c-353876775d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff259245-055b-4a83-8bef-1a44f45db74c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "269d671d-0404-4f36-aad1-baca890fc89d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a4c13be-9f34-473e-8943-13a5998665a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d43f1dc-31bf-469d-aa57-2abb14230e17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb774007-68af-4a55-8a8f-24c86f5a3348"
            }
          }
        ]
      },
      {
        "id": "45d3330c-7f1a-44ad-8098-6acd8a2674a1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9729e903-7758-480d-80b4-7118500e6853",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3cc8602-6c2b-4757-acce-6517f269f6cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1dda14e-3238-4b0d-95f6-4769be7b5f29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e48d8d-d723-41de-b7d9-8c65c2c1d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e6e8817-e753-4424-ac5c-0a4520ae0715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e27ed8-3cc0-44e0-9a76-359421aef5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd0375f8-20aa-4e99-9265-65df21bc0875"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be8a819-8dad-4634-8ed6-cb7b731ac21a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42bb0161-f3d2-411c-968c-66c3536848cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c291e05-cd12-41ea-bcf8-92be12f1d4e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5ba288-8d1a-4d9b-a6cf-f65aa9b7f367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d1fc606-8a3d-4ad6-9dfd-94f698d04b63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b223a5a-e28d-4034-aa7e-957e8eeed044"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d488b0f-3336-4550-a6ae-d23eb5b88646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c760aa98-7b70-420b-b676-604b606f563a"
            }
          }
        ]
      },
      {
        "id": "fee0dfc1-b858-43b3-aa86-e48350d7d8ee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e19cfe2e-a023-44e6-b991-3355c54a63af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9a97e65-162c-4db5-984f-0b22987d22b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "557ea72e-966b-47a6-b94e-3eae3c5f06ca",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3504c6-3a0b-4eeb-9578-f99fd26a562f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42829866-4ceb-446b-9018-650116781c5d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 352.5674603174603,
      "responseMin": 14,
      "responseMax": 9446,
      "responseSd": 1372.6706703571062,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719535112376,
      "completed": 1719535209534
    },
    "executions": [
      {
        "id": "86934a65-b81a-42d7-a51d-95de2649a0e9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "175ed139-a019-450c-95b4-0e858c86056a",
          "httpRequestId": "704f689a-f690-4b5b-ab49-407bede89f4e"
        },
        "item": {
          "id": "86934a65-b81a-42d7-a51d-95de2649a0e9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5236c5c9-f75a-4240-8ca3-42569d97eaca",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "33c153ef-4072-4355-ac2d-f585b69d4be6",
        "cursor": {
          "ref": "30bbc5b8-703e-4b92-a406-c45dd274799d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d43679b-8d81-4458-b4a0-992c0ea47bc4"
        },
        "item": {
          "id": "33c153ef-4072-4355-ac2d-f585b69d4be6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3521e1d4-2c77-450c-94d2-61eaeda08ad4",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "fe55bd98-aee9-4f91-a3e0-77cff2b1780d",
        "cursor": {
          "ref": "75ef9ca2-9633-4c82-86ff-2528a7d89686",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2f5b474c-4692-47eb-ab5c-3aa9d4b223e3"
        },
        "item": {
          "id": "fe55bd98-aee9-4f91-a3e0-77cff2b1780d",
          "name": "did_json"
        },
        "response": {
          "id": "18cf0f93-6d3c-4d86-ac79-40a5197fafb0",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c85e45-c0bb-42f6-9afc-27974cd17b06",
        "cursor": {
          "ref": "4df0f7c8-6502-47ba-a160-44a9103791ee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92eb6d0a-d098-4a8d-9099-79f62ddc6b2c"
        },
        "item": {
          "id": "d5c85e45-c0bb-42f6-9afc-27974cd17b06",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e02e99b-039f-4572-ac2e-7964d5db4f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2471,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c85e45-c0bb-42f6-9afc-27974cd17b06",
        "cursor": {
          "ref": "4df0f7c8-6502-47ba-a160-44a9103791ee",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92eb6d0a-d098-4a8d-9099-79f62ddc6b2c"
        },
        "item": {
          "id": "d5c85e45-c0bb-42f6-9afc-27974cd17b06",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e02e99b-039f-4572-ac2e-7964d5db4f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2471,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51311f9-598d-4e36-b047-7258cd17eb76",
        "cursor": {
          "ref": "70a85ff5-fde2-4fa5-ad92-0289974898e7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "21dafd4d-bcae-40ec-a4f5-96689d18084e"
        },
        "item": {
          "id": "f51311f9-598d-4e36-b047-7258cd17eb76",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fbc84053-8d0d-4a19-be9c-2b8563eaa9bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2259,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5542233f-19a6-42ca-8613-13d154372d3d",
        "cursor": {
          "ref": "062f415f-4e81-40c0-ae8a-f1eafc0bd4de",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e3c1c726-c6f6-4ed5-818f-d76b1abc9470"
        },
        "item": {
          "id": "5542233f-19a6-42ca-8613-13d154372d3d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fbdf0193-6e7d-49be-96e3-af77f80e3b0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2420,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5436a2d3-f337-4711-8ad8-9b9a913d2f93",
        "cursor": {
          "ref": "fe7f1886-1631-4784-8afb-4be30618ca3d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b34cd409-111c-49bc-9835-9943b5db0778"
        },
        "item": {
          "id": "5436a2d3-f337-4711-8ad8-9b9a913d2f93",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cb8818fd-1149-4800-aa3f-7173851b99bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aac2ee-21ea-4218-88ad-cef53d6742d9",
        "cursor": {
          "ref": "2e712bd0-7cd3-4b2c-bdb2-4d93f30ae611",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3381a156-f79c-4b5c-8c49-91401eca49a8"
        },
        "item": {
          "id": "44aac2ee-21ea-4218-88ad-cef53d6742d9",
          "name": "identifiers"
        },
        "response": {
          "id": "9e845835-9e41-4e74-b110-cd533be684d5",
          "status": "OK",
          "code": 200,
          "responseTime": 2513,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e7fac-46ea-4c70-a915-00cfe1e5a851",
        "cursor": {
          "ref": "38bbbeec-e959-47e5-a2a1-7c5d700b54cb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cfc43e96-ac56-46e4-86d5-2353d33c67bb"
        },
        "item": {
          "id": "2b4e7fac-46ea-4c70-a915-00cfe1e5a851",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fc71168f-db9f-4b52-9544-6620805c5d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7ba89c-816b-4e4f-b4af-6cd4abfd5755",
        "cursor": {
          "ref": "fae5c991-b3db-460d-be35-c82790ca2f1c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5315f5a7-b0e2-4c29-8cf1-72837e821d3a"
        },
        "item": {
          "id": "6d7ba89c-816b-4e4f-b4af-6cd4abfd5755",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d821f8a6-038e-4a28-9d6e-ff63dc91d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806271b1-0502-4cd0-bb5b-5810ddc57467",
        "cursor": {
          "ref": "d06a052c-d8cf-4654-8fa5-b4faf6c6d04f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "40728168-dcc7-49f5-a124-bb724455815a"
        },
        "item": {
          "id": "806271b1-0502-4cd0-bb5b-5810ddc57467",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "98805169-b4a8-47be-9846-fc717fa03ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b53f2f-806a-47c7-97bb-2d500954b11c",
        "cursor": {
          "ref": "0ef8e3ba-f930-4382-89a3-81a5ca8aeb89",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cf8188d5-78b8-4542-af55-b399e485eedd"
        },
        "item": {
          "id": "87b53f2f-806a-47c7-97bb-2d500954b11c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "724e0ee7-7809-4540-8ff0-57bde4be1f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9e4c58-af1c-404c-bf6b-df3570aa5ef6",
        "cursor": {
          "ref": "d9911961-b3e9-4552-b19c-96f68292f550",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3beb06e4-a71c-415b-a0b2-8415522f3fa7"
        },
        "item": {
          "id": "ff9e4c58-af1c-404c-bf6b-df3570aa5ef6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b908a74-80fb-4745-a4a5-3c2b96b90b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04455e5-a8af-4237-9c2e-3905f2384ad9",
        "cursor": {
          "ref": "d29c9da1-e33b-4ae8-a06b-c87ceacd3a01",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cdae28a2-4e59-4f36-9936-460d27d8d566"
        },
        "item": {
          "id": "c04455e5-a8af-4237-9c2e-3905f2384ad9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e970a758-7cb1-4a4e-aa1e-d89a85045482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2e72fb-ef55-41a1-b5ba-c25fae6c971c",
        "cursor": {
          "ref": "182a4d4a-af67-4e9d-96eb-878e0edbd63b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "940c1838-ac9a-406c-a02b-1084ea5b129c"
        },
        "item": {
          "id": "bc2e72fb-ef55-41a1-b5ba-c25fae6c971c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f635eb31-8e9b-436d-9a2c-a876c5257c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f651598e-2bb3-4d9f-ad44-4fd6ab0693e9",
        "cursor": {
          "ref": "098de488-767e-4d85-9f7d-a1402e679d58",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e2cecad-7266-48ee-a06d-d5b64828d78f"
        },
        "item": {
          "id": "f651598e-2bb3-4d9f-ad44-4fd6ab0693e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e100f0f6-f838-44f2-8d72-cdf103f2556f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168814b-c958-4b30-8f6d-c5bdbf2ce639",
        "cursor": {
          "ref": "c3683f7f-7b58-434f-9405-af1dc08127a5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "80c9ea79-b5ce-428d-ade9-85a9c935b7ed"
        },
        "item": {
          "id": "e168814b-c958-4b30-8f6d-c5bdbf2ce639",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4350bde1-e2a2-4d55-a0f7-eada12a27120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06de1a7-4fd3-4239-9f12-4031d2f5418f",
        "cursor": {
          "ref": "60b298c0-bb2a-4f14-b8f7-e3b3c12a9bc9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ddf876f2-a181-43fe-bb9b-ffc8dce807d2"
        },
        "item": {
          "id": "c06de1a7-4fd3-4239-9f12-4031d2f5418f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8468f84e-b6e2-4902-af74-aa9a9d3f1fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a84690-3dff-4e75-a3c4-2a5b6800bbc9",
        "cursor": {
          "ref": "dcc52592-c909-468c-82f7-498107233569",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1cff550e-f24f-4838-8df6-2de41ee83ffc"
        },
        "item": {
          "id": "64a84690-3dff-4e75-a3c4-2a5b6800bbc9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5dfdac16-8bb2-4fd7-94a5-4c8e7a0f1728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd7ea97-edce-4532-a7d1-f0318db01aae",
        "cursor": {
          "ref": "58fd4f58-accf-4522-a849-d552baeb72ab",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8d50efb5-3c30-421a-a93c-81a3df78b890"
        },
        "item": {
          "id": "9dd7ea97-edce-4532-a7d1-f0318db01aae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ab624c32-40a5-498a-b8e7-306f6a53bde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5fd2ae-c136-46bc-896b-b36277f28ad2",
        "cursor": {
          "ref": "7a834572-33d9-4312-af54-53dd4430f8cd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2f3256cf-412f-44f3-895d-f3e999489126"
        },
        "item": {
          "id": "fc5fd2ae-c136-46bc-896b-b36277f28ad2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7288c81e-c52e-4b18-8989-66a9b9fb0ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2283a3d-7742-40d6-b2d1-f8689ab23d47",
        "cursor": {
          "ref": "adb5a1c5-8096-4c28-b68c-98f73334dc64",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b918f5e-19cb-4036-b76f-53f4a757c9bd"
        },
        "item": {
          "id": "b2283a3d-7742-40d6-b2d1-f8689ab23d47",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "40d790a4-57b8-42f1-9028-2cbf8e3e75e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f6f123-986c-42b3-941a-9e15d2af60f9",
        "cursor": {
          "ref": "10773116-ac61-47a8-85e9-ec31ab019492",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08c9b462-7535-48f3-ab00-135fe4ef2b43"
        },
        "item": {
          "id": "06f6f123-986c-42b3-941a-9e15d2af60f9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "37d0a961-e44e-4b2f-beca-f3f46f2a3c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f0835-8c88-4f5c-81b2-fa942030b381",
        "cursor": {
          "ref": "d0e6a954-2da5-49b6-bcde-bd3416deb2bf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2796a559-42e7-484b-b209-a49e874bec5f"
        },
        "item": {
          "id": "f69f0835-8c88-4f5c-81b2-fa942030b381",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "411bc5d5-fd3c-4f03-ac29-bc6ad57ba015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da692639-fa12-4444-bb5a-ec57647edd84",
        "cursor": {
          "ref": "d42ddf8c-997d-4e2b-8a2d-71132ac19352",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7ba1ccc3-6ea1-4aae-815a-0515d7c6979a"
        },
        "item": {
          "id": "da692639-fa12-4444-bb5a-ec57647edd84",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9341d6ee-6087-475c-8040-f6ca86f37cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f24822b-22bd-4c11-941d-3f84edb18df7",
        "cursor": {
          "ref": "74a7c207-546f-428e-84a9-6e80052f338a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d449ccc3-45b8-4ca4-a855-c5e964f46f5c"
        },
        "item": {
          "id": "0f24822b-22bd-4c11-941d-3f84edb18df7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "25a72044-fcc3-4124-ab42-c7dfdfd51e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03492c28-3523-4c5b-8926-1892be54ea6a",
        "cursor": {
          "ref": "1b1e082b-4d8a-4ca0-8ff7-6a9a4ff2118d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "92b00ad5-b2fc-4e0f-a2d6-0d11d9c6b827"
        },
        "item": {
          "id": "03492c28-3523-4c5b-8926-1892be54ea6a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01f8844c-ca57-4752-9b63-4f68b6e826bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76036465-1434-46f0-b1f9-cd74f0368570",
        "cursor": {
          "ref": "123cab1f-2f30-4a8c-9f30-e2c8b8ac5694",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0f790274-c408-4ed7-aee0-1642b9ec5ae1"
        },
        "item": {
          "id": "76036465-1434-46f0-b1f9-cd74f0368570",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2ee4747b-fd3c-47f8-87bb-7b515462f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8200e78c-6735-4290-9b91-58fce928060c",
        "cursor": {
          "ref": "3d421fb6-bdf7-4396-ae7d-bb0c568f4466",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b40d918d-7736-4194-807a-c517157385d0"
        },
        "item": {
          "id": "8200e78c-6735-4290-9b91-58fce928060c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b05f8112-bcef-4dee-86b0-fbeae910eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ce4c09-fd96-4a20-8f80-a597c5d59b49",
        "cursor": {
          "ref": "3e9a0a68-2577-4987-9216-9c91877e56dd",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1ef94a8-6cef-4cc6-9030-25883a6d1014"
        },
        "item": {
          "id": "a3ce4c09-fd96-4a20-8f80-a597c5d59b49",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "35d96163-6a8d-4de9-bd7e-11a79ee3f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b81f8f2-73db-4b31-944a-5bef42a9a3e7",
        "cursor": {
          "ref": "c5ae770f-62c2-49b7-b2f3-308fb660bf74",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a71fcce7-65d2-4c05-beaa-11b3f568981e"
        },
        "item": {
          "id": "3b81f8f2-73db-4b31-944a-5bef42a9a3e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8572e90f-8d6a-47d1-a927-461a0a466a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd4f0e9-3252-4ac8-a230-b171905a9d2f",
        "cursor": {
          "ref": "cd1d53fa-93ee-4ee6-b127-5b1addf9205b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "eb8d7820-a431-4b13-9ddc-75ddf0b173f4"
        },
        "item": {
          "id": "bbd4f0e9-3252-4ac8-a230-b171905a9d2f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eaa5e617-b3b1-4b82-9070-99d462b6d874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbd2c2e-14f3-416a-81b2-da3f7d8416e8",
        "cursor": {
          "ref": "a42760c4-6a63-4612-aeed-d711e88d21b5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "58485bc4-fe38-45b9-8394-cb80fef6500c"
        },
        "item": {
          "id": "2cbd2c2e-14f3-416a-81b2-da3f7d8416e8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d6d161c-580a-487d-b249-b4adf19a2169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e14c95-4f99-4f17-be88-b19d577b0194",
        "cursor": {
          "ref": "6c30ac3d-e177-4a61-9048-53a2fc5bb8af",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c2084609-0aa5-4201-9c0a-2747c137f439"
        },
        "item": {
          "id": "d3e14c95-4f99-4f17-be88-b19d577b0194",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fefd3a85-d8f6-4332-b9cf-f9135b9a57e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba976af8-7ec4-45ab-8040-f943b0d083fb",
        "cursor": {
          "ref": "a1f76dee-8979-45d4-8f85-370aba08e47e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8452a28c-bc70-4e63-b941-38982e4d560e"
        },
        "item": {
          "id": "ba976af8-7ec4-45ab-8040-f943b0d083fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f042cc54-6673-4c71-b61c-80c8c5b118d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f82035-4a2b-4e7a-abd6-c6db45b50bbc",
        "cursor": {
          "ref": "3bf84465-42b2-43d2-a986-5bd5f123c6f6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2eeae618-1684-4308-8a84-c9044c04892d"
        },
        "item": {
          "id": "77f82035-4a2b-4e7a-abd6-c6db45b50bbc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c51f6ec0-dcbb-44b3-bf85-9154a1535064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a3183-1862-424e-acd3-d025943d07b2",
        "cursor": {
          "ref": "fe069870-e12c-4b11-af6e-78a5ea1318af",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "16be9613-baf8-41c7-babc-ce99626a23fa"
        },
        "item": {
          "id": "6e6a3183-1862-424e-acd3-d025943d07b2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8000ebf1-f577-4eb4-8479-7bdf048aef97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2648fddc-e62a-41ac-9de9-63629abb369e",
        "cursor": {
          "ref": "5909d202-4f25-488b-b754-bb6a71f755b1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f0d7c24e-8bf9-4e48-91f8-220263c342e6"
        },
        "item": {
          "id": "2648fddc-e62a-41ac-9de9-63629abb369e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "deef05c5-2f26-4801-ac41-ff4bc3c5276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82016efc-7d72-4d9d-8eb1-85b441062dfb",
        "cursor": {
          "ref": "d824d2ae-3927-42d4-8766-b825803f6819",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5fd15cf0-3727-4dfb-8e91-62c5e936990c"
        },
        "item": {
          "id": "82016efc-7d72-4d9d-8eb1-85b441062dfb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "68c3a103-8556-43bd-9d52-13bb0f566312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d9fe76-24e9-4136-9223-c9b64408d4e8",
        "cursor": {
          "ref": "47555aeb-3630-497e-ac83-32e97c2422d7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1e3cb683-7862-48cd-96de-20ca8199e7d6"
        },
        "item": {
          "id": "25d9fe76-24e9-4136-9223-c9b64408d4e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "41c64721-0107-403c-976e-e809a442fefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be51ae9e-39e2-4a25-8870-91591feace5d",
        "cursor": {
          "ref": "b8bdd4d0-35e2-48d5-a775-c53040e3de3a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e750f0d9-9c3f-4a17-b3e1-cce7c8fcc643"
        },
        "item": {
          "id": "be51ae9e-39e2-4a25-8870-91591feace5d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fb9d793f-0488-4ae9-9a43-01ba94a26651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e55c53-fc7d-4a1b-af8c-a651aede6c3d",
        "cursor": {
          "ref": "a290ead5-1dc4-40f1-8ef8-eaea248823e3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d558135f-93dd-4a66-8feb-00056f12901b"
        },
        "item": {
          "id": "b5e55c53-fc7d-4a1b-af8c-a651aede6c3d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6fe89b54-d94a-4b8b-886e-0c1b85d7465f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9458a96a-9cd3-4a54-a91c-7912539c30d0",
        "cursor": {
          "ref": "d5030910-b08c-4415-9bf9-26beea986106",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "36e056cc-f5be-49a1-8d08-617ab630199a"
        },
        "item": {
          "id": "9458a96a-9cd3-4a54-a91c-7912539c30d0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b48a77b4-ab7d-4a75-8429-777f8c53864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42658679-5a55-4c3c-8ad2-53906d90e947",
        "cursor": {
          "ref": "908deab4-ce2d-4164-ab25-cb11251cf312",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4cc302bb-5991-4e0b-aafd-2869e535df3a"
        },
        "item": {
          "id": "42658679-5a55-4c3c-8ad2-53906d90e947",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "76ce3002-a799-4d47-932f-d8b8952da0c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f3692-5a0e-4db7-991d-f967861929d6",
        "cursor": {
          "ref": "afd77529-faf0-4400-8960-1e8d59f4ca6c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5267edbd-173d-41c4-ba80-dbc560e1ca5d"
        },
        "item": {
          "id": "3c7f3692-5a0e-4db7-991d-f967861929d6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ef96ca36-80b8-4002-ad04-719c03dac59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ce364-7d81-4728-864e-19587e09f138",
        "cursor": {
          "ref": "4010812b-144e-40c2-8c9f-61ea0ffe072c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3b98ef51-514c-4272-81a6-e86b3c0b2371"
        },
        "item": {
          "id": "b33ce364-7d81-4728-864e-19587e09f138",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8b0488ab-6cdb-4308-9ec6-d6ad35324d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c18a242-9d85-4ca0-b89d-73375e19684c",
        "cursor": {
          "ref": "be5dba6f-8dad-4585-853b-d675dd860c36",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "334d54bd-8e18-41bc-9566-a450e9367a04"
        },
        "item": {
          "id": "0c18a242-9d85-4ca0-b89d-73375e19684c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "94815b3d-ffba-4524-a179-6be63f1ec1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078cf3cf-74c5-44d4-b500-ac091507ffe3",
        "cursor": {
          "ref": "6dfc2a6a-a694-47ea-8e1d-bbbc2798909f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9452049a-29e8-4b7f-bb1d-f7363bcd55d0"
        },
        "item": {
          "id": "078cf3cf-74c5-44d4-b500-ac091507ffe3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "82fd406b-9173-45f3-bb69-2a7bcc0a7065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773dad0f-2a44-46e1-8477-79d16a2b15f4",
        "cursor": {
          "ref": "9efcb2d8-98e5-4ca3-be3d-14193b1cfb83",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c94bd327-de0f-4ac1-8ec5-7bfaabdf2365"
        },
        "item": {
          "id": "773dad0f-2a44-46e1-8477-79d16a2b15f4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "097ad18e-add3-4b37-bfb7-0b4e69ac2db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb442f5-a347-4efb-987b-487b4bdaec80",
        "cursor": {
          "ref": "1a3e0399-1950-4a80-afba-5367c55f5420",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c897f224-7c16-44fb-8394-b3b2b1c872b2"
        },
        "item": {
          "id": "0eb442f5-a347-4efb-987b-487b4bdaec80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fb06e082-d3ce-4f61-aec5-24f80b47c50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc731e6-0c12-4248-941d-2f4d8a7bea2a",
        "cursor": {
          "ref": "cfe3a490-b262-45b6-a5c3-17b117e8be1b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "69eb71b5-0f55-4815-87ff-778be6a99e2e"
        },
        "item": {
          "id": "5fc731e6-0c12-4248-941d-2f4d8a7bea2a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b9da204f-c2a9-437d-afa4-9e57d15befa2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0ef12-5ef8-42af-91c7-dc57aed31ebe",
        "cursor": {
          "ref": "448a03b3-030d-4ca6-b031-51e3b7dcf8d3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ae01758-354c-4567-9585-86a38f64961e"
        },
        "item": {
          "id": "77a0ef12-5ef8-42af-91c7-dc57aed31ebe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5d312d16-8a9d-4225-8e01-4d0490677c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98362449-2413-4db4-b1ef-e535ce9df460",
        "cursor": {
          "ref": "360913c8-a81f-4e72-81e2-84d13447286a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "118d8e8c-5691-46f5-9eb4-36b83312a2e2"
        },
        "item": {
          "id": "98362449-2413-4db4-b1ef-e535ce9df460",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c0caf07e-ced0-409c-8bf1-a49215a54dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f4610d-608d-4a7f-9f45-643d4b010332",
        "cursor": {
          "ref": "c232cd83-b30e-4fd9-abd5-7194b175c53c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8c7a11cd-64dc-4df7-a602-ad0dae67cbf8"
        },
        "item": {
          "id": "93f4610d-608d-4a7f-9f45-643d4b010332",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ea720070-4df9-494c-9cab-79a40c863f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec042f15-9d90-495c-8003-f2d7bddbb564",
        "cursor": {
          "ref": "986393fe-625e-4ad6-9112-8e58402cab17",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8bb484b3-d306-4c73-a30f-f3b8de1e24ec"
        },
        "item": {
          "id": "ec042f15-9d90-495c-8003-f2d7bddbb564",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ed5b4e66-c342-4fb2-9fa1-37206b8c73ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e9e2d6-c694-46ac-ad01-04e6c874c263",
        "cursor": {
          "ref": "cd2ba46e-ce5d-4ea0-a03e-8fb4eb6e2bed",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8b436b95-607d-4344-84cd-8510d454ef5f"
        },
        "item": {
          "id": "f7e9e2d6-c694-46ac-ad01-04e6c874c263",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f2ea3960-5c30-4c7c-992e-512212c450dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf51354-d836-4401-a1e9-2d2021f14905",
        "cursor": {
          "ref": "79af8bd0-ba8d-4afd-ab53-fa6c1c90f9aa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "29eb14d7-a9cb-4052-954b-72a11048b465"
        },
        "item": {
          "id": "5bf51354-d836-4401-a1e9-2d2021f14905",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f5554d2f-2e2b-4be3-9177-ececfe596073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadbf6f-8b4e-44ba-bdff-d0b5fa3b814d",
        "cursor": {
          "ref": "e3923545-aa7d-4fbf-a464-87f4b9006a72",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "28319623-e227-4770-95fd-957c54f6be50"
        },
        "item": {
          "id": "dfadbf6f-8b4e-44ba-bdff-d0b5fa3b814d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "22eeb453-4ea6-4dd8-8ed2-1fa3db6ae3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4c53c5-184f-4401-863b-9c4da085c299",
        "cursor": {
          "ref": "a528654d-d759-402d-807a-db170ab9dc86",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dea5a440-d549-4770-b74f-5a6559f416ae"
        },
        "item": {
          "id": "1c4c53c5-184f-4401-863b-9c4da085c299",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6077a4ec-bce3-4687-ac5e-bbf2f211396d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512724b-85e1-4bfb-b62e-ce58e18e8e42",
        "cursor": {
          "ref": "8de33eb8-6859-4611-945b-d27a9ad85548",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "30edecab-8a81-457d-b862-869e79cd0979"
        },
        "item": {
          "id": "a512724b-85e1-4bfb-b62e-ce58e18e8e42",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "715f8cdb-2bd5-4563-a5b1-412040cad08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99cdcc6-420e-4bc8-b0db-ffc51ce05d1e",
        "cursor": {
          "ref": "a36bd5aa-0bc9-4e1f-a38e-a47e16441549",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "23f2a3e7-5e8f-40af-870a-0ec7fa79423d"
        },
        "item": {
          "id": "c99cdcc6-420e-4bc8-b0db-ffc51ce05d1e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3db26d87-7502-4f46-8651-cbf9237b8588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381b1ad1-c39d-4d7f-83e0-dd9f3ec1e9e8",
        "cursor": {
          "ref": "d75992fc-5c47-4c81-acb4-03fd8bb45f1d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a4e9c3f0-a90e-460b-a59f-d51b79096bcb"
        },
        "item": {
          "id": "381b1ad1-c39d-4d7f-83e0-dd9f3ec1e9e8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "407ccbb4-ab16-41ed-83e6-1ed67f269dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d157c-1f1a-4701-b307-b2b3cc8f9ad5",
        "cursor": {
          "ref": "f390f94c-9dfb-4d74-a000-1d65304b1e45",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a3c26404-79fa-4793-bdf9-a7a05beeb3e9"
        },
        "item": {
          "id": "0e4d157c-1f1a-4701-b307-b2b3cc8f9ad5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "39834cfc-a077-43fe-a0af-c56fdc3da155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6986e87-f9e2-4822-806c-c9ca6c810cce",
        "cursor": {
          "ref": "abdb3219-b017-43b6-8842-cf9c07ce8995",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a64d7222-cbe0-42f9-b5b3-2316eabe2e4f"
        },
        "item": {
          "id": "f6986e87-f9e2-4822-806c-c9ca6c810cce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0072cf48-855b-44cc-b98b-20d50ea8f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbbaffa-c7d5-4307-8297-8ee47ec337bb",
        "cursor": {
          "ref": "a1b1937c-926c-455e-b862-248f03d98d3e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4afecc51-750f-40c7-83b2-79b26c1c32b0"
        },
        "item": {
          "id": "7dbbaffa-c7d5-4307-8297-8ee47ec337bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1aed011c-abe6-483b-a4eb-7451082e1dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba8685-fd94-4f41-ad6d-af1d456c4967",
        "cursor": {
          "ref": "267eef3f-a6fd-409c-aab4-4653280b196d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4642b061-b8fd-4937-a386-e922f881fced"
        },
        "item": {
          "id": "a5ba8685-fd94-4f41-ad6d-af1d456c4967",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "542d6859-ff8a-4802-93fb-615b2fc2f3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046940f5-a4e2-4f53-83c4-56711ce77553",
        "cursor": {
          "ref": "da517e50-2d7f-4cb0-8c1e-5f6268c1492e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c8240d0f-cf94-4869-845d-5f3ad6cfcc93"
        },
        "item": {
          "id": "046940f5-a4e2-4f53-83c4-56711ce77553",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e7aaf8fa-ee69-42d3-aeb5-f09440ced3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eccc4d-7556-4ff8-aa26-3236195f1cd7",
        "cursor": {
          "ref": "b9f5d09e-c2ab-4b84-ac77-0790b221f8bc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f1c41a18-f35f-4562-9bf9-fcdcd3b55af6"
        },
        "item": {
          "id": "a3eccc4d-7556-4ff8-aa26-3236195f1cd7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b104ba37-690d-4774-88e5-4f00537219d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc709625-5a31-4d13-81f5-35dcb7c9e7be",
        "cursor": {
          "ref": "e2b6cbd9-bb0b-4140-8499-0823b28f1bca",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5faa8781-68d4-4e79-8431-18366f921a76"
        },
        "item": {
          "id": "dc709625-5a31-4d13-81f5-35dcb7c9e7be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "065e1995-b426-490c-b715-df44c18c54d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901aad1a-db46-4448-bffa-7c0387576280",
        "cursor": {
          "ref": "d08b972e-512e-46ba-8c39-bec28b2845d5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4e0b434c-564a-4d82-a680-486e5663b159"
        },
        "item": {
          "id": "901aad1a-db46-4448-bffa-7c0387576280",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8c56bfda-8b80-4428-9e3c-1ee48424349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b6a00-b6f9-42c3-9cc8-907974f5ebda",
        "cursor": {
          "ref": "2a3b1278-fb5a-454c-8431-683e74c564fe",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5eec294d-8a75-4f5a-9b09-e68069dd87e0"
        },
        "item": {
          "id": "666b6a00-b6f9-42c3-9cc8-907974f5ebda",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ab533903-a4bd-4264-8126-24e501195e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c764ac-6298-41fc-a041-3435a397144a",
        "cursor": {
          "ref": "b0db7c61-f6dd-445a-8663-4bee4b6d2b95",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "30f36adf-10db-4201-8418-b4d953034fee"
        },
        "item": {
          "id": "d9c764ac-6298-41fc-a041-3435a397144a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e0ff1e30-0207-4a65-8a60-80751b16f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0c6738-35ce-4f09-9ac6-c527b0a65ae1",
        "cursor": {
          "ref": "d7b33010-2b8e-405e-a88e-72dc1490eff0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0da64714-8ba3-4ac5-bda2-77ffdeae3145"
        },
        "item": {
          "id": "7f0c6738-35ce-4f09-9ac6-c527b0a65ae1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b9ff83ba-5fb7-4375-af8f-5e8d28938e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0212f3db-5846-49d6-87a2-ffe40485a2c2",
        "cursor": {
          "ref": "3f83a01e-254b-4ae5-b580-559e49513119",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "843edd95-7341-4ce4-903d-5b1d9dda0100"
        },
        "item": {
          "id": "0212f3db-5846-49d6-87a2-ffe40485a2c2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2e27f03-fdce-4288-b1ac-79501f632928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e978665-d0e3-42bd-a3cc-0067c16391b4",
        "cursor": {
          "ref": "1bb71078-b061-4a8f-a685-27e35acc6aad",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fd175dc3-8742-4360-aff2-dcb95bdfaa5a"
        },
        "item": {
          "id": "3e978665-d0e3-42bd-a3cc-0067c16391b4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "869fae76-33a5-48e7-938f-16c32fee309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5753a3a2-1c54-4dae-a9a8-d6efeb9d17e9",
        "cursor": {
          "ref": "26177200-4eb6-4ea9-874c-2dd45a06edb9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "19c9b145-59b0-43ce-b08b-ee6e7e78f9f3"
        },
        "item": {
          "id": "5753a3a2-1c54-4dae-a9a8-d6efeb9d17e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4fbc575f-4113-43ca-80b4-abb4104f2b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3233c4d2-8f70-4483-837f-0bd2a58f799a",
        "cursor": {
          "ref": "49a07fce-3b5f-40c3-9ae4-128903131dc6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "01888174-0ab7-47be-bcaa-18a29718a6ff"
        },
        "item": {
          "id": "3233c4d2-8f70-4483-837f-0bd2a58f799a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3bf463f-be5f-4883-9f36-d9934f39a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63429cc-e0b8-420c-be99-31530655e617",
        "cursor": {
          "ref": "6bd709ec-3dbe-43e6-852c-80a2477d051b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f728e2d3-a90d-4cea-a708-878fca137b2a"
        },
        "item": {
          "id": "f63429cc-e0b8-420c-be99-31530655e617",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0a623832-2e11-4c7b-b6d4-9a95b93d919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe60ec5-5c5b-4143-afc8-58b084922217",
        "cursor": {
          "ref": "bd045a5e-ee75-40e5-8179-e716e70802a6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d6d162c-10e4-4b55-8892-0da2c3dd2d8f"
        },
        "item": {
          "id": "efe60ec5-5c5b-4143-afc8-58b084922217",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ec757992-7b44-49a4-9c34-d3ed5eaaf85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde1f18e-183e-4398-9fa5-f120bbf94cbd",
        "cursor": {
          "ref": "08dd129d-9802-4385-a243-c17e39752852",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "76cddc85-e2e1-4bbe-92e0-ce56cda715d4"
        },
        "item": {
          "id": "cde1f18e-183e-4398-9fa5-f120bbf94cbd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "853a9794-2d51-4415-82e0-774743b19c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9fdc29-dab8-4cc0-be73-fcd94a723ba1",
        "cursor": {
          "ref": "7fd12906-defc-4890-98c3-75e65a0bf771",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "88b1b374-801e-43c9-961c-867163bdab7e"
        },
        "item": {
          "id": "de9fdc29-dab8-4cc0-be73-fcd94a723ba1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cdca0c6c-d8fc-4409-bf5c-ea3527ab251a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969d75b6-2671-4c17-a62a-2c930c3d7356",
        "cursor": {
          "ref": "6144e9e9-49b8-431e-b0d8-51614d06fc9c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97817cbe-3164-4315-b5c0-e81bc92a5a99"
        },
        "item": {
          "id": "969d75b6-2671-4c17-a62a-2c930c3d7356",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "06ba3483-5e4c-45c3-8ebe-18835fc9514a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e50638a-fadd-43b2-94e5-19339fb185a4",
        "cursor": {
          "ref": "f3e06197-e3bf-4dad-a3e8-becffefb41d8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "896d6901-1d9f-45c3-a0ac-45198dcc7379"
        },
        "item": {
          "id": "4e50638a-fadd-43b2-94e5-19339fb185a4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "413f1b4c-34e9-466d-910e-715b51899c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c939f274-70f7-45ac-ba6b-ce09d0fb57de",
        "cursor": {
          "ref": "091316ea-dc05-4675-a868-167cbaf382f8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "96918efe-da24-4bce-a95e-21e0bec83439"
        },
        "item": {
          "id": "c939f274-70f7-45ac-ba6b-ce09d0fb57de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a8ec3751-0d36-43c3-af0e-02c57e22952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288a47bf-5c71-4d1b-ad9f-58df213556be",
        "cursor": {
          "ref": "26f296a4-eaf0-4511-be01-94d19d7c3db4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "61256f7a-ae22-446e-aef8-72fbca303451"
        },
        "item": {
          "id": "288a47bf-5c71-4d1b-ad9f-58df213556be",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6365b645-eb6f-4b77-8b4c-4e7efe1bf7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb764c7e-ffd5-406c-ae80-377abbb353d4",
        "cursor": {
          "ref": "3debc162-5886-467f-85ca-c73543e2795d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "959fda92-deab-442f-aef0-b6495aac0a48"
        },
        "item": {
          "id": "bb764c7e-ffd5-406c-ae80-377abbb353d4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d2938512-d2e5-4f75-89ca-a9868c2fc3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cac2ce7-6b2c-4d14-809e-d15260fcef20",
        "cursor": {
          "ref": "42fe64ce-0ae2-4ffe-b218-80df91eee3e3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "afaca63f-eff8-488b-83ad-0f4601ecda49"
        },
        "item": {
          "id": "7cac2ce7-6b2c-4d14-809e-d15260fcef20",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bda4a2ca-718b-4c20-8c83-e9093417d95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92409d3-ca5e-409e-bed2-1b79f32ff270",
        "cursor": {
          "ref": "a53a2d17-4276-4dbd-9cfe-61b9c4f1ebaf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5e41a052-14f7-4c11-8fb6-53c146132fb2"
        },
        "item": {
          "id": "d92409d3-ca5e-409e-bed2-1b79f32ff270",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6886353f-f063-48fc-9fd0-6d0fdff87fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67fed8-e72c-49f4-a6e4-59e72d885ca4",
        "cursor": {
          "ref": "1c571d81-0f53-42af-9a7c-9c84d835f974",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e24de8b-f274-433e-9b3e-d4c68f90592b"
        },
        "item": {
          "id": "1b67fed8-e72c-49f4-a6e4-59e72d885ca4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "828bea9a-6b28-45ed-9e06-bcbedeb59268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6375b1-b661-4523-9c2b-d738131f14d0",
        "cursor": {
          "ref": "d523891b-1961-4635-939b-1a2cba0fdbe8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71ca0c9f-c3b4-4c7f-b123-67c23bef5059"
        },
        "item": {
          "id": "fa6375b1-b661-4523-9c2b-d738131f14d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e896e2e-cd12-4025-8275-5f1bc7957846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903af890-3299-4833-a098-b277c9cac5d0",
        "cursor": {
          "ref": "cbd387c0-be9e-4cb7-8eea-f8e4c3477329",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "671188d7-7e26-478f-9e2e-a99c0c7a0d69"
        },
        "item": {
          "id": "903af890-3299-4833-a098-b277c9cac5d0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ccc8a711-e4c6-4bea-8752-af30a1f6dd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5084ad49-1e7c-465d-808b-4b758342f592",
        "cursor": {
          "ref": "863aab63-a8ee-464a-92e3-45f7297e7bf8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "211cacc8-3c3d-41bb-af38-ab68eaf6e3c0"
        },
        "item": {
          "id": "5084ad49-1e7c-465d-808b-4b758342f592",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e7b5c1ab-4f2c-4ea8-aa23-2e3d92382578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82a377-fbd9-470f-82b2-1b71eaf38cae",
        "cursor": {
          "ref": "19ecdad7-8437-4cdd-bb3f-b47e82e92242",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "089a0255-c528-40c5-8834-59c536d128a4"
        },
        "item": {
          "id": "cf82a377-fbd9-470f-82b2-1b71eaf38cae",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "92775e49-fea6-495e-93e9-eabe67977636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6acc24e-16a6-427b-ac7e-a2b1e31129bf",
        "cursor": {
          "ref": "244718af-d9d1-4322-a2c6-3da525509b9a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c880f878-8230-4978-92bc-3ccbcf946b29"
        },
        "item": {
          "id": "d6acc24e-16a6-427b-ac7e-a2b1e31129bf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e50ce57c-ac1a-4fde-8ac2-3972926d6e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de21a7-3286-428b-b6c3-b09748b34e3b",
        "cursor": {
          "ref": "a7716539-574e-4946-b72b-480d3beb119a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "132645db-406b-478e-9d35-a9df768510eb"
        },
        "item": {
          "id": "c8de21a7-3286-428b-b6c3-b09748b34e3b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "48e11d07-fd27-479d-b0b5-fec94710ea10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8366d82e-051c-4c21-aaeb-ca479417da2a",
        "cursor": {
          "ref": "46934c83-2462-4835-808c-7029572dfe06",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "60184729-d6c5-4de4-9e99-054128e3e695"
        },
        "item": {
          "id": "8366d82e-051c-4c21-aaeb-ca479417da2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "91bc2943-178d-49bd-b14f-e06a4a4140ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d314cd34-54fb-4fe6-a318-b99b6cbbd102",
        "cursor": {
          "ref": "94abf2cf-9d77-4c49-8d02-a39ce2d8927d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0254c083-4100-400a-823d-6fa839c13858"
        },
        "item": {
          "id": "d314cd34-54fb-4fe6-a318-b99b6cbbd102",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7c0dd99d-76a5-4fce-9ab8-178b7cc68ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c52b3e-3aca-47be-aa4a-70f559aabe7c",
        "cursor": {
          "ref": "03f31a25-03b9-42ed-b058-3b751f3b02cc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b4fb8d11-7298-4be6-8132-ace95c78037f"
        },
        "item": {
          "id": "c4c52b3e-3aca-47be-aa4a-70f559aabe7c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d3235d4e-330a-45d4-a246-2daf20203746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0d3384-1b65-4652-985c-765a3e4dc19d",
        "cursor": {
          "ref": "00ab39b9-b83c-4075-831c-480adfd08e49",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "084cf8d5-4eae-438c-b11a-4c3d6cabdb27"
        },
        "item": {
          "id": "9c0d3384-1b65-4652-985c-765a3e4dc19d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "28434375-92a4-4252-824a-ebcf5ff25680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38668940-371f-4da1-92d8-3f78a5502235",
        "cursor": {
          "ref": "5f130bbb-5f74-4f52-bc3b-ac4a8eacd540",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bb6d1dc6-643e-43ee-b2ba-c78d3141a29d"
        },
        "item": {
          "id": "38668940-371f-4da1-92d8-3f78a5502235",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2d9f5bce-d61c-41cd-917b-e41b89633b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66d12ea-31e8-4e78-bf7b-ce3e89fdbbae",
        "cursor": {
          "ref": "b1ce4f95-e976-4e65-b41a-6ffc2b11db97",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6db385e4-8e81-40a9-ae4e-fb88ab6620f7"
        },
        "item": {
          "id": "e66d12ea-31e8-4e78-bf7b-ce3e89fdbbae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "186af8a9-33b4-4b12-ad16-c8a0af4bb161",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850171b4-d06c-435f-ab76-001f7602259b",
        "cursor": {
          "ref": "e46eeb39-e203-4777-b4b1-3279c0e3df31",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "25ab15a6-45f6-4c60-8a55-b0bb7685902c"
        },
        "item": {
          "id": "850171b4-d06c-435f-ab76-001f7602259b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f554092f-dc80-419b-b0e7-99a3c6c01920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b2bda77e-f3d9-4322-9727-8b53355db46f",
        "cursor": {
          "ref": "7d808543-a0a9-4497-834a-6297d0031e40",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "18f65191-6528-433e-a579-f758a134a721"
        },
        "item": {
          "id": "b2bda77e-f3d9-4322-9727-8b53355db46f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "33a85819-f709-4647-94e5-37cd6b82ef33",
          "status": "Created",
          "code": 201,
          "responseTime": 9019,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3b750-d6d1-4d99-8fd6-595288cfe063",
        "cursor": {
          "ref": "277b5802-6638-4e6e-a753-dc2122ffd8a7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06673826-81ca-4b6d-9ac0-7e20517ade56"
        },
        "item": {
          "id": "3ad3b750-d6d1-4d99-8fd6-595288cfe063",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8ae25349-a6b9-4f1b-ab51-4de937556da5",
          "status": "Created",
          "code": 201,
          "responseTime": 8660,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0388589d-e786-4fbc-879c-625eccad6924",
        "cursor": {
          "ref": "9110e455-ada5-45b1-8f19-1b06f0656821",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "079a2f24-fe3e-433c-b645-5aa92e72e77c"
        },
        "item": {
          "id": "0388589d-e786-4fbc-879c-625eccad6924",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3d14d4ed-92a4-44bd-b54d-478a6afdfeec",
          "status": "Created",
          "code": 201,
          "responseTime": 9446,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c626220-2873-488d-974c-161eab2d0183",
        "cursor": {
          "ref": "2293c672-95bc-4187-aebd-f3c8c019853f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a19c31a9-ba01-4377-a185-48c5fc137b44"
        },
        "item": {
          "id": "1c626220-2873-488d-974c-161eab2d0183",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6186c986-4167-4465-ac90-e16ba21f1007",
          "status": "Created",
          "code": 201,
          "responseTime": 8883,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aa5243-0092-493d-9468-6a7c5417382b",
        "cursor": {
          "ref": "2e785859-629a-4469-b8db-0abe42a24e12",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7a81e94d-346d-4be4-9f91-c6ca3de0b5fa"
        },
        "item": {
          "id": "40aa5243-0092-493d-9468-6a7c5417382b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8371852f-5b04-4095-aefb-c4f30927945e",
          "status": "Created",
          "code": 201,
          "responseTime": 8459,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-28T00:39:38Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-28T00:39:38Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "62871e43-d2f0-4b25-9e40-02b57e25573f",
        "cursor": {
          "ref": "deb49bb0-4416-4c07-9e16-b3dc20b3864f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8b396111-de73-4549-ada5-1e3dd4c0e329"
        },
        "item": {
          "id": "62871e43-d2f0-4b25-9e40-02b57e25573f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9c166e5c-f537-4503-b966-a221b24c612f",
          "status": "Created",
          "code": 201,
          "responseTime": 8079,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310a9d2d-6423-4444-a728-37770285f9fc",
        "cursor": {
          "ref": "ce51b3b3-225b-45f3-89e9-642265ac179b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "db54568e-4515-444a-947b-e0f230e1dc31"
        },
        "item": {
          "id": "310a9d2d-6423-4444-a728-37770285f9fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "180f56b1-73d0-43b3-86f0-4043cc66ee38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc07e4-9611-48db-9875-9049abbfe8bd",
        "cursor": {
          "ref": "2ff7446c-a7cd-41fd-a107-8b7d3a28f180",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "694f4628-15bd-45e6-8534-e77319dc15e2"
        },
        "item": {
          "id": "8dcc07e4-9611-48db-9875-9049abbfe8bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "26071cc4-8e1c-4487-a4ca-7fbbe0563d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd4ccf1-2745-4da1-86e3-bd68fc277943",
        "cursor": {
          "ref": "8bba9814-215d-4836-afe9-856662a684e1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "445a390d-1b18-4278-b7dc-433f12a97bc3"
        },
        "item": {
          "id": "3fd4ccf1-2745-4da1-86e3-bd68fc277943",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fbb1071f-131c-457b-b8b6-46c9bfd8f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d4a6de-dc02-441a-8bde-9346c4468241",
        "cursor": {
          "ref": "b3b99b3b-7ab8-4e25-a64d-d1f987778436",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f11c8fc1-d3e3-40f9-96c3-491656d298e5"
        },
        "item": {
          "id": "f0d4a6de-dc02-441a-8bde-9346c4468241",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0d143e6-61d2-4152-ba45-e06532f23783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb706b2d-4a9d-448c-a986-0fd8a636e1d4",
        "cursor": {
          "ref": "b2997f51-3102-4846-b545-ab02f0c0e4ea",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ebfbc7a-b245-41f0-bef0-21772ab5c3e6"
        },
        "item": {
          "id": "eb706b2d-4a9d-448c-a986-0fd8a636e1d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2e3dba72-a2f5-49d9-a798-7cb71cca14e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8eabb1-2850-46f3-b473-c49d00d9216a",
        "cursor": {
          "ref": "46417003-5341-4740-b974-dd8c50b4aae3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dfa73fa3-bad6-4570-be25-f3f9696e83b2"
        },
        "item": {
          "id": "cb8eabb1-2850-46f3-b473-c49d00d9216a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c3dafa89-bbb1-4697-9531-1250a9514690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b866e0c-5fd9-41da-9d6b-6256fdce7780",
        "cursor": {
          "ref": "686d6c39-d7b7-4da7-9a61-f553358a433a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fe2cb0de-6320-453f-87e6-90b7959dcf1a"
        },
        "item": {
          "id": "1b866e0c-5fd9-41da-9d6b-6256fdce7780",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "56ea51c5-8206-455e-9bc3-610a9173e621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4b6ce6-3dac-478c-9858-010dfd408eba",
        "cursor": {
          "ref": "4fabe29b-f8ea-4857-ac62-1675e282fd82",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d2ca61a4-9f27-4875-9056-1fe41c70239a"
        },
        "item": {
          "id": "8e4b6ce6-3dac-478c-9858-010dfd408eba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c7d3664-444a-4348-83de-fac2da2f583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9bd75-3262-4bee-bb6a-87a9ff6e8b13",
        "cursor": {
          "ref": "bba42499-39d0-4701-ba35-220416e3a61b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3762d359-1eec-4368-9cdd-5fd97606f902"
        },
        "item": {
          "id": "c0f9bd75-3262-4bee-bb6a-87a9ff6e8b13",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "77042e21-7997-416c-9e57-998055aca8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b20157-d10b-4e8f-8e8b-c287ea6f713c",
        "cursor": {
          "ref": "1ee7bda1-135b-4a4d-be8a-aaea77ed9f85",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b9b01e67-5004-4ae4-b8da-c67d7331c57a"
        },
        "item": {
          "id": "67b20157-d10b-4e8f-8e8b-c287ea6f713c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b04cb32-7a8d-47e8-b659-6dad381f7b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb43954d-d3eb-4839-8422-6fec38171560",
        "cursor": {
          "ref": "33306026-764e-4c85-8b02-1696fed1b0af",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ffc7fac8-bb09-4155-866f-c428cd13ae4a"
        },
        "item": {
          "id": "bb43954d-d3eb-4839-8422-6fec38171560",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1978be59-7ea6-40b3-bc4f-8c576d773fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c793bc-14dd-4b7b-9828-c316169a8c44",
        "cursor": {
          "ref": "21b4d193-31be-4d4a-9737-a2e4ad4ea3a5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0dc442d8-b159-4088-a1c2-1076545b1ced"
        },
        "item": {
          "id": "f5c793bc-14dd-4b7b-9828-c316169a8c44",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f15c7b0d-8402-435e-862f-c7499cf1c1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc4f596-bf3e-4520-b907-8cf90e7263ab",
        "cursor": {
          "ref": "60fa43ce-2879-453b-828d-2d4a80b7df79",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "675125f2-f730-43f7-b73e-e2d400f88a87"
        },
        "item": {
          "id": "3fc4f596-bf3e-4520-b907-8cf90e7263ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6aac4f2d-0218-489f-9566-072de4477822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f778c384-503e-4a72-a6a7-c8343a38e4cd",
        "cursor": {
          "ref": "d6e824db-5d0b-46c9-b58c-7499bbaf4aa2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "db4a39f4-cb18-4c42-973d-690d6968f116"
        },
        "item": {
          "id": "f778c384-503e-4a72-a6a7-c8343a38e4cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "108a7f44-01e9-4ae3-88af-f708a2ddb8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897a3ac8-e12a-4136-ac95-6fed71d1d30e",
        "cursor": {
          "ref": "e86062d0-a3bd-474a-9a9d-9c6f499e235e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "606131f4-a4d1-427b-a444-13d77075f255"
        },
        "item": {
          "id": "897a3ac8-e12a-4136-ac95-6fed71d1d30e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f230700-a1f4-43f1-958c-f0e9536eb2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91394ff1-f138-401d-b693-48bcfb0a731f",
        "cursor": {
          "ref": "191efd9e-ec5b-4d93-ad1e-04dc610ea802",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "747f240c-ed41-4d44-b780-18c8492208f3"
        },
        "item": {
          "id": "91394ff1-f138-401d-b693-48bcfb0a731f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "275ead83-fada-43ae-a3d3-08cb6f4cd3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db586f6-8e96-460a-a12d-1c767b99feab",
        "cursor": {
          "ref": "5d3079f7-9b50-4a86-915f-0813e03ba0a8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "28f82410-4daa-4571-80cf-fad4ca5eb13b"
        },
        "item": {
          "id": "5db586f6-8e96-460a-a12d-1c767b99feab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e472996-df32-4305-8ba0-007d9b61d429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948e4e1-7a66-4b4a-b8a3-173801db9eab",
        "cursor": {
          "ref": "7ba044af-476b-43b1-a2ba-3c1846d8ba25",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "50c6bdeb-c043-43cb-ab06-ee354b2e8c33"
        },
        "item": {
          "id": "4948e4e1-7a66-4b4a-b8a3-173801db9eab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c9f1ac35-9666-4926-8f9c-3397e2afcfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfc18a0-c00a-42ee-a3ac-bc7a1cdfb358",
        "cursor": {
          "ref": "b3acf29c-0c7b-485a-a2e7-b8bd96e23f56",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bb2474f6-286c-4e3b-b4cb-c4e777ed3155"
        },
        "item": {
          "id": "2cfc18a0-c00a-42ee-a3ac-bc7a1cdfb358",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "628086c0-9b53-454c-b7dd-ca764c6a600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12eb0ea-ece1-4b93-82c6-adf422e60e94",
        "cursor": {
          "ref": "1ccc1ea2-8f2e-4b62-bb2d-ea5c9593fc41",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d0b7575b-cbb8-410a-aa12-d4333caecf85"
        },
        "item": {
          "id": "a12eb0ea-ece1-4b93-82c6-adf422e60e94",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a05f4810-88e8-4e47-bfd2-3892f2cd2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5653e1d6-acc9-4e4b-8ef7-084ab8f0d08d",
        "cursor": {
          "ref": "e01c1e39-d4fc-4475-9f63-31babf1cd2a0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1269abab-afab-4f4e-b526-759423ed1aba"
        },
        "item": {
          "id": "5653e1d6-acc9-4e4b-8ef7-084ab8f0d08d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0978a905-bfcf-4029-bb9d-5f24e864d690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad5a209-a54b-4cee-88d1-e3d9bb5deb7b",
        "cursor": {
          "ref": "996d1669-20e1-4c8c-8cd4-5c85ef047f68",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e2f70823-1fe9-4ff3-ac2e-5ae0e81a2d82"
        },
        "item": {
          "id": "0ad5a209-a54b-4cee-88d1-e3d9bb5deb7b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a4b77413-b7ab-4d4e-a1d1-68545caf49be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e70ae44-d512-4624-99af-0add64ed950a",
        "cursor": {
          "ref": "3a1bcda4-4aa8-4ac0-9b63-7cbd3ef8332d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e20cbbe3-760e-4843-9311-f0b89a907340"
        },
        "item": {
          "id": "3e70ae44-d512-4624-99af-0add64ed950a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "367e127b-854e-4593-a9c5-458c02a563fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef01e488-bd41-49e3-8ff2-e4f5e48e751d",
        "cursor": {
          "ref": "8c6afd75-cd50-40cf-85f4-32d3df34172f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b7265fd9-2047-49d9-b372-bfb314a6034c"
        },
        "item": {
          "id": "ef01e488-bd41-49e3-8ff2-e4f5e48e751d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "671e1090-a760-42db-91bf-2880867cdeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4251f0-69af-48d9-8fc7-0c957c975850",
        "cursor": {
          "ref": "cdcd6ad1-d63d-44a7-8459-bb20251d7ee7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0407b8c5-f1f6-455b-aa6a-8e4112b039eb"
        },
        "item": {
          "id": "9d4251f0-69af-48d9-8fc7-0c957c975850",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4c380fc-48c8-4c21-bc1f-e0cd172617a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc37f5d1-4cee-42bc-b802-3d5b35b60435",
        "cursor": {
          "ref": "ddf0355c-9e18-4e42-9a83-13b2af7a348b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0be9216d-67a4-4261-a8dd-bd913391d71e"
        },
        "item": {
          "id": "bc37f5d1-4cee-42bc-b802-3d5b35b60435",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71d729f9-e965-4fbf-b1fd-230d6837aa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1561540-fb57-460b-b47a-1a9168e0483c",
        "cursor": {
          "ref": "0ab02b4f-8700-4e15-97be-b3c0e561c406",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "158e8bea-7ad9-4d06-9187-e66aa5283c89"
        },
        "item": {
          "id": "c1561540-fb57-460b-b47a-1a9168e0483c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12cb9b13-cd07-4783-8f0f-87042518321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae55c03-65fb-4d67-8c7c-1a83fe11ee2a",
        "cursor": {
          "ref": "0f3f41e1-231a-4a7e-9163-46602afc37f1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8ca6ea95-2b8a-4258-86f7-5685b4ae3df3"
        },
        "item": {
          "id": "8ae55c03-65fb-4d67-8c7c-1a83fe11ee2a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e134255d-e3d0-469e-9b59-5a403cbdd6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27378d9b-c174-4156-bfaf-89a58c05b21c",
        "cursor": {
          "ref": "6c9132e7-b9a7-4890-b96b-336d7d6ddd2d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a53d417d-949d-4a4e-a382-7c18c37f099a"
        },
        "item": {
          "id": "27378d9b-c174-4156-bfaf-89a58c05b21c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6818ddba-f51b-4494-aaeb-407e413efdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeafa4f-6d6b-44b1-9b50-a7d0d9c363b2",
        "cursor": {
          "ref": "ea7a5722-d100-458a-9116-1307bc66d4e1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ad3b85b4-0fbf-4368-b1c1-085fdf043166"
        },
        "item": {
          "id": "abeafa4f-6d6b-44b1-9b50-a7d0d9c363b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "45bb7999-3b89-4740-8f92-a7b308f7e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33843e8d-8701-4ed3-a98b-7650d08d9716",
        "cursor": {
          "ref": "1a5da2ac-453e-4bcc-9983-468f30ee1f07",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ec00517d-3d86-4286-810f-050e4564929b"
        },
        "item": {
          "id": "33843e8d-8701-4ed3-a98b-7650d08d9716",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c1ba041e-a5bb-46da-ae27-8ab3862944ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804fa0d4-a9a3-4cd9-bd83-4776f11e11da",
        "cursor": {
          "ref": "b43de82e-3aa8-4b1d-b8e2-221aa120e2a1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f2706b65-5c84-413c-91e1-98e52aa289a9"
        },
        "item": {
          "id": "804fa0d4-a9a3-4cd9-bd83-4776f11e11da",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "57e1dd62-3505-4d66-97cb-6f067932378b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53209509-622f-47c9-a0d2-e9898c7a56fe",
        "cursor": {
          "ref": "66af0f4d-5b7d-464b-a3b9-86297a8f59a0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "467da340-2c6c-4642-8e98-d4c408bcbadf"
        },
        "item": {
          "id": "53209509-622f-47c9-a0d2-e9898c7a56fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4632342f-cfeb-4cb2-8a4d-3b77e9a394dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa6a391-b821-4eb2-a5a1-a95daee8e937",
        "cursor": {
          "ref": "6c051e54-1d43-42da-9e07-e15cfb147ed2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99aed437-ed89-4c38-ade9-9b1cefd3ea8b"
        },
        "item": {
          "id": "aaa6a391-b821-4eb2-a5a1-a95daee8e937",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "805e176d-dff2-4604-a5f9-f478b96dada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a980dd9b-f140-49ac-aae9-6c11452aac57",
        "cursor": {
          "ref": "90f62bad-3259-4fb8-ac4f-fd9b5391507a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c03d2ff9-a3ce-4d85-9235-cf3ac2501e5c"
        },
        "item": {
          "id": "a980dd9b-f140-49ac-aae9-6c11452aac57",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6a4a2023-af7b-4bae-9bfa-fc44ea771854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59fdc8f-90f2-491f-bf35-d02c865fb483",
        "cursor": {
          "ref": "577cdd9c-7b05-4a80-b8df-62610bc9cc7b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f19b37e8-b2d3-4919-9441-22645ab64fd3"
        },
        "item": {
          "id": "f59fdc8f-90f2-491f-bf35-d02c865fb483",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "77096178-de33-4dfa-9a07-5dc57bc100c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b1ac92-8ba6-4b9e-8dda-9ddad0c194f0",
        "cursor": {
          "ref": "13c8694d-f527-4270-9841-b136d2e53fd9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ff6dae61-997c-42f2-b677-e70821c4d242"
        },
        "item": {
          "id": "97b1ac92-8ba6-4b9e-8dda-9ddad0c194f0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7bc3597b-0b63-4518-8853-02255a258ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf980411-f558-4f40-af64-d82c6e6e5fd6",
        "cursor": {
          "ref": "22fc20fc-2745-4ad1-999a-e8f81e599c52",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4e1b7681-ec23-4bc0-917c-332a8dfca3cd"
        },
        "item": {
          "id": "cf980411-f558-4f40-af64-d82c6e6e5fd6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9033786d-c232-4a0b-a75c-4ee4d7a52389",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7139a1-73dc-4417-898f-557172377e17",
        "cursor": {
          "ref": "2546cf2e-984a-4a24-a393-e1c03e4d07d8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "596a8515-abeb-40c8-8f86-e2fb5ab20326"
        },
        "item": {
          "id": "9b7139a1-73dc-4417-898f-557172377e17",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ab73ccb1-9283-4009-a1f2-423c65d6adad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a77674-13e7-43c8-a996-5ca0b3ec76b3",
        "cursor": {
          "ref": "1d746e12-7c47-41cf-9121-178070e0c928",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1c3b907f-551b-4cdf-854a-2c733b7e5992"
        },
        "item": {
          "id": "65a77674-13e7-43c8-a996-5ca0b3ec76b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a761688-de46-4e85-963c-308c663d0d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f613553c-51c1-4335-ad43-5e823c385f04",
        "cursor": {
          "ref": "e3de3f37-7f0b-43a1-8e5e-2348a8c5d963",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "11d3361a-a6dd-4bd8-996a-229e1eaf540f"
        },
        "item": {
          "id": "f613553c-51c1-4335-ad43-5e823c385f04",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c7648cfc-972b-4ca6-995b-a5eab2995ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17a699e-5e7a-4b19-8237-95782abd5737",
        "cursor": {
          "ref": "d6eb9d36-3f2b-4be1-967c-96771356aeff",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "deebd439-603d-4349-918e-012b54598b4c"
        },
        "item": {
          "id": "e17a699e-5e7a-4b19-8237-95782abd5737",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9a05890b-9c0f-4484-b892-1a5bf502f16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bbea9a-d181-40a7-bd6a-c6453438c39b",
        "cursor": {
          "ref": "ebcb203b-b566-46c7-b2ec-e4383c36a1c9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5b81e3e9-0386-4ad1-aeb7-0200b3818cee"
        },
        "item": {
          "id": "c2bbea9a-d181-40a7-bd6a-c6453438c39b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eb3d0804-75e3-4a0a-b4d8-27669c862928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f321dde5-7db5-4a3a-8140-3e409b6ea0c9",
        "cursor": {
          "ref": "9a43159e-c469-4e5b-b0d7-87b93857ae23",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2a7f4b4d-7d7d-46e4-893c-0a5dc78ef35c"
        },
        "item": {
          "id": "f321dde5-7db5-4a3a-8140-3e409b6ea0c9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5a0cf219-acb7-4b44-b425-af4dcb931af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b0a996-0fec-4202-9650-3c31e0e24e1d",
        "cursor": {
          "ref": "e409ccf5-3ecf-4f8a-b88e-27ee338c2bb4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1d9244d8-0ddc-4d9a-9c58-8b0e5dc1cd57"
        },
        "item": {
          "id": "92b0a996-0fec-4202-9650-3c31e0e24e1d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3fd012fc-a40f-4422-a8ef-736a20a205ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f885f746-1a4f-44ad-bf29-8334274a4aec",
        "cursor": {
          "ref": "4a9f1d11-a47d-4fd9-8bb0-14abbd9d71cf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b538e87-8b9f-41f2-99d6-6921d3ee2833"
        },
        "item": {
          "id": "f885f746-1a4f-44ad-bf29-8334274a4aec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5d53bf49-f799-47f6-8ec9-f9d723664af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d0edf3-cf66-4494-a306-758a7e91539e",
        "cursor": {
          "ref": "819be038-3847-488a-82b4-b7506f3b1503",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "222b4873-23a9-491d-bed6-830bdcaecd93"
        },
        "item": {
          "id": "72d0edf3-cf66-4494-a306-758a7e91539e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f380155c-0844-4f5b-9dfc-ae0f2ee011fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ddf1a6-434f-46e1-8205-0700271404dc",
        "cursor": {
          "ref": "3ffcaf7d-816f-4ead-9d72-cc8a6091136b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d11ded6a-d315-4e45-9108-a499f8ce10ed"
        },
        "item": {
          "id": "83ddf1a6-434f-46e1-8205-0700271404dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "07d7d21c-9537-4ce0-aac3-1478beaf87c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3a163-4dd7-4700-b8c5-5e0648c792ae",
        "cursor": {
          "ref": "139b67bb-0fab-491c-9a6f-82b41a1b1a1e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e7447755-8ef5-4def-9b69-437938cc5321"
        },
        "item": {
          "id": "1fb3a163-4dd7-4700-b8c5-5e0648c792ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4b3aceab-21f1-44e4-a833-c7e864da9894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4086f82c-491b-4b26-81d8-4b8e0dede8a3",
        "cursor": {
          "ref": "c31e5011-1a19-448f-9be0-2fc0c146727a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56c037c8-f995-4e17-9f1d-12299d332753"
        },
        "item": {
          "id": "4086f82c-491b-4b26-81d8-4b8e0dede8a3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08fa736a-b168-498f-acf1-ba48cfe1186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b55b3c-a221-490e-8562-8d04ab68869d",
        "cursor": {
          "ref": "4b810045-1620-4779-90d4-a62953914a06",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc865dce-2f4b-4d37-9e17-45d42b122da6"
        },
        "item": {
          "id": "16b55b3c-a221-490e-8562-8d04ab68869d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "61bfeba5-e0a4-4f5f-b2fe-b1ba429cebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee05e4b-831e-48bc-b86e-5fef4f4c114e",
        "cursor": {
          "ref": "a99dbd3e-4e34-4ba5-9071-324f6151cfd8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a327d1e1-b038-49fc-a358-d6f1bdb5852b"
        },
        "item": {
          "id": "bee05e4b-831e-48bc-b86e-5fef4f4c114e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca97b719-8f00-423a-a298-13b8fc7c93cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f824363b-a04a-4ee5-b722-49795388cc8d",
        "cursor": {
          "ref": "e0a17d50-1908-42fa-a053-4966d2b8d99a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2a248bc0-e6b2-4f7a-8614-6434eb089240"
        },
        "item": {
          "id": "f824363b-a04a-4ee5-b722-49795388cc8d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d43cdae3-69e8-4626-98f9-3b7f0f7f4f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a117fc94-aa08-40d9-a853-f30757983a2b",
        "cursor": {
          "ref": "d7dbadf0-1aaf-4d36-b5cd-71eb6e9176d3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb13c94e-d4aa-4c95-85f2-1a6dc6cfa2c5"
        },
        "item": {
          "id": "a117fc94-aa08-40d9-a853-f30757983a2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1b36f414-d643-4359-aac6-6249c64776d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b30868e-4c06-479a-a833-995dcc8453bc",
        "cursor": {
          "ref": "0132c3c0-2b01-40da-a10a-0f07b4058fa1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a7b10767-610e-4653-ba48-c3eb7c9f4e2d"
        },
        "item": {
          "id": "0b30868e-4c06-479a-a833-995dcc8453bc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "18ccd7f4-5510-45a2-9518-0355c30230f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703995a2-266a-4bbb-a0c6-0f29eaaabf1a",
        "cursor": {
          "ref": "ddb07619-fcf8-443d-ba4c-2660ab082626",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "72793dd6-8b6b-44e8-97b9-16ba9e66bdd4"
        },
        "item": {
          "id": "703995a2-266a-4bbb-a0c6-0f29eaaabf1a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "edf3bf4c-9351-4bf2-8cd1-af9e9c46233f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e76fbbf-3cc8-420a-b356-54f808663ac6",
        "cursor": {
          "ref": "609904c4-ce85-4edf-8116-3b9cc532c0a0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "39450529-6bc4-4a8a-90f2-faca0c8754a5"
        },
        "item": {
          "id": "7e76fbbf-3cc8-420a-b356-54f808663ac6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0d1d0306-c5a6-4faa-9877-9319eb875d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ae638f-aba2-4d54-818f-956ea0af3de4",
        "cursor": {
          "ref": "10768137-6e10-41be-bdbb-d33198ed6cb5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "44a90439-3f52-473f-a506-5208cecc15ce"
        },
        "item": {
          "id": "d8ae638f-aba2-4d54-818f-956ea0af3de4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7c572d1-c71d-499c-8d48-f8e81dc73ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebebbd98-321d-4a66-9cd1-f3a79b93362b",
        "cursor": {
          "ref": "0cfd761d-e9a2-4e19-8d36-55a2e3c6cf09",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ed39057-cdfb-4f32-8642-28471650dd76"
        },
        "item": {
          "id": "ebebbd98-321d-4a66-9cd1-f3a79b93362b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dc763635-49b7-41d4-a55b-5b19d40c3027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cac361-da76-49df-976c-4c1138088368",
        "cursor": {
          "ref": "ee9d78a2-aecd-42e6-b49d-ac8c0eb8ae61",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a141ef1b-cc55-43d8-936c-e2f2b6dd3607"
        },
        "item": {
          "id": "77cac361-da76-49df-976c-4c1138088368",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "88e535f5-5e99-4cc0-8cbd-e1b2c8fdaa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec2a734-864e-4d91-b7da-3e4f6659a3f8",
        "cursor": {
          "ref": "bf9194b3-7d3b-446b-82b3-5229c676707f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "40909294-6f14-405a-880a-9a5b5aa93332"
        },
        "item": {
          "id": "fec2a734-864e-4d91-b7da-3e4f6659a3f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7cdcc021-4a07-477b-a683-d2891d41c702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7222f3d-c00f-45f8-9f60-1ddeb1c05daf",
        "cursor": {
          "ref": "ed093f68-ecfc-41d1-86bc-cd207874ba55",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "226f1d48-43b7-435c-adad-3e6039626a18"
        },
        "item": {
          "id": "d7222f3d-c00f-45f8-9f60-1ddeb1c05daf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9a02b24d-db66-4fa4-8b89-6a8322d794b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b746859b-05ef-43cc-ae61-5348ed81f576",
        "cursor": {
          "ref": "98652729-768f-4740-ba82-f365386963c4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b339ba72-c8fe-4978-81e6-e4fbea380f0c"
        },
        "item": {
          "id": "b746859b-05ef-43cc-ae61-5348ed81f576",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a4a4089f-4aec-4534-bca4-0acdd03c01d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf103d5-9203-4061-8521-7069650a7deb",
        "cursor": {
          "ref": "0ddd5315-93f9-4fd0-885d-18970a29627b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "818c0510-bce3-4811-81a5-f47daf21845d"
        },
        "item": {
          "id": "edf103d5-9203-4061-8521-7069650a7deb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f4b448f1-17cb-4853-919a-477f9505147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109082c1-2996-4381-9b04-8d114a423d8c",
        "cursor": {
          "ref": "250fa0e0-cfd6-443c-b544-d7c119c93a53",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f31eda41-2bcf-4422-a401-3e97d37863cb"
        },
        "item": {
          "id": "109082c1-2996-4381-9b04-8d114a423d8c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9df93c63-017f-476f-9c9e-6f482b2c5a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d28f8d-87ce-4d7f-85a1-220fff50f6db",
        "cursor": {
          "ref": "3eaad01f-21ef-410f-b624-0ff525e401b7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "84198c65-5fd2-4bf8-b0ba-37f467ee6452"
        },
        "item": {
          "id": "38d28f8d-87ce-4d7f-85a1-220fff50f6db",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e50db76-c5a4-4af1-88ec-8dedadb745be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26830cf7-bb7d-4088-85ec-bb6ff87cf1eb",
        "cursor": {
          "ref": "08913178-ec50-4957-b435-274f5b2afefc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b3f10d7d-6579-4be9-a687-476b584f5cad"
        },
        "item": {
          "id": "26830cf7-bb7d-4088-85ec-bb6ff87cf1eb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "73f18cc5-860b-4502-a145-792e95107d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30125578-1592-49a3-b1fe-8754e71d644e",
        "cursor": {
          "ref": "a0cacc35-52a4-43d9-a813-027387502fdd",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9add298b-be95-445c-bf04-84a83fb0c00f"
        },
        "item": {
          "id": "30125578-1592-49a3-b1fe-8754e71d644e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ad7f9792-c545-4315-91c3-fc0a632cbae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c19790f-f171-4f9c-9d5a-edb5669d0b8d",
        "cursor": {
          "ref": "2bf474e5-774e-433d-8f5f-a6d33cb1e2f6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85c69e72-7bd6-4379-b59a-638f7389ad9d"
        },
        "item": {
          "id": "6c19790f-f171-4f9c-9d5a-edb5669d0b8d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "edd432b9-6f99-4948-abbc-6feb15250661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307bbaed-a5a8-447e-bd4d-ad5f2c6ec9e0",
        "cursor": {
          "ref": "e22b4ec8-8dde-42ff-b931-fdec4f330fdc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f021a39f-5e47-4df6-8665-e83bd76c2635"
        },
        "item": {
          "id": "307bbaed-a5a8-447e-bd4d-ad5f2c6ec9e0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a4efc049-006b-4f6a-adf5-49000680aa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d9063-9928-4957-a282-19bfb7408046",
        "cursor": {
          "ref": "fe01ec45-723a-446d-b408-6886093f9de5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ea5f2fe-74c4-496e-b8ea-b376f4b65f31"
        },
        "item": {
          "id": "d88d9063-9928-4957-a282-19bfb7408046",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "abb649d3-70df-4cea-9a52-f47970608e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a53163-4805-4cee-9672-b268cccc16b6",
        "cursor": {
          "ref": "f1f95d06-6529-4dc0-a49c-ed5bd1ba7904",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "54d4e7b8-255e-419e-a8f4-53b4a550fe41"
        },
        "item": {
          "id": "64a53163-4805-4cee-9672-b268cccc16b6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5cffb923-4088-4023-b57d-48cdf8b10b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6434273-fdbc-4424-a1f3-fb99e29c978d",
        "cursor": {
          "ref": "a11f75ed-2679-4b72-b03d-95ed17786d11",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4cbd7983-817e-4bf5-babb-91c3ee73feb8"
        },
        "item": {
          "id": "b6434273-fdbc-4424-a1f3-fb99e29c978d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "79bfbaec-6b63-4b74-a138-72528b231d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f28f5c-16e1-480a-a93b-eac8de49580a",
        "cursor": {
          "ref": "0e35ec12-c699-4bb2-ad1e-4d40c1028bd8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7008b498-6fa0-41a1-942c-a08ee507cbe1"
        },
        "item": {
          "id": "81f28f5c-16e1-480a-a93b-eac8de49580a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a82f7736-4494-4413-b52e-86b7c637e5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a47157-d24a-4bd2-8bcb-e7e17313a480",
        "cursor": {
          "ref": "38598233-115f-41db-ab00-81066e0ae806",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "73f5d0d5-98e1-4285-b3f9-c7dd5911bf1b"
        },
        "item": {
          "id": "a5a47157-d24a-4bd2-8bcb-e7e17313a480",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "de345e70-9bd1-4db7-a5a5-c47c8eaee99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353f395c-951f-49b9-ab57-1f176bd390b6",
        "cursor": {
          "ref": "212129b7-4957-4040-a710-c51d8e8252c4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e9f5de78-943b-4402-b950-71b0b680b721"
        },
        "item": {
          "id": "353f395c-951f-49b9-ab57-1f176bd390b6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4ff9f94b-6591-4981-b0cf-cc730c2aa39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec028548-16e2-4a17-9409-aa0958753503",
        "cursor": {
          "ref": "0d1834aa-d0e5-49ca-b133-3be68f4a5f38",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "532021de-f350-4973-834e-e4a588f709fc"
        },
        "item": {
          "id": "ec028548-16e2-4a17-9409-aa0958753503",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b613b349-a0c1-477a-b6a0-333ea36be10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179b5a0-abaf-4840-9a5e-c205d19e8cbe",
        "cursor": {
          "ref": "4ecb0bd2-c322-48bb-be18-db107de6098f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6e67c383-706a-4548-a6f5-ed227b39b003"
        },
        "item": {
          "id": "b179b5a0-abaf-4840-9a5e-c205d19e8cbe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "04863668-75fc-4340-9927-92a281cff33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463033d3-27e0-4c99-9be0-08b3a1a91bef",
        "cursor": {
          "ref": "4ba704fb-1e99-4c77-8db3-34e6a20be548",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5c09f7b2-eb3e-4054-8624-4ae6accda82a"
        },
        "item": {
          "id": "463033d3-27e0-4c99-9be0-08b3a1a91bef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "58752d44-538e-4c41-8bbb-38993a9a1332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939cd113-68b8-4812-bd00-4bcba52c80f7",
        "cursor": {
          "ref": "c8baa080-8d7a-4236-8c9a-5125af29a2ab",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd8fef79-db5f-4819-9fcb-07448dc1c9e9"
        },
        "item": {
          "id": "939cd113-68b8-4812-bd00-4bcba52c80f7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5c0fb862-4772-43a4-8905-5115bb01478b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329326fe-ec9f-4ba6-a123-39c5ce745e7f",
        "cursor": {
          "ref": "337353e8-a72d-4baf-9269-3ff57a59bf11",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7b270a82-db69-4899-8504-72a6b4bc4f7e"
        },
        "item": {
          "id": "329326fe-ec9f-4ba6-a123-39c5ce745e7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e16c990b-7933-44a0-99ce-042fe6e0a34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5550b7-e457-4e49-853f-257e146fea3a",
        "cursor": {
          "ref": "86fc5b20-18ff-43ee-9e61-5e0c2cf53f81",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "80dad474-222e-41a1-87dc-953658452b34"
        },
        "item": {
          "id": "0b5550b7-e457-4e49-853f-257e146fea3a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1200425f-f8b4-4654-9983-bf8f3c1f6844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af0863-2e22-4922-9a35-45228dbc0fe7",
        "cursor": {
          "ref": "0e480cb8-d4b8-4c51-808c-bf83a7e6f148",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6b75e240-ff79-4c40-b307-69279bfd6e5e"
        },
        "item": {
          "id": "78af0863-2e22-4922-9a35-45228dbc0fe7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e6164145-1c3f-46bd-a125-89193d41710c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6bad90-49ef-4cce-9f9d-535156ade62e",
        "cursor": {
          "ref": "801276bc-aa8d-42dc-9711-accecb737079",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "743220ee-0195-4363-859a-6fe14b1e2b82"
        },
        "item": {
          "id": "5a6bad90-49ef-4cce-9f9d-535156ade62e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f87c3125-12e2-49aa-acda-2959268b3729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aacf6f-0769-41b3-82cb-a8bef6cf966d",
        "cursor": {
          "ref": "8f1978df-5bfb-436d-baf5-248fd6fe374b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2ab7313a-788f-4f9e-8473-8177824251fa"
        },
        "item": {
          "id": "30aacf6f-0769-41b3-82cb-a8bef6cf966d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0547de7d-ad32-4e53-b896-8bf893864286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7bd411-c4ac-4161-b471-a083dd92c4a8",
        "cursor": {
          "ref": "87aa63ca-e849-4c9b-ac6f-ba46b4441de8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "21889360-5018-48fe-be63-715ac57d7e45"
        },
        "item": {
          "id": "bf7bd411-c4ac-4161-b471-a083dd92c4a8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1fa3b44-9916-4412-a6d0-c6b902d08736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7b7fb0-57e8-4a0e-8c4b-5a28311813f7",
        "cursor": {
          "ref": "6ef6cf67-b9f3-4056-ac29-dc4dbac75efa",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "697c6cd9-c4bc-4c20-ac2b-a53c10093fb9"
        },
        "item": {
          "id": "4f7b7fb0-57e8-4a0e-8c4b-5a28311813f7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4672fb4e-e845-4ee3-b4a8-5a25ed819756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26472e49-4f8b-4f56-95dd-75fae82ed984",
        "cursor": {
          "ref": "21b89f5c-215c-4e5c-8ff8-4dffa70ebb6f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ffca4007-b6f6-43b5-a75b-c51b74ecaa96"
        },
        "item": {
          "id": "26472e49-4f8b-4f56-95dd-75fae82ed984",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bc32c6ec-a95c-47fd-af9d-63824d3d0d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e96e318-b081-4564-a2b3-47ce36d8bf18",
        "cursor": {
          "ref": "c4fc3766-c799-4b30-87b3-98294966c731",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f68177cd-12e3-4251-8402-8e63bedc1fca"
        },
        "item": {
          "id": "9e96e318-b081-4564-a2b3-47ce36d8bf18",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7999ed25-bbb5-46ee-8ecc-d865a9446b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98b2b1-2728-4977-b84b-9dd046325745",
        "cursor": {
          "ref": "00cfb43f-a24b-422c-9b25-d651d4d7ea4d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "71e7d1c9-c8ba-466d-baad-b1cb876cf5c9"
        },
        "item": {
          "id": "7e98b2b1-2728-4977-b84b-9dd046325745",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b69dcfc2-209d-4f8f-890d-e53f0994171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6673df2-bac4-4824-b302-c68776b4c3e2",
        "cursor": {
          "ref": "2c1735e2-1d66-4581-ad40-19bbdf0fb05c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "beb336f2-e8a4-402a-a97d-66235843853a"
        },
        "item": {
          "id": "f6673df2-bac4-4824-b302-c68776b4c3e2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db95ee61-c418-4211-ba9f-edef519e7fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fb9033-23ed-4ac1-8035-34e0574664c8",
        "cursor": {
          "ref": "1d2821ea-b49d-4ba2-9601-0b763a716ea9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ce6655f7-865f-4724-9d72-644f0c23ddf1"
        },
        "item": {
          "id": "b4fb9033-23ed-4ac1-8035-34e0574664c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1744549d-f3ed-47e9-bc10-4919da40beb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df0f9e-8773-41f3-9e5e-fff4e00b9db3",
        "cursor": {
          "ref": "64fa15e0-468d-4a63-ad88-dce95bb3a552",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bec47eed-813e-4fee-b02f-32f2369af5d5"
        },
        "item": {
          "id": "28df0f9e-8773-41f3-9e5e-fff4e00b9db3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7383469d-9b62-4f03-88e2-9562f49f9290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9473ce-e5d5-4fc2-b0d1-8c234c7ba3d4",
        "cursor": {
          "ref": "061de0ac-7fd4-4f67-a8f3-b741505c8715",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "96da42c4-5eb5-4e2e-b2fd-48d415ca5865"
        },
        "item": {
          "id": "dd9473ce-e5d5-4fc2-b0d1-8c234c7ba3d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a49a5ad6-1f02-486b-926e-6568a5e9c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c303ac41-c892-4501-b15e-e0686541ebb0",
        "cursor": {
          "ref": "1127c6ef-6a27-4530-8fc6-b26d454aea44",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1133353-d325-4d87-b1f6-648f5ae0e8d3"
        },
        "item": {
          "id": "c303ac41-c892-4501-b15e-e0686541ebb0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "53109c10-3109-4d3d-9e82-04f667354b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb02a85-5e61-47a0-ba92-8fb1458c9715",
        "cursor": {
          "ref": "707acb6a-4b62-493a-95c4-6d32a6f71d1c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a640685a-a825-4ac1-8ba6-f5404ee795d1"
        },
        "item": {
          "id": "3eb02a85-5e61-47a0-ba92-8fb1458c9715",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "025a8aa3-4cee-4093-9dde-2d90773304a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d9f5ad-20f7-4c08-8e52-05b3b38de861",
        "cursor": {
          "ref": "f84c80bc-e9ba-4b93-9211-14593c9d44eb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d8f0dfad-3a9c-4b53-b3ac-41aff64a898d"
        },
        "item": {
          "id": "89d9f5ad-20f7-4c08-8e52-05b3b38de861",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f605094a-c16d-41b5-a425-63e71d2afe2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3ebaa6-c5ea-4f51-8ef5-0bbeffe158b4",
        "cursor": {
          "ref": "7e547eea-247b-42c4-8c42-dbad5a4c9865",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bd9a8552-586f-4956-a066-45648bc3ec08"
        },
        "item": {
          "id": "3b3ebaa6-c5ea-4f51-8ef5-0bbeffe158b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d5a1df91-0214-4dc4-8af2-26e65d052c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f05dd-db90-457b-9693-e4389a84aa9a",
        "cursor": {
          "ref": "17567a2d-503f-4776-bd30-804cd6f2bcad",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6134ed4e-4216-4899-ac67-22cb62fc929a"
        },
        "item": {
          "id": "803f05dd-db90-457b-9693-e4389a84aa9a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e11c4b14-d9df-40a2-8c95-37f9dbfe9bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3188a4d6-7cb0-45ea-b034-96a024307791",
        "cursor": {
          "ref": "94541759-9be8-431c-b5f3-b60b5d0b9290",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "361a678d-7d5c-4723-8705-210ca74afbc3"
        },
        "item": {
          "id": "3188a4d6-7cb0-45ea-b034-96a024307791",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "42d9ae82-cba1-4c72-9d3d-c8ca33de8166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07254a77-e1a4-414f-b141-2f726936d8ba",
        "cursor": {
          "ref": "074851d1-e0c1-4568-a500-97870596cdd0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "81f3675a-db5a-4a52-aab5-6bae0109b41b"
        },
        "item": {
          "id": "07254a77-e1a4-414f-b141-2f726936d8ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b49c532c-7ca9-4b26-902d-b8c61f317cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25afeef7-6d18-434c-92c2-e425f93481e9",
        "cursor": {
          "ref": "e5aef550-f5f4-4647-b6f2-6663cdf23a52",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9735b777-f97d-4991-a22d-fbd0c5c58c4e"
        },
        "item": {
          "id": "25afeef7-6d18-434c-92c2-e425f93481e9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5df77340-250a-4d6f-bba5-56642923555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e6ad20-54a8-430b-af0d-26e0b485e32a",
        "cursor": {
          "ref": "5517517d-3d5f-486a-b327-9bf92fb50b79",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "16429081-4aaf-41b2-ae80-9fc73e653866"
        },
        "item": {
          "id": "20e6ad20-54a8-430b-af0d-26e0b485e32a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5bd60bc6-cbda-482a-8c94-9b091ca3a31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d25eb56-2704-40ad-b674-85ba5baf34e9",
        "cursor": {
          "ref": "e8216912-f5f0-45ed-a69b-2677f9c82a62",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "af457f3a-37eb-45d7-9e83-5c4763f7ff71"
        },
        "item": {
          "id": "7d25eb56-2704-40ad-b674-85ba5baf34e9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5345750e-73d2-4fba-9e11-f09b6097ba46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf49a58-0c14-4eaa-8598-7172b7230cf1",
        "cursor": {
          "ref": "00bfcfa3-0b11-4fe8-8fc4-f85bb2198470",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed6a8e2c-492e-4f57-aca2-99e893a69798"
        },
        "item": {
          "id": "fbf49a58-0c14-4eaa-8598-7172b7230cf1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a3550657-b6a6-4bb5-88c4-1bb7d6e0edcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afcfbc5-f1bb-4d25-b366-61eeb54d08d3",
        "cursor": {
          "ref": "aed26637-c8d9-44d8-ac03-2c5bf00e8469",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "09d06326-be0d-4f7f-9f0b-de8715476fcf"
        },
        "item": {
          "id": "1afcfbc5-f1bb-4d25-b366-61eeb54d08d3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4312f6cd-e9d9-4072-bc25-b60ad3f0397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c850e1ff-1076-4731-b3ec-74254d97d61f",
        "cursor": {
          "ref": "55352b88-d005-4e14-8f74-47324de0de8c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f64e4e08-fc44-42ec-852b-07779f522007"
        },
        "item": {
          "id": "c850e1ff-1076-4731-b3ec-74254d97d61f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b6215d02-8380-40e1-a873-23aed75616b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effef913-a815-466e-96bf-81980cee1490",
        "cursor": {
          "ref": "ec3521b7-a56f-4a14-aec2-525b15250d22",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f63ab789-f7ab-4eac-a640-1e6e9b0d9774"
        },
        "item": {
          "id": "effef913-a815-466e-96bf-81980cee1490",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b8bf7020-5314-4520-bdcc-88adc500e2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d355ec-f21e-4c2d-bbc5-8cd2a8b1c82e",
        "cursor": {
          "ref": "6b9cd3a6-0982-4a10-aa74-bf09dc54e4d9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d1678e58-98d0-40a4-aee6-981581d18976"
        },
        "item": {
          "id": "13d355ec-f21e-4c2d-bbc5-8cd2a8b1c82e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19b9132a-fc1a-43f9-a2dc-7e2fa02cd953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14a35e9-85b2-465d-b015-bdb6cfbef234",
        "cursor": {
          "ref": "7375e26d-0f96-4153-9d2b-ba9e3b5b2dae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ead12b86-f6b3-4bb6-8f11-fe1926217086"
        },
        "item": {
          "id": "b14a35e9-85b2-465d-b015-bdb6cfbef234",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "92f3d20b-d432-405f-b5d5-ee3824439302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475d3f2f-043b-4a97-83a5-27243b5d0db8",
        "cursor": {
          "ref": "cc75bbed-c494-4b89-adc1-aed4bff9ed74",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d3212f57-0ced-4b57-b349-0205099211c8"
        },
        "item": {
          "id": "475d3f2f-043b-4a97-83a5-27243b5d0db8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "41ddcfd3-efd8-467a-8675-06526d04221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1307847f-18eb-4208-8148-30ad88a00f0b",
        "cursor": {
          "ref": "ce722624-8d3b-4bc3-97dc-f5eac9c5404f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1a2198f0-8733-4a4f-a885-f46715c66798"
        },
        "item": {
          "id": "1307847f-18eb-4208-8148-30ad88a00f0b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "775ffb47-34f9-4eaa-976a-96523b52d6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1853ce55-2379-4869-b3e8-c8365ece725a",
        "cursor": {
          "ref": "9faf20b2-b832-4300-b856-bbb23d9b3db1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cefd8e9a-97f0-4dc6-afd4-d34c78cbff96"
        },
        "item": {
          "id": "1853ce55-2379-4869-b3e8-c8365ece725a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c9a9410a-fffa-434f-ab78-979b1e5d87ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe9c665-971a-477a-976a-abdebc327ffb",
        "cursor": {
          "ref": "c3de1118-5e57-426e-946d-51f19c8d31a4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b111b62f-d011-432f-93fa-132755a1b673"
        },
        "item": {
          "id": "bbe9c665-971a-477a-976a-abdebc327ffb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e0f587ca-90f8-4553-be78-4d5b74d65643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2353773c-d1cf-49be-889a-74bf60bc6207",
        "cursor": {
          "ref": "9325da86-c61b-4516-84df-06d72b86c21e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "10449f60-347c-4271-80b3-1517c6082acb"
        },
        "item": {
          "id": "2353773c-d1cf-49be-889a-74bf60bc6207",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ee0ab23-a621-48c5-9f58-88b9a14000a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a9177-804c-4c38-b9b4-82e15bec18d4",
        "cursor": {
          "ref": "8a3d1afb-bc84-4998-9340-fbcaf35e4d0d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "19f0b4b4-5777-45b2-805a-f3d5ca5e2dcb"
        },
        "item": {
          "id": "733a9177-804c-4c38-b9b4-82e15bec18d4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2d523cbe-aea6-4c42-838a-5d1ac68d5e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6567c119-ca82-48c1-98fa-205fa4e0236b",
        "cursor": {
          "ref": "82f9e198-9249-4628-b048-3769c0e1a4d4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b47b0b1-3119-48e8-ae05-5ff18b77948e"
        },
        "item": {
          "id": "6567c119-ca82-48c1-98fa-205fa4e0236b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5182f0fc-a1c6-44b3-9a06-58af20197400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7dafa5-7e4b-4708-b839-4c8b5d0845e0",
        "cursor": {
          "ref": "12bb6311-39f9-43bc-aca0-6559fddb05f7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "89b7a165-cded-4f6d-8635-c6c84523ae7b"
        },
        "item": {
          "id": "4f7dafa5-7e4b-4708-b839-4c8b5d0845e0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1845592b-e4f6-4b98-9621-ebc8b41da8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae616cba-3c9b-4f31-887e-30a0e41f96be",
        "cursor": {
          "ref": "480cc588-e8c5-4488-8eea-848583f3a5d5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1aee19ed-9f12-47eb-a342-e85dbf5fc44e"
        },
        "item": {
          "id": "ae616cba-3c9b-4f31-887e-30a0e41f96be",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "024fb302-4e17-49ef-9d65-3391c470832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04080ce0-4c4b-4e02-abca-82d35826b01a",
        "cursor": {
          "ref": "1fdb6a2d-16f3-4f02-918c-be4ee71579c0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "04c4bfaa-4bc3-44fa-9363-47fe01003017"
        },
        "item": {
          "id": "04080ce0-4c4b-4e02-abca-82d35826b01a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7d5a73ff-51d5-4cf6-a90f-98de759cac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac63d0-3560-4ac5-95b9-57a6601d7410",
        "cursor": {
          "ref": "fc0e2271-274b-4b2e-beb7-9e1e7ff284e2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "43dd6183-ea07-4fa2-9d10-8d3a6b222f53"
        },
        "item": {
          "id": "59ac63d0-3560-4ac5-95b9-57a6601d7410",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8bfd0448-6c08-4dc7-9c02-d1883d1cbc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7afd2b4-16c4-4478-a8bd-4c929e036ade",
        "cursor": {
          "ref": "9cbcadc2-2f34-454d-a18f-2d11ddf5d5a9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73ac62b3-25ce-4881-84b9-4fe80479a7de"
        },
        "item": {
          "id": "a7afd2b4-16c4-4478-a8bd-4c929e036ade",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51b81737-ed07-4627-9879-cd7c782e4c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ec8a6c-1efe-41c5-aae2-f104bf99eaf1",
        "cursor": {
          "ref": "103c067e-ac5e-4d1c-9333-569c01050a0d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a4c7d930-4e24-4b5e-b4c2-e5ea9277af87"
        },
        "item": {
          "id": "a3ec8a6c-1efe-41c5-aae2-f104bf99eaf1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ee46d3fe-9f72-455b-91e6-4305afd6a306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f35c3-6905-4e83-a54d-a848ae4e37dd",
        "cursor": {
          "ref": "b5c74517-61e7-44b2-a17b-d61a9df78f69",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "13a02182-ae34-4af6-bbb0-43e9a531b9e7"
        },
        "item": {
          "id": "c65f35c3-6905-4e83-a54d-a848ae4e37dd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1059318f-b657-46c3-9e0d-6db30714314b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534890a4-c428-4c3a-818f-da49989594d0",
        "cursor": {
          "ref": "363e503f-f7c8-4f9d-b0e2-7f3fd34d61d4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "19b12ef5-b75d-4609-95ca-e73afda874c5"
        },
        "item": {
          "id": "534890a4-c428-4c3a-818f-da49989594d0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "317d6367-d23b-4067-ae4d-5de2951c7395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa25f8f-61c7-4205-9d31-4f121664a25b",
        "cursor": {
          "ref": "32417137-aeca-44d8-bf3c-863454a34f3d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "56bb4087-21cb-4dea-90a5-fe6cea0179f9"
        },
        "item": {
          "id": "efa25f8f-61c7-4205-9d31-4f121664a25b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a0d960ab-4413-4063-8ac2-2bfbaee54355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd04985-46a1-45d9-8320-8092970de69f",
        "cursor": {
          "ref": "ba88c271-533b-48f5-ab9c-8b33468c3879",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2d5ed2bc-d17c-44db-abda-00944a37aa0d"
        },
        "item": {
          "id": "6dd04985-46a1-45d9-8320-8092970de69f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "301e85d4-e894-49c6-ad46-525faaf5a3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a244394-b294-4c5b-82ae-43d3e15488ec",
        "cursor": {
          "ref": "072514d9-37b6-4124-b79a-00163fd5a452",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5e52d9fb-1bb7-43ac-9081-1f55c28fbd53"
        },
        "item": {
          "id": "2a244394-b294-4c5b-82ae-43d3e15488ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6c930da6-8465-41f7-8166-98b0f82abece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9115135b-55f4-4cb9-b3a8-594f13de7272",
        "cursor": {
          "ref": "8c3a41c6-b4ec-4bf2-84e6-ce790b36b61a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "44221781-1265-4c6b-b679-6aa8b4550e24"
        },
        "item": {
          "id": "9115135b-55f4-4cb9-b3a8-594f13de7272",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "585b0ee4-9b0b-46ec-b488-bd56fc155e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4704ab-0685-4d95-8d4a-f41c51300be5",
        "cursor": {
          "ref": "444c75f5-0946-4782-a041-fa6842c16b73",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e3c488f1-0cc9-46fc-8743-3e10499e8b0b"
        },
        "item": {
          "id": "9f4704ab-0685-4d95-8d4a-f41c51300be5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "44fc6b58-8401-4abe-9797-c7946ab3b3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c08867-d745-48a1-8db4-00f960755672",
        "cursor": {
          "ref": "c0141df0-2b1b-465d-8f3a-919485ebac6e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77f78668-2b51-4935-8fc5-78d32633fcb8"
        },
        "item": {
          "id": "10c08867-d745-48a1-8db4-00f960755672",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e393b8bd-d207-44fe-be68-5ae5c53d639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04360305-b137-465b-990b-6acf2d38ddc3",
        "cursor": {
          "ref": "8db8a284-9c16-4068-bb8b-4450efc0bdd5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "acf2f851-4bba-46e2-9258-598043923c09"
        },
        "item": {
          "id": "04360305-b137-465b-990b-6acf2d38ddc3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7f858c0e-7d01-4ed5-821d-20f26b23e401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4b5cf7-55a6-4bc6-a9f0-cbfc002cf802",
        "cursor": {
          "ref": "c4e00324-2f7b-4204-b926-34eca202c184",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "04cef624-89ea-41f7-87fc-025669ae96ff"
        },
        "item": {
          "id": "bf4b5cf7-55a6-4bc6-a9f0-cbfc002cf802",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "02fb544c-6f9d-4b06-8f49-21f8457613d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8682cfe7-21bd-4d98-8d7c-7e02545c89b3",
        "cursor": {
          "ref": "d870cc32-b964-4a6a-b768-a5a5cf088c6d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fcedfb25-bcd6-46f6-a3bc-5ffee7501a9d"
        },
        "item": {
          "id": "8682cfe7-21bd-4d98-8d7c-7e02545c89b3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c4a2ab0b-97a8-4ac4-b8b3-a543a8535c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b955e2f-5ddf-452a-99b9-6e629b55bc4e",
        "cursor": {
          "ref": "4977beaf-0ff8-43a6-8660-d5c3fc0a7038",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "886c1be8-b5ab-4971-9664-468c58ceea52"
        },
        "item": {
          "id": "4b955e2f-5ddf-452a-99b9-6e629b55bc4e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1be9fa6a-3f5f-4988-bb4c-06d2be7bfba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad325b1-3733-4ffa-8fff-efa8e8b95758",
        "cursor": {
          "ref": "643517a2-188b-4ae1-abc5-71ac230fb869",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1e3c58ac-665d-4795-b37a-e4e124f1bbaf"
        },
        "item": {
          "id": "fad325b1-3733-4ffa-8fff-efa8e8b95758",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e4bb725e-1318-4d86-985c-67a769fe3303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9193c66-5aab-403a-b7a6-1b2355fd81ef",
        "cursor": {
          "ref": "d1915b1b-e119-4d5b-90b6-0631abd3a387",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a2b614bd-2f5f-4baa-92a7-c8bb03cf74c3"
        },
        "item": {
          "id": "e9193c66-5aab-403a-b7a6-1b2355fd81ef",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4114da10-d17e-4e4e-ab41-94e56c5f3139",
          "status": "OK",
          "code": 200,
          "responseTime": 2443,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe855bf4-0824-4359-ae72-46b4e0006c58",
        "cursor": {
          "ref": "c03c20b0-289b-4b79-a4c9-ce5d6ab0f944",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7354198f-83c8-45eb-a258-4e0cb9da97fc"
        },
        "item": {
          "id": "fe855bf4-0824-4359-ae72-46b4e0006c58",
          "name": "credentials_verify"
        },
        "response": {
          "id": "af9a2888-ff5b-4119-8fb8-0933a6517a2c",
          "status": "OK",
          "code": 200,
          "responseTime": 2933,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a51ec5d-a677-40b4-bd1e-3f21aecaaac9",
        "cursor": {
          "ref": "2694a25a-8305-4b3a-8a81-63befd9a7711",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "feb75155-b70f-441c-b0d4-0e5bebdea3e8"
        },
        "item": {
          "id": "7a51ec5d-a677-40b4-bd1e-3f21aecaaac9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "523c8034-a9ed-421f-bf8c-c716faa86c91",
          "status": "OK",
          "code": 200,
          "responseTime": 2302,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51b8792-6cf0-4fe2-9ea5-26f8b33a48e1",
        "cursor": {
          "ref": "5c5a4ec1-b97e-4023-90c6-30bac162f881",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74a6c4b2-edfe-4901-8578-cfd6b249c443"
        },
        "item": {
          "id": "a51b8792-6cf0-4fe2-9ea5-26f8b33a48e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0b2b13c-9425-4688-b3f5-6c0ab8e3c65b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51b8792-6cf0-4fe2-9ea5-26f8b33a48e1",
        "cursor": {
          "ref": "5c5a4ec1-b97e-4023-90c6-30bac162f881",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74a6c4b2-edfe-4901-8578-cfd6b249c443"
        },
        "item": {
          "id": "a51b8792-6cf0-4fe2-9ea5-26f8b33a48e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d0b2b13c-9425-4688-b3f5-6c0ab8e3c65b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d770684c-c6d7-43bd-93d5-0889d2cf1004",
        "cursor": {
          "ref": "71711ea6-ee5c-4ea2-844c-89cf88ea13b9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "de7da735-03bc-4187-83ca-af7c547697fa"
        },
        "item": {
          "id": "d770684c-c6d7-43bd-93d5-0889d2cf1004",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e950acd8-0120-4e7f-8feb-39e6248513c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dda14e-3238-4b0d-95f6-4769be7b5f29",
        "cursor": {
          "ref": "de38c1f1-733e-4347-a071-adaa7c5c2665",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "237274d8-6b40-46a7-b719-cfba8691ab33"
        },
        "item": {
          "id": "c1dda14e-3238-4b0d-95f6-4769be7b5f29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "caa487ff-9fa9-4d08-b4c5-8a6733c93aad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}