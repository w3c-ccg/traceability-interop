{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72bb129a-f5d7-47a4-b086-4505822c077b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1355160-f92c-45e5-8c4c-2068929acf89",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b96e459a-ea4c-42b3-b42d-b72bd78ac2c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8b4b8c4-d729-46c2-9a90-fcfb88235689"
                }
              }
            ]
          },
          {
            "id": "758524af-21f2-4865-9c0f-e46d4d8ad2ed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c57d16bf-10b9-4472-a7ad-75d8c6b77214",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c4bd6dfa-b8bf-44a6-93e2-e7309ee3dca7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "995e6d4a-ae16-474a-bf49-047decd297af",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c703102c-7be4-40ad-a1df-66e4fbc5ab28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c334f07-a2ae-44be-bb5c-902a9f50d029",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93dbc18d-43ce-499b-b60e-e11e4ae6efe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaa4ace5-eff3-48f9-8dc0-4ec87917280f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70e623ff-4eee-4835-a465-23859dbfd943",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "965a06e7-f63a-4d07-80a4-d2884cf6ce58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e17537a3-983b-4485-bc04-62c120719b3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "613aa35e-4fc8-4fba-9285-e6fe89a5fa80"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c90500a-5f56-4b7d-a0be-54b4c40a01db",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "53b61edd-a9c7-4164-9729-40f22beed5f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0577547a-cb3a-42f3-873e-fc973de6e466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cfdf9b2-a210-453b-b563-0482862b9703"
            }
          }
        ]
      },
      {
        "id": "57158162-e051-4678-9f0a-76762cc81853",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2e486b02-f848-4ab4-8ebd-de5a0dc396f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2781a52-0e26-4112-b33c-33eb83188378",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86c5b95e-3344-46be-b4fd-6d843883df52",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40283f87-e4dc-4784-a79d-e944f0c22a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea4f7639-5331-4a54-9396-ffa9159ee217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c007a3-7126-4bd9-8394-9edf86fa08f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024d9f1-0990-40c5-be0d-5ed9c7b4ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4a7c20c-50f5-4f34-9678-44f6dd5b4de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36da9d70-67f3-4008-a7b2-c9dd5abe7bfe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5fb430-de40-4e45-bfe5-29896e10c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9608a6b6-9cb5-4e78-88fe-2234967de540"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b547b9b-b803-4c32-bf48-bd4d13fdae70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99d5efd0-3cf5-47d0-a484-08bd37d513f5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ac5e0-a7c1-4e41-b84d-b663c92ef189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a3f2c81-da94-4ea7-acb7-5991e7b7a81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ec314-9f51-478b-a9cd-b56019c32a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a496d4-07cd-45ac-a6d0-5195840d5ada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90aca2e8-4b71-403b-ab53-04c56bc8a2c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2db53653-a1fc-4c43-b94d-fcf6d71f48cc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc18bedf-76d2-4646-8f99-61260f66a087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "75d7cd27-77df-4737-b7e5-8a3ca97a53d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "380e3044-5b33-45c6-a5ab-1c9d5e154c2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4053d641-bfba-45be-95e3-e2b3f5e9eabe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e5091b1-7ec9-4086-9adc-1d03e7e9ad87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98ee7257-096c-4b1f-8176-deda2f19cbb1"
            }
          }
        ]
      },
      {
        "id": "880b7f00-99a3-4041-9975-f0651467bb1e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c80837f8-c8d3-4e4f-a969-81f89e2ac395",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0783ed6f-fc2e-4abf-b371-cbb4f171b540",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "97bc5a56-00bd-40ee-bcf4-186c545aa4f3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba06aaa-a0eb-4acc-a88c-dd143261c3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26145538-c775-446f-83c9-999c9975e16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3aa0fe-00dc-40e1-85c8-e01e55ba6db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d4fa34-6932-477c-83bd-a56660d4e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ac69b-1110-4614-a54f-21d49c2c6bda",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63e3075-7e6c-48ad-83bd-dbe4b6061b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f28221-c551-4dde-8efc-9029e1099835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d802aa7-526f-4466-8617-8e3e4371744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "642809c0-6d8b-49e7-95d0-dca6ed923668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499ae8eb-6734-49c2-8712-19026e6213bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fa1b20-a5b3-42d6-b380-1b4d3d4d95a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c874cad-2a7f-4687-a578-c0a46160d092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4e15b-77ea-4689-a2c6-23072d25aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea50e96-a6d4-4f7d-bee4-292b129a2c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a4594a-4442-4956-810a-05f026e5503e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe218d-f4b7-4d46-9672-4a5d88900de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a5fc98-4425-4014-aeff-db3db5ad1039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0821b44d-3685-4c71-b5a3-886b8fc91692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d217c85-9df8-4adc-806f-7c54bc4a4bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8029a9-e930-4bb1-9ce1-927dd7f741d3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a150259-6cad-46e0-8536-54bce295d163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1c23e9-9335-46fc-8cd1-56dfea92b223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031937c5-9a7e-4deb-b7d7-42afc67d4ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588ed27f-f41c-4275-8a57-d628d18f3e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac97951-bf4e-472a-b617-2ca17622d39b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7c383c-c503-48d9-b8f4-d7dd46a3672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798bc33e-092e-44ea-8835-209907227496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd67128f-2e01-4a3a-acfd-4c5b805d9144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a445e77f-efdb-4f19-9ee3-1bbd237f2c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745dfce6-58cc-4e60-85e5-498cec3aa4c9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a7c9e1-f79b-4676-b9cd-4990b5f2efd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0dc112-a5cf-4862-8ad9-ff526dc41c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e7b805-321b-437d-a795-081cbbdfa225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bb9c270-d349-44ae-8ce4-e2a2539aa632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba8305c-056c-4501-89cb-ae633bcb9f20",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5dac0-2247-4c4c-8aa2-60ecfba5b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eee5c42-63f5-4acf-804f-3f6337dd785a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65bee8c-5885-49aa-824b-f78d329f211f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef5e5384-492b-4969-9428-a5045ebffb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bb28a0-3127-418f-9901-a12edcdae379",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eccb45a-ac67-4401-84b6-e1ed311ff019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06b6a13-a8b1-4fa5-b7a8-72e5a27d9c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea745efa-1a27-4413-a64f-52308b92dc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aba4cad-d11e-4317-9119-83a831a0baef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a58a70-785d-4e6b-8231-61be8f8da3d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826cf799-3bf8-4c6b-8830-47ae890c2b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79803901-7aa3-439b-98a3-ba2ea4a6d291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4168cb-2f8b-4a0e-83c1-bba48645ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48c068a3-9168-406f-8520-d190ac7ee35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cee7d5a-ec11-4d6e-80c7-1051f9e4e4a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24485ee0-5522-44d2-9a7b-f3553d1dedb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159f1b95-d3b6-433e-9f80-6f1424935827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd108a3e-a5c7-4abd-815e-a78929f7255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54ca9d0a-782f-4051-96a8-4970d70e39f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b526e9-37a6-4ae1-8f7f-962b5b5159f2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b08c01-6fa6-4bc3-aacf-5e17460b2505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed735be-ca26-4206-aa23-87c60b755814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7982b51-3770-4e9f-809a-46bdcc229a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eae940d-057e-435f-a910-ce3c17f631ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bc4c56-1708-42a3-b92f-eb1c38819085",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753b698b-d37f-4ec1-be31-2c64532fbb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39028372-a5cf-4209-a2b1-b991ec262e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6e879c-3f3c-4348-9415-d898016127dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "117100fb-ca26-47da-bec0-507679dcfda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0840e-47d7-4bba-a6b0-f7f3b95aa93e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02293713-f99a-4e02-9a53-20beded00967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9cb14d-a573-4c0a-9245-9aa8169ccd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952e09fe-ec4b-43bf-9d23-5e6c91d3e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eee7b75d-1a48-4c88-a9b2-c3dd6a970c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31106b39-66c5-4209-8a8e-7cdadb0524b4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9ed92e-5a07-4567-9d77-d85792a8dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5831a6-6eaa-4ab8-b653-581f6fe12c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80855480-290e-40d4-9a96-bbfea071866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6b5fb0b-cd5a-42d4-9fab-fea5d51ea245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d1facd-7aec-4d3c-9d93-7dccb12d1ca8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dba7acf-121e-4f3b-b5a9-03179fda6b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0d7230-7319-40fe-a1ed-b7699d4fea51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a483d310-e76d-4041-8ac1-dc094b19d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d7c6c4f-34f4-4e87-a0fe-b9e570de65c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df9848c-0277-41e4-b55a-e1ae2bb6efed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd164e70-b42e-4da2-92f5-63d8bd0c4a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1035bcaa-0930-4d36-a5ff-a2351876a635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afa3f1a-2097-4a12-841a-f495168e255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffb7ac4c-92e6-4abb-9193-8e6c9d0c247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b0af8c-b0d6-424b-bf7c-91493b2b6cc9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b291e6-1144-4d91-a2a0-fb36b4a4911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ba29a3-32a9-4b11-88b9-3eb58cf5546b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd267c5-a53b-4ff9-a381-ece3b7369476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1d11b6-1ce7-49f8-aafe-333049657128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d804e1-5d7e-4369-93e7-ba10fb844a7f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99d32b6-e647-47f6-8962-daac9c174650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d811457e-3cce-4706-8773-5da5a62e38a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febe9afa-d733-4816-8bd8-be36b200cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf94e5a2-88e1-424a-a795-a8a1e0c94102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa140f2d-be9f-47c3-b9b6-18cf0c9dc2de",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c600c627-0557-442b-9f6f-7fee552d8029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a5014d-0247-4513-8c9b-5ad0a1aadc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc69709a-a252-48b6-8279-73ea91e07b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf74468-1126-4324-ac27-9b4a995a3719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeb5934-4516-49bd-889b-c90f2c75428b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5cf0c-126a-4a8c-9d18-cf9276f01654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a26c63-24aa-40e6-a589-2d7e31a0206a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baa5dda-c163-4a18-a0aa-55239438a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4f1a86-c1ef-4125-a8ce-136ad706d638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43eb5792-62ff-4292-8778-667d30eefdbd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a05dcea-4694-4485-b482-cc986693c06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae06e07-e5cf-4238-8fdb-27713b2fcaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060a71d8-db05-4019-806e-1806d76bb6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e698e8f3-d7b2-4e17-a06f-38b3a01f9956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d66c3a3-dbdf-4398-91e2-c3ca1784c3f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbd4c77-3cfb-423b-b754-210f6f9dae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71dc66e-618a-4cce-bb51-eb439a5e5b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a10889-9726-41d4-ae0d-d1ce780e16c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71fd5f14-2216-4e69-a974-93523dca3832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdcb028-f2a2-4f35-8617-4bbfcdfaa6a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e31cc-b5e6-4c01-90fc-39cb0c364d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0596c6b3-2cdb-45a7-89f5-ee450a113eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c7cd9d-5e95-4b8b-a778-252bde70c5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc135e68-9457-4f21-a94b-dd4a794d513d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9e80a5-d3d1-469c-a215-d526b7540568",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd68fb3-cc31-42ea-9056-57c6bf0e5593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfc697b-e969-4dd9-b5b4-c5a476e15367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ea42b-260d-47c1-9bd4-bb4c05c73018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "760838dd-efe8-421d-abd6-f06579c8811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d1049-8624-4a17-b474-0690b10de1bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d9997-4302-4bfe-ab05-d820c175b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141b0e75-2ced-4705-aea2-160c5740940e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3e8468-8ea4-46fd-928d-398495905836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cd6010-96ac-49ce-a30d-151e1f074b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff4d69f-c423-46dd-9bc9-19330588f0bf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270633ce-7850-4374-8ca7-16d45a62cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacefd28-8ec5-4ae7-ba70-84b119b32e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87186aaf-38e5-4372-85f0-e0212efa95e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eabd1b7-5b9d-422d-83ee-af405f0e2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57b1533-452e-4c77-ad65-8648cc355b73",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4090b33b-1b3a-4e07-9ece-dd11fd4a05af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d3589b-dd3c-4c2f-98bf-27849df2ceb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a7bf8-0195-48e2-9370-d16bf3f2d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c951e0-4ebf-417b-98d7-fc66191db5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb759d-7bdf-439a-a39c-6d335904601f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4bda40-6fcd-4873-a044-541d78238502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8047e19d-f93e-491d-a5cb-dd3eb2def3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592b00b9-f0e1-41a3-b861-2496b9ea4faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebe20bc-bb15-4846-9279-faca3b4919d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b00a3d-fbbc-4cea-b26d-2ac143d6f61a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e16e9ac-b938-4ac6-a4ae-59e9892cfce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c032e312-956b-45d3-922e-6d1702b6fd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff81cd33-f180-4fd6-b2ae-6ad146e83c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00be2104-f21c-411b-8682-b4b5937acbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730e0810-66d1-4433-80f9-2fcb8be89f0f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd01372-faaa-4032-a5d9-88a81af64a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c589f2e-efca-407a-b5b8-bb1f19f0e555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca082a90-f501-4c57-a4f7-8212f5087ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b51ddf0-a13b-4b23-97e4-d929908b8896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63960a54-eed5-4078-975f-270229bfd0a0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baa23c2-e6b7-47e6-b6b7-7ea7e2bd7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e53f2e-4715-4c49-ad65-e36c36359de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c489724-bce0-4a1e-928c-0b3561046016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e2fe3a-192d-47fd-9f0a-903039dd37d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a38531-58f6-4212-afb9-09fa162063c8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2a044b-cae0-4243-986b-adffcf872fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5295e4-5e24-4283-84fb-91e3844c393c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac4aec-d6ca-4ae1-b79a-0147eebafe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c34e33b-f32f-40f1-a88e-54c2fab519df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05ac4dc-53a1-460a-a19e-884cf153c779",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a7f3ff-5724-4149-902d-2ac3fd97941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd5f74f-5ac7-45d5-92d5-9328099803fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5c2653-6cbb-4528-bced-f58f1034ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "883b4c73-3e6e-4862-9d25-8524b86003fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44085bfc-91ee-46dc-9bd8-fdd19b414408",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9997f9-99e4-41c9-a31b-eeacf53c667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764375ed-0ab2-4f65-9907-d1e0bd9870f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4ba56f-af4f-4773-bec4-700a5c42e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21b635da-f67b-49ea-a211-22afea12eb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af137222-8d4f-47fc-b1ad-fc1afcfbee26",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f2ea12-165d-4a48-966a-c2b5104b528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59a4ca0f-deaf-4490-a98a-105befeb61e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bf659b-b76e-414a-9779-e1a6017cc4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e092ad5-1c32-41e9-92ab-8bcb145e2614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60ca380-8996-4106-a92a-911cca58e45a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49839697-31e2-473c-92cb-8df50ebac6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4720da09-6984-4a93-8444-1a8d34ac6d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d896b74a-c7a5-4a15-a096-5095291c5707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac1b708-ef19-4724-a9e1-1f7460813525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b419c5a8-1cb8-4829-93be-e16e4f9be1be",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70365ad2-21fb-4e1b-8e0e-a9afcd8a7aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e44ff-8bf5-48d5-a789-e5b601f5bf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b4874d-f808-4ae4-a705-b17378e608da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5331c3a-e97c-4aab-b41b-c0e3daa50081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f080f722-61a4-4a8f-83c9-1df9d9ae43f3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2282a3f0-21aa-4b1e-b16f-40abc032ed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fb5842-1bd0-4237-a98a-653c0089576a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf570c19-0a58-4ca1-8f2b-8fb0ce72f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "377a544c-14e3-4f2e-b01e-db055e7da8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae733c38-7d6f-419a-9781-6c1faa963e8f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2474f06-4f7d-4fd0-b511-15e1de72247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ce6a28-d59f-4caf-98d7-a2d5a409016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa275e4b-4a11-4298-b15f-11e9ab909e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1094079-fe52-47d3-af06-bffe7295759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d71c10-4722-4ad8-b3c4-f4f395d369a2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4438ed8a-a23f-4737-8cad-39ad32d8711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1b9753-1008-4c14-bba7-0c3ce104d1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e53e170-6a2a-4a2e-9ea8-ad3fb601790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96995967-ca09-4381-b5a8-edea7a23a807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9132b5fa-2e3d-499f-9974-a42bd2f87816",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0f51d5-acea-40da-adab-471cffad1836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df00973-1f8a-43dc-8823-b1b696024919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dc4a68-207b-4fcb-ad8a-04e13082e0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ee51d82c-de94-4fe5-9b6e-b4a68387f02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60049f-f0c8-4cdd-8914-725ce2793279",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ccda5-306d-4496-8dd6-76d517f48f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6870c97-0578-49c2-b2c9-9f2bd3662510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33905c6f-7edf-4c6f-b9b1-f4258c6a68c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc7cfbe-906d-480e-b883-dcaf9657a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06325ba2-ccfd-488e-8b08-2d528071542a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57097107-008d-4906-85fb-1efac5d9e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c72fcb9-874a-4174-abbb-d393c8aa2dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ec941-e457-4a22-b824-b6ba5bc52e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f24a14-cbed-483b-8c53-56b6672d19de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecc7f8a-59c5-4354-8520-df37ad66ffbb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9620b1-aa7c-4a64-892e-5b4efe095964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeded0d4-10fc-4383-9cdc-98c81710235c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63e6c10-ac40-4dfd-b94b-337487ccc80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7287f6-ac90-44de-9b88-fb2bc28a4357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14114d77-c26a-4224-beeb-9b5716f26e20",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d003c69-cbae-4935-946e-8d24d0e0e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b742fcb3-bfd8-4101-a12e-dbd65b1df5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7da74ab-effc-455c-9f79-5df225093387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d02c91-a5e2-41e7-8155-3cd95748f88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d34ef9e-8cf1-4480-90b5-d9ecdc7f9dc7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25ef049-2306-46b2-9fd6-467680619004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14b80b8-c90e-4c93-8dbf-d6ab5197e074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645812f5-e68a-44d5-a6e9-ee0a31658892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0869e377-126e-44d3-875c-6620b69e7cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24b0dd1-58e5-499e-877e-baac875f74e1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834dedc2-7059-4bca-a19e-657dc0c761cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb178c3-b828-4161-9a2f-7c4a70da9179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acf7ce4-9f8b-4e43-9a91-5090211509fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a1bb3f-8d3b-4f48-be99-fab0bce19a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3d21f3-4d1a-4713-a513-cc20f44c5709",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c98f9f-6783-4ef3-a39f-eb12f2ce9001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf31d99-59c3-4dd0-8588-345702d197d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5affdd6c-964c-4ee5-aa9f-1b3d29b0efdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df19496-a2c1-4c4a-a3f1-d5a70ee69064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5ce43f-39ab-42de-bf14-c637a1230c2f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204ccb1-ef84-47f0-9219-981a9374c2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0f92ca-f4d3-4506-8e38-8c684a1be2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc31e0be-7d20-40c4-b25d-b3bfc9b07ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b1da6f-49a7-428e-839c-1b0193cfb14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acb53ef-1619-46cd-89e4-85e50562e66d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7bf3b5-89be-4e5e-888a-be70fff823b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658e066a-70f0-4851-a1c2-1a8d8df5443f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70580db7-88d4-44eb-9226-816ad8722082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9a0096-c5af-405f-85e2-254f5bd8bd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7e1fec-2351-41e7-82f3-84068230d1dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0056e3-e5f0-438f-bb78-f51c3cd6b0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6398d0-2d67-4d05-ad3c-aa4e27bc011b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0ea968-710f-49aa-ad23-e447311b1d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f243eaec-0f59-42f6-933a-cb73828ca42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4798c7c4-6bed-4a55-80a7-3896deb330bc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fde5c26-c7d6-452f-adaa-f6c7e53fedca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aea787-dca7-4a54-b5bb-b5149e78ebeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcda514-f816-4bb8-82d0-0d949dccadda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "872da588-9394-4245-b23b-399ec48708df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af6cf2c-435d-4765-85e2-ea7419888b13",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d673d8a4-30b8-4ed9-b2c2-0b260ad6de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9199c1-fae4-4706-a4f9-e9b084364e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e71b1ce-43fb-4a3c-91be-00fe6e7f6156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6350a3bc-f7c1-4f87-b40b-09ec8bd91d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79c4873-9077-4116-be16-02f691ae70ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148291df-a956-4a05-97e1-3bb0c70e414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a344a0-a0da-4a3b-b50f-9b837610d667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0eae6d-60a0-4f96-80af-d1cbe6a4586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0befde3-21d7-4f51-b141-f190ed947b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0dd83d-27c2-4eae-9f61-05dfcac34cec",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f51065-a1d3-45a9-b27c-efbabd5a04e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2813ce4f-599a-4931-b4a1-7909680c24d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70638f50-13fa-4765-b9ff-11ccb33d8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "177fc68b-9651-4808-830d-5ac5564a082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457160a1-1f1c-4622-a7eb-73020cbf7de6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60c5cc1-6fe9-4c46-952f-d03960effef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25339153-d962-4641-b0df-899c00a54396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf824a79-e793-4508-a855-70e2868cc593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f89b7a-c8bc-4611-8dbf-f98d145576b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48fd9a3-4c7b-4d69-8599-ad10ffb2d90b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23592812-4c85-4571-8f03-65e4a5e27c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad899c79-b0dd-498d-98b5-13d3aa188eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79cd2f9-70cd-44e3-a800-3217a312bafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e2be38-3e0b-425d-bb80-06f7ddb073b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd01a0-e23f-4af0-b0e2-bf61a1235522",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fd9d17-8052-4d21-b194-23cc63d84af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b18a6b-4321-463e-a4d7-4c4052149e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f41037-ad04-4a5b-bc90-0d2ab9d85ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc23024-a6d5-4efb-9490-6c9d0f4f6a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6701c486-9b28-46ec-a40f-cbb5792b53cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30167a-3ef8-4951-a080-81fd9ea0014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f75a5ea-7bf8-4831-8a5d-65a41abc91ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b9044-a024-47ae-ad2e-74c880986a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "423ee30f-e202-483e-b709-9a73d32b446a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c2ef71-eded-4a71-b30d-a01efbe871d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01b9950-f7c2-4544-a05c-1b26ce6847b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7880b-d4cd-4945-a9e4-a9aa70d9a312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc0db43-21ee-4e8d-ae65-e9c881a4fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe34c70-cb3a-4312-8f38-33b8fa4008fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9920cb-ce4c-4c95-8d77-11930c4c0702",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a993090c-b1db-4baa-9a0f-0a551a4ba738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adfe6a8-250f-4aca-b11b-790f3c3703dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73777a6-110b-42eb-ab5d-a261f220ee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc67b544-c693-4cbf-97a2-4b6d63437f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afa0c05-6be4-4617-a186-589a449945cd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a35734-f1d3-475e-9542-879449878978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b04db-1c30-42df-a3a5-c2326a10198e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66eef7c1-e239-4cd3-8bb9-72eba1dd68bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa95fef-57db-4c63-8ef1-fb96b85ae2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eefc70-de9b-46df-a649-d3f7fb8efd2f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5e457f-c095-4624-bbbe-81bcb7936f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a9c19a-db7d-4b52-bc59-30bc54f3e3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324afc9f-a336-4d1b-87c5-962454caefe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbefd443-d7a6-4a82-b138-ae1bdacf10e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f57fb3b-5da7-4bbf-9fd8-a5d1eeb02e9e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0d709d-6a30-478b-b82d-1724af7abb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f6bf35-56cb-42fd-9203-e9695ddf5158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0dff74-38f7-472a-920e-d5e5c9aba0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e88f3e3-8038-4448-b5ea-468d1831a66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515ee745-9531-40ca-bd63-08a0b738ff09",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21445faf-7572-47c8-944f-accc2014b149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d915cf72-ac67-4858-a2f3-0704f8aef327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630b064f-a281-4dc7-abe7-ae299f862f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b13b0d-a3e2-4f66-8718-387885772021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54157f96-a687-4e3c-977c-b76e28169599",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dbc96c-7c57-4184-802a-644468768641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50c9885-9f20-4ac7-b5d4-62594c6634b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e3a7c6-0435-4a9e-a224-7a607e41718b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c24578-5738-464c-bee9-81c19dcc1630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7ae306-3759-43b3-8854-2ea094826b3a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dab18c-5af2-45ba-8a64-99743ad9eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf2c837-291a-4fff-bd2d-e96c05f45c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f332bead-c1e1-4959-9bef-a67300649c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ca4ebf-8c74-4e4e-9756-31b9a797fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a7a3b-7c1d-42d1-bc7c-79758113114a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afcb82-dfac-4ef7-9041-f72cd3513013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301a126c-0e81-4b0d-9723-64685de8b84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b361febb-8c35-417d-9c44-f0e551c2eeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e58d53f9-8cc7-4be1-9d2c-25953f7963ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d797c2e-761e-4d48-8e8a-5540e8c8a455",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b6c01-9f10-4fa4-b53a-47ac96330caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18b5de0-605d-45ca-9f34-c788b22920bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bf15b8-82cb-4ace-81ef-51a9ac9389c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69fe914f-bfef-47d4-acb2-3604507257f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a2e652-9fa1-424c-ae06-95b6c4ba7259",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99cbee-37bf-45a8-9da3-137a7cedbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd1b16c-738e-4881-8277-16d5934f2a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2104429-5095-4107-9fbf-682b06643bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01687f29-a93e-4408-a6ab-216ba60bccf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77877786-a03f-4105-b34c-a31d9fa79d6c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e664e6-a1f6-4a36-8bce-0f617b59354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaf480b-75c2-4b7e-917c-b10bcb55c419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d478d8a-0faf-40d2-a3ef-306acb44b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9406a5d7-fc94-4eab-839d-75e3a7a8bb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e7488-6c92-4d7e-ad4b-c105a4f34ad3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c96445-6878-48e0-bf6a-1e7e92a4d758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7666b345-03d7-4443-83fa-0251d80374b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a9b054-7ee4-43f7-a898-8b2ebf3503bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "856bfb65-60ba-481d-9d12-0bbf3a69bbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce6a9df-cf83-4456-94b1-3bd1d1a85873",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba3b158-1b35-431b-ada5-6fc4e689846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaa806e-8744-4e11-acb5-262ee36815b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da407bb-2d65-4914-a210-41ffca3b4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c014da6d-0ac9-425b-8ed5-324e141e1169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b72edbd-18a6-499b-93c4-ccc0abb9db28",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5607c7df-8c61-4a1c-910c-27cf4c8639c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda8beb2-0069-46bf-8f67-fb2d7a433104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c591ab7-ee2a-4d65-9d0f-2698e5a1aa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c7041e-1ed8-4300-85dd-981651c27ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35665daf-7648-4927-a4a8-88a590c5cb35",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59150bf9-4a62-455f-b74b-860a13205dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c6c218-87cb-46ef-8b79-22183df16943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d69b39-ef46-4516-afab-34e247371b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7409e943-65fc-4da1-ae06-582260716434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb502f75-c3d0-4d02-a012-fe9ad6082e05",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a54992-d9af-410b-aa62-4bc44aff166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11365e6e-dfcd-480d-8c6d-601b2a97821e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e439b34-443f-4284-8735-fe20782b0085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf878865-13bf-4e1a-8003-a74b68911412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d1c260-e017-4383-9b67-a5505b2cd124",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c089f-f7c9-4bff-8bcd-19125c6457c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9916c788-7d13-4cad-ab54-3fc54f5b9036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11c3045-d2e9-4f1c-abf3-8524633a6b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e504901e-6721-4ca7-90e8-f256cd5a7834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efc0a11-a2bb-4079-9024-dcc33b58a3fa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce02c44-2640-4be2-b64b-aaff5728cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5e9ecd-06f9-4766-97fb-c19306b459b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ea8bc-9c25-44d9-8541-d101e97708c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac694eb0-b598-4205-b7c7-c64da07e6fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63ca927-ce28-44dc-be9e-d15e6cecf9ef",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef48b16f-6ebd-4497-810e-f3ff338f20df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd3e4c9-0bc0-4789-a108-fd1aacd196d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a6c5a0-7a79-42ea-9e27-81135b1fb82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba53ea9-e84d-4ac7-8ac4-c6d3e250bada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404a113-d5aa-4e78-ad42-57f5acc364eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc9b23-3fa7-452f-bbbf-868484fc6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83502c1f-1a0b-4ce8-ba97-7b8d2fc7cc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ec954d-7ac3-4c14-9d4c-c2f44bf50a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b87631b-13ee-41be-95e8-1aee6d5dcdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281e780d-1e84-4414-bf0d-19016b303585",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcc441e-f8dc-4028-b26c-cea706714b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21565d32-b8c0-48e6-abd2-6f7538d1c13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7cd989-0fec-4d9c-8608-585b86b46810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42d2bef-1927-441d-a67d-b9244f50737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c10c44-be13-4827-9bd6-7ca12fd252c7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06fb34c-7cc1-4b84-a3a0-9a9d947c5379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35b56de-0094-4b03-88d7-3d3374ee36d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c0e1f1-4bcd-45cb-8414-31b286f677eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa40b01-9557-4ae6-a8c8-408844512bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dddb7f5-dc2e-4cbe-b3fc-c9b58da97805",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b32ce76-318d-4d4f-84ae-e713ce80a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ddffc8-a70f-45bf-a2f6-58ae39ebde57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e88208f-ff47-4e73-a040-f756b2a202cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ee5358-0556-4dc3-b0cd-eb30b4e80112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b450dc1-c836-4d1e-9d3b-389dc0fe2edf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c232397-9a23-45b0-a8d5-9660b01321f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcc1b7d-8f34-4c52-8a76-3efc99f37d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c6f50a-019e-4858-b3c3-2df034f1e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24e80705-19f6-4bee-b84c-082c22654ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c6d028-d24d-4403-9f5f-b82478489890",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0382713b-f082-422c-ac77-1292eed8f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620fc7d9-24de-469d-93cf-3d698e9f65f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3bdcf3-28ff-484c-bd10-5b5a60b7b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fd764b-4deb-4c7c-9bd6-4f527c5d752e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3796e2-1a41-4edc-bda8-718b9266616c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb4851-1627-4521-b954-b28fc4842603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49aa7615-d007-47e9-a381-8e8b8ed99128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d561f95-015b-48df-82d5-1abac6bf51fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4702b550-f560-419a-b592-897955867949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be80b57-6e52-437b-8339-5ab572ec549c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b7c1c9-6579-4b80-a408-6657002b82ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05971b31-7bcb-443f-96b4-53670a6d9dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1324aaf8-44f6-45d0-bef9-c5c07670a5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3244e0-c230-4765-ad16-32c9ec684f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8206f9-9e45-42c2-81a0-b5cb51bc9112",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d2e5d0-a639-4711-b95f-1af6c2ac8a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4afee09-f2ba-4275-bdcc-eaf473c2adcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40b4134-8e1f-4cfb-8605-0b7e3b5954b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d0c24e-97ae-4fbe-8f33-fbf5c98836d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf1d8ed-59c6-4a0d-b8a6-c4123266c050",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dd8e90-2ea9-4e23-9a6a-7885181751ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b6828e-729f-4e65-90ed-f5b4bb802348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae225798-925c-452a-a727-35114229d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1da073e8-1db7-469c-86ed-5787a43c153e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6e7eae-2da0-44cb-b49d-54aa86ec5c28",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217d8882-b37c-4932-b993-9a5b4dfc6b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54ad8f3-de9c-448c-b989-d8d91514c297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb62c4c-e2f3-4385-a6e7-d6a5f558eb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc170112-a5de-4f05-8b5e-1c393cc0ad55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a341d294-ab8f-4b3d-9ad1-359164a04036",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051faeb2-83a5-4b72-b9cc-48eafe37dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8958191d-7006-4b70-9b18-9e6920d7c19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96106b1-2a39-4b77-b2a7-90548f7e6be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc2bf22-a815-48b6-bb65-10f3b96618eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20c57c02-127f-4ee2-ab81-0843e525da2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f36aaa6-f5d9-4a99-bea4-935251b53d75",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c089e85f-d557-463a-9ba5-b3cc9c0b841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f98021d7-fb31-4e08-b4e2-8cdc957e63e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024d9ca6-0194-43e8-b73d-db6e459b2800",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b97499-1a37-4eb2-8408-89789bdc114e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6da668b2-8efe-401c-9fdc-0397dfe90999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edc83650-c767-429f-b338-a862d10e1716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5eee86-e995-4f08-8e69-5736d8e84f5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdd8b5fb-200f-4097-a052-b663fdab8e17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3575bb28-d3e0-47e8-aa56-0d531f8b1411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db5e79d5-f47d-4fcf-b902-3c95a26a6946"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7834083d-19db-4f7e-869f-9ca2db56afba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1a0de01-78c3-421c-b62d-92cf4598c6bf"
                }
              }
            ]
          },
          {
            "id": "2f402ae6-4f51-49b3-8500-c1e5b0120dda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f404a42e-2388-449f-ad69-65396d0a4a41",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92d16d6a-4a87-4d21-b20a-e695de5f9dfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a366a73b-356d-4af2-aca8-f931e82aef86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b145b65-472d-4520-9f16-03a146b41b9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acdde5d9-333b-432b-838c-338636f9ffc9"
                    }
                  }
                ]
              },
              {
                "id": "89cf2246-8dc9-49f5-a3d8-048a14265a85",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d82931-0a69-4063-afcc-e57d037be285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0faa808c-226a-4030-aad3-2673d7b0693d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "041c3da9-ad78-4feb-acac-9beec319829a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e670637-6b3b-4a5b-abf7-8ace5a3edafb"
                    }
                  }
                ]
              },
              {
                "id": "38f0b26b-1e3a-4638-8f26-55407efbd385",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88d4ab65-817b-476f-a8f6-b624f8333003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f05b527-5078-4f1e-afd1-916a5a48ce89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4145e53-93d8-43e7-b27b-7adcf1e9f07d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b15f5af-05ae-433c-a427-b776bcee2fe9"
                    }
                  }
                ]
              },
              {
                "id": "6739b6a2-6ca3-4f00-8af8-ff46bc5fb902",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca024cc4-41a2-403e-becc-1480c2a1c234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2da7d819-000e-4755-9f1b-27efd044068f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af208acd-2aee-4a14-b3ec-04a2a862e37a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f5a6f6e-fae9-47ab-a1c7-473b3cfd0eae"
                    }
                  }
                ]
              },
              {
                "id": "431811a4-af13-4686-9438-86510fcd2700",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df310e50-768b-4379-ba13-0740709e3638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e60d019-bf93-4e56-8df1-e7c5fa3f9e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4df1b53-a376-4db6-a04d-ede97f03ee36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2eec003b-db37-45b4-aa48-b2b671f662e0"
                    }
                  }
                ]
              },
              {
                "id": "020e4a85-f3fb-4c0c-8e67-08070ed51ce9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1432d057-7e0f-48e0-8bd8-443ddd61bc1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be0af7d3-3cfe-4dfe-a360-fe53a95ac274"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b59cde45-3a28-4640-b104-fab4a274dc0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2973a6f8-d283-4259-9535-02890de21e43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9838b9b9-f487-48a5-bd54-8404c7c7cc25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c68aa3d-ae8a-4d10-a75c-5f9e0d31a89b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1c07ad0-ddf8-4a56-8dad-3994d11420dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "801a4371-82bc-413a-b0ca-7b33ac2e0878"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d5ed5bb-774b-4e49-9a2b-cbffc2f9edf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bb3e6da2-cbb5-40f4-b729-388787f2236a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a65b7af4-b612-4a49-b3b7-116daff0bcb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bb7ebad-a88a-4694-b4c2-42fc652d3c3e"
            }
          }
        ]
      },
      {
        "id": "9a75abe9-f523-4d61-9441-a874ebd2cb66",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "69d8472e-c9c4-4278-92d2-d18396458b06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adf7e7e0-096e-4b09-917a-648a9bae6da3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d3f2cf7-dfeb-477c-9e83-fc04868d9cb0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cbfc3b-16f1-444d-a63a-7d32cc178ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605efe64-a5fc-4954-90f8-51c91ef3d590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b2f0a3-4e3f-4a00-9fc6-170ef92cdee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaed38c1-f1ab-45a5-96d2-15c7e1c0e0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa42ca-c0fc-44d3-b115-7f59da21519e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a532a693-064c-4b25-a55c-c4d3ccca38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c0cabe-3e7f-4b0f-9433-c129d0ac4172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c5630-3dd0-4772-aef3-c8202c3da213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52513ba5-a0b3-4f2c-b80b-8629e145e5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27647810-83e3-4568-9736-a898ff3b109a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4865b1d2-d3f2-4cc2-9b8a-bd09b93fb780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00ab581-0668-4c89-aa30-d105687b0b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dcf932-0736-4969-967b-72473341193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "249533da-dd96-49c6-8fff-7d597493168e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39d8e48-cc70-4fd9-b210-575b6a5a707d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d432756-bd9a-4984-be5f-59a792b379a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563edb27-7c62-4867-ae56-3a2c143d4856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd42aa9-9d77-49bb-98cb-494762c3671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15267acd-51d4-4af9-8d73-54732d70d74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1f3132-2db6-4a1e-8da7-ac82dc448971",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6590ba08-294e-4e91-a34c-5526ad80054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32b04c4-261a-4678-baba-f6ff67f4231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbae18c-e4a5-4903-8e37-3ca9c2ef605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a774095-240b-49ab-9c33-97f21b38f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98015502-d49b-4329-8444-4b8125711412",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3812bd36-daa7-4fdb-be31-30181a789a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b1de2c-8686-48a4-9b1f-5158ac7aac1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9eba04-01e6-4af3-80ee-51978305b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f899d409-6c66-4096-8573-5b39dec45226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e761b5-434f-4457-b922-5a88969501a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30df1af-c6a4-4bef-9d25-fefc351200fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2d98f7-6651-45f2-be26-147328469097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ac14c3-6b5d-43fd-a142-dedab9619fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "479f5f60-2a5c-4183-9729-0642c0c7c8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06180ac5-9b0f-41d3-9a83-333e6c10a6b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcf991f-1f35-4890-badd-e164ad0d509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63257985-7a59-4dbe-92e4-ef79824ea3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45191d71-b04a-43fe-bdb2-af2262e8d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4df6ab4-9623-465a-909c-9e78f62e3768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6940f405-a353-438c-a262-0f7c9305d5ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455a8402-f39a-49dc-9f7a-c4a5546a9216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e32c2ae-e19b-49fd-9174-de2663c4fd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a67fb0-0fde-47dc-ade8-67453041879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "410152f5-a902-4ef5-a100-feafc6bb6722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1667409a-b0d4-40ce-a03e-a1826fd3bf8d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50921087-2bb6-495a-9ff3-ee0ddd98d0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae087d50-3c4e-486a-876f-1a96b768a3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e521dd4-58da-4135-b82f-a66eda433172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f87c22-5745-4231-8094-4e9e739c2a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21db29-26c4-489b-b030-8115f1adeb95",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba753a4a-1e5d-49a9-b51b-b8cd3cd22eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e950a23-cca8-4f80-a85b-f9cef69d9256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caecd204-1e00-4154-807c-532450d13430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b37e1ee-5461-48e3-b79f-11505805dde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9787fd97-0ab4-48f3-b693-c3f98ac2b5e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0182e95a-851e-4b69-8741-870e2e0c15f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c35794-65ac-41bd-a5ec-7eee139f4323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77d3d83-0776-499c-91f1-d6a24110a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "425fd311-5815-4a08-a011-1c787ef3bd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1ac5c8-fec3-4719-aaa4-a6ed83030335",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ba7d4f-8579-41dd-967e-4917cd71dc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2be1b4-4615-4a3c-9d84-f78b443e90b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5abe5b5-7e1b-4da4-b6f0-d8a4c4b1ecb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2636b3-1639-4f7c-8be6-4dff3d985493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393937cb-3568-4322-9448-ff2293d00174",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12b82b0-61e0-496f-b98c-c0937bcf9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71f4344-311c-453e-a2b1-52aefef33302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e3f9c9-96fa-4e3a-a771-1848614b7fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79577c99-23ba-48f2-98d5-26d39222f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eedf8ba-6d8a-44ab-8312-1aab79520796",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a03b5f7-5e40-4132-9765-226c13bef272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354ea6c7-235c-4729-8af0-950662d72f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17444257-bed5-4bf9-8032-936e36c3d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "884ec556-986d-4f4d-a5ce-b9cd91f9067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c83661f-5a68-48e3-a511-dd60b4e5ebf3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f7382d-d372-4d1a-84c0-c5c22a110f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706daa8a-aa9b-4d17-953f-7293d5d6f372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34721146-fbed-4f07-b198-c32835c5a4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d492a2d-44f2-4ae8-a59d-7319558cbbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb1309e-9962-4155-b7d3-5652c5582f2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d3b3b6-caef-41b3-a40f-db3f19035e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654a05e9-4720-4afe-9241-5626b7885d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598b4fb5-d5d7-49ad-9f58-0b60d4981607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3c1c23-e3d6-4731-952d-b0b586f6d745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3a845-9e5f-4bf6-89fe-ed06edff339a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f867ce16-0d8f-49c8-b5d9-9270142a567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcb83e3-7b17-43e6-89f8-d18549f32b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb66c42-7663-428b-8e31-e2ee618d433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "982d465e-6043-46b6-a271-b284e6e86233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2d3ea0-c0d2-496a-b0a8-9888b5751b64",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0e713-76ec-4b7d-992e-5af72d0b6cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9868f8-e5a4-4fe0-a611-19ed90d2aac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e460b8ee-18eb-4380-b055-825e8ddb870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7328141a-54e2-435d-91cc-8a119cc58e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cc9979-5bdc-4f6b-bf69-4d00fcf1ec2b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffcb4ef-7f1d-4051-a78a-2591c3c34297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7541df-b813-445c-abd0-9ef30088fc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3c88a5-8f9a-43fd-993b-37bfbcea9b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c116f2b-2f38-46c8-bbc9-6d4712fecd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae66f83-f320-4d9d-97d5-dab1a7df6066",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fb6400-3fd7-48d7-82d2-c41be88795e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab52e94-87c1-4bb4-b833-d9fe45dfb6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad90cd15-7a84-45b3-b541-4efbf750d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0378bb8-3c13-404b-8daa-9630755d8a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7008a2-b236-489d-a731-509011513969",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc40139-8f71-4906-9436-7a3df2fef4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa51da0-0088-46c6-8f35-1a7506daa8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38009783-d543-4493-9ae6-587627ac7a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49f62c4-119d-40d5-a527-006224487530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141dc6f9-1a87-4a46-a53d-6b1bdf63bfcb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf6eb2b-2b35-4a17-b612-bda2eb8ebd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f123558-d449-43d7-8f93-9730751e5d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a529a1-6e37-41e6-9ad4-981cff4fadf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d5bbe1-601b-4294-b0c3-d6b7bd1ee692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5658389a-a020-4d9d-9557-d0bcdc76ebc0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fb0ca8-caa2-4741-89a5-13dcb65763e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804ab3f3-f4f9-42db-aab1-674a24eedfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce00ff-ddc0-4615-b2ef-3067fdad1451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56a7e50-2a18-4056-8099-ec52e2221b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2d0a70-ec81-4adf-aa3e-6a8eef5a0ae6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc94628-0c0c-439d-9af3-6d0d967af4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2bd6c2-281a-42c8-aa09-0917f282246a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde66bc3-8f52-4299-88eb-0e7263ed5547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "470958d4-3091-4b0e-bba1-72af1400e22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eef84f-27c6-4ca6-a51f-b5c1632e1aa0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b3e6c-fcbd-40d8-a8df-2f95e3726227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b4beff-ab56-4385-8e89-1fb28ed85285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b094d-1458-4ce9-92da-b6951c3d2fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b5d9e5-9986-48e1-b8ba-69685144d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6464a2-1443-42d3-8b8e-32371a3a6d12",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc350a7d-effa-4b35-8430-e1afe13d80a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d7db4d-840a-47a4-839a-dd38d7dfda38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5cc49e-4d83-4c07-a045-14e2fbb4f6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc70d63a-eeb6-40e0-b00a-e4aa301e87a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9619a313-137d-45b0-8100-6a50432c6ce5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e94fcd-50e8-43a7-9417-7e5910995da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b47bc4-960a-4732-b427-dee47c5840d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6338094-6d0f-4563-a09a-043f49d01f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ae8d17-9622-4426-ab60-5a7996bed67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4514fe-a69b-4117-9ee2-6244564be718",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b91c076-3857-4ddf-ae3a-7e269d39b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090493a0-f351-41f3-a8a0-ad78d42eae0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff1ae1-5fd3-4b94-ac0a-e36eaf1e159c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c79bcd-c47c-4461-bf06-e971430a66f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f9e32-1de7-48a7-a94f-fee4bb2cab7b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd09eeaf-7e15-486f-a29e-77684e60311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078b665c-832a-4fed-a905-1b1b302f55e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f9b2dc-761c-4d2d-ae66-49251bb4dc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1114b2c-b529-497b-ba0c-abdb2e3f4960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d330dd-7087-4a25-b54b-a1ace9beeca9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962cceb5-418d-478e-be8a-c88cc5e02676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68621500-d5b8-4c82-97e1-1e2b4fc6e4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d59d1b-501c-4fe6-b15e-c33c46e6df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5355108d-9bab-4c0c-9103-2a83d0cc8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf2cc1-7801-4bca-9f0f-dda41faedce7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a064da-1c16-4793-a308-9d2e54c9f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e14d51b-b049-441b-b5dd-3f657ef77d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6520ea41-b4b5-49e0-b645-3ee95aa53c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2dc478-3a7b-4439-9bee-16e972b0cc55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae0e6e75-589f-4f25-a47d-0b304bedf4ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68ff5931-2dc1-45b6-89d6-453373516dfc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82529492-1674-4f47-ab29-37c59098ea37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc8029f-8144-449b-8e0f-cd0870ec1241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797a3b1-5650-48ac-a843-54fa0736d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb5c8d7e-92ca-4fb9-b4e2-a07526cb7273"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "344e458a-bf5e-4801-a4e9-1a40a9b161d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a68e7cb1-c2a5-4559-93aa-4fce9dc45edc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ac6639-bcb7-46ac-b21e-7bae17b61a0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc8348ec-3592-42b7-9aed-66ac2f1b4e21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3026128-284b-4534-977f-434a249f97d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6523a839-895d-45ad-8360-73c442c5f8ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9014a347-50e8-4753-942c-885262a5183c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e9334c2-169c-47bf-ad5d-ed7758d02900"
            }
          }
        ]
      },
      {
        "id": "930059bc-4697-498a-a504-ac959eb602a2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bed24521-85bb-4e02-840f-43e908d70440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d66a496f-200f-456b-9810-bdee2c692c25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6fee278-239d-4d44-9760-89915b869350",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b9347-ad32-4853-ab5e-2142b14552c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e543a41-e14d-48e2-90bb-d2bd04fad183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9068eb69-5d8b-4764-9d6f-1333bbbc0cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1527b0cf-f926-4485-84ca-5f9a4b7e3a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36e4250-c67b-44b7-9545-88886f2012ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8324060c-e260-4aa6-b8a0-c566f16baa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6053ecf-d0d9-48ba-b356-c30f25dad38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1807c590-119a-498a-a4a6-83957f93e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71235712-8fdc-485f-84ee-6788d22a77c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0eede5-6e49-452d-9f3e-30c23b3a67c6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0cd6e2-9827-4975-9651-5436dfa5d3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87dac736-5b3e-441f-b7b0-09e136baeafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958bb102-8944-4b80-9b5d-a0d251c67c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df5a926-9775-460a-9f64-af7e3ed3af85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753586b5-e727-44a2-8bad-ef215a106561",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b19c79-7ec9-4b16-9206-9f700659302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd05c42-f551-430e-8c80-f013937f44fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c6b0fd-0c47-476e-b3b1-6d120b501728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeac826a-d862-462f-b2cf-cdbd4f184d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6685638-9300-41bd-90e1-6714601d78f4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc537c8b-786c-433b-9728-647bbac1f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d4cf06-850d-4ae6-a15e-c8de1e23db35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7363195-9111-4e56-966f-2608f203ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17486e57-48c0-4b4f-8eee-d9938b3a5005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9038b46d-d1f6-4cc4-99a6-e2269321cbd9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c4ec97-ef26-48e2-8f7e-af4fa7f4a97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97be183-ba18-4d95-a848-08dd55cc7b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b886386-a3f8-4c70-8a43-4b7dcd896a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a7a392-3673-4e4b-b49d-e1c1d0edc8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5923ea-a4fb-44ad-a359-5f532ff985c4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6b0428-20ff-4038-9fe3-8e59e284ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a219086-c7c4-4bad-a089-7f8841f675ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae77d20-110c-48a6-a93a-8f9109048545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8d56aa-fbf5-48e1-b777-ff9ab2121c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd247d6-3cbf-4acf-9cce-9a0b0ac6f940",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d329978-fc94-4ec2-9e10-bdec4603a5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849f5551-1ada-4708-b651-c518319f5324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95f2d85-b706-49fe-8775-d6c2beaf953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2693863c-892e-4036-bbd8-074b6df0d28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbe6326-81db-4ba3-bb53-ccfbdb5b3dd3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8815705d-bcc6-4a70-9c9c-6593be63ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f8e3da-d166-45bd-85ac-05c7632b36f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db5088f-0700-47f7-913e-95f2ad422b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a03854-c783-4d31-984e-614160ac22dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45570e94-7933-424c-8a1f-ad8ea0659489",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec54de-a74a-4b24-ba66-d4275d5c65de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354ea56c-4eb5-4dec-8e4f-fc5962da195b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a38d6-cd6f-4c64-b73c-fa70b6d01a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b08511ae-bb52-42fb-ab45-9f0576d45edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b9ff79-b45f-41a7-87c8-579d5f67cb37",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee521cf6-2fee-4a25-b887-64928fffe5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b8b15b-a660-4a96-ad19-d965ea8a148f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4295b5-8518-42bb-9b52-9eb6b0ac822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f4829bb8-8e37-403d-9bac-84b81154ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacde3da-8a65-4def-85fd-cf019c505540",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4bc698-7eb7-4286-bc10-7abeda40b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee4d3ef-0e6c-4544-81fa-a42271350caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2323f2c-568c-45a2-a085-ee1d65816ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef34f998-7cee-44d2-b843-642b7a13a479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b096cb9-bb00-4260-8147-4a732480cfdd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea46780d-f3ff-4532-837d-1988084820da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a084748c-a898-4e87-aeb9-b1985cc5b627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0811f2d6-2b89-4db5-bd7d-23925b7438a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b595c6de-365e-4698-bfb7-3ecbc7ba3bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7371a32-a67b-4bd8-b994-f10cbdb314c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a278ec1-f583-47de-87a0-861fed315581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c43cb2-86cb-4337-ab63-fe069b6041d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f323d14f-9a0a-4922-88be-3b9ff7da8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c0bf2c-0ffa-4614-8064-ba5e431f1f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e84001-dd4d-4747-a928-ae954feb21af",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ac6c9b-118f-41ac-a5e8-85e1a43a2ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fb9f7b-7ec3-4935-ae8b-f17873b10d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf29702-fa29-4926-a3ef-b8c9b4741411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab356d21-34fc-4bd7-9441-7da47b8c60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf8ff1b-0878-4694-9fa5-e1525f81b7c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bff20-45bd-476a-b001-be850017f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0381f0-2d0a-42dc-a83e-f73d474f7ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c10c6b1-24ed-4d03-911a-608085b1a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dacda0d-931b-429e-9a1d-a4cbb009df31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099871ee-4d13-4d33-8cd2-4f47178889f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa55c3-36d3-4234-9af8-33a0c73d121b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eef7fb1-7b97-4261-9a01-0c694f248ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dd572b-38f1-4e78-8115-83b2f215becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "37578924-7fce-4712-ba8d-5fd21613d4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e5f7ce-8c2b-46e5-b5da-1fc3a73aaabd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d25efa-5dc9-42f3-a8db-7178db81a382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e091504-f70e-45b3-9056-251434b65874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87e4900-3898-49bc-8378-9acaa15343b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c2ef05-cd6b-4186-8e90-90bf7963553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fb5fe0-1849-41d2-98ba-6c725473aaad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e9bec0-83dc-41e9-89dc-35744dbc1b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eed0886-8eb2-47f1-9cad-59ba9d4fc917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3989eef-a2f3-414d-b1e3-a7fcc9355883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21130409-d1cb-45dd-8597-89d3525f70a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c8a13a-f262-47ba-93fa-727d9b33ea84",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252ea608-fc01-418d-a66a-b1e2be74845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30c2f97-7341-4122-bf49-00570d286cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8080f0e9-8797-4645-a280-3c51bb1208a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eca7598-005b-4853-880f-c9811caedc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f095c9a-55f0-4782-b892-63e779a32515",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5262cd-08e4-4331-b729-17e8b153694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566058b7-0b13-453d-90ba-75c226af3481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe28188-4ce2-47a4-95eb-90fc04cafc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adf6aa5-89dc-4264-8f98-2a75ee9d91e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965f7f89-0696-47f3-8885-90233fb71eea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2ae30c-2ca5-42b0-86fb-fa2e4e3054a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1733de-e955-4224-aec1-dad0fdacb6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb01f7a-2e5f-476f-bd8f-a8cd44a07104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee4cc73-5623-4b9f-8b9a-ffaadbf833df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb94a115-9684-4603-9ce0-e3cb98614817",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d72fc7-90f9-48e8-b10a-ed087b406ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64386269-2281-43db-86b2-794954527d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277ad56b-07d9-421f-bbca-c45ac5251fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3d3fb0-283f-4674-a5a9-e87ccfdd84f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929672ba-3d46-4749-a23d-e935cd0d49d3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d12b8e-5567-4dbc-b3fe-8008fa1eb441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a312737b-93c6-47bb-858b-949141edde42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3301d040-3097-486e-bc6f-0b26911d1012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c266cb7-bb7c-4c7d-93e7-de4da21b4d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c781d21-0ecd-44b1-9b0f-2ba2cd9669ca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccff89aa-f72a-4895-815e-df11adf302bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b2ee54-26c2-4c35-8c25-ce0d73fdb4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2bb884-d74e-4c25-8f75-f7a070bc72dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4be4b0-4f01-44be-bc0e-96b92b91d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796fe4e7-5608-4900-a395-cfc865f2355a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc1e5a1-8ca0-4324-ae92-d86eca4518ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fc3b1b-14ef-4d59-bed3-f54086601b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2281f03c-ddea-45ca-9a73-ed234510d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edcd5111-a504-4604-965a-c14f47c4d343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a8f112-360b-4f00-9e42-bc20844301c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5c05bb-7fb3-4397-84ed-6f59d1a28d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18daaded-80ab-4f3f-8233-31b8054481ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b2255c-0ed9-4ed8-8b1c-de4a15eb97d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df522dab-ab03-45d3-a7c5-3a367d773e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd630b-3d7d-4195-a54d-58922fc791d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecc55d4-735a-45b4-bb2e-27dfd854d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59091ff0-413f-4054-b514-33a58562eb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0043e720-6c3c-4654-b117-6c68a3fcf65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4e9ec7-b77f-4693-a08d-350544c697d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44b84cf-01a2-4c1a-9ed3-8bd8971b514f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98260e7e-dd28-4c8a-afdb-c1154392f6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154a2d7f-8bf6-43d8-9e78-2f1320366582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a515de-9736-49f9-850a-8074b1c46422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d285e1f-9459-4adb-9596-263d8429c726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd2272a-71ac-4a76-ba10-df9053d39c20",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321d3ac8-f4d0-4137-8934-66f9698ae061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ea0a15-3c5b-4614-a7ed-a4f6cdf1ebd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82927d42-8a91-4ed8-a853-fd4935b2b932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "330fa2a3-dd0e-44e0-a8dc-20e2113d9aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b5e66b-02d5-4e67-b1bd-9406dc7d3ddf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f998b48-1bd1-45ac-8c87-4c9ad0070285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b28cb4-311a-4219-a9b5-afcdd7a081e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b90dc8e-a4cd-4640-8401-38bfa42b027b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f739136-2979-4fd0-8f63-d6ba1c795b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab41d53e-ee77-4b18-8aa6-f0a9cdbe2def",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966f3fd5-9ec6-47c6-854c-15cdad6cfeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bff159-e444-4ba5-9aa4-dea07382c954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c04960-69c9-4428-b656-510d71ea7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d787a9a1-fe39-4ea7-a440-4e1ec4e924b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b01745-3fbe-4c19-a8dd-24bf88b9d62c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e1c08-74cc-4dc4-98a3-6997b3895bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f06cf5-35b5-46a7-a5ef-7bb341998888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e2663d-f030-4125-8697-a48ccd63668f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75ef8be-0a6c-4376-9cfb-1bc617a48e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311c79f5-5fdf-4c54-9c57-d8a8140e2310",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e743d2-15f3-48be-b459-afd5c991b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92e255f-329c-498a-99fc-e116ab6e8f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62b2a93-d842-4b8b-9779-901d292b78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed33543-e3d2-4483-aed4-7c3c26eb9e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e3a049-568d-4157-95ae-f081c74efa47",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f275ca1a-40e2-44e6-bf89-323ed7305f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6642579-1fd7-45ca-8b3a-cfa792080364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5752f83-6dc9-4000-b945-9ab206817ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e8b228-3d40-45bc-a455-34de59f1517e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b67603-2230-4418-be7e-df5fcf4f012a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6646d00-f564-4d4f-815e-41c7654623d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4e8a86-6f67-456e-ac01-de660b840ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e963e083-81b8-4553-8f5c-b3d3c3aeee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50fb2370-5dc2-4aca-a6d6-ecf18d35b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b004068-2ed8-4c80-b733-aae43dc0b339",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106a57f0-e544-47c0-b57d-69ffd814c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc69db3-cbf6-4055-b755-a06feb65c301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c28c208-9c8a-44eb-b2e4-1c0177069b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae1ba3c-e876-43f9-b325-b887a4077e4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1994fa30-fc53-4d12-b149-f29bdce579bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49eaef42-f0e8-44fb-83cc-4b1753227f36",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd8421c-f07e-4ce2-8a83-02060dc24918",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a88b3679-89c3-4c9e-a805-1f209275436d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec3cc42-a3a4-4406-8e8f-c0d39e9fdaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1378cbcb-92c6-406d-815a-dbf24016a1d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba3fb8f1-6989-4514-bf54-d2dfbcb0804e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee88e30-422e-489d-903d-284d4d110418"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f14416a-18d7-4031-95d1-bc3562752b91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25fdad9e-44c7-4e69-a08d-46710b54f4b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "885e5585-0966-4382-8d82-9728cfee0d84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c998794-2e66-4c68-ab6b-ecb1c8e169fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b787f612-4be5-4dce-83bd-5b2cc526d203",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0415f9f1-1de1-43d2-8744-0bcc3b4b6bee"
            }
          }
        ]
      },
      {
        "id": "d05ad7ae-915a-41f0-838a-f1c155f4f2ee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4aa2bd0b-db29-456c-9253-5725ec7c2535",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7a4d08c-a5f6-4bd2-bd81-89099bd73440",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "546f5945-1de9-4549-8580-bb370c0c316e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6f6432-de48-47d2-91c1-e5a63bc3dd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b803254-a5e6-48a1-96e8-eb43352e64bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e650f4-a957-4598-bb45-d1dcb53ebdad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e0940-8edf-433a-bbab-26df9e311d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd19a15-1b9a-43ae-a3cd-bdb08765d40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c16c8c-2d0d-47fc-8928-9156180c12f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a476220-91e1-425a-b4e1-1dc6eb87829f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60df5044-e54d-4bed-ab18-62a81046b4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bb8ecd-e894-4a3d-8ac1-0b4734d9b64f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7459b96-cce5-4f0a-ab4d-3240cb1a847d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cbfa8f-9f29-4e34-be50-23d3eef00cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08d3ea0-6a39-4f16-be7e-c717e8f83a7f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fbda49-e012-4039-ac53-f0956c20efb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac78d3bf-d5eb-4148-bd24-afc43995ba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb705df3-bd76-44f0-8e80-1bd9ae6807c0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc649c62-e747-4b50-a8c4-d446de8c31e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017670be-e642-45b2-a1af-460bb7f62229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f256e493-4347-461c-97f8-a39b64e584cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5f751e-8db6-4cf0-a555-4a9848d09a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc48628-5194-41b4-bac7-eeb36ee690b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59024542-a5e9-4eed-8ee7-15d3861e7b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd6fd37-6453-4d36-a00d-6670d26cffa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd829e4-978b-4db8-b6aa-f63dabfe1a58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52215ea1-12f9-4eb4-bbe8-da7c1d7d58c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "261bf069-26b1-4611-bf01-3038cce2e31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70081c6a-8e84-481e-9910-dcdee7bd8796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0726e5-a6d9-43bb-af1c-00f1d9e1bb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756b366b-a9f2-412b-838f-8c73ffcee4a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82dae3f-0915-42da-9ed3-474eadfd25c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e81b098-c3de-4797-8bee-9ab610b82b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5076090-94a3-49ee-bbc9-05367dbc427b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579c8988-1d4c-4b7b-ab08-fc19ba135c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042b1730-55b4-4db3-905d-8ae759dbde31",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db94247-989b-4f3b-ab4e-f1108be954ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58ff143-7ffb-4425-96fb-6e82207221cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3c1c3-430d-41ac-90e1-5cb0c801b4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0854d38-daa2-4966-bec6-6d92c1abba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64eeb73-7efa-4742-9795-76153624c0d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc15cd0-c126-4bc4-a305-a102ff9d0ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783371f6-e591-4d08-972e-0d1cbdd37b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf8dc1-e4f8-49cd-9319-b5c9013c26bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a10aeb-2887-4a6b-89f4-830d9e06fc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd1852a-6c67-4e4b-b60f-6511115169d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b94c74-fe7d-47ae-993b-c094a2a624cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfee3d37-88f4-40d8-abd7-fdb86378317d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f4442e-0c4d-46d9-9f8b-d8b96870ecf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3244b89-dccc-4111-91b1-359fe1572e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082fcc28-914f-42fd-91b8-79b478e8609d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f457a99-cefe-428f-a757-8e580cbf1b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9571d96-4f41-4456-80e5-819f41d24cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e587792-91a5-49eb-9a4a-a7994b8bf3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f592e6b1-ada2-4720-8abe-ee95ee269eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8479c3ab-912b-47b6-b203-4f9d3eda5ff4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6d449b-aeaf-42de-916d-d4b0778298b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37caa78-1976-445d-8552-b541af46c0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b31bf-d633-4bce-b917-1eb460dd4f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731045b8-69c9-402a-88d1-817ff8afcfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be4b432-e015-4e26-8a71-192abdeed08c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c5855-af7b-4e71-9ad2-a2625048b89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a2fb5f-d5fe-48ac-8846-6f9597358f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c995ab0d-46f5-42b0-b18e-4519e6cc1d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d68cfa7-430b-4b01-a9c4-61af60d23a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671305d0-763d-4ce0-9a6d-1b49a13fbc80",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb888f3-8c49-480b-a0ee-6b8196ee7904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc489833-11c1-4254-b140-a10c8c5b98cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be8027-77e3-4770-9faa-50e000546fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecc632a-a836-4ca1-8e8c-6568a36f2f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ff55ef-90e5-43b8-bd82-82cc7878155c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12b3071-85b5-43a3-924e-e84ede7641ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02de1ae-963a-4067-a525-45796671fa23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c781740-502e-4568-b53f-861c850d1b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9a2528-c5a8-4d71-8bbc-225f04e2418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b083b5-837f-4aee-a82d-476687d45a0f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e901e8-e5e1-4db1-8b27-07d5d4638e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e61181-b9c4-455b-b67f-9391c5f94c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94764ae-2ab7-4a5c-8022-2e7d96a7cb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5190ceab-d517-47b5-86a5-45c1757c9539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33844a0-0dcc-421d-afa0-2d36ab1052a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea0a32e-0cd9-4e73-baaa-f2039aafc113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26129fd-b2c0-45ca-95bf-50c0da22d421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d782db-a99c-4c3c-ab10-8050dd5ab13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f499ef6-358b-4a15-ab22-a2947e5f9a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40115d8-8dbd-4518-830f-48d331e2f7a1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d7abcd-c18d-4016-ba51-aa40601f55d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39698269-8535-4483-a77e-939a1b8dfbf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f7bcc8-0257-4ebc-bf4f-e12e1986168b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89a22c-2ab2-4fd9-91fe-9b1dc9fb1d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620232cb-a2a5-42f9-ba22-ce2bbf1515c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c5869c-e7ed-4c64-8a66-b15bec5bb5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01ff601-f3c4-45d4-a2ac-ae64011f64e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0593fe1-520b-404b-aa6d-15fdc437109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a122886d-267e-4b6f-8f74-d3f0000716fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad5052-38e5-4900-9c73-109173969183",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fced20a1-53a8-47e6-943d-4bc5309f8593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9dd846-347b-4ce1-88f5-c6cf4444b1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31c47d-b513-465c-8f55-f12fb9411695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b712bfdc-f519-45e7-a66b-dccfda5885fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217c7e0d-4ac0-448e-9fc2-d005ed9a256a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7065b0-cb5e-491a-8813-4e708e9a52ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9977dbd-b194-4fea-9fef-d73466f5bff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6468cd0-6165-4cff-b285-b7e46d5325c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12eff15f-e171-450b-be3d-37e3853a4553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1c470f-2dd5-4828-9614-efb8237c758b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d7e7d3-1a10-4375-b5d4-5f8d867c7194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d04015-7646-456e-8c17-d842f815575a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aaf95c-352e-4c1e-acb9-06194d3421b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f5614e-b743-4ebb-a028-986b8e6b9289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a791b6e7-5748-4f0f-a1b8-f1a3bed9f72d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8c7d2f-ae56-4762-a966-813494441d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0c8544-0167-4b4a-9432-2da36e6d6bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cd69bc-1fc7-4232-8b23-548671a90701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfaa58d-2bb1-467a-bad1-bb03a5167262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813868c0-5e79-4251-9fa8-21b0663b2fe4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc49d0d-6a61-487b-abb7-facdf98ab2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e7ac03-3978-440b-9d6b-7004144a1f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b23710-4aa0-4b09-aed2-67a8926c0d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59194ce6-c6d2-4091-b2e0-a11f4490129c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b27cf3-ba87-473c-a6d9-b139f46a4b8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06404ed-a51b-4083-bbf4-37e2ea7a59af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2fc681-6d71-4e20-b98d-b817684f85bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db946ea-ee31-4587-9a10-dbbc2366932b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57506682-ae16-4483-89f8-52aebef554b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e012b09a-c2c5-4eac-96db-35e121dbe661",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe7f447-874c-40e6-b7b3-05ccbe385b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379d83b4-16ab-4b52-bb3f-896c763ea571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b876230f-e26f-4cd7-88e2-15767d63cf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03ab9d7-8549-4e38-b2f3-e2a83692090a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4da039-b42e-4150-86e6-9cb7818f8ed8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82d1e5c-275c-4f28-b414-b5c1da3a15e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5d5f07-8145-49bc-8c2a-5e561cbbd8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7217a547-b921-4188-8389-4461320c831d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198838bd-580e-468b-84a8-328fe4786442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0455ec-95a2-484d-85f3-cb4748b8faf4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f194a1e7-dddc-4603-bb85-fa17d6dcd2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992b38fe-387a-420a-8e8f-4939f5521def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa39e6c-72f7-477e-bae0-14b8700ec07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa38240-9e8b-4b22-b24a-56d77c85688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d6493f-5a56-4d7c-9b25-97b0c37c2e07",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba84797e-358f-43cd-90cf-7a06d1021f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a321d385-3672-4a95-94fe-b2464246db7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c2950-149a-44ae-83d0-000b15aafcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6316ff-fa56-4497-9b3d-50ac4b616eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eb3687-a22d-4ec6-a6f5-6127bec14808",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06edacd8-445d-4ab3-8011-235f77e97d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9f6b18-23db-4b5e-a7d7-35a0a3bef10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11e866-78ba-4cf5-b67e-111bf5726d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a129af-a17b-4661-a0ae-df789be0c1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c09550a-e531-415b-b1e5-755c0023cfd8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8d8bc5-da03-42a2-a3b2-a6542bc3cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1798de3a-dbf1-4c3f-ac77-55d6461d3187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a67794-23bb-4c5a-a200-39de6ac21d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e38157-9059-4d09-b70c-26eb1290658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f4a163-5c2f-4aed-a82f-7252a3dc2421",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d89915e-c222-4964-93af-3cfce7f08e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53808163-f337-4862-87ab-79de177fc71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a5ca4f-2c8e-47ce-9319-4940b22d2b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d1fd22-2ef2-46fb-8289-7d7ecc8b9322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32079907-e6fd-47e0-99b8-2c84b7e9023f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39ed2c-6060-41c7-99fb-73b27e1733df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec53836-8012-4ee7-8b8c-d09537b21386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd236ef0-314b-4272-a35c-996162b8c03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b27677-9156-4c72-9ece-3abe7de30dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b48b0d-f95b-4f50-9528-eac4096d46b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11b1971-2a98-460e-bf56-d2b5e17a7148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a5e51b-0675-4d83-93e0-e361005cc499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46528df6-2151-4951-89d0-9b5ff15d8f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0639b5a3-be72-44dc-b54f-07801778200d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8d898a-dd1f-4795-bd3f-c0a248bd5dac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c82f77-f618-43df-b023-9b5c48d4ceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c323750-1327-4170-a171-3c5625c373c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9737b4-0075-461d-bfa0-01f1974fa5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea16e148-877c-4b5a-9262-5c46693b1830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddff0fc1-3522-471e-877f-3b7ed82b40a1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ed5cb7-1e2d-4010-b66b-d42c0808a1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62febd1-3881-4369-ba5f-dfcbce96c5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b44d6d-8afd-4e68-9b22-f6a4c9cb29b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b321f5dd-0d58-41d0-9bd5-5e21e3ca9001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c9521-9df6-4b92-87a8-0715e8b5fbb5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092e9f9d-e8ce-4b31-8761-427fcf7271b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179d845d-aefe-401e-87fe-850d3f106bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ec211-e744-4dfa-8eaa-b20a935b904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd76f2ff-9f13-4d14-a623-d3a69336de66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491692bd-ca5f-4469-86bd-5b4fb444bb0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de74d25-972d-4590-9aa3-cef2e79eb7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eee5a6f-3123-4e39-9282-ca2da1c9b175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55aab60-e4e0-4f0e-a852-acae21ca433b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75968ea5-d497-4b5e-947d-77f9b17dab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16e160-22b6-4f98-9593-14c4d3cd097b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b87e9-77e7-4238-b188-8e23df422a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38424486-b4cf-4704-a414-3e65ac5373b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c8d9f3-cc7b-4d86-a06f-5e779a697272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47d89ff-da4b-4899-816e-8ca7c948ff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ab05b-5ffc-4121-b29a-73df9e4c0830",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9099095-4859-4901-9c5e-a578efa6f6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabb2e98-e43f-49a8-9ae9-993368a1e8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7c666e-0c02-4412-aa7b-a18c90ce2933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2250bcf8-c926-4a0d-86c7-d36f4f5b67aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2997ff-dcae-4f49-bd62-991f2cad57cc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1655ec-edd4-4db5-8cd1-97eededee290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dab7003-bd18-47ba-868c-9c80343ac2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d258600-2842-4806-a022-55ec95ed071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6af876-010a-48dc-b9a9-6f6849986e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77043aea-c4ec-459a-b2a3-22379e7f2394",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fbc9a8-c049-4558-90c4-2ca89b224daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed823532-b8a3-43fb-a9d7-7960601a7cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9f3cda-4861-43de-828f-3108bb67d96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2ca0eb-e483-493a-b33a-7a029fffd32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63438267-f0e5-49f2-9a00-b8099a74eae8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f88aea-eb1a-476f-9de6-6735049ad484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be074b6-49cd-4f8e-a6a2-580afff20258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b94abe-e1ef-4f64-962a-6e32daef1f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b479c185-7b00-4da9-b201-ac8a268248bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900e659f-ff4d-4ede-89db-370f6a7c142d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200d4936-b133-4159-a970-d4a8f43b99b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159577ff-fae8-4c80-90bf-2ae562430dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e979b45d-2cf1-4561-8327-5d3a64b1bf9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807302d6-2192-4e1c-8664-491f93931e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66962607-258c-4504-85f7-1caae2128a7f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa17a40-e8c5-4e44-9995-951b37757eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b41bd4-3683-4d7e-983b-a7314c648dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5dd68c-dd36-4060-8dea-fb58bc1633b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92c3b56-a9e1-4399-8b5a-131f0fd7093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9bd3bb-4eca-436e-a2d9-62e22ddc4bb4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64174721-10b3-410c-8932-242d094be2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9def7d85-bb70-4266-8bb4-89bb075d4402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358a426d-5619-4773-be05-062f777ed536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb895ad-a8bf-4243-95fe-1c96a5fc2fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ce9e6-231b-4dab-ad58-4654b42fdfb3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b1c15c-9fa4-4f42-b0aa-053ad6fc9123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b52a16-51bf-4458-b8b4-20385b20f42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fc918d-027a-4d65-aa10-1cffb38732e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d170fa23-5f23-4dd6-8deb-3b4633147a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1201f980-b506-4e53-b15c-23b85c030f7d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d76951-d66b-4cbf-b0a2-b63b1db8403f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7d85d6-b3ef-46de-9942-dcc1187e522e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c3984-c1c4-4e62-8082-385b67c62212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a6e374-e690-44cc-9560-70e7fbc49e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38818a2-9811-4c5d-8741-c4d5c2744108",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6aeb34-9034-4020-bedd-10f7ce2ac148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63840f3e-418f-4d48-bb99-9730b6cec9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde4a9f7-cb79-42fd-9443-112466d82ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4b9ffb-55a7-4e8e-9e8a-74b54c126358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c54e67-3840-46a7-bd50-b58e1cdb2a44",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82015d0-ee7c-4749-bb92-590f9ff6c52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1fd76f-e61c-4688-92a2-a871c1dffb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8923b974-0e42-460b-b114-c17614fafa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4647cfe3-482b-48b1-830c-b5bfdde79a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201e5406-67ec-47f3-ac4d-22257dad4ab8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7648c6-c645-4385-89ca-86c1fe2c3a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5389d4-d4ce-43a0-8c36-6ff7dc58a8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2916e8a1-f529-4f25-b11d-51383110ee36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936fffba-75eb-4644-a6e4-78de5e6a6cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24666e4-1de5-46ed-9cb4-ab2cae197fe6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0e208e-9843-496c-9712-632adb9bc603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685956ed-7862-4e82-904c-32f0c353c7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a41cd06-e456-467b-b125-6dc41dc77426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3baef559-9995-4a7b-a5e1-4e79260b69f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5522f351-c797-441e-8246-74e4b5c60685",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d45d64-497e-456a-8ecf-45db68db2dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96c4a97-d90c-4383-8e49-8b74eab95cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f6fd9b-6767-44f5-b4a8-ab82e67d0e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceb7379-8962-4c58-a591-e9005c63f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf78f3c0-fd20-44b4-b41f-4ec511926b46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d5d8b-dc34-4b42-acb1-887627411460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa8144a-b6bf-4e38-bed2-44996cc59f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f2095c-dce2-4a2f-9333-3b2c5a7e1cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbde44d0-4bb9-45f1-b2c7-87f9ae95eebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6270fa03-284d-4dfc-9abb-3aba91463c18",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e06abc9-7a4e-4ceb-a20e-40c36605b4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315046a5-fae4-4e5b-93b9-330cb9f884dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1482fc56-256e-4ba9-b74c-0a57ee477356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b85bcf-3460-488d-ae67-cd9fd3ea00c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedd7b46-bf9a-4af2-acc2-ff602f47164a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed688ad7-639c-4194-8bb4-b1ad7668a43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c773688-2972-458c-b476-e1e39fa3f70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0042114-8509-4969-8fbd-243d67e3254d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9855cf0b-62dd-4853-b4ed-d554a3890d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e5e1c7-c369-43ce-a97b-3bad7360dc06",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e07001-9e52-4eb7-bdc3-5cb4aa9627a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15443d47-4d45-4f41-95eb-2db3cedc8131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c1453-d3db-4a0d-835e-64db3e18a1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f901f5d9-f645-40e5-b9fe-c49d5ef516e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8335c85-8b71-49d8-b1f1-86f54af52aef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9a34da-a6b4-4342-9f9d-38ba3cfc83d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab970ad-a4dc-4717-bd6e-172b3398bcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b19d25-85a5-438c-970a-ca5d67648a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eddf70-d91d-43a3-842f-57ec565a674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2fbea0-d1c5-4b24-8f7a-c312636e1ecc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2760ba-26e8-4e62-9e26-675f8da53dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf41bbd3-e616-46de-97bd-dc4f4b5d7b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b256d725-3989-4050-8f7f-7c7e49d4d743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaf6ed4-c272-45d0-aeb5-3c3a133a6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090eeca9-b0e1-447c-8705-f6a4b9753890",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f8fb8d-2c52-4786-a819-9b4e95dca268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a755890-9e50-44b7-a1ee-3f2180aa9b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744951a5-6a44-4ce1-ac85-0ec949d7512f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7bb744-ff17-4512-a696-1058953f629d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade536d8-571e-4a8b-af65-0fa2e54fdf23",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f2f71-162c-4a8d-94ab-87d8dc019373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e4fd80-1991-488f-af86-c7260b749477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efd7eb4-7c61-4b93-91e3-43aeac82a6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d220477-3ce9-4bf4-9b59-a0d8f6262e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afaa446-b438-4a15-81c7-9e420058ae5b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863451cc-728e-4bee-81bc-3cd7e0550073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfec0517-f622-4d87-829c-891a5dc51d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3330b52b-28cc-4cbd-ac33-6c33060d25a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de47f2c1-1a1f-417f-a101-29943a2bcbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfea8ae5-d2b1-4def-9080-ec581c4186db",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43e1cbd-b6fb-486a-85a0-7967c06e276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ee1bed-4546-43d3-9e95-8d5375094586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e76266-c192-4113-ac65-7010b9e9c074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1864043-14bf-43a4-a09e-0b56cb5aa0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159fca84-04fd-4b24-ae99-3b83b9322560",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57b46c7-b3a8-4171-a800-d84b3b1cf866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c6c5fb-9614-468e-9680-2eda001ecd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e1f674-901c-4e0a-86af-5fa3d6b8a8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77d8611-8f81-4845-a569-68474f99077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7998bf02-e7e7-4328-b2a7-975f028e4299",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16bbc22-f284-4102-bb9a-b3df11a1ed78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7547c3a8-3d3e-4ecf-88d2-cd6a52447ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb626272-76d4-482b-9ef6-837e0d68c46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e09070c-25c1-49be-bdfc-bf79409086a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a12eb2b-adb2-4485-bca9-153fd7a465c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa267cd0-b17a-41c2-9fdb-c121f5beecc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98edf15-d632-43b4-ab29-42f2d7c9be2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d81432-e518-4e36-b63e-3dd08e8a99a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabec49f-4071-493d-ae9f-947e84dee6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d74f0-dff7-4fcd-a4f5-280066dc6486",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e96c21-9a3e-4312-8ce6-4e7097191042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cda1fc6-a087-4ce4-a717-a6548f4002f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0da572-8239-4465-b431-b2c17668dce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f85cb2-625c-46c2-9a82-7e0371ff3dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b192f787-71f9-4118-9ed4-8052fdb0a27c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46a08a0-68e0-4363-a59f-e64dadd06bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec61def8-3507-4cd3-b5c6-26d8d630f74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351eac4e-5031-4531-ade1-9dc12781977b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1c1186-f5b0-4c29-b504-d4b7647242b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4df8cf-298a-40ef-9aeb-b0313153c223",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1861a68c-8d25-4c19-bad6-64495389b52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f4e3c3-9ab4-40ad-b378-206d78836ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80f8a7-6049-42e4-a5f0-cf277c850323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e692a50-022b-4eb6-8a3a-7bd4602a4923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eed66e5-dae3-4ddc-95d7-ee3aaae71bb0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dd0766-4428-411e-9a1e-0276c16ade80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c293c726-b594-4b8a-8c42-85af2928f46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036769a9-ee30-44ee-8cc2-61401e4f1629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f889f3-ba3c-42c8-8b52-72a29164508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4962af5-9c99-4192-b4ca-c372219793de",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e2bc2e-075c-4d39-86eb-dfdbf16f4ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b41aa53-b750-4dcf-813a-67e158ac73cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2188b0-f01f-45d8-be6a-31ebe836723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd0c2fe-cae7-435e-8734-1a40e55247e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87713673-1d4c-484a-b28e-16f24c2bad15",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b122760a-5899-4328-bb27-9e1070169bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016b542c-b1ad-434d-97f2-d74fae769e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3934e25-dca8-49e0-95c7-051832fe5a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7c9766-1ee0-4057-83ac-a42715d7b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff125bd-74d8-496a-8440-bf09e9f97fd6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df49c49-e877-4f0d-92d9-5de41e66a74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a933f4c1-aed6-47f0-bcc3-a84cecffb64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78065831-7730-41f8-8ed2-033900b12ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53ca84e-4472-4303-b797-e142f6dd54d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c416330-be40-4047-82f0-5877b42c0e04",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd22260f-13ce-496e-86e7-a7b1efecd240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e4bfbd-c7eb-42ec-a8e1-8243274440a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952b5eff-be61-4534-8125-5b52bf15a712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d963789d-de43-486a-86e0-f60c8065ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e93ea8-7e50-4d85-9629-6f938f0858d3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2bd766-78a2-4461-bd8f-125e58f36cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24aac75-74d9-4b16-b162-d4060ea2207d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4e400-e0a5-4191-b755-6501c5f34088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87134172-13cb-44e5-92fb-472e09f04205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8557a14-77d4-4050-9003-24cacac6590e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47ea33-7eb3-43f6-a487-56999ed3e783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a2ad2f-6390-40ae-a4cb-f90cbb22d774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef71c973-5f02-41db-ae6e-8f2dec4ffe15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8224ec82-6cc4-4e30-85dc-56e38db83ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c2e1e1-d9b9-41e3-a960-9e392fb8c6bb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5224833a-96b2-4537-97e7-a09b1fdc9da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c931524a-605c-4412-ad2e-58a5697b104d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db22b81-6a97-43f5-ac98-09fc47ac1208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a94dfb0-7ad1-4e49-a3d6-bfd2fa6f3c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0325e9-ce9d-4e09-a109-dab5c1baa902",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9413dae4-7f76-491a-be60-60e615f7051e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68ac8f1-3d08-4cc9-b4a9-d849dbde55e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449724b4-8f87-4afd-b04e-434aa4c061cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20441596-b993-409f-accb-43cb7c31a469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d765c3e2-a81a-48a1-9b8c-0877eb32e1b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2da0c33-379c-4ea4-9973-141ba50da81f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4074a9-973b-412e-ba2f-a3b5ef42a2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96c00f0-6336-471b-8413-de33355784a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c33b2bf-2400-4a3b-8ce7-8c3d0065dcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c35d70c-5a94-41e7-9dcf-9dd9cd6003b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9802e84c-c15f-4459-92da-52022b884b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2e6398-d896-4c66-b51c-7392faebb243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f06c8d-833d-49b2-837f-7a43ae30fb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed358c69-0cc6-4425-998a-21566ff90627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eddabc-495f-4894-9d06-fbc444a94ba8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c0f01e-52bf-431a-9a14-24e91f0f12f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c8da32-13a9-420c-9d72-f6c5ea06d9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e7399b-39a2-4c99-ac7d-977b2376f2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885417a7-2da7-4b12-83c0-1b8a286da124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3358c336-7b2e-41e1-bafa-d5d5afddb01b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3aa1db-35d0-4ca0-be61-84db076cce27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a07edad-e0ee-4edb-9130-b8c8e5b20809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc332f7-a7b5-4683-a7a8-b7a34ca2cda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113653f7-939b-41f6-ab44-f7c57bf9cae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c93795-57c6-49fc-b3ca-2c1dc2106bcc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc537df6-908e-419a-bf67-bdbbcbe971fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b731232d-c7cc-40d5-acca-41390ccc6332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f605b-e1bb-4609-bbc2-083ffca9869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05d5c9f-fa93-4973-ba66-0c54b28823af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe4bd85-9caf-432e-950b-a958cd9dd28c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1898d736-f6e9-483e-8271-6b10b79753ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f6911c-d2c4-4bd2-810a-bc254e87fe88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4ed705-d1e7-4052-a8f2-9e05635b567f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d037aba-2d05-41bc-a310-ecdc6540463a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b467496-fc3c-44db-bf9a-c0c6ec5bf0a4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8fa54b-04cd-4cd0-a287-b7b99d4e813b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a3e8e7-2c72-4ce3-b0fd-f210830984d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29399b7-23eb-4313-8631-0a33c5a0292a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dd66d2-e6ad-4718-a180-19c8c3093924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d2bf16-7742-46a7-857c-cad6bee48421",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ae462d-37b1-46a2-ba68-319482e2b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b33d29-4b80-43fb-bcc9-2ff94a88caec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb83bd4-cb07-46ec-b850-199afdabd907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a9e067-6a62-4cb9-8f89-38f37dc6c4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3633fe-cd54-46bd-b0f8-af0da60c2b91",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2646830a-b610-43a8-8050-dd9662ef8178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21e8e88-b63e-4df6-8202-b71954e336be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65156cfa-4bf2-4ba5-8122-a9e4441ec577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c701b5-6dc5-47aa-b08c-3ea5ec9b87e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614224b1-334f-47a4-af87-568eecce7256",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e081d-33c1-4b58-8e0a-069188c4eb71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8abcfa6-8fe9-42ca-a83d-88bf6547a3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d04978-3262-46fb-b561-b930883af59e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9d20dc-1a33-44a1-9626-eb770da4ec18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d9dd15-336d-43bd-b254-feb382309db8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88197237-437e-4ede-a04c-a13660444aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b291961-79fc-472e-b57a-7b7224b3d160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb20ce9-9016-43f2-a17c-149b115facd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a77543f-1003-4d0d-a3cb-417906638eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ffe03c-9256-4f6e-a3e2-895d534fa193",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6713a6b-bf32-4197-ab18-74c74f89833f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0676a7c-4d3c-4113-8bd3-549b3b455c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d08279-bfdd-4acb-8ba7-406f9d436ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb1c02e-1fb7-48d3-90d7-f036a643c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d1c9f3-3e3d-4400-a564-a9c0a37b3378",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f6c599-28bf-439e-8652-17dc3be56bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff11f3a-e490-4f0e-9993-94f600a51012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726af102-51a5-42da-816b-c0fca1877675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dcde01-68e7-456a-b620-e45d238302c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f0d7cf-1598-4828-b9a4-8b42a0bb83c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0293fc-efb5-4b85-9309-e7afc73ba682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e97359-e91f-4030-8287-a6f4bc6c0c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f932b220-26d3-449f-ac07-8450d738834b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6dd525-d9a0-4cdc-aa69-0aa5ba6c321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb7f230-822b-4ca6-84a3-8337e7d5f49f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa34d984-779f-4abf-ba42-b9e8a19282fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a18c68-6c75-4b4d-bfdd-4699c55d8467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1712a7d-76d8-4c9b-9f5b-c9ed581a623a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa22f4c-ea1d-407d-9130-05c924500732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620da36a-4481-4ccb-840e-afbb664a200d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76df7b51-522c-4d3e-93e2-d072d1ddf4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62472793-bb06-4d3a-93a7-761c364b93bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a958c12-9db0-4c8e-8504-c1027a82d27f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eff979a-8893-43b7-bd53-8f67117f6632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d01bd4a-6c5f-454c-80c0-0bbe5ba69f1b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23996c5f-95ce-4ef1-8c38-426b191f1bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2487a0-6749-4cfc-8f68-ad8ddd8fd833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c35d388-9256-41f1-b3d2-2c6b629168c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a26c6d1-e050-4695-b0db-14e452236a31"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d41323-a525-48fc-96c4-d118e937a7eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b82fc661-4760-4f71-99f3-caa34e5fcba1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "835ec6f0-91a0-4ea0-9c45-e7fd4fb656fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86b01ca6-39af-4a7e-a168-ef89465bf707"
                    }
                  }
                ]
              },
              {
                "id": "39ca7946-1c08-47e2-a82a-075984474b2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc2136c3-84bb-48a4-a81a-ffcfe58350ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab01045-2c4d-4bae-bc67-73ea12080add",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "24ffb0cb-c9e2-49c0-a89b-850de42bfcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c004aa3-1fc7-4546-8f85-ed6f487accf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f76f4c1-cec1-4896-a526-d174dc763845"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "547e3dcc-5eb4-48cb-bc89-f8dc1db7af2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e8ae84d-b518-4a1a-a8a2-bbbc70edc30c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "403af38a-114f-4648-b34c-1b0287025fca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73511d39-dc55-4d50-a386-cf0cbd70e087"
                    }
                  }
                ]
              },
              {
                "id": "6e70c7ae-6193-409f-84a0-5d4c22b3af5c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8bccd078-6121-4b30-8f7a-ced40da99a85",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094d8d9e-bd89-4ec3-b0f6-b7edc681c6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09d8b70e-91f7-4bbc-9b01-67d9b592c5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d014c46-bdfb-4a7d-a84e-7b3037c01cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c70228-9f2c-49e0-9fff-fe318c73d4fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "407ce3d1-0774-42e2-952b-775568da30be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20824bd6-fbcc-41ec-a5b9-ecd52837032c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f044d9-2dfd-4d7b-b729-f25ee407dd59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70017d73-f37d-4190-bd56-b339522eb091"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8947b14c-a35d-4542-8fe2-6be21b74ab05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636d5091-d4bb-405a-8881-1558a375e8c1"
                    }
                  }
                ]
              },
              {
                "id": "abd4c6e6-eb61-4cab-9bfb-42ae93906e3b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf613b73-1ba7-4bf2-8353-9e0d357635ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a69dfd58-997c-4127-8b21-b5038a13b8a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5fc1c90-e1d8-4c6e-87b2-b24559ac81c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9389cae9-8919-4dd2-a701-0345ba0888b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "652bd91a-faeb-49f3-9933-8933c6f16bde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a69e62b8-ce4d-4fc2-8997-683b890cdb89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef0be670-377c-424e-85af-d76cb40f0e0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77ee4af0-9467-419f-a262-cbf937d07ae5"
            }
          }
        ]
      },
      {
        "id": "d75cdae0-f7cf-42e1-92ce-7b29a6ca561a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e0fdc336-2b4e-4f0b-99af-3588d9ed664f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "882f0151-49a8-4590-859b-a2f182abc90f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8d635d3-dd62-4009-bdef-82ef29a7ed4f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228e8735-315a-428c-9e9b-5bc84d355c13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "365e86c4-78a1-46d3-9a92-63f76e80676b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af60a89-a6a5-47a4-8011-1a90d55ca14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66174c89-7418-4d69-9077-ad4cc7e7b121"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9e09237-08bd-4983-8ee6-bad76bb2d875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2dda702-a7e1-4a8d-a014-9f89a9f4882f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed5b07ed-5556-461a-ba71-c041a23bf6b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b1524bf-922a-4715-bc4a-6be898e149ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9f59869-a43c-4f2e-a82e-2fcf0b20e125",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc753ee6-593a-4522-8fa9-b7139ae90ecb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66a229dc-b6dd-46ce-bf81-8fe491d9070a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81679161-d9b4-42f3-aeb1-8cd279bc238f"
            }
          }
        ]
      },
      {
        "id": "608642a8-8d18-444c-bbbd-6d011e7bd49d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "47cf0aae-e1d3-40c6-b319-1103cc56155b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbeadc32-d79f-469d-aaf3-c9df43374125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad4f5b67-10f6-4b02-887d-886eced491b5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52db73d2-b4a3-43da-9735-c6589e585cf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd04b239-fa26-4127-9f48-a231526312f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf685c2-0da7-428b-9d99-38bcfe9a42f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efaf6aaf-8aae-43f2-a616-b6be10c0d4f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1ec2b1e-3d1e-4010-b608-a069e332a09d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea7595b6-5e1c-45e3-a95d-d2051c98c10b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ed6764b-875f-4424-b64b-2290b29b4966",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "203027f3-f02e-4b76-b489-2960bfa97263"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97e06df5-cd28-4dc8-80c2-4b02acf03b55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15d21d68-b237-4bfe-a601-fe5e7785566b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc81e5df-1c41-4b89-93dd-10e49122305e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afe7a2dc-feab-4236-b092-afcec1783024"
            }
          }
        ]
      },
      {
        "id": "77604c2f-7d86-4000-afc8-818fe339ad00",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d7943589-c5a5-488a-a4e1-1f17cbdc1ae9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5424d1f7-379a-48ac-b342-d39853616ad1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d7834cf-3d77-4525-b701-c5108a2fc73e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e04d4d-bba0-43da-a493-d77989515f91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65cd42f3-dc43-4e6a-a1c8-4aae6eaefb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c375d179-e1b4-435a-815c-71b1d9734b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c097745f-eb6b-45d0-9214-439d4fb59030"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd4c21e8-0dbd-47cc-8aef-05e412861131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20f3ef20-1458-49b3-a056-2ef4e4cf1f69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fa567d7-1c5f-455b-add8-594c94f6cd7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4194d1ad-8238-4cdc-b9a5-7c236664897a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f79e7d60-d317-4e07-b68a-a7b2111f48c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "47a83668-058d-41c8-abb5-1e716297f5e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d6d4efd-73db-4dfd-944c-d6f22f445628",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16d7e014-ab4f-4f88-a082-bd74ae7855be"
            }
          }
        ]
      },
      {
        "id": "0ca0b762-4f35-48f8-9e19-033fa8fe8b85",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0e038fb-12c6-4e62-b403-ee51b005b60a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "466e7a21-6417-4a52-b66c-14a413ca6ab0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6182ad99-492a-42b3-afed-7d6505461b44",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58617ab9-2600-44de-9f37-7d3daa547fc5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00512b11-2485-4372-8c34-a7eb17fc98d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.834507042253518,
      "responseMin": 2,
      "responseMax": 248,
      "responseSd": 20.80367839148036,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692837094904,
      "completed": 1692837108469
    },
    "executions": [
      {
        "id": "b1355160-f92c-45e5-8c4c-2068929acf89",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6bba2a5b-2468-44c7-96a4-8a5164e7ab95",
          "httpRequestId": "645a7bb3-b9f4-4c3f-8e33-a6cbe03e2279"
        },
        "item": {
          "id": "b1355160-f92c-45e5-8c4c-2068929acf89",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d5625354-74f1-4983-bf84-8f2b48f7495e",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "758524af-21f2-4865-9c0f-e46d4d8ad2ed",
        "cursor": {
          "ref": "5ba14b88-f87f-4a9e-9c51-084c8a3032dc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "201a90e2-d6d1-48ab-b3d0-2ab25d8fcf93"
        },
        "item": {
          "id": "758524af-21f2-4865-9c0f-e46d4d8ad2ed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c4a19c60-301e-42d7-9eae-62ae348e7f42",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0c334f07-a2ae-44be-bb5c-902a9f50d029",
        "cursor": {
          "ref": "60fa03ff-f0c7-40b7-b2b1-e1f9c5f04782",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d71807aa-7766-465c-9216-8ce736c93962"
        },
        "item": {
          "id": "0c334f07-a2ae-44be-bb5c-902a9f50d029",
          "name": "did_json"
        },
        "response": {
          "id": "f7bdd3e9-c133-43ad-a838-dbb69afdf20a",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5b95e-3344-46be-b4fd-6d843883df52",
        "cursor": {
          "ref": "d2c79299-82da-482b-a695-fc09582e59fe",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0a7a83bc-42a7-4f1e-a843-f419b3a724e4"
        },
        "item": {
          "id": "86c5b95e-3344-46be-b4fd-6d843883df52",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0f6cc7c-5c86-474b-9fa2-d732b8136d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5b95e-3344-46be-b4fd-6d843883df52",
        "cursor": {
          "ref": "d2c79299-82da-482b-a695-fc09582e59fe",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0a7a83bc-42a7-4f1e-a843-f419b3a724e4"
        },
        "item": {
          "id": "86c5b95e-3344-46be-b4fd-6d843883df52",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0f6cc7c-5c86-474b-9fa2-d732b8136d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c007a3-7126-4bd9-8394-9edf86fa08f7",
        "cursor": {
          "ref": "48494351-470b-4922-941b-a27351f23888",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "45f39395-f074-4694-b8aa-b819de8bc2cb"
        },
        "item": {
          "id": "b1c007a3-7126-4bd9-8394-9edf86fa08f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "312145c1-9246-487a-95c4-eda3af5b331d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36da9d70-67f3-4008-a7b2-c9dd5abe7bfe",
        "cursor": {
          "ref": "6566f2f8-516a-41ff-90d9-686053766764",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "724016be-221f-4222-ac49-f8905c96b3d6"
        },
        "item": {
          "id": "36da9d70-67f3-4008-a7b2-c9dd5abe7bfe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "330326fe-1e85-4327-83a3-ec9ab2e92822",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d5efd0-3cf5-47d0-a484-08bd37d513f5",
        "cursor": {
          "ref": "fef41bc4-7c90-4b13-868d-7f2c6961e8a3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "38017541-c926-4a2e-b5d7-9c6ac6c40543"
        },
        "item": {
          "id": "99d5efd0-3cf5-47d0-a484-08bd37d513f5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea708ae8-47c3-48b1-b519-26212932f603",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db53653-a1fc-4c43-b94d-fcf6d71f48cc",
        "cursor": {
          "ref": "18cdb419-22d7-482d-83c7-9dca064b7de8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ee633dd-ebba-408c-81a7-e2270c50aad4"
        },
        "item": {
          "id": "2db53653-a1fc-4c43-b94d-fcf6d71f48cc",
          "name": "identifiers"
        },
        "response": {
          "id": "9559abbe-2197-4558-b043-e16bccfebb67",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bc5a56-00bd-40ee-bcf4-186c545aa4f3",
        "cursor": {
          "ref": "97508a59-261a-42de-adb1-343db6ecb997",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "77e66a0b-2c6a-4bf9-94c2-46a8ce65c3be"
        },
        "item": {
          "id": "97bc5a56-00bd-40ee-bcf4-186c545aa4f3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec9ec343-fd16-44fd-b192-47c26ce785e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ac69b-1110-4614-a54f-21d49c2c6bda",
        "cursor": {
          "ref": "f4fb8810-208a-4509-b94e-68ba3abe697d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ab3da718-014c-4ca1-8998-46e683f422f7"
        },
        "item": {
          "id": "538ac69b-1110-4614-a54f-21d49c2c6bda",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d44c76fe-1ffe-4688-a563-7d4f049a6e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499ae8eb-6734-49c2-8712-19026e6213bd",
        "cursor": {
          "ref": "bd387142-aceb-4107-9004-9dac5e18de5b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "10dd407e-f340-423c-acc8-ff8a970b2bf3"
        },
        "item": {
          "id": "499ae8eb-6734-49c2-8712-19026e6213bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "01fde790-2701-418c-a9c9-bf26a82ba4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a4594a-4442-4956-810a-05f026e5503e",
        "cursor": {
          "ref": "36690b3a-fa59-41f5-8715-29aadb42dd35",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e0c018e2-c5c0-4aa0-9c76-13a5f04985a6"
        },
        "item": {
          "id": "55a4594a-4442-4956-810a-05f026e5503e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5a70a6a0-0ee5-487e-84f9-7dd12a318fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8029a9-e930-4bb1-9ce1-927dd7f741d3",
        "cursor": {
          "ref": "8dfaf1c5-5f9e-48be-a35b-8e7528464096",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "07fe8325-88d8-46cb-a3fa-e50ae793429b"
        },
        "item": {
          "id": "eb8029a9-e930-4bb1-9ce1-927dd7f741d3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "84805ba6-90f6-4010-917c-745d9a35737c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac97951-bf4e-472a-b617-2ca17622d39b",
        "cursor": {
          "ref": "5c22ea0c-1f30-4034-9cff-9858d48c4828",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d0c6ec3-c5a1-4a04-9485-36db51f0bbc4"
        },
        "item": {
          "id": "fac97951-bf4e-472a-b617-2ca17622d39b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5777d9fd-6dcd-4681-8fe2-9648243782a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745dfce6-58cc-4e60-85e5-498cec3aa4c9",
        "cursor": {
          "ref": "187a7708-c94d-4e49-a084-95f8d1ab2e26",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "80d3bfb7-8ed5-4d98-98f7-1e506aca603d"
        },
        "item": {
          "id": "745dfce6-58cc-4e60-85e5-498cec3aa4c9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bfe46e68-bc49-494c-ad24-26bbaec10418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba8305c-056c-4501-89cb-ae633bcb9f20",
        "cursor": {
          "ref": "c3e6ac30-bdc2-4d0b-a956-121ddf7be3a0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b7444d65-96b2-4e22-8778-613b3fe4c49c"
        },
        "item": {
          "id": "bba8305c-056c-4501-89cb-ae633bcb9f20",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "61c174aa-4110-4634-a41e-7cdf5edd8878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bb28a0-3127-418f-9901-a12edcdae379",
        "cursor": {
          "ref": "a5131689-8809-4b4c-8074-e64af0f2b94f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a4ede94-e9a3-450a-bceb-7cb71bae6d2c"
        },
        "item": {
          "id": "43bb28a0-3127-418f-9901-a12edcdae379",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "753540ed-dbec-4c67-8457-ff1afe14aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a58a70-785d-4e6b-8231-61be8f8da3d8",
        "cursor": {
          "ref": "3f1aa252-3189-4cc5-9f9e-358e49b46ba4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1fee25bd-0bf7-41d1-913b-41bafed5fcf2"
        },
        "item": {
          "id": "c9a58a70-785d-4e6b-8231-61be8f8da3d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6dcba681-fcff-42a6-9393-3f54e90500c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee7d5a-ec11-4d6e-80c7-1051f9e4e4a6",
        "cursor": {
          "ref": "0dd0348d-158d-43fa-8598-9cc67f2b594f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "42bb0c7e-0b6e-4641-8e6b-93e3eabd0136"
        },
        "item": {
          "id": "4cee7d5a-ec11-4d6e-80c7-1051f9e4e4a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3ccaf13-f5a8-4b3d-895e-274df4d6d767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b526e9-37a6-4ae1-8f7f-962b5b5159f2",
        "cursor": {
          "ref": "3d01fbcb-867c-4d09-a189-5937455d4474",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f1682392-8092-4da0-83d1-bdcf5789a5dc"
        },
        "item": {
          "id": "08b526e9-37a6-4ae1-8f7f-962b5b5159f2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "006294b3-db08-4d74-91a9-b958c25523a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bc4c56-1708-42a3-b92f-eb1c38819085",
        "cursor": {
          "ref": "c8a6c050-8cf1-421c-bd84-1bb9b8197f44",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a4b864dd-816a-417c-ad4f-62573ea3d804"
        },
        "item": {
          "id": "08bc4c56-1708-42a3-b92f-eb1c38819085",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "980ceef1-bf09-41d4-b4f5-77094ee58c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0840e-47d7-4bba-a6b0-f7f3b95aa93e",
        "cursor": {
          "ref": "dd5fa039-7157-466a-bc6c-883b93fd8031",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7f6f562c-4e12-406e-b9e1-75d8efec7dde"
        },
        "item": {
          "id": "60a0840e-47d7-4bba-a6b0-f7f3b95aa93e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c45266da-66a3-4083-bc27-bfdc040947f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31106b39-66c5-4209-8a8e-7cdadb0524b4",
        "cursor": {
          "ref": "dd3cdfae-529b-48d6-b6bc-123fa80e4a23",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "203de16f-69b3-4df7-b343-39a07a5fec79"
        },
        "item": {
          "id": "31106b39-66c5-4209-8a8e-7cdadb0524b4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c393a70-bd95-40eb-8eed-ca883a9d71ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d1facd-7aec-4d3c-9d93-7dccb12d1ca8",
        "cursor": {
          "ref": "bc105a65-8d0c-4ee4-8a82-2db905cabad3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "849ea888-fa2b-4c2c-ab18-8ee4bce84852"
        },
        "item": {
          "id": "a4d1facd-7aec-4d3c-9d93-7dccb12d1ca8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c02e0104-52dc-4d8e-bc7d-b339472b9db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9848c-0277-41e4-b55a-e1ae2bb6efed",
        "cursor": {
          "ref": "162670d5-952e-40f8-956d-0270a8cc61aa",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "516ac80c-4f3e-4c7e-a688-3e8302e7e19e"
        },
        "item": {
          "id": "7df9848c-0277-41e4-b55a-e1ae2bb6efed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8d86ac69-055c-43bf-b47a-275553a6c037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b0af8c-b0d6-424b-bf7c-91493b2b6cc9",
        "cursor": {
          "ref": "95b17c14-a27e-418e-b782-64869cae24fe",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9be07ce-7bc2-4103-ab0a-644529b70a9f"
        },
        "item": {
          "id": "e4b0af8c-b0d6-424b-bf7c-91493b2b6cc9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "22db4db3-1f20-458a-a730-4b1f7571c592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d804e1-5d7e-4369-93e7-ba10fb844a7f",
        "cursor": {
          "ref": "5222efe3-5d11-4d64-a2dc-6e68373405d6",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "459483f6-e807-4c8c-9c44-d568c007b50f"
        },
        "item": {
          "id": "d1d804e1-5d7e-4369-93e7-ba10fb844a7f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "03687386-735b-4b7c-8dbc-de31b4d4b1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa140f2d-be9f-47c3-b9b6-18cf0c9dc2de",
        "cursor": {
          "ref": "a336d651-300c-4486-825e-73a7b8711756",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "27efb3ff-7e6a-47e7-afda-91fe01d05540"
        },
        "item": {
          "id": "aa140f2d-be9f-47c3-b9b6-18cf0c9dc2de",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6b93ca09-df50-4892-a80c-2523076a6b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeb5934-4516-49bd-889b-c90f2c75428b",
        "cursor": {
          "ref": "0e9254e7-9297-4cac-9880-4ae3da4ca4a2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2aed2372-1df6-4e8b-a5dd-b0cd22328423"
        },
        "item": {
          "id": "faeb5934-4516-49bd-889b-c90f2c75428b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c1e12ff-d760-41c9-b92b-0e99f93cfdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eb5792-62ff-4292-8778-667d30eefdbd",
        "cursor": {
          "ref": "69c8c875-53a8-46b1-b90e-ba1c6c69d4d0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3d4e8390-9d1d-4712-b973-f3097fa06222"
        },
        "item": {
          "id": "43eb5792-62ff-4292-8778-667d30eefdbd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5240f79d-0f21-4bac-b5e4-b172c1204d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d66c3a3-dbdf-4398-91e2-c3ca1784c3f9",
        "cursor": {
          "ref": "622f1f62-ac34-46ad-8411-5c2b700f2d30",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ef4dc0d9-1649-4f44-b918-397047d622c6"
        },
        "item": {
          "id": "0d66c3a3-dbdf-4398-91e2-c3ca1784c3f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "70649acf-5c03-42da-8aad-e8c9422e40cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdcb028-f2a2-4f35-8617-4bbfcdfaa6a7",
        "cursor": {
          "ref": "0524a0c8-d5bd-4abd-8f27-353a09b53ab4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "019c16e4-182b-4c3f-85d4-842649f9ada2"
        },
        "item": {
          "id": "dfdcb028-f2a2-4f35-8617-4bbfcdfaa6a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c02b2954-5511-4b9a-bca9-c8d8c74b4521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9e80a5-d3d1-469c-a215-d526b7540568",
        "cursor": {
          "ref": "e279fb7b-acb2-48b2-b71b-192f9dc27f84",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "311b7a4a-09a8-456d-9c89-3730bf61fa2b"
        },
        "item": {
          "id": "2f9e80a5-d3d1-469c-a215-d526b7540568",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a1d62573-d2d4-4278-822c-78183bc982a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d1049-8624-4a17-b474-0690b10de1bf",
        "cursor": {
          "ref": "aa6b9707-25e4-4312-a1fd-dce56296b18c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c4af463c-b131-4936-870b-40ea0359ea99"
        },
        "item": {
          "id": "d41d1049-8624-4a17-b474-0690b10de1bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "139657c2-5ed5-4e71-85ff-9128a37b0a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff4d69f-c423-46dd-9bc9-19330588f0bf",
        "cursor": {
          "ref": "5b0d9478-f7ca-41a4-88f4-ccefa0cc6bcf",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51cf0ac0-d12f-4bd6-8926-01c7fba6a027"
        },
        "item": {
          "id": "bff4d69f-c423-46dd-9bc9-19330588f0bf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "59453983-7d07-4f24-830a-a768e121ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57b1533-452e-4c77-ad65-8648cc355b73",
        "cursor": {
          "ref": "ebcbe159-a076-422d-a6b6-f2b8c312e97d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "53f3a291-2ffb-4341-9276-5a28c95af102"
        },
        "item": {
          "id": "b57b1533-452e-4c77-ad65-8648cc355b73",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "820d3c9e-c716-4466-9e23-caf8c2779385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb759d-7bdf-439a-a39c-6d335904601f",
        "cursor": {
          "ref": "e1d61184-7afa-4fc5-92c6-43eb6165d6c0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1cc7f4d5-d22f-428a-813e-b1b01c2acff0"
        },
        "item": {
          "id": "e6fb759d-7bdf-439a-a39c-6d335904601f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9cc594e-4a5d-46f0-8161-5b11018eab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b00a3d-fbbc-4cea-b26d-2ac143d6f61a",
        "cursor": {
          "ref": "aedb2246-fbbb-42c1-bd20-05921027e846",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d74f1aa6-beab-402a-88ce-ff8eb9e2e55b"
        },
        "item": {
          "id": "03b00a3d-fbbc-4cea-b26d-2ac143d6f61a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0a04a617-72c6-40e2-b2a6-391d426e9a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730e0810-66d1-4433-80f9-2fcb8be89f0f",
        "cursor": {
          "ref": "e81d228b-2bcc-4456-9f70-60afff38205e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "533ac010-9e16-4c53-af42-09717535f4fa"
        },
        "item": {
          "id": "730e0810-66d1-4433-80f9-2fcb8be89f0f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4ee71a5-061d-46eb-ae3c-aca6ce8d9bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63960a54-eed5-4078-975f-270229bfd0a0",
        "cursor": {
          "ref": "148b36a2-abcb-470f-953d-e9b13c32b887",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "116902e0-f9cc-4c2e-ab16-67d99ce7d97e"
        },
        "item": {
          "id": "63960a54-eed5-4078-975f-270229bfd0a0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21b11810-d05e-4cd6-b5c5-cdfd8a8e1821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a38531-58f6-4212-afb9-09fa162063c8",
        "cursor": {
          "ref": "60c85db4-3fa1-4249-8fb1-8a248e13a941",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "659e1cd8-736a-4355-8475-58458da415e0"
        },
        "item": {
          "id": "f5a38531-58f6-4212-afb9-09fa162063c8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6abb8550-1e54-4ad1-96fb-74834f63aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ac4dc-53a1-460a-a19e-884cf153c779",
        "cursor": {
          "ref": "d2a466ba-958b-4b54-9dc4-e8b176c10786",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6c5e4fec-d09d-4758-8553-148c4f794bf3"
        },
        "item": {
          "id": "c05ac4dc-53a1-460a-a19e-884cf153c779",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "48058239-8fc9-4654-a575-395b1a39f818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44085bfc-91ee-46dc-9bd8-fdd19b414408",
        "cursor": {
          "ref": "d3a1bdba-c90e-4789-a692-3e05eed9a8b9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17b9bc15-599d-4a3b-b1f7-aecbe29547ee"
        },
        "item": {
          "id": "44085bfc-91ee-46dc-9bd8-fdd19b414408",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "28aaa6b9-b2e6-4ffd-ba63-dc3dae183210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af137222-8d4f-47fc-b1ad-fc1afcfbee26",
        "cursor": {
          "ref": "e74c3231-5399-4f9a-973e-3e11268f6d8b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "090b1e6c-fe58-4194-a6f6-61ce20ed4fc6"
        },
        "item": {
          "id": "af137222-8d4f-47fc-b1ad-fc1afcfbee26",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2264a13d-5f79-43a6-a1d5-50f893fcdfc9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60ca380-8996-4106-a92a-911cca58e45a",
        "cursor": {
          "ref": "a8e9279b-b3e1-4a7d-8604-e7d0511548da",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20b7bf50-1ec9-48fe-9f4e-66be48308152"
        },
        "item": {
          "id": "d60ca380-8996-4106-a92a-911cca58e45a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a9c4e7a3-2c2b-492d-af9f-369a63fa9a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b419c5a8-1cb8-4829-93be-e16e4f9be1be",
        "cursor": {
          "ref": "502f0b09-ccfe-4c91-837d-03f7f4711f4d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c1a87882-81db-4e5d-b683-0ed09e6631f5"
        },
        "item": {
          "id": "b419c5a8-1cb8-4829-93be-e16e4f9be1be",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1cc2273b-6c4d-47da-b754-a4b5959965b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f080f722-61a4-4a8f-83c9-1df9d9ae43f3",
        "cursor": {
          "ref": "b700bbce-9059-44f3-9412-a2131115fe1b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "63d99442-3014-4fa5-a20a-ae01e589b57b"
        },
        "item": {
          "id": "f080f722-61a4-4a8f-83c9-1df9d9ae43f3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "99db24fc-e8c4-48d7-871b-bdab6cfcf9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae733c38-7d6f-419a-9781-6c1faa963e8f",
        "cursor": {
          "ref": "d659cf6b-2bfc-4669-aecf-74147c88d647",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d45062e-3ae3-4611-82ac-4b62738060a4"
        },
        "item": {
          "id": "ae733c38-7d6f-419a-9781-6c1faa963e8f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5aee9c27-db5b-4b44-9a24-42f6edff9cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d71c10-4722-4ad8-b3c4-f4f395d369a2",
        "cursor": {
          "ref": "455cac86-4988-4c1d-a14d-29c35bbaa881",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b4325aa1-1999-424f-adce-55bc9cb3f23a"
        },
        "item": {
          "id": "d5d71c10-4722-4ad8-b3c4-f4f395d369a2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a231052-94e1-4d04-8065-809fbf10643b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9132b5fa-2e3d-499f-9974-a42bd2f87816",
        "cursor": {
          "ref": "3babd35c-ca90-40c9-8cd9-45db77a5586d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f23156e6-e99e-4ed8-ad0b-7a6dac106571"
        },
        "item": {
          "id": "9132b5fa-2e3d-499f-9974-a42bd2f87816",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "87989e9a-660b-4a8e-988f-2791f1c7b819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60049f-f0c8-4cdd-8914-725ce2793279",
        "cursor": {
          "ref": "30bdb8be-e1a7-4f43-975c-f4e3cac7dadb",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "925e1625-b295-49c9-9978-d3caaebdb508"
        },
        "item": {
          "id": "9a60049f-f0c8-4cdd-8914-725ce2793279",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5dd75cde-bcfa-4767-ac95-a96551b3dbc1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06325ba2-ccfd-488e-8b08-2d528071542a",
        "cursor": {
          "ref": "2e7fc0fe-6dd8-47fc-85bb-bb764222c2c3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b6bc8d1-9a15-4429-89c5-613d4724da27"
        },
        "item": {
          "id": "06325ba2-ccfd-488e-8b08-2d528071542a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "737e04b7-3b6f-4399-9909-9acde76fe6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecc7f8a-59c5-4354-8520-df37ad66ffbb",
        "cursor": {
          "ref": "24a22f35-f417-4014-947c-a74fbc07b91f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c5f6f07-1660-419f-83f0-ed39021600c5"
        },
        "item": {
          "id": "cecc7f8a-59c5-4354-8520-df37ad66ffbb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b30b0a28-86f0-4a12-8092-23117562b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14114d77-c26a-4224-beeb-9b5716f26e20",
        "cursor": {
          "ref": "ef11f80e-0af8-456c-9ed7-f11d89b65dac",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d4119e64-4808-4f6a-a0b2-849456077139"
        },
        "item": {
          "id": "14114d77-c26a-4224-beeb-9b5716f26e20",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3092bdbe-62c7-40a9-84a1-83685e400141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d34ef9e-8cf1-4480-90b5-d9ecdc7f9dc7",
        "cursor": {
          "ref": "815e22eb-09a2-481f-aaba-0add4d5074cc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f04acbd8-ee21-4b96-9943-ecac51d75293"
        },
        "item": {
          "id": "9d34ef9e-8cf1-4480-90b5-d9ecdc7f9dc7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b59dd15d-275e-48fc-9858-64e4de085411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24b0dd1-58e5-499e-877e-baac875f74e1",
        "cursor": {
          "ref": "91e7e6ac-bc84-496b-acbe-8f5ed88dadb5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf965b5b-166f-4c82-992f-e399394f9e03"
        },
        "item": {
          "id": "e24b0dd1-58e5-499e-877e-baac875f74e1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "196099bc-5da5-41bf-a44b-92ea32b4a6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3d21f3-4d1a-4713-a513-cc20f44c5709",
        "cursor": {
          "ref": "6f30253a-ba8e-469d-9677-407012c3e1b8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a84510f1-82dd-409c-b6a8-83c40bdc1232"
        },
        "item": {
          "id": "4e3d21f3-4d1a-4713-a513-cc20f44c5709",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f88c58e-12fb-4ea7-bad4-9c3caedbd37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5ce43f-39ab-42de-bf14-c637a1230c2f",
        "cursor": {
          "ref": "d8c3a916-1b0a-4019-9fff-d7eea3ec99cb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4bbfd85-376a-4486-a848-b36d593aeb8e"
        },
        "item": {
          "id": "7a5ce43f-39ab-42de-bf14-c637a1230c2f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12428432-bf88-464a-8f6d-b52168e8691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb53ef-1619-46cd-89e4-85e50562e66d",
        "cursor": {
          "ref": "30d1a0fd-6028-40be-a0e7-9adc3b14490e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cb3699c4-188e-45d3-a1f6-a0871e8a412a"
        },
        "item": {
          "id": "2acb53ef-1619-46cd-89e4-85e50562e66d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "402d46e3-27fa-4a73-bce3-8bab63f5e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7e1fec-2351-41e7-82f3-84068230d1dd",
        "cursor": {
          "ref": "ef371065-009e-4ab8-bc81-ec6b130002b9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "add84180-81a2-4831-901e-5cc5134b83dc"
        },
        "item": {
          "id": "5d7e1fec-2351-41e7-82f3-84068230d1dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "faf33d60-b2a4-4d93-9f56-f1a6c8577534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4798c7c4-6bed-4a55-80a7-3896deb330bc",
        "cursor": {
          "ref": "5e3cdfd9-a407-458c-b5d0-2ab56c9bf570",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8f040091-cdeb-4635-864e-50e094e52511"
        },
        "item": {
          "id": "4798c7c4-6bed-4a55-80a7-3896deb330bc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55c1fae0-fabb-4dc6-a65f-dc352afbdf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af6cf2c-435d-4765-85e2-ea7419888b13",
        "cursor": {
          "ref": "45a8021b-20cc-4f5c-bd7b-9f5318cc7da3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f7ceb36c-0981-49e7-b2fa-f57b86014d85"
        },
        "item": {
          "id": "8af6cf2c-435d-4765-85e2-ea7419888b13",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d1078dbe-60bd-4dd4-8b78-c129568c6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79c4873-9077-4116-be16-02f691ae70ea",
        "cursor": {
          "ref": "ab0f8efb-950f-490a-bf39-12f20058724d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c565b578-45f1-4407-91d4-42567b4a68f8"
        },
        "item": {
          "id": "a79c4873-9077-4116-be16-02f691ae70ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f0370fd5-d6eb-4619-8209-590b6a41f5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0dd83d-27c2-4eae-9f61-05dfcac34cec",
        "cursor": {
          "ref": "82626b02-f9d4-4a8b-ba18-93aab77ccf76",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "015ac507-c9a9-4d84-816c-8b6e0b6ca213"
        },
        "item": {
          "id": "7c0dd83d-27c2-4eae-9f61-05dfcac34cec",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "36b6776f-e292-41af-a24d-e368e305502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457160a1-1f1c-4622-a7eb-73020cbf7de6",
        "cursor": {
          "ref": "b0c37c5f-37db-4a8c-b36b-3dcc37714627",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f575bc88-d526-49fa-94c7-b20019160d45"
        },
        "item": {
          "id": "457160a1-1f1c-4622-a7eb-73020cbf7de6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "378e9593-9654-494d-9c52-a03ecf9e72d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48fd9a3-4c7b-4d69-8599-ad10ffb2d90b",
        "cursor": {
          "ref": "8f21c111-e688-4240-ac4b-c20b449ba25f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4ad25504-ca56-49ea-a12e-301c3f9531a1"
        },
        "item": {
          "id": "e48fd9a3-4c7b-4d69-8599-ad10ffb2d90b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0393e2b8-f744-4172-82d5-019b5e60a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd01a0-e23f-4af0-b0e2-bf61a1235522",
        "cursor": {
          "ref": "9bbd736d-2acc-47ae-97cb-d7d9f8db147b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ed54c786-73dd-4ac2-8ed8-ea7e252d5950"
        },
        "item": {
          "id": "8fbd01a0-e23f-4af0-b0e2-bf61a1235522",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9649711b-a681-4828-b323-d1511d52e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6701c486-9b28-46ec-a40f-cbb5792b53cf",
        "cursor": {
          "ref": "37a036c0-56b8-4a81-98a4-d6027c172ddf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "29355fd1-f727-4961-9d2b-51b7ab43e6f0"
        },
        "item": {
          "id": "6701c486-9b28-46ec-a40f-cbb5792b53cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cdc41ca9-ad84-498e-a979-1b917ab65b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c2ef71-eded-4a71-b30d-a01efbe871d9",
        "cursor": {
          "ref": "19701d2e-3199-4da7-bb05-e3e51b03cabd",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "386fefe2-2bf4-4c9e-ba5a-282bf4251617"
        },
        "item": {
          "id": "04c2ef71-eded-4a71-b30d-a01efbe871d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0201fcee-9237-4145-87e3-30b2d85def8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9920cb-ce4c-4c95-8d77-11930c4c0702",
        "cursor": {
          "ref": "68e1a0d9-4c36-4002-a011-f70bd0b1f653",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de76730d-f7a5-43b6-abde-cab2e816b765"
        },
        "item": {
          "id": "0f9920cb-ce4c-4c95-8d77-11930c4c0702",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f5382f68-827f-4821-ad0b-ce13819ac79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afa0c05-6be4-4617-a186-589a449945cd",
        "cursor": {
          "ref": "4b99bae7-0001-4e46-9fe3-a230837942c0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "14362250-f466-47ae-8be4-e5a8e82953a0"
        },
        "item": {
          "id": "6afa0c05-6be4-4617-a186-589a449945cd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ccf09224-6233-4722-834c-995860d5d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eefc70-de9b-46df-a649-d3f7fb8efd2f",
        "cursor": {
          "ref": "bc5fdbc5-a029-4b5e-b964-5f5e0790aff2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "150f5bbc-b1d1-4aca-8445-3d5a30e810d4"
        },
        "item": {
          "id": "35eefc70-de9b-46df-a649-d3f7fb8efd2f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0d5c8a1e-6d0d-4352-8e08-42b0e8c55c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57fb3b-5da7-4bbf-9fd8-a5d1eeb02e9e",
        "cursor": {
          "ref": "24e5385f-7058-4043-a03c-f155f88eaa2c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f4eca629-4b40-44f8-a7c1-3997a0b7e271"
        },
        "item": {
          "id": "5f57fb3b-5da7-4bbf-9fd8-a5d1eeb02e9e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9a86bebd-a658-4c6b-9ca9-6e4f76769849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515ee745-9531-40ca-bd63-08a0b738ff09",
        "cursor": {
          "ref": "f236e981-d59a-4bec-ab0c-628681a1020c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eb02b64c-2a34-45cd-b7c1-758b4743b8d4"
        },
        "item": {
          "id": "515ee745-9531-40ca-bd63-08a0b738ff09",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2136064b-c8f0-4d0e-a764-a33f84f3a7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54157f96-a687-4e3c-977c-b76e28169599",
        "cursor": {
          "ref": "2b255675-a364-4f92-9294-f94dbb233f99",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95ab08ef-7e62-44e8-96ab-cdc7b876c70f"
        },
        "item": {
          "id": "54157f96-a687-4e3c-977c-b76e28169599",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "edc32cb7-7d2b-4104-a89c-756ff88f33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7ae306-3759-43b3-8854-2ea094826b3a",
        "cursor": {
          "ref": "c05262bd-0a43-4f4d-a001-38a00870f2cf",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "79dac3a3-7a93-4356-a05d-22055d864b13"
        },
        "item": {
          "id": "0d7ae306-3759-43b3-8854-2ea094826b3a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e3122825-8a42-46d0-9fe8-23aa235ed01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a7a3b-7c1d-42d1-bc7c-79758113114a",
        "cursor": {
          "ref": "223b401c-dd10-4cf6-a42b-b2f94b9aa336",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fad24cf2-7840-4257-8451-1177f857c847"
        },
        "item": {
          "id": "c56a7a3b-7c1d-42d1-bc7c-79758113114a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d456bd3c-99b3-464a-a3c0-24b3def465d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d797c2e-761e-4d48-8e8a-5540e8c8a455",
        "cursor": {
          "ref": "a01e0a1d-3b77-4bbf-922f-3fb2db6d35d4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ed1f5a2-7470-4300-b7a4-1bd906c86ada"
        },
        "item": {
          "id": "3d797c2e-761e-4d48-8e8a-5540e8c8a455",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ec8d4d9-b07c-49e3-9b9b-26580600e181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2e652-9fa1-424c-ae06-95b6c4ba7259",
        "cursor": {
          "ref": "2ae65cf1-626b-4eb6-967b-51d9cc58a775",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "af3cd751-190f-4eea-9628-4a9b1ec8f1e1"
        },
        "item": {
          "id": "b0a2e652-9fa1-424c-ae06-95b6c4ba7259",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d54b2c31-a494-4521-9cfd-15c3ead7727e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77877786-a03f-4105-b34c-a31d9fa79d6c",
        "cursor": {
          "ref": "dec8e81b-2a1d-4512-845f-3ed736c9e918",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "44a6434d-2986-4c0a-89fd-efaf550f5c54"
        },
        "item": {
          "id": "77877786-a03f-4105-b34c-a31d9fa79d6c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "058fbd7a-2381-48f7-83a1-bdf20525db95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e7488-6c92-4d7e-ad4b-c105a4f34ad3",
        "cursor": {
          "ref": "0c0d78b4-82ea-4f60-8605-f01354cf4b9d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb804fcb-160e-48ac-ba21-2aadd3251223"
        },
        "item": {
          "id": "7f9e7488-6c92-4d7e-ad4b-c105a4f34ad3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7fd3a440-cc54-46d5-9435-d827b33713f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce6a9df-cf83-4456-94b1-3bd1d1a85873",
        "cursor": {
          "ref": "7a635635-e7de-4072-b0b2-e284a4ca746e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "029944dc-cffd-4c41-8378-6be612937498"
        },
        "item": {
          "id": "dce6a9df-cf83-4456-94b1-3bd1d1a85873",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "730a804b-f989-4236-81e8-1b8b80746173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b72edbd-18a6-499b-93c4-ccc0abb9db28",
        "cursor": {
          "ref": "23be671c-2095-4e12-832d-094b3851f7ba",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4985a2e-6ffe-4162-a51c-7222d84a95c6"
        },
        "item": {
          "id": "9b72edbd-18a6-499b-93c4-ccc0abb9db28",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aeec386b-58f9-49dc-8cc8-f72a12d050c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35665daf-7648-4927-a4a8-88a590c5cb35",
        "cursor": {
          "ref": "759bdf0e-e267-43d6-8ece-5ffbcee9fcba",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "866fd680-9266-4f98-b7c2-007ca62e3b0d"
        },
        "item": {
          "id": "35665daf-7648-4927-a4a8-88a590c5cb35",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "49d327e6-914c-4e7d-a0dd-053551e4d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb502f75-c3d0-4d02-a012-fe9ad6082e05",
        "cursor": {
          "ref": "42646e13-c973-4261-a629-228b8c0ad842",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3a1a4a2c-1d64-41cc-a53d-cead1973bab4"
        },
        "item": {
          "id": "fb502f75-c3d0-4d02-a012-fe9ad6082e05",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "770a1dd1-f5d1-4fa1-b35a-006a174d98aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d1c260-e017-4383-9b67-a5505b2cd124",
        "cursor": {
          "ref": "5f35eb68-c8f4-4a98-b476-fcd72dbe7895",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a4cbd8e4-03ed-40f7-8d84-adf7a0a70072"
        },
        "item": {
          "id": "90d1c260-e017-4383-9b67-a5505b2cd124",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "380bd147-1498-4722-a21c-1130e196524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efc0a11-a2bb-4079-9024-dcc33b58a3fa",
        "cursor": {
          "ref": "9f30cefa-0a4a-409d-9189-b19e204c22f1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7cd25e80-9bf7-421c-a6b0-f6d7a603bdb8"
        },
        "item": {
          "id": "9efc0a11-a2bb-4079-9024-dcc33b58a3fa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e0cb5afd-58d2-42ae-ae02-2cfee6ff7fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63ca927-ce28-44dc-be9e-d15e6cecf9ef",
        "cursor": {
          "ref": "fa08dde8-3829-469f-9322-43b894cded1a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cd08e6dd-a291-4ed1-b14a-09994f4d322b"
        },
        "item": {
          "id": "f63ca927-ce28-44dc-be9e-d15e6cecf9ef",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "135e6ad2-d7ec-4911-b86f-3e351897de8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6404a113-d5aa-4e78-ad42-57f5acc364eb",
        "cursor": {
          "ref": "481a413e-8c80-4ef2-8158-4b9767b4654c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c4951893-af23-4014-8e92-65120282f8e8"
        },
        "item": {
          "id": "6404a113-d5aa-4e78-ad42-57f5acc364eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3309b95c-5321-4bb8-a674-0cedf84265c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281e780d-1e84-4414-bf0d-19016b303585",
        "cursor": {
          "ref": "075da252-8e0d-436b-9228-ef72e2c0839d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a8ac0e27-9c9e-4142-908c-883cd7efcb70"
        },
        "item": {
          "id": "281e780d-1e84-4414-bf0d-19016b303585",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "28b2e1c2-d33a-4e74-a187-d612a7a74f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c10c44-be13-4827-9bd6-7ca12fd252c7",
        "cursor": {
          "ref": "9394e5b8-042f-48c6-aa60-f53b896a791d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d6e646df-5c9b-48f2-a062-e814752b021b"
        },
        "item": {
          "id": "b1c10c44-be13-4827-9bd6-7ca12fd252c7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "726ec644-5ee9-4134-a7ae-d954b9a573e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dddb7f5-dc2e-4cbe-b3fc-c9b58da97805",
        "cursor": {
          "ref": "fa87f0d0-963c-4bfd-be91-2143b3bba9b2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21a97c05-53d1-4834-8e72-e2da9ff3c1f7"
        },
        "item": {
          "id": "9dddb7f5-dc2e-4cbe-b3fc-c9b58da97805",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "87f5473c-ab28-4324-a9d9-b4558474d351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b450dc1-c836-4d1e-9d3b-389dc0fe2edf",
        "cursor": {
          "ref": "d19388d9-1403-47c1-9390-00ad981ebf1a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44739cb6-c007-4fde-8ef3-d363a0a46c96"
        },
        "item": {
          "id": "8b450dc1-c836-4d1e-9d3b-389dc0fe2edf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d80e4c63-1127-46a0-a4eb-153e36844a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c6d028-d24d-4403-9f5f-b82478489890",
        "cursor": {
          "ref": "0bcd8efe-f9ba-487f-8e1c-2508a1484d51",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a46e0e67-607d-44ef-9bd5-ed79ae9c59ff"
        },
        "item": {
          "id": "59c6d028-d24d-4403-9f5f-b82478489890",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c7315727-edb4-41b2-bc7c-3321e1db1558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3796e2-1a41-4edc-bda8-718b9266616c",
        "cursor": {
          "ref": "091c6613-3efc-4f81-b2af-bc72427b89d7",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78d41e74-7dd4-4534-a29d-bf9e6788cc17"
        },
        "item": {
          "id": "8c3796e2-1a41-4edc-bda8-718b9266616c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e048c257-91d6-4323-9dad-34568f16f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be80b57-6e52-437b-8339-5ab572ec549c",
        "cursor": {
          "ref": "0055364d-3429-4926-bd19-14e1a00d2cf0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2fc5ea61-4b7a-4b66-b529-9c5b308ec30d"
        },
        "item": {
          "id": "3be80b57-6e52-437b-8339-5ab572ec549c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81d22e24-0419-466d-b404-4b93814967e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8206f9-9e45-42c2-81a0-b5cb51bc9112",
        "cursor": {
          "ref": "a9179a99-04de-4785-94dc-2ec84a716787",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cecbb015-6c82-44e9-ba10-f02d38240c2d"
        },
        "item": {
          "id": "df8206f9-9e45-42c2-81a0-b5cb51bc9112",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "eb7cc7c4-c1f6-40ac-94f9-135c14198ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1d8ed-59c6-4a0d-b8a6-c4123266c050",
        "cursor": {
          "ref": "be84046e-d349-47bb-bc35-3b379bfcc679",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9d453125-8164-40e8-a3f5-2cd414fa8e2b"
        },
        "item": {
          "id": "8cf1d8ed-59c6-4a0d-b8a6-c4123266c050",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8c1e06d4-a151-4de6-9c12-1e6fc0663257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6e7eae-2da0-44cb-b49d-54aa86ec5c28",
        "cursor": {
          "ref": "21bf99f6-9d51-4488-90f3-34d43ee8cf4b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "15857ef5-100d-44b7-b1c6-4e0bc35e37c8"
        },
        "item": {
          "id": "8d6e7eae-2da0-44cb-b49d-54aa86ec5c28",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9360cf87-6932-4aa9-98e2-5698ffebb79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a341d294-ab8f-4b3d-9ad1-359164a04036",
        "cursor": {
          "ref": "146884a2-e848-43b2-af8e-b859d3495cce",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09131554-1612-4f0e-8ffb-e15f9f5c259b"
        },
        "item": {
          "id": "a341d294-ab8f-4b3d-9ad1-359164a04036",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4c1a284e-78f8-4279-9871-4bc922ee6825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f36aaa6-f5d9-4a99-bea4-935251b53d75",
        "cursor": {
          "ref": "c5601a8d-e8eb-443e-b3d0-da3491f2d100",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3bd039bd-3846-48c2-8077-1e89de32f3af"
        },
        "item": {
          "id": "0f36aaa6-f5d9-4a99-bea4-935251b53d75",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9873ab35-f0e5-44f9-8c93-ad2741d920ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f404a42e-2388-449f-ad69-65396d0a4a41",
        "cursor": {
          "ref": "13f998a2-9d4d-4940-9ff3-d2443e4f219e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "86ee423a-2db3-4f4b-a0ad-275b68ba6c51"
        },
        "item": {
          "id": "f404a42e-2388-449f-ad69-65396d0a4a41",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e6b0d3eb-42f3-40f7-a8ab-3d436bbb1430",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cf2246-8dc9-49f5-a3d8-048a14265a85",
        "cursor": {
          "ref": "7f724685-f17c-4692-bdec-7822845765df",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3862cb96-58bb-4a44-a6b2-0138fddafbd9"
        },
        "item": {
          "id": "89cf2246-8dc9-49f5-a3d8-048a14265a85",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4e42480a-9fea-484a-9108-77bf9dbe0d9f",
          "status": "Created",
          "code": 201,
          "responseTime": 168,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f0b26b-1e3a-4638-8f26-55407efbd385",
        "cursor": {
          "ref": "5bd4df75-4ba1-4271-89f6-44ca720a08f9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a28d5813-db0d-48ef-827e-23d0c38a6232"
        },
        "item": {
          "id": "38f0b26b-1e3a-4638-8f26-55407efbd385",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bd4cd88b-f848-4663-9966-d6cd7a71691c",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6739b6a2-6ca3-4f00-8af8-ff46bc5fb902",
        "cursor": {
          "ref": "7e8bc205-862a-46c4-9b9b-e337371a8235",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d6ca4f20-cd09-40fe-9a66-95987d539014"
        },
        "item": {
          "id": "6739b6a2-6ca3-4f00-8af8-ff46bc5fb902",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f7345c6b-c297-477a-96f9-396441949112",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "431811a4-af13-4686-9438-86510fcd2700",
        "cursor": {
          "ref": "a162976d-536e-4a9f-9cf3-248d4b59d801",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "756af180-7769-4583-810d-41c242d0c036"
        },
        "item": {
          "id": "431811a4-af13-4686-9438-86510fcd2700",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7fa08aed-dc87-4f6f-a4db-a157e4ed81dc",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "020e4a85-f3fb-4c0c-8e67-08070ed51ce9",
        "cursor": {
          "ref": "98cc0c25-dc1d-4e9e-b827-0eb35aa7e24f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb6e3c7c-e3a6-488e-a810-8b1da819c086"
        },
        "item": {
          "id": "020e4a85-f3fb-4c0c-8e67-08070ed51ce9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "27ba0e08-43d1-4724-a340-99db7106240c",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3f2cf7-dfeb-477c-9e83-fc04868d9cb0",
        "cursor": {
          "ref": "717f9ff2-e3db-4217-81dd-c0137fc1a7f6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "90eb4b7b-23f2-464b-bb84-64d53edccc19"
        },
        "item": {
          "id": "8d3f2cf7-dfeb-477c-9e83-fc04868d9cb0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93e5208f-4033-4ef1-93f0-18623c9a23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa42ca-c0fc-44d3-b115-7f59da21519e",
        "cursor": {
          "ref": "5435c1b4-6e28-4ded-831b-babda67e1374",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1a4282c6-f21b-48a2-99c7-70b2d9096091"
        },
        "item": {
          "id": "e9aa42ca-c0fc-44d3-b115-7f59da21519e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "61f98197-f180-48bc-90e4-a138ccc125d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27647810-83e3-4568-9736-a898ff3b109a",
        "cursor": {
          "ref": "d38e387a-614f-4cf7-8436-44fca1c38e0a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02a36fb8-7056-4cd1-91c4-d92693cff5fc"
        },
        "item": {
          "id": "27647810-83e3-4568-9736-a898ff3b109a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d83c9d1-d122-43a7-b51c-18edbc8243b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39d8e48-cc70-4fd9-b210-575b6a5a707d",
        "cursor": {
          "ref": "9365c8be-8568-4ce3-acff-36cf580413eb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0df57aa5-ff85-40ce-9f38-c783499c2d03"
        },
        "item": {
          "id": "c39d8e48-cc70-4fd9-b210-575b6a5a707d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1492b76-c1d6-44f0-913e-478fdf8caa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1f3132-2db6-4a1e-8da7-ac82dc448971",
        "cursor": {
          "ref": "7c00c0ed-7982-4d64-9dfa-a7956fd94bda",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "252fc691-c938-4195-98ca-421b8f497c07"
        },
        "item": {
          "id": "5d1f3132-2db6-4a1e-8da7-ac82dc448971",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea020806-f0d2-4722-ab27-b848670e315a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98015502-d49b-4329-8444-4b8125711412",
        "cursor": {
          "ref": "c045cec6-6d66-4a68-a42b-57d41bbe4630",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "93edc41b-e1c1-4f64-9836-a83bdaf7b1f1"
        },
        "item": {
          "id": "98015502-d49b-4329-8444-4b8125711412",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "257c0285-862b-4d19-a3ea-d4d8e9b45742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e761b5-434f-4457-b922-5a88969501a8",
        "cursor": {
          "ref": "238812c4-aa6d-48ad-b3ee-2196dd740d0c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f59a4132-8f9a-4134-bb46-c55392a8e678"
        },
        "item": {
          "id": "e1e761b5-434f-4457-b922-5a88969501a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f2f474f8-c253-4415-8259-ce37ad852a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06180ac5-9b0f-41d3-9a83-333e6c10a6b3",
        "cursor": {
          "ref": "5905d97e-1ca0-40f0-9104-1434fd416e75",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f91ac76e-393c-4a50-91eb-506237256edc"
        },
        "item": {
          "id": "06180ac5-9b0f-41d3-9a83-333e6c10a6b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61892db9-a8c2-4174-a1b2-ee0c4e803c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6940f405-a353-438c-a262-0f7c9305d5ee",
        "cursor": {
          "ref": "df9bda0c-c69e-46dc-8cd3-20133481ed5a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a53a3d3b-2187-435d-b35d-1814a925af51"
        },
        "item": {
          "id": "6940f405-a353-438c-a262-0f7c9305d5ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3ed546e-5f40-4534-b2a4-f8a479e77a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1667409a-b0d4-40ce-a03e-a1826fd3bf8d",
        "cursor": {
          "ref": "ed3d9fad-998e-4e40-af7c-9fd5299716d2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1c3ce243-3a49-4c31-a9d8-f53755d03dcb"
        },
        "item": {
          "id": "1667409a-b0d4-40ce-a03e-a1826fd3bf8d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4107c66c-c335-4bf0-b617-5015f3ea9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21db29-26c4-489b-b030-8115f1adeb95",
        "cursor": {
          "ref": "1105c4b2-178f-41c9-993b-61440640d154",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d9e15214-ab7f-427a-acdc-c9ca1bdf7bdb"
        },
        "item": {
          "id": "2a21db29-26c4-489b-b030-8115f1adeb95",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3d009bb1-1e05-407b-979c-ae6ffaac12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9787fd97-0ab4-48f3-b693-c3f98ac2b5e4",
        "cursor": {
          "ref": "92c07385-5ce8-4d34-a921-24cb99e4b09b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ee707e3c-b499-4dde-b96a-9fadb16c8b49"
        },
        "item": {
          "id": "9787fd97-0ab4-48f3-b693-c3f98ac2b5e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1b0654fb-9b63-4c9a-9b14-70ffa33a41a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1ac5c8-fec3-4719-aaa4-a6ed83030335",
        "cursor": {
          "ref": "dd2ffdf3-021a-4c99-816a-98e96dc14070",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b58329f8-e58e-4fcf-a6ae-b01b0aada100"
        },
        "item": {
          "id": "be1ac5c8-fec3-4719-aaa4-a6ed83030335",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d92c3803-82ca-4ca6-8a1a-836f47c340b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393937cb-3568-4322-9448-ff2293d00174",
        "cursor": {
          "ref": "95292c45-6d36-44bc-891f-ac58b904551e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37a88091-1ed5-4cc5-8992-c7780d47a58d"
        },
        "item": {
          "id": "393937cb-3568-4322-9448-ff2293d00174",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b224cc20-648f-4fa6-a4cf-acbba17b7b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eedf8ba-6d8a-44ab-8312-1aab79520796",
        "cursor": {
          "ref": "65313f30-aae0-4e33-96cb-74c4867ab08a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a15470c6-1d01-4350-b875-bbbc0ad9a385"
        },
        "item": {
          "id": "0eedf8ba-6d8a-44ab-8312-1aab79520796",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d4820135-6d45-47f4-b611-c7fc9f752fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c83661f-5a68-48e3-a511-dd60b4e5ebf3",
        "cursor": {
          "ref": "5f9d3836-fb08-4679-b82e-afc97a0ab55e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a1c4c759-da71-4c4c-b60c-d654b25ef801"
        },
        "item": {
          "id": "8c83661f-5a68-48e3-a511-dd60b4e5ebf3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3693b6de-0aea-4662-a6f8-61da5b54084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb1309e-9962-4155-b7d3-5652c5582f2e",
        "cursor": {
          "ref": "b3d9c3e8-b2fb-4ba6-b531-548623e43f16",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "36f20a11-1ed7-4288-9a67-2bf7e02629d5"
        },
        "item": {
          "id": "afb1309e-9962-4155-b7d3-5652c5582f2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cac1eb06-e91c-4991-aa28-211ee2f72e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3a845-9e5f-4bf6-89fe-ed06edff339a",
        "cursor": {
          "ref": "f646474f-24b4-448d-b972-098f6685d280",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "65406042-f961-402f-acdb-1e9020d206f9"
        },
        "item": {
          "id": "c8c3a845-9e5f-4bf6-89fe-ed06edff339a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc54419f-066c-49f1-981a-d75dd8b160f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2d3ea0-c0d2-496a-b0a8-9888b5751b64",
        "cursor": {
          "ref": "b3b7d6f5-3b66-4468-9b17-9e1f3e5a323b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "17702185-8032-4964-a468-956518fbc810"
        },
        "item": {
          "id": "da2d3ea0-c0d2-496a-b0a8-9888b5751b64",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f87f408-8d15-4265-9ca5-df1cf841d208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc9979-5bdc-4f6b-bf69-4d00fcf1ec2b",
        "cursor": {
          "ref": "c87a834a-4d40-4c67-9a8f-7494c98e5ee9",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "df170b7b-8654-4a9d-92db-3d0754d58a75"
        },
        "item": {
          "id": "91cc9979-5bdc-4f6b-bf69-4d00fcf1ec2b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5382a684-d2d5-4e33-a7d6-1943299abfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae66f83-f320-4d9d-97d5-dab1a7df6066",
        "cursor": {
          "ref": "1ec93d70-e347-42d9-9655-7c5473912154",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "313ae454-796c-42b5-8b2a-51037e55b0f0"
        },
        "item": {
          "id": "dae66f83-f320-4d9d-97d5-dab1a7df6066",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bdc73a0c-f06a-40db-8d64-884f5d13bb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7008a2-b236-489d-a731-509011513969",
        "cursor": {
          "ref": "f38ff950-0c36-4408-a8e4-b9edf535aa21",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "87bd111d-a73c-4ff8-a0c0-684f3ed2f88b"
        },
        "item": {
          "id": "3b7008a2-b236-489d-a731-509011513969",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "32dbc74d-5844-428b-8c45-0eda812dc21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141dc6f9-1a87-4a46-a53d-6b1bdf63bfcb",
        "cursor": {
          "ref": "3b4ac7f5-01f4-4b77-9f78-e9667d9529c2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "64c84658-7039-4a8e-afda-a9761cba9064"
        },
        "item": {
          "id": "141dc6f9-1a87-4a46-a53d-6b1bdf63bfcb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8aae1e6-218f-427b-b19f-31f8e48a975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5658389a-a020-4d9d-9557-d0bcdc76ebc0",
        "cursor": {
          "ref": "9c7ac4c7-d519-4058-bc6a-7b3e7f63900f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c6164cf-78d1-4288-8503-303d14a2462e"
        },
        "item": {
          "id": "5658389a-a020-4d9d-9557-d0bcdc76ebc0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b53d873-5917-4d0d-81de-ea0fb8047499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2d0a70-ec81-4adf-aa3e-6a8eef5a0ae6",
        "cursor": {
          "ref": "e77e864f-738e-4228-8bc5-49b86945121d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f67f91fd-2622-43ad-a960-25cf3aba79c7"
        },
        "item": {
          "id": "fa2d0a70-ec81-4adf-aa3e-6a8eef5a0ae6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1280fff-b25b-4221-a111-3999eaf61db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eef84f-27c6-4ca6-a51f-b5c1632e1aa0",
        "cursor": {
          "ref": "9f499dfe-b50d-4b87-b606-bad529318310",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4596abcd-a2b0-416d-893e-ab528b78feab"
        },
        "item": {
          "id": "14eef84f-27c6-4ca6-a51f-b5c1632e1aa0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce749cc3-74a7-454f-b906-5dbfac31a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6464a2-1443-42d3-8b8e-32371a3a6d12",
        "cursor": {
          "ref": "f5c2c044-aad2-4965-91bf-8a42a6ed70ff",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f3190a50-2c70-452d-8818-a47df44d3a45"
        },
        "item": {
          "id": "dd6464a2-1443-42d3-8b8e-32371a3a6d12",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "84c97597-7204-4225-8f8f-4e9e030b812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9619a313-137d-45b0-8100-6a50432c6ce5",
        "cursor": {
          "ref": "2cdec066-6915-4376-81a8-cc9102ce36a9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6820152d-82dc-4724-9487-8ba0b6d524fa"
        },
        "item": {
          "id": "9619a313-137d-45b0-8100-6a50432c6ce5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "039e4c74-3f88-40e4-bc00-8ee114792610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4514fe-a69b-4117-9ee2-6244564be718",
        "cursor": {
          "ref": "a3679cc8-8d94-4db9-be48-a1bfe5eb8ae7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "579834be-e72b-4d61-b695-6f3ade22a85f"
        },
        "item": {
          "id": "cd4514fe-a69b-4117-9ee2-6244564be718",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "44c8d52a-06c1-4bf6-ba52-b539bc29deb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f9e32-1de7-48a7-a94f-fee4bb2cab7b",
        "cursor": {
          "ref": "21b1fc02-f994-48e3-b417-ab2d18f16768",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f4922cf-d61c-4fb3-bf60-096dbe6fa9c3"
        },
        "item": {
          "id": "331f9e32-1de7-48a7-a94f-fee4bb2cab7b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a62daf8a-1632-4a34-bdcf-2ac033505cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d330dd-7087-4a25-b54b-a1ace9beeca9",
        "cursor": {
          "ref": "4a88edbc-3054-4af9-b6a4-c4782e5730ed",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ede28f16-6ca8-47ed-8df3-1a8afd21e7b9"
        },
        "item": {
          "id": "39d330dd-7087-4a25-b54b-a1ace9beeca9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd805197-6eb6-4a79-89d1-d178b97695bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf2cc1-7801-4bca-9f0f-dda41faedce7",
        "cursor": {
          "ref": "9daf35a1-4547-4638-a095-d5baf31c57df",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f0efcdf4-e146-4fba-aaf2-544262615081"
        },
        "item": {
          "id": "cecf2cc1-7801-4bca-9f0f-dda41faedce7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d3e2505c-38f3-4d7f-aec4-b1112f9ec762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ff5931-2dc1-45b6-89d6-453373516dfc",
        "cursor": {
          "ref": "913043ef-48a4-407b-a520-59754d11c0e6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "983049b8-f540-4c33-ae8f-e0fdf623b7a2"
        },
        "item": {
          "id": "68ff5931-2dc1-45b6-89d6-453373516dfc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db608edb-cc5d-4611-ae0f-f3d5df87e3fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fee278-239d-4d44-9760-89915b869350",
        "cursor": {
          "ref": "b20a491e-eb0b-4484-b33b-fc33f66705cf",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8cb721c3-14ec-4c75-b343-895d682ab6d3"
        },
        "item": {
          "id": "e6fee278-239d-4d44-9760-89915b869350",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4e4e57d-65d0-45ae-af8c-b32ef2e85ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36e4250-c67b-44b7-9545-88886f2012ca",
        "cursor": {
          "ref": "512750e2-8290-4620-97a8-499ae4eca84d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f213b375-0711-4fa5-86e3-753343cf03cd"
        },
        "item": {
          "id": "a36e4250-c67b-44b7-9545-88886f2012ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f93437e6-4b7d-4dba-bcfd-2f72c9e268a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0eede5-6e49-452d-9f3e-30c23b3a67c6",
        "cursor": {
          "ref": "4f0d603c-08cf-468e-bec2-b14b7e4c497b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c31044ef-a4de-4fa6-acf1-1785f01513f3"
        },
        "item": {
          "id": "1f0eede5-6e49-452d-9f3e-30c23b3a67c6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f33643d-1598-4441-9464-3ba697084666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753586b5-e727-44a2-8bad-ef215a106561",
        "cursor": {
          "ref": "08120f98-d629-49fa-901f-6c3c2c155a4e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e86cb718-76e7-4342-962f-20300554b426"
        },
        "item": {
          "id": "753586b5-e727-44a2-8bad-ef215a106561",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6f9d5a5e-7787-4d95-ba0d-eb8fbc64ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6685638-9300-41bd-90e1-6714601d78f4",
        "cursor": {
          "ref": "85ff1b43-aef1-4023-99b1-39a1253c0f46",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aac1e9da-4a7b-457a-89e7-d6295f109aef"
        },
        "item": {
          "id": "e6685638-9300-41bd-90e1-6714601d78f4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aed4d187-0ca8-4dfe-979b-17abe9b42454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9038b46d-d1f6-4cc4-99a6-e2269321cbd9",
        "cursor": {
          "ref": "6fe414aa-0ff6-4620-a161-75c82ca36896",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "954adcfa-7872-43df-a34e-b049e2ab6ef0"
        },
        "item": {
          "id": "9038b46d-d1f6-4cc4-99a6-e2269321cbd9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6fa035d-e413-40b1-8f75-e778934f9b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5923ea-a4fb-44ad-a359-5f532ff985c4",
        "cursor": {
          "ref": "08c64cd0-192a-40e3-96e8-bca937115bc2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "386aedd4-ce91-4905-b4f6-1278b82e47d9"
        },
        "item": {
          "id": "aa5923ea-a4fb-44ad-a359-5f532ff985c4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "638273e5-2677-42ba-b6d2-93c284e4144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd247d6-3cbf-4acf-9cce-9a0b0ac6f940",
        "cursor": {
          "ref": "ea245058-61df-4a94-ad16-34cd67f812fe",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d3296d71-e0cb-47d5-8f64-5b09ea612bdc"
        },
        "item": {
          "id": "1fd247d6-3cbf-4acf-9cce-9a0b0ac6f940",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1f42985c-248f-49a5-98b0-a691c93cdcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbe6326-81db-4ba3-bb53-ccfbdb5b3dd3",
        "cursor": {
          "ref": "5839f016-4901-4159-a6a8-0e047aeab902",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c1704e95-1dac-464a-9ccd-87a030c29481"
        },
        "item": {
          "id": "1fbe6326-81db-4ba3-bb53-ccfbdb5b3dd3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7a7b44c5-4605-4271-8b9c-0146e3887821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45570e94-7933-424c-8a1f-ad8ea0659489",
        "cursor": {
          "ref": "d17d5840-fced-4c98-b7bc-ccb007ca6290",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "42618790-d32e-49c8-a4ce-1ee227b1eff1"
        },
        "item": {
          "id": "45570e94-7933-424c-8a1f-ad8ea0659489",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7a217907-efa8-4567-8e70-3a6584c64af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b9ff79-b45f-41a7-87c8-579d5f67cb37",
        "cursor": {
          "ref": "53cbf144-794c-4350-897c-fe3a6fe961ee",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3c813770-24a1-4b61-9334-fe88639a7f95"
        },
        "item": {
          "id": "b7b9ff79-b45f-41a7-87c8-579d5f67cb37",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c639197e-b216-4696-ad39-f3d0534c9b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacde3da-8a65-4def-85fd-cf019c505540",
        "cursor": {
          "ref": "7d9ade06-331d-4a1a-b180-25a9b2e8bb94",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "98cd8b1a-33fb-4730-856c-9e7e7d8f7465"
        },
        "item": {
          "id": "aacde3da-8a65-4def-85fd-cf019c505540",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eb242867-e2e7-43ee-807e-05a1b11fe997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b096cb9-bb00-4260-8147-4a732480cfdd",
        "cursor": {
          "ref": "3f9e18a0-7e4d-4626-9405-2bf7ba4b5154",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80fc2c88-88ad-4e73-a208-24a82c830f6d"
        },
        "item": {
          "id": "8b096cb9-bb00-4260-8147-4a732480cfdd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a48b969f-c875-4983-917c-283abb4d71d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7371a32-a67b-4bd8-b994-f10cbdb314c1",
        "cursor": {
          "ref": "adce29af-7f76-4ae2-8f1f-3d7a26e7b877",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c2ebd541-deb5-4a16-921f-441bb9e014e6"
        },
        "item": {
          "id": "f7371a32-a67b-4bd8-b994-f10cbdb314c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04198427-aeed-4048-9952-213b738074f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e84001-dd4d-4747-a928-ae954feb21af",
        "cursor": {
          "ref": "358193ec-7617-4374-9268-f0e4620b1e11",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "37eb4aac-a5f3-4118-814b-baeda76af992"
        },
        "item": {
          "id": "c4e84001-dd4d-4747-a928-ae954feb21af",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "422a358a-15c0-4622-b1b9-13dbb3f22a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf8ff1b-0878-4694-9fa5-e1525f81b7c2",
        "cursor": {
          "ref": "5e71d25b-9a33-4dba-8368-03464ec84d6a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "366abdd4-10e1-4b6d-a6e2-81a3948050ba"
        },
        "item": {
          "id": "ddf8ff1b-0878-4694-9fa5-e1525f81b7c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "050b6f95-33fc-4517-94fc-d33b6d50076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099871ee-4d13-4d33-8cd2-4f47178889f2",
        "cursor": {
          "ref": "78c2dc9c-ba3e-459c-bc5d-253a4c9c3e8e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6de52696-4d6b-4ce5-9041-1f3397242ccd"
        },
        "item": {
          "id": "099871ee-4d13-4d33-8cd2-4f47178889f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "92275a47-8d59-4e45-889c-33e901dfffd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e5f7ce-8c2b-46e5-b5da-1fc3a73aaabd",
        "cursor": {
          "ref": "fa1f79f2-4799-4270-82c2-ce7d91b46da1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4dae88c4-8481-4d55-aca5-fadd2e424c69"
        },
        "item": {
          "id": "e9e5f7ce-8c2b-46e5-b5da-1fc3a73aaabd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c0250344-6721-4516-af9b-ac9c61411667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fb5fe0-1849-41d2-98ba-6c725473aaad",
        "cursor": {
          "ref": "7c6fb73a-7f08-45a9-8e48-12561e3e5058",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f066bd34-a8aa-4599-a220-1e8c04e16fbd"
        },
        "item": {
          "id": "73fb5fe0-1849-41d2-98ba-6c725473aaad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d25224e1-6ac0-4e60-8855-3290956962c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c8a13a-f262-47ba-93fa-727d9b33ea84",
        "cursor": {
          "ref": "fb84b29f-d615-491b-85de-df28b4505971",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e2ae821-9d41-4b1a-9af5-2a021181c2f6"
        },
        "item": {
          "id": "72c8a13a-f262-47ba-93fa-727d9b33ea84",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ca8adcd9-c386-4240-b2da-552866c3d9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f095c9a-55f0-4782-b892-63e779a32515",
        "cursor": {
          "ref": "40b4032e-c4d0-47ec-bf89-3d1e69af91c6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f93d1f2b-1bc2-489a-bb3a-b0fc0ed989dc"
        },
        "item": {
          "id": "9f095c9a-55f0-4782-b892-63e779a32515",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9ca95fb-fd6d-4a0e-ba10-acb7b3f9aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965f7f89-0696-47f3-8885-90233fb71eea",
        "cursor": {
          "ref": "6b7aa20d-6d53-4d54-b6c1-d26462905b42",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e75e6f4a-285e-4936-b62e-732c3da29c83"
        },
        "item": {
          "id": "965f7f89-0696-47f3-8885-90233fb71eea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "57e7e4b8-466d-42e8-a35a-b490fbbeb095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb94a115-9684-4603-9ce0-e3cb98614817",
        "cursor": {
          "ref": "e2c3bfc7-8a25-4c68-9cee-5e591bd71f42",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f4dc86c-176d-46b8-bafb-40aa70edeeac"
        },
        "item": {
          "id": "eb94a115-9684-4603-9ce0-e3cb98614817",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "21562cdc-6560-4de4-b905-9fa8f5a6a312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929672ba-3d46-4749-a23d-e935cd0d49d3",
        "cursor": {
          "ref": "f46e0164-14ac-47e8-b6b3-9e5701335b6d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "52b765f4-77b1-4bd3-8e26-d5f9ce73d40d"
        },
        "item": {
          "id": "929672ba-3d46-4749-a23d-e935cd0d49d3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94fd7187-0b8a-4138-a22a-326578654e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c781d21-0ecd-44b1-9b0f-2ba2cd9669ca",
        "cursor": {
          "ref": "ca8ce754-b3ae-4127-a9c4-e01039599faa",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "766c8edc-b7ea-4df1-b5df-7e0d5ed1e6bf"
        },
        "item": {
          "id": "3c781d21-0ecd-44b1-9b0f-2ba2cd9669ca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01e5df5a-3c1b-427b-bb30-7f7e2f8755a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796fe4e7-5608-4900-a395-cfc865f2355a",
        "cursor": {
          "ref": "817477ef-313a-4753-a462-e7abf0b2c981",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6dd03700-a949-435e-a871-1ec764736162"
        },
        "item": {
          "id": "796fe4e7-5608-4900-a395-cfc865f2355a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c9b1b3b-b66b-4e7b-a80f-10f2ff1b7a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a8f112-360b-4f00-9e42-bc20844301c7",
        "cursor": {
          "ref": "31df6f74-2956-4449-8ee6-d658a49d81e9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e54186a3-b561-4cc5-95f4-a98e1875a44d"
        },
        "item": {
          "id": "b7a8f112-360b-4f00-9e42-bc20844301c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a82473f6-9864-498d-8255-2e6bda9bec0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd630b-3d7d-4195-a54d-58922fc791d3",
        "cursor": {
          "ref": "15d70b52-199b-4dfe-a95f-115689c6040f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b31e2264-4b6b-47a9-815e-b444d5a66174"
        },
        "item": {
          "id": "08cd630b-3d7d-4195-a54d-58922fc791d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "84e6a293-1456-47ae-896a-0b116c4e36aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44b84cf-01a2-4c1a-9ed3-8bd8971b514f",
        "cursor": {
          "ref": "d1f14597-0287-4c82-8fc1-37497750a8bb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "61f43cec-0d5b-4597-a847-c2a2a818f9f6"
        },
        "item": {
          "id": "b44b84cf-01a2-4c1a-9ed3-8bd8971b514f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b7b7611-d207-401c-9e49-7f3990c1e871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd2272a-71ac-4a76-ba10-df9053d39c20",
        "cursor": {
          "ref": "6536d9fe-6fac-430f-aaf7-e68e438840a1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "266edfbe-75c7-4d89-a007-ea9727a9b049"
        },
        "item": {
          "id": "9dd2272a-71ac-4a76-ba10-df9053d39c20",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bef793b9-8abe-4923-9e6c-2eb2cddb0baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b5e66b-02d5-4e67-b1bd-9406dc7d3ddf",
        "cursor": {
          "ref": "51aa561b-e23e-46dd-b42b-e2ca3b97b88c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8107d125-ad68-40d8-ac92-a474958db38e"
        },
        "item": {
          "id": "a4b5e66b-02d5-4e67-b1bd-9406dc7d3ddf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aeaa413d-ffa5-435c-b714-4686c077b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab41d53e-ee77-4b18-8aa6-f0a9cdbe2def",
        "cursor": {
          "ref": "c3ec3e50-d7fa-462b-bc4e-4ede938a5b3c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "12eb0c23-dc0b-432c-989b-f02319c04c64"
        },
        "item": {
          "id": "ab41d53e-ee77-4b18-8aa6-f0a9cdbe2def",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "817f1a56-e19a-42cd-8ede-762292ff6611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b01745-3fbe-4c19-a8dd-24bf88b9d62c",
        "cursor": {
          "ref": "9fb178ab-385b-426a-8346-98255a3928d7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2432425c-b653-4a28-9bc9-f785395e02e0"
        },
        "item": {
          "id": "79b01745-3fbe-4c19-a8dd-24bf88b9d62c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "78a912c7-80ca-40dc-bd0a-2557e3e3cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311c79f5-5fdf-4c54-9c57-d8a8140e2310",
        "cursor": {
          "ref": "e8fe1fc8-d0fb-477d-9610-74de8118029f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f65a0890-d116-4238-b6ab-5b14372be164"
        },
        "item": {
          "id": "311c79f5-5fdf-4c54-9c57-d8a8140e2310",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04d60e62-01aa-4b73-a412-606cb89bff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e3a049-568d-4157-95ae-f081c74efa47",
        "cursor": {
          "ref": "1f851bb5-cf04-45d1-8b5f-d7e7d1747083",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84078b2b-b9b6-44a6-926b-a841224e3286"
        },
        "item": {
          "id": "b4e3a049-568d-4157-95ae-f081c74efa47",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4db59380-5244-4316-bf6c-ec682265840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b67603-2230-4418-be7e-df5fcf4f012a",
        "cursor": {
          "ref": "21dc34ea-346e-4783-93fc-0d06358bf9b3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5d78c4ec-3a60-48ee-a68f-f9c51edf8b2c"
        },
        "item": {
          "id": "65b67603-2230-4418-be7e-df5fcf4f012a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "73d89c5d-f6d5-4a35-8139-f5d61a7a7038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b004068-2ed8-4c80-b733-aae43dc0b339",
        "cursor": {
          "ref": "84d1583a-6f85-497b-b9a3-aa70731c0f80",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f41ea0f5-a5d6-42d7-a8ab-e7ef5b335c45"
        },
        "item": {
          "id": "8b004068-2ed8-4c80-b733-aae43dc0b339",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "33603d9b-60e8-43ca-a9d7-9350b9719dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eaef42-f0e8-44fb-83cc-4b1753227f36",
        "cursor": {
          "ref": "6fe44e09-b157-4901-abb7-e721a9e03aed",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ee846a49-c5bf-4dc7-90cb-a2f6dce126a1"
        },
        "item": {
          "id": "49eaef42-f0e8-44fb-83cc-4b1753227f36",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "78fcd874-903c-4d16-9b01-6426625f8276",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546f5945-1de9-4549-8580-bb370c0c316e",
        "cursor": {
          "ref": "eb4417f3-c3e8-454c-a984-44f30d1cb79a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cdcf0dd5-06f5-45d2-b906-dde0a07b2b21"
        },
        "item": {
          "id": "546f5945-1de9-4549-8580-bb370c0c316e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ee2f1374-352f-41e8-b4bc-2c9dede881d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e650f4-a957-4598-bb45-d1dcb53ebdad",
        "cursor": {
          "ref": "289ed87b-2021-46a4-a22e-10968b66850b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2cb82a32-5cca-45a0-85b8-43b714d58895"
        },
        "item": {
          "id": "a3e650f4-a957-4598-bb45-d1dcb53ebdad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a334c630-ae4b-49ef-a2fb-376b09645ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c16c8c-2d0d-47fc-8928-9156180c12f2",
        "cursor": {
          "ref": "09aadd41-70e7-4dcf-8dfd-8ef3ff93636c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8bbeb071-fc17-4f43-b37f-b8f30c7d393c"
        },
        "item": {
          "id": "28c16c8c-2d0d-47fc-8928-9156180c12f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ced476b-2ec8-4479-91d7-ff59153d6382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bb8ecd-e894-4a3d-8ac1-0b4734d9b64f",
        "cursor": {
          "ref": "56680c0d-8939-429c-9779-114100f125ec",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "34c8065c-d917-41dd-accc-a5a6d29a8678"
        },
        "item": {
          "id": "87bb8ecd-e894-4a3d-8ac1-0b4734d9b64f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81f042b5-841a-4d4c-a99d-b926c25fdfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08d3ea0-6a39-4f16-be7e-c717e8f83a7f",
        "cursor": {
          "ref": "79d2c5d8-42b7-4429-8d1a-88f4c1bf43ac",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "91ae1460-0ffe-42f0-8b67-bdbe9ebea8c9"
        },
        "item": {
          "id": "a08d3ea0-6a39-4f16-be7e-c717e8f83a7f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e95d0af-55f5-40e5-a0ac-bdc539bad4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb705df3-bd76-44f0-8e80-1bd9ae6807c0",
        "cursor": {
          "ref": "b2cb5353-e4f4-48ed-a56d-8880f40aea02",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "13eb4ab8-6f09-413d-ad09-0e7893f67634"
        },
        "item": {
          "id": "cb705df3-bd76-44f0-8e80-1bd9ae6807c0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc8ade51-0a37-47a8-9097-014c7c3d6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f256e493-4347-461c-97f8-a39b64e584cc",
        "cursor": {
          "ref": "e36acb39-d534-4598-b7bd-139bf2763f8e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b7c9f91a-83a1-49fe-8fd8-1145befc6804"
        },
        "item": {
          "id": "f256e493-4347-461c-97f8-a39b64e584cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "64231ea7-0f1c-4779-ad26-ed2ad922365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd829e4-978b-4db8-b6aa-f63dabfe1a58",
        "cursor": {
          "ref": "a7b14c34-1b6f-4bf7-9b24-6ebb23a51e44",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2c405412-73d5-4dd4-8dd9-b923ff6a31aa"
        },
        "item": {
          "id": "acd829e4-978b-4db8-b6aa-f63dabfe1a58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3c6a6d6a-8092-444e-88a5-2b0b617c8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756b366b-a9f2-412b-838f-8c73ffcee4a6",
        "cursor": {
          "ref": "342bb674-9bfa-4219-a044-88d1f795483e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd18512c-e5aa-460a-9454-3181026f2328"
        },
        "item": {
          "id": "756b366b-a9f2-412b-838f-8c73ffcee4a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "076653f7-dd0b-4483-a18f-299b6e24259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042b1730-55b4-4db3-905d-8ae759dbde31",
        "cursor": {
          "ref": "2a08d602-6eb9-4a17-bc7c-88cb1c4375ed",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "921adee9-cf59-4ac0-9442-5862a6232d2a"
        },
        "item": {
          "id": "042b1730-55b4-4db3-905d-8ae759dbde31",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9f24abb1-bb72-47b5-bc3b-ff53b2c7f9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64eeb73-7efa-4742-9795-76153624c0d1",
        "cursor": {
          "ref": "672e65a1-9400-4809-809c-4f0a8db7e3ca",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cb488b0b-70a2-4f1b-bb0f-5932858f7335"
        },
        "item": {
          "id": "f64eeb73-7efa-4742-9795-76153624c0d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "15ccfd3c-29ae-4041-91e7-b41468a239ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd1852a-6c67-4e4b-b60f-6511115169d7",
        "cursor": {
          "ref": "146bd654-3b62-4b56-b0a3-8dd08c4d5538",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9c891938-2234-46ad-ad04-1868043e2fdb"
        },
        "item": {
          "id": "2cd1852a-6c67-4e4b-b60f-6511115169d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e1a77c62-b0f7-41cd-8327-19b88e04a9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082fcc28-914f-42fd-91b8-79b478e8609d",
        "cursor": {
          "ref": "8e33db3c-73b3-4182-bfca-57a7358d56c2",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24dc51f4-c0f6-4b46-bfd7-7de69dc0fe34"
        },
        "item": {
          "id": "082fcc28-914f-42fd-91b8-79b478e8609d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e669e901-0601-4411-ba28-138afd02b659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8479c3ab-912b-47b6-b203-4f9d3eda5ff4",
        "cursor": {
          "ref": "cd66d1a6-efc5-4ec0-8b5b-c08207d39d59",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4bf5ed5-d6c3-4826-a345-b4954a955595"
        },
        "item": {
          "id": "8479c3ab-912b-47b6-b203-4f9d3eda5ff4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f6ff1713-0873-448f-8325-f2f4c02f57e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be4b432-e015-4e26-8a71-192abdeed08c",
        "cursor": {
          "ref": "8a2fdaf3-9d37-426b-bc92-49ff9cc6ee21",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "51aa50a0-c096-4cd9-b69f-ca9478865fc3"
        },
        "item": {
          "id": "6be4b432-e015-4e26-8a71-192abdeed08c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2be07721-deee-43a9-a4bc-246b9231cce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671305d0-763d-4ce0-9a6d-1b49a13fbc80",
        "cursor": {
          "ref": "80f8f99b-4370-4b45-a3a8-028f9d9a6eae",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f83b0014-9b9a-48ad-bbac-287aff324977"
        },
        "item": {
          "id": "671305d0-763d-4ce0-9a6d-1b49a13fbc80",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "02ce4bdd-7972-42f1-88aa-b79b10edfe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ff55ef-90e5-43b8-bd82-82cc7878155c",
        "cursor": {
          "ref": "a2ea0408-321f-43c7-b2d9-3149ea60ea27",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ed30e34-6953-4ae9-bebf-c2c8ced0140c"
        },
        "item": {
          "id": "b3ff55ef-90e5-43b8-bd82-82cc7878155c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f89a9ed-0910-4472-9d63-078daf58e309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b083b5-837f-4aee-a82d-476687d45a0f",
        "cursor": {
          "ref": "cef6fc58-48be-4300-8843-848ca8c9e3e7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ce134bcb-59f7-49d4-acf3-56d343e8ed1d"
        },
        "item": {
          "id": "83b083b5-837f-4aee-a82d-476687d45a0f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "671ed7b4-7c2c-485f-b661-04fa1b720ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33844a0-0dcc-421d-afa0-2d36ab1052a2",
        "cursor": {
          "ref": "9dbd90e8-722c-47e9-8b92-b87a69447fa0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "39ab36bc-8229-49b2-8ca3-656e96650356"
        },
        "item": {
          "id": "c33844a0-0dcc-421d-afa0-2d36ab1052a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d76b2c3-4dc4-4c3e-992e-9f2c4f8433f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40115d8-8dbd-4518-830f-48d331e2f7a1",
        "cursor": {
          "ref": "038b0490-c3d3-4bd7-bd3f-0819ab69740c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dfd4bf8a-4a54-413e-975b-004e786dcb9f"
        },
        "item": {
          "id": "f40115d8-8dbd-4518-830f-48d331e2f7a1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88867bfe-51ab-49f8-99e9-f86ee6ccae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620232cb-a2a5-42f9-ba22-ce2bbf1515c5",
        "cursor": {
          "ref": "f0b43e8c-ee6b-49b1-89ae-fe47502d865e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f85957f5-c750-487b-bdf9-25a529ae8be7"
        },
        "item": {
          "id": "620232cb-a2a5-42f9-ba22-ce2bbf1515c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a21de5da-f2b0-4a32-9d4b-b32a02dbf92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad5052-38e5-4900-9c73-109173969183",
        "cursor": {
          "ref": "411042b9-f82e-48b7-8785-5659f9a7f9eb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "43b4fa81-14f6-4e7f-a3f5-b920d219cbcb"
        },
        "item": {
          "id": "99ad5052-38e5-4900-9c73-109173969183",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "812e80da-a3b0-4782-aa3a-70d05df7687a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217c7e0d-4ac0-448e-9fc2-d005ed9a256a",
        "cursor": {
          "ref": "b7a950df-f751-481b-873d-d59a8a3d0195",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bca23d60-5b25-4927-b942-625c12de2737"
        },
        "item": {
          "id": "217c7e0d-4ac0-448e-9fc2-d005ed9a256a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "daefa1f8-5995-4e54-bbea-1d2e4d014880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1c470f-2dd5-4828-9614-efb8237c758b",
        "cursor": {
          "ref": "fdc0979c-6754-4597-821f-62251d2ce022",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6e68c36b-1d02-4968-afdd-88fcb27b8916"
        },
        "item": {
          "id": "9a1c470f-2dd5-4828-9614-efb8237c758b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8040101b-15a1-4c73-a40b-0c823a772928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a791b6e7-5748-4f0f-a1b8-f1a3bed9f72d",
        "cursor": {
          "ref": "a70299a3-f0a3-4d8c-94a2-fad19289b65a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f95785ba-390e-4dd6-9c63-6849b8862f29"
        },
        "item": {
          "id": "a791b6e7-5748-4f0f-a1b8-f1a3bed9f72d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6308c113-0951-495c-b054-c6ed1d8092cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813868c0-5e79-4251-9fa8-21b0663b2fe4",
        "cursor": {
          "ref": "de275905-51e0-4ad0-9852-fce70cfd910f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18aa4a3b-4ca6-4b49-b0b4-28c060d24ac3"
        },
        "item": {
          "id": "813868c0-5e79-4251-9fa8-21b0663b2fe4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49156de6-5f19-4b2f-a655-1a8c4f87f8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b27cf3-ba87-473c-a6d9-b139f46a4b8b",
        "cursor": {
          "ref": "648cfa7e-fba1-4bf9-9411-18d2a07eca37",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8d5243ed-5c75-4e06-a2d9-8c1ed85c1d90"
        },
        "item": {
          "id": "43b27cf3-ba87-473c-a6d9-b139f46a4b8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "530f1895-b12a-464c-9216-2c5eaffe49d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e012b09a-c2c5-4eac-96db-35e121dbe661",
        "cursor": {
          "ref": "b790f37a-fa1f-4d6f-9e66-965a53630222",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e89183b7-0af1-458f-8616-c44b2dd63aa6"
        },
        "item": {
          "id": "e012b09a-c2c5-4eac-96db-35e121dbe661",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "16cef8ef-f953-4233-a1b0-2e687883aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4da039-b42e-4150-86e6-9cb7818f8ed8",
        "cursor": {
          "ref": "f3928de4-7d0a-4711-b3bf-cf2aba15a450",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "191adb10-3e2d-45d1-813d-1b587392a4fb"
        },
        "item": {
          "id": "3d4da039-b42e-4150-86e6-9cb7818f8ed8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ac686f4-f557-4a18-90f7-174a94c51c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0455ec-95a2-484d-85f3-cb4748b8faf4",
        "cursor": {
          "ref": "ff02fdbf-4be8-47e8-b5e9-5936fe539484",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8a627785-8b13-4f40-83f8-eb048d280136"
        },
        "item": {
          "id": "0f0455ec-95a2-484d-85f3-cb4748b8faf4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e80c5260-2baa-4586-a256-6311862f9d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d6493f-5a56-4d7c-9b25-97b0c37c2e07",
        "cursor": {
          "ref": "76a36438-ec55-483d-aded-5377fe990f13",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a80d3212-88e9-4001-84ec-c1aa79bb775f"
        },
        "item": {
          "id": "74d6493f-5a56-4d7c-9b25-97b0c37c2e07",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7ae35cdc-ffb2-44e0-8a91-520301c809c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eb3687-a22d-4ec6-a6f5-6127bec14808",
        "cursor": {
          "ref": "4fc0e7e5-b04f-4d87-94bf-10c58df8792f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5e742b4-74b4-42c7-a5b7-611ca07da9db"
        },
        "item": {
          "id": "25eb3687-a22d-4ec6-a6f5-6127bec14808",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c3dd7c67-5b9a-4771-a9cd-c07b84b91407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c09550a-e531-415b-b1e5-755c0023cfd8",
        "cursor": {
          "ref": "18fe9bf5-b44b-48a2-876e-acd033bc000a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c2a34161-0d46-4ee4-9056-92a2e15f12cd"
        },
        "item": {
          "id": "2c09550a-e531-415b-b1e5-755c0023cfd8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "99788650-9a8d-4a06-ad51-5348da6d037a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4a163-5c2f-4aed-a82f-7252a3dc2421",
        "cursor": {
          "ref": "9c9f9cc4-cb7b-4b32-9783-c2ff383b96db",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eab94996-c6df-46a4-8766-656924236fa1"
        },
        "item": {
          "id": "65f4a163-5c2f-4aed-a82f-7252a3dc2421",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "13dd299e-d348-4ddd-801b-71c0bda637c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32079907-e6fd-47e0-99b8-2c84b7e9023f",
        "cursor": {
          "ref": "cf428af9-0b86-4137-9993-4329897e20ac",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "07af645c-24ec-40b0-93a0-a6b89b416155"
        },
        "item": {
          "id": "32079907-e6fd-47e0-99b8-2c84b7e9023f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "91d9d9a7-e573-4d17-a32f-d988010e28c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b48b0d-f95b-4f50-9528-eac4096d46b3",
        "cursor": {
          "ref": "0fe1d4b6-b9d1-456a-9522-d535e1918c77",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0688c1cf-9920-4585-b799-b7b4bc8a4192"
        },
        "item": {
          "id": "a2b48b0d-f95b-4f50-9528-eac4096d46b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "584da236-5647-4560-9b79-48a81e8046c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8d898a-dd1f-4795-bd3f-c0a248bd5dac",
        "cursor": {
          "ref": "c8eef385-656e-4277-a736-b6f63d0fc6a1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a7d0c6d-e590-426c-9a80-00a4d8b58a72"
        },
        "item": {
          "id": "9e8d898a-dd1f-4795-bd3f-c0a248bd5dac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ee125188-dd86-45a9-a730-80c6105cf2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddff0fc1-3522-471e-877f-3b7ed82b40a1",
        "cursor": {
          "ref": "cb0a2d41-52c7-4a81-8911-43789313b5e1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c7bfd432-f9d3-4cf4-a5f6-8aacf4194394"
        },
        "item": {
          "id": "ddff0fc1-3522-471e-877f-3b7ed82b40a1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a9c4c819-6ca7-4171-8e8a-40c230df64bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c9521-9df6-4b92-87a8-0715e8b5fbb5",
        "cursor": {
          "ref": "e6709d09-4c4a-4d77-b583-6773f95ac410",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "32f34c1e-56f6-4424-89c7-498e13027e6c"
        },
        "item": {
          "id": "845c9521-9df6-4b92-87a8-0715e8b5fbb5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "77f6b5a9-3930-4e29-acae-edb8c9dba409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491692bd-ca5f-4469-86bd-5b4fb444bb0c",
        "cursor": {
          "ref": "afb2b32c-6156-4d3c-8bb6-f824a9581772",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "84b3893b-2cce-445c-9fa6-0a7a1727f32e"
        },
        "item": {
          "id": "491692bd-ca5f-4469-86bd-5b4fb444bb0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "320bcf1f-58fb-44c0-8854-1508e6a8ff6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16e160-22b6-4f98-9593-14c4d3cd097b",
        "cursor": {
          "ref": "1f942763-5944-4642-95be-fe374d82b142",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f3aaa3f5-02df-4a3e-9173-553d7f7fe539"
        },
        "item": {
          "id": "fc16e160-22b6-4f98-9593-14c4d3cd097b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f0d7f53-2d41-4166-83ca-96bff0ae3b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ab05b-5ffc-4121-b29a-73df9e4c0830",
        "cursor": {
          "ref": "aded2052-3aa8-4ba2-a7dc-56356adf30ed",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ca4869c1-3750-4361-bad1-699bb06aab60"
        },
        "item": {
          "id": "436ab05b-5ffc-4121-b29a-73df9e4c0830",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dcf36acf-4026-4045-ad75-027cf8d81d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2997ff-dcae-4f49-bd62-991f2cad57cc",
        "cursor": {
          "ref": "04aadeab-30e6-49b4-8496-538e0e76c456",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e474dea-85b4-4517-adad-55a3e31bd21c"
        },
        "item": {
          "id": "ff2997ff-dcae-4f49-bd62-991f2cad57cc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "11fad0cd-ff2e-4564-9515-0d4d0b4b6e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77043aea-c4ec-459a-b2a3-22379e7f2394",
        "cursor": {
          "ref": "2654c778-29be-4735-a489-42f6a5434ba4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2728f170-4add-4232-869c-5ccd6d5eb1af"
        },
        "item": {
          "id": "77043aea-c4ec-459a-b2a3-22379e7f2394",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82a37b7a-4604-412f-9164-d7af1e2e93ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63438267-f0e5-49f2-9a00-b8099a74eae8",
        "cursor": {
          "ref": "d5f97d90-2660-4442-be15-cb877ba7765b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "065e9f82-d407-410a-8f1e-7d8ade1e5459"
        },
        "item": {
          "id": "63438267-f0e5-49f2-9a00-b8099a74eae8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4b8ed7f2-e111-4391-ab4e-ec82f9f832ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900e659f-ff4d-4ede-89db-370f6a7c142d",
        "cursor": {
          "ref": "40ebbf2e-a179-4d65-8003-7eb748fb1a65",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "37326a13-c623-4fd7-994e-a2fd10e04fec"
        },
        "item": {
          "id": "900e659f-ff4d-4ede-89db-370f6a7c142d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8460e8a9-e5ad-4698-8bf8-b6e025efe3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66962607-258c-4504-85f7-1caae2128a7f",
        "cursor": {
          "ref": "854a1184-29ea-4fcb-8dc7-3a19a926526d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9ee6323a-575b-45c4-ac9c-305d589d182a"
        },
        "item": {
          "id": "66962607-258c-4504-85f7-1caae2128a7f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "df551eec-3113-4862-94a2-e0f166d4d6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9bd3bb-4eca-436e-a2d9-62e22ddc4bb4",
        "cursor": {
          "ref": "dc25ac81-c363-4f67-847d-8e3e3c9c7eb0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "115797ae-30da-4c8e-9cb6-c67cdf4b4c01"
        },
        "item": {
          "id": "2a9bd3bb-4eca-436e-a2d9-62e22ddc4bb4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "95c47263-4a55-4c5f-baaa-227387411318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ce9e6-231b-4dab-ad58-4654b42fdfb3",
        "cursor": {
          "ref": "4d8a24ba-8df3-4e50-89bd-7a078c0dc8f2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f1c6c7d8-6c0e-465e-b196-4ff25e2b4c9e"
        },
        "item": {
          "id": "ba8ce9e6-231b-4dab-ad58-4654b42fdfb3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "32bcdd45-02ab-424e-9d6c-df7e9163686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1201f980-b506-4e53-b15c-23b85c030f7d",
        "cursor": {
          "ref": "f74cdff9-a808-450d-bb5b-70c01501cc88",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16763386-0189-4ff1-9c5e-55727a9a3f10"
        },
        "item": {
          "id": "1201f980-b506-4e53-b15c-23b85c030f7d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "20e8825a-278b-4fd1-a579-63f046d5d09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38818a2-9811-4c5d-8741-c4d5c2744108",
        "cursor": {
          "ref": "0e07746c-c11a-47cc-9721-c55da2558f7d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "95899191-40f0-42dd-a88b-81f8bf9972a1"
        },
        "item": {
          "id": "c38818a2-9811-4c5d-8741-c4d5c2744108",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "764cd885-ee7b-412f-82da-665b59212354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c54e67-3840-46a7-bd50-b58e1cdb2a44",
        "cursor": {
          "ref": "14eac59f-d825-4886-a521-e8564901b802",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9703331c-748a-4d2c-a267-1e3254ad7575"
        },
        "item": {
          "id": "c2c54e67-3840-46a7-bd50-b58e1cdb2a44",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "454cd434-4a9b-40b2-b6de-300df1ce75ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201e5406-67ec-47f3-ac4d-22257dad4ab8",
        "cursor": {
          "ref": "0867a53b-6449-43d9-b4ff-1cf186a72657",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ed61b659-2fff-46ac-833f-849f47c5df45"
        },
        "item": {
          "id": "201e5406-67ec-47f3-ac4d-22257dad4ab8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7f556f5c-f402-4ee5-96f8-e4daa2a9d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24666e4-1de5-46ed-9cb4-ab2cae197fe6",
        "cursor": {
          "ref": "668952fb-9e12-4e1a-8ab7-5cd0d4b81b0a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6d6dbc7c-7ad0-4958-870b-6bf17be1028d"
        },
        "item": {
          "id": "e24666e4-1de5-46ed-9cb4-ab2cae197fe6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "475cde28-e5cb-4d54-bc2a-b7d207f28354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5522f351-c797-441e-8246-74e4b5c60685",
        "cursor": {
          "ref": "283d7a5c-85bd-45d9-93ce-e82687f55d83",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cafe64b3-1800-4689-9036-358cbba5f310"
        },
        "item": {
          "id": "5522f351-c797-441e-8246-74e4b5c60685",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a0fe8731-aec9-479d-a54c-a45ce03ea377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf78f3c0-fd20-44b4-b41f-4ec511926b46",
        "cursor": {
          "ref": "e725b955-2e05-4187-b62d-a40f09eef200",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "14567bae-bde2-491e-91a4-3fa80d824102"
        },
        "item": {
          "id": "bf78f3c0-fd20-44b4-b41f-4ec511926b46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7e5412a6-6130-4840-a4b0-9e5660f5636b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6270fa03-284d-4dfc-9abb-3aba91463c18",
        "cursor": {
          "ref": "994d13ca-553c-4202-8b49-a9601b2ba422",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ebedf372-0909-4693-b407-9c59fe14685c"
        },
        "item": {
          "id": "6270fa03-284d-4dfc-9abb-3aba91463c18",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "00de7a4a-a689-4402-b69c-8be1e20d4238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd7b46-bf9a-4af2-acc2-ff602f47164a",
        "cursor": {
          "ref": "17e8a1ec-f752-4ba0-ae18-d4b26fd49e04",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e90a3c4b-ea0a-49c2-a3d9-f44de6706a2b"
        },
        "item": {
          "id": "bedd7b46-bf9a-4af2-acc2-ff602f47164a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "25bdf481-2f85-4ed7-8fdc-f0e69de9ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e5e1c7-c369-43ce-a97b-3bad7360dc06",
        "cursor": {
          "ref": "bc61c5a8-f87a-4265-bc30-4579b7d8d67f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "778ab167-0085-4f25-975a-bf27d3a89508"
        },
        "item": {
          "id": "b5e5e1c7-c369-43ce-a97b-3bad7360dc06",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "188d5986-a468-47b7-ab72-a156c385751b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8335c85-8b71-49d8-b1f1-86f54af52aef",
        "cursor": {
          "ref": "3da841d2-e952-4891-8631-996d46a83838",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0d29621-7862-4fcf-a872-3b2e673ae491"
        },
        "item": {
          "id": "d8335c85-8b71-49d8-b1f1-86f54af52aef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f5a41f4-0081-4111-9835-21d1f3860e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2fbea0-d1c5-4b24-8f7a-c312636e1ecc",
        "cursor": {
          "ref": "90cfeb43-9e24-4842-b7f7-6ad12ff08b4d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c83c85f2-b5fc-4eb7-bcf0-aca05f236d14"
        },
        "item": {
          "id": "0f2fbea0-d1c5-4b24-8f7a-c312636e1ecc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "819202d8-fa5b-4a2a-8c5e-1b147206843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090eeca9-b0e1-447c-8705-f6a4b9753890",
        "cursor": {
          "ref": "1a952b2d-36ac-43c5-9565-9a32f66d84af",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "47ab6364-6114-43a5-9eed-9769e9bb241d"
        },
        "item": {
          "id": "090eeca9-b0e1-447c-8705-f6a4b9753890",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c7cf0c8d-2589-48c4-ae71-9de3df92dcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade536d8-571e-4a8b-af65-0fa2e54fdf23",
        "cursor": {
          "ref": "5c63438f-41d1-4c52-b525-cd3e2c155f00",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6588fb28-c822-425d-8895-17f9f488d515"
        },
        "item": {
          "id": "ade536d8-571e-4a8b-af65-0fa2e54fdf23",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "54e4f771-558e-483a-9e4f-54e27f45143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afaa446-b438-4a15-81c7-9e420058ae5b",
        "cursor": {
          "ref": "4b5a681e-58e3-4b75-b1eb-838f79fb38fe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bceccd4c-2c7d-4e27-a2f2-a6e35d68f730"
        },
        "item": {
          "id": "1afaa446-b438-4a15-81c7-9e420058ae5b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "172e8fa2-161b-46a4-8ffa-f7c164b27651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfea8ae5-d2b1-4def-9080-ec581c4186db",
        "cursor": {
          "ref": "0e767585-a804-4986-bb24-6e7ca62aaf2d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70f10a26-7785-4e79-bce0-8323ccee7d9f"
        },
        "item": {
          "id": "cfea8ae5-d2b1-4def-9080-ec581c4186db",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7b968b6-d0bf-44ad-a852-c01d7dd5481e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159fca84-04fd-4b24-ae99-3b83b9322560",
        "cursor": {
          "ref": "0f5266f5-3a4f-4865-b019-557196b1755f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f086b504-1199-4f9d-82b6-303407f62c1a"
        },
        "item": {
          "id": "159fca84-04fd-4b24-ae99-3b83b9322560",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ee7cb12-6ef0-4d05-9527-b1d58fd42087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7998bf02-e7e7-4328-b2a7-975f028e4299",
        "cursor": {
          "ref": "d472322a-c8d5-4465-bb73-b2ed40381446",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02b246b6-3b18-4ea8-8555-80d188f50be5"
        },
        "item": {
          "id": "7998bf02-e7e7-4328-b2a7-975f028e4299",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ecbf77d8-498a-42a6-96a2-66e046fab06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a12eb2b-adb2-4485-bca9-153fd7a465c9",
        "cursor": {
          "ref": "0d4f5bdf-35a4-460f-937d-f77ae88f89e9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1604394-cf24-4ef6-a8e0-b14efa6e5e77"
        },
        "item": {
          "id": "7a12eb2b-adb2-4485-bca9-153fd7a465c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "84c05d3e-2b1f-4e46-adf6-df95a9052ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d74f0-dff7-4fcd-a4f5-280066dc6486",
        "cursor": {
          "ref": "23e623f7-a968-4f86-a44d-5685c84d566b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dd1d730c-7d77-4be0-9a50-788bb772708a"
        },
        "item": {
          "id": "b82d74f0-dff7-4fcd-a4f5-280066dc6486",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "edfdbf83-5cc7-4587-9b53-91f4b2f8a702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b192f787-71f9-4118-9ed4-8052fdb0a27c",
        "cursor": {
          "ref": "02c9c434-a6e0-4850-bbab-c9a48aeecbcb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "99a8b8ce-aaea-4e32-8109-9be082652df6"
        },
        "item": {
          "id": "b192f787-71f9-4118-9ed4-8052fdb0a27c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cdc7f834-5ca3-49c9-8423-aa81b3eba442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4df8cf-298a-40ef-9aeb-b0313153c223",
        "cursor": {
          "ref": "8634b048-9391-4708-8b7a-95a42ae0fdff",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f8ff0577-bc3b-4d18-abd6-44289bd7f87b"
        },
        "item": {
          "id": "8b4df8cf-298a-40ef-9aeb-b0313153c223",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "90429430-7bbf-4d6b-a7de-4b4598c6ef81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eed66e5-dae3-4ddc-95d7-ee3aaae71bb0",
        "cursor": {
          "ref": "e788e361-94c1-48de-85be-e1adffb722c7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8479904-f73e-4152-841f-c34da217466f"
        },
        "item": {
          "id": "0eed66e5-dae3-4ddc-95d7-ee3aaae71bb0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "844de1a2-b100-4342-828e-7414ee68a683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4962af5-9c99-4192-b4ca-c372219793de",
        "cursor": {
          "ref": "5a02464b-8d89-40a0-8c41-2ea3057b4a83",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "76a53de9-3030-444f-a20e-ab5793f96494"
        },
        "item": {
          "id": "c4962af5-9c99-4192-b4ca-c372219793de",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f8803ee-f3ba-4c20-aa0e-995764bd0824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87713673-1d4c-484a-b28e-16f24c2bad15",
        "cursor": {
          "ref": "64433c28-ae09-4b9d-89e5-72b653c00dc2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ab955ba2-028b-4dda-bfac-16d20ce29737"
        },
        "item": {
          "id": "87713673-1d4c-484a-b28e-16f24c2bad15",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b3a4ebfe-fb34-447c-99dd-b71cf1b5ce01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff125bd-74d8-496a-8440-bf09e9f97fd6",
        "cursor": {
          "ref": "37b2ef32-986c-4493-9a13-429963e73472",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a52184f2-20f1-453b-8c4f-4d801886b1e6"
        },
        "item": {
          "id": "8ff125bd-74d8-496a-8440-bf09e9f97fd6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "58cac9bc-8e5a-4171-8469-42a0f056797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c416330-be40-4047-82f0-5877b42c0e04",
        "cursor": {
          "ref": "4952db96-bcfd-442b-9512-2f3547cd58f3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0144ad81-7b6d-439a-b20f-93624f848ae0"
        },
        "item": {
          "id": "4c416330-be40-4047-82f0-5877b42c0e04",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a394109f-4ab1-4bc4-80da-1d182562c1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e93ea8-7e50-4d85-9629-6f938f0858d3",
        "cursor": {
          "ref": "4e6f2ffb-5704-47fd-a97c-b4ec7e340891",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cbf29b0e-d3c9-4c87-81cf-69073ed454fe"
        },
        "item": {
          "id": "b9e93ea8-7e50-4d85-9629-6f938f0858d3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8d1f8ae-a03b-48e5-957e-9cb0ca5195f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8557a14-77d4-4050-9003-24cacac6590e",
        "cursor": {
          "ref": "693175c9-ced4-438d-939a-7c2ccf4c5ffa",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "24180cac-ac2b-401e-a025-a1a9a5267519"
        },
        "item": {
          "id": "d8557a14-77d4-4050-9003-24cacac6590e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "24c09ee7-0615-4131-bf7d-ea9fc2b3494e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c2e1e1-d9b9-41e3-a960-9e392fb8c6bb",
        "cursor": {
          "ref": "ef5988e8-a55d-4a83-972a-482158a72251",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "62b23cd4-36f4-45af-94df-3975a6cce3da"
        },
        "item": {
          "id": "49c2e1e1-d9b9-41e3-a960-9e392fb8c6bb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2b61612c-d8bd-4f13-9df1-67d182dafb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0325e9-ce9d-4e09-a109-dab5c1baa902",
        "cursor": {
          "ref": "67c42bab-5b42-468b-a637-21e7886851c1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8f19cc96-8595-49e8-8737-97a8bb0abcbd"
        },
        "item": {
          "id": "0c0325e9-ce9d-4e09-a109-dab5c1baa902",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2305da95-be8f-4983-945f-417355c0f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d765c3e2-a81a-48a1-9b8c-0877eb32e1b4",
        "cursor": {
          "ref": "157c8f27-3e59-4174-b808-ffb3779dee96",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f667dfbe-47b5-4c42-bb19-a6e8f151fec0"
        },
        "item": {
          "id": "d765c3e2-a81a-48a1-9b8c-0877eb32e1b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c2a5a114-096c-40a4-9856-8a73dfc689cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c35d70c-5a94-41e7-9dcf-9dd9cd6003b0",
        "cursor": {
          "ref": "d54392c5-c3c3-4f67-83a8-54e288483237",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7a4bcddd-0a93-4d37-8fb8-5de80e5579b5"
        },
        "item": {
          "id": "4c35d70c-5a94-41e7-9dcf-9dd9cd6003b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7e9498e3-6b49-4251-83df-8a7f50e6d1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eddabc-495f-4894-9d06-fbc444a94ba8",
        "cursor": {
          "ref": "8e8eaa35-62ad-42b8-9bc3-e6a3c343d58c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a19cf965-891b-4806-a232-9b0826cc4d62"
        },
        "item": {
          "id": "d8eddabc-495f-4894-9d06-fbc444a94ba8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f5a39d40-f854-46f4-991b-68383ad0dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3358c336-7b2e-41e1-bafa-d5d5afddb01b",
        "cursor": {
          "ref": "00067ffb-6d6a-470b-aba3-fd874fa097d5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f8bfe59e-2ab2-4935-9228-fd71905c3065"
        },
        "item": {
          "id": "3358c336-7b2e-41e1-bafa-d5d5afddb01b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "751dcac9-aa72-4be2-b490-e68e7a68bb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c93795-57c6-49fc-b3ca-2c1dc2106bcc",
        "cursor": {
          "ref": "f0fe16ce-35cc-4d2f-9bb2-a694ea338010",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f2a3c2ee-6530-4949-b352-d537a1d1c40e"
        },
        "item": {
          "id": "70c93795-57c6-49fc-b3ca-2c1dc2106bcc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6edb4bd-bf79-4600-ae81-1841e501ec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe4bd85-9caf-432e-950b-a958cd9dd28c",
        "cursor": {
          "ref": "3a0dc650-3438-475d-9973-19aa80b7c3fe",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "318cd0b3-d7fb-48be-8df2-ffd598e92f83"
        },
        "item": {
          "id": "4fe4bd85-9caf-432e-950b-a958cd9dd28c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9cc4f0fe-4593-4840-ad3a-a62477628a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b467496-fc3c-44db-bf9a-c0c6ec5bf0a4",
        "cursor": {
          "ref": "292a630c-fe5c-48b1-a9ea-92c4df008b26",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "10395938-0c0c-4028-818f-a2cf2b1dd2dc"
        },
        "item": {
          "id": "8b467496-fc3c-44db-bf9a-c0c6ec5bf0a4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f0653030-b10f-485b-9ba1-bb38871d73fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d2bf16-7742-46a7-857c-cad6bee48421",
        "cursor": {
          "ref": "aaa8992f-1127-408f-883c-f3b42f32d5fc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "76e436a2-78b5-4ff5-aec2-f3d4d31c0fe4"
        },
        "item": {
          "id": "65d2bf16-7742-46a7-857c-cad6bee48421",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "41b03e0b-0373-47f2-8081-f13cf1d63a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3633fe-cd54-46bd-b0f8-af0da60c2b91",
        "cursor": {
          "ref": "ebcb8567-e1d2-4fbe-87cf-0b50dc6a507e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "38752281-4281-44a6-8319-5d4a9b59bc09"
        },
        "item": {
          "id": "fc3633fe-cd54-46bd-b0f8-af0da60c2b91",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9e1a1ef3-6c65-442e-9938-2d73549b3131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614224b1-334f-47a4-af87-568eecce7256",
        "cursor": {
          "ref": "2f96978d-42c6-40db-9354-11b61c50ecd2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dbff1282-2495-4ae4-9161-f7193d7d80dd"
        },
        "item": {
          "id": "614224b1-334f-47a4-af87-568eecce7256",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "daccbf23-400c-4da1-8c93-1bdae28d54ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d9dd15-336d-43bd-b254-feb382309db8",
        "cursor": {
          "ref": "04912585-3ce5-43dd-8d64-305040ac70af",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "190a37b3-436e-4642-b4a3-3480a93309d4"
        },
        "item": {
          "id": "12d9dd15-336d-43bd-b254-feb382309db8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e931f762-57a5-4ac0-8684-08e1eec650ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ffe03c-9256-4f6e-a3e2-895d534fa193",
        "cursor": {
          "ref": "e2f01d77-e5e4-4016-9fdc-2f4d297cac00",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "574931f0-4999-4246-aac1-da01ddd04f4e"
        },
        "item": {
          "id": "51ffe03c-9256-4f6e-a3e2-895d534fa193",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2dcb6e1f-2904-436b-9870-fa05111dd445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d1c9f3-3e3d-4400-a564-a9c0a37b3378",
        "cursor": {
          "ref": "3f415f69-0db7-4172-9575-1a09dfe9e47d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "eca365a4-4d36-4fb4-b734-6183e8949764"
        },
        "item": {
          "id": "59d1c9f3-3e3d-4400-a564-a9c0a37b3378",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "280e8691-2b2a-4696-b13e-780d32739536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f0d7cf-1598-4828-b9a4-8b42a0bb83c8",
        "cursor": {
          "ref": "2b02bb38-03e8-4dfa-9c85-e434d24d9f50",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d129a90c-117b-44f8-a957-ec0f7e55476b"
        },
        "item": {
          "id": "e2f0d7cf-1598-4828-b9a4-8b42a0bb83c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "11fc8242-3a42-453a-af34-6757ac85f5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7f230-822b-4ca6-84a3-8337e7d5f49f",
        "cursor": {
          "ref": "31e96dca-713c-4d1a-bd3b-518a2508f1cd",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f497eea2-2fe1-45cf-b5a9-beaa9fdad604"
        },
        "item": {
          "id": "8fb7f230-822b-4ca6-84a3-8337e7d5f49f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "93b1814d-bc96-4a99-b5cb-b81140cbd0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620da36a-4481-4ccb-840e-afbb664a200d",
        "cursor": {
          "ref": "b3af7b29-f42a-42b1-a328-86c68079f00c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1151d735-2ddd-490b-9302-df5c81b0be9a"
        },
        "item": {
          "id": "620da36a-4481-4ccb-840e-afbb664a200d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0322f62b-2ba9-4705-b579-943aa59629e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d01bd4a-6c5f-454c-80c0-0bbe5ba69f1b",
        "cursor": {
          "ref": "4906f6eb-ee2d-432e-ba52-8c57119797fa",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f92b9572-646a-40d3-b6be-94d978697abd"
        },
        "item": {
          "id": "4d01bd4a-6c5f-454c-80c0-0bbe5ba69f1b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "369f7f6f-147d-4b27-81dc-4aaa6533de64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2136c3-84bb-48a4-a81a-ffcfe58350ed",
        "cursor": {
          "ref": "56c12598-0ddd-4034-a0f3-20021a94f040",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fede892e-182c-452d-a362-fa7c65706486"
        },
        "item": {
          "id": "dc2136c3-84bb-48a4-a81a-ffcfe58350ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d8489215-5314-4576-b1d3-122af98f9eda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bccd078-6121-4b30-8f7a-ced40da99a85",
        "cursor": {
          "ref": "27ee91e1-7f78-4a6f-ab5c-87208c786291",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "05a6040b-bb10-4e2a-bcba-1e712ee962ce"
        },
        "item": {
          "id": "8bccd078-6121-4b30-8f7a-ced40da99a85",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "50b9e627-f1e2-4c8a-9435-af9b61dd4435",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "20824bd6-fbcc-41ec-a5b9-ecd52837032c",
        "cursor": {
          "ref": "d9dbfac0-504a-449d-be9c-0b24f01ade67",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "093d71f7-340e-4692-aacf-0b10e5bf3242"
        },
        "item": {
          "id": "20824bd6-fbcc-41ec-a5b9-ecd52837032c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42e86480-755c-46fd-a099-a8ea06c597c7",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd4c6e6-eb61-4cab-9bfb-42ae93906e3b",
        "cursor": {
          "ref": "76842b9b-ae4f-4ff5-9f66-20a70697aa5f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2eaa2797-0e17-4ba0-bb23-92228b25c146"
        },
        "item": {
          "id": "abd4c6e6-eb61-4cab-9bfb-42ae93906e3b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "45fb7cbe-1b98-40d7-9ca9-4471abd1b98b",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d635d3-dd62-4009-bdef-82ef29a7ed4f",
        "cursor": {
          "ref": "eb7e70ce-4ce1-4bf7-a8f9-9c03b84ae3e1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f829a69-e05a-4bf6-aad4-02df840d60ca"
        },
        "item": {
          "id": "c8d635d3-dd62-4009-bdef-82ef29a7ed4f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60379a0c-12fe-4208-809f-0d2b8286b8ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d635d3-dd62-4009-bdef-82ef29a7ed4f",
        "cursor": {
          "ref": "eb7e70ce-4ce1-4bf7-a8f9-9c03b84ae3e1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f829a69-e05a-4bf6-aad4-02df840d60ca"
        },
        "item": {
          "id": "c8d635d3-dd62-4009-bdef-82ef29a7ed4f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60379a0c-12fe-4208-809f-0d2b8286b8ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f5b67-10f6-4b02-887d-886eced491b5",
        "cursor": {
          "ref": "d7c82c1a-d9c8-46c6-880d-1bdbd5d10ebf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf8f21f1-c66a-41df-9a39-fb0c556fc3a4"
        },
        "item": {
          "id": "ad4f5b67-10f6-4b02-887d-886eced491b5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e9b9ac25-2bc7-4b61-857f-279f6b3f9f3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7834cf-3d77-4525-b701-c5108a2fc73e",
        "cursor": {
          "ref": "7f7f2855-72f9-42b2-b113-3810c191e329",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7853d431-6d04-45b9-ba60-f2c2932e57bb"
        },
        "item": {
          "id": "1d7834cf-3d77-4525-b701-c5108a2fc73e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ae26daf-37a1-4dce-bbc0-fb6cf9695c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}