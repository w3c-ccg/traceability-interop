{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "806ed903-7f83-4bba-a35c-d3331506a855",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c5abd89f-7c90-4aff-9107-b6211e64bec3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5d1e079-51f7-4061-b5aa-89c507f9597a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11f6cce8-05e4-43b6-9303-a0f20401ef4f"
                }
              }
            ]
          },
          {
            "id": "6d0d7703-b366-42a3-ad93-f099a0f15c02",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b855e744-ef17-436e-b201-7ac810281eb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c7627629-2b84-48db-b92d-c2829a8de7d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8d82cae1-6017-478d-be0b-e23aba3c79e5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bde6e71c-8e9b-489c-a22f-d9306a8f51e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "048f9c94-a9cc-4772-81b9-6e4a43abb3af",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4ae865-1965-42b8-9bee-680e4862d150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b91e46f-9d3c-4160-8312-5919ca0c965f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9ad930e-d439-4a62-b6a1-2cb83ec9bcd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f51754c1-c678-44ef-8bad-81ab86facb1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9e3064a-c00d-4373-9149-85b7c89e7118",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c5334be-3d8a-430f-bf5d-e069581fe8ed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "541bb998-3149-4653-bb2d-e818ceba7239",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "250e3230-b81c-443e-84cf-9cf5729e5ef7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33611a54-2ed2-4b32-96e6-7dd51790c7fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59e71ef8-8803-4f6c-afb0-7b2debde319d"
            }
          }
        ]
      },
      {
        "id": "eb721a7b-98e6-4b2a-93f2-02dffa2ba957",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bc3b2ad3-3fdc-4028-aaac-c410a89e6937",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25103f00-ebd5-4479-8ee0-033ef246c3a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8e1ab03-62bf-4f85-a4a1-f132fb70a227",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fec771-1267-4638-8820-52fb6dbb1f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25756d19-d6be-40b3-8ac5-1a1e4aca8611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e1c93e-4264-45da-a74e-7447b5ab0c78",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d4e861-0468-4f14-b7ad-83636e478205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9a39edf-25dd-4adb-aeb0-0f754ff648ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb93cf3-d1f9-455f-92c8-96e8e0c44582",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed083bc-cd70-4e17-890e-b55ee83a2059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1ff9353-0f4a-4cd3-a36f-d70a8ffffbc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c96cab76-30ed-4b96-9972-dbffaa80e1d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85fb8bc5-3051-426b-8d33-edaece210521",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11491fae-05d1-4d18-8c4a-ff9bf7b06a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4e6fb9b-d0c2-4e0f-93c7-bd4d44f68cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f802eb-bf74-435f-b2dc-f1ae3b68232d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd257cb-9c3c-493b-ae0d-156363d873a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee09143-1e50-420c-98cb-91726b1cadfc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ff95c0-4a2b-4492-9591-48e82c4cd4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "390ebed1-1f60-443b-bd9c-22db3f3a0bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd964db-464d-4980-868c-261beedc3390",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "01fb0c00-8e57-4933-8176-533302a674b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d09acb8b-c751-4580-a3db-2cec6bb4685f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c895056-f96f-4913-b10a-a313b33eb57a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "158a1554-6c21-4470-b228-a35b69245d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9d5917f0-3fa1-4550-bae9-512634f7474b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26846330-f335-49b7-aa37-def305d95c4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1425d129-5c20-4a54-808d-330853650443"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b1276dd-4ef7-49c8-90ff-38dea0394438",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bdedf59-63e1-422f-b5d7-ca7b80b90aec"
            }
          }
        ]
      },
      {
        "id": "de7cff9d-46cd-4fc9-b014-e28a062c52a1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e419a34-7790-454a-992b-20c85ffabced",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46c143ed-e465-413d-a5a3-f9b83fde442b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e5057dd6-4377-4552-8546-633607c83cd6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1320b-df22-49eb-8ce2-f5cae63b74aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ff6533-32c5-43f3-b283-b0a710ba63c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986e48bf-2e3f-4743-854e-0e3326d44d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb0bc6a-bf77-4883-aceb-669db0f6c49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3343a0ae-2f2a-4c24-b70b-c2a75da5a77b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139a90f9-715e-437e-9dd8-aa5992f4d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b08ba4-ff20-4adb-ace6-0cc503a337cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0651984c-733f-4bdd-abff-6f30a5b8a512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "222f8a5e-7fb5-4275-8139-81551d3f8b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1e3851-8c39-4884-8603-f1051a4688ec",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f1e7af-8ee1-43b4-a40e-5eedf2644f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d8078e-05c5-45d7-a486-4bb90bfa9416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9dc540-51c2-440c-a3c9-9819a5bc505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f04a2a7-0adb-499c-ac2e-832f73fb05f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a9a906-7678-4f2b-aec0-fe9c4293afe0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71abd216-ad27-4fe4-81a3-ba3c88f16d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84513b1-a262-4f75-906d-2c63b8d0ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e478649-1209-48be-b87e-105dc2f0b147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "266f94fa-47a3-41c6-ae08-88f5ba8130cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69ef3d9-5c8f-4b88-a121-2e457957a7b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10294f4-89ed-4fc7-8405-1d801c281991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad118c7-e603-45be-8634-d2c0def58624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aba788b-34b9-4642-8f4e-988927799858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a748cc-f63d-4a3e-83ba-9f2eacf7879e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461a2d46-fa4d-408a-ad6b-c3f67173f0b6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658de63e-d280-41b4-afff-7c32efb8b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c57c30-82b8-42d0-84c0-96ee8a1f7c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab171e73-54d3-4b50-aba8-dda8d8c10f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77e14148-1c2c-444a-8968-2cbb76113b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ea4526-9926-40f2-a7de-6327cd658e30",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f2ee88-d7be-49c3-887e-cf4d7d16e1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3895c59e-1bc9-4869-8464-496e408004bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82908448-6746-49e9-8deb-48f616ed584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "443cc094-5431-4308-a77c-8cf48bad83da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ad0b1f-0ba7-4014-92d8-1cdbd9bf1d3c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b131e8-5426-4b2b-a0b8-cb5fe2c5fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909da610-c29b-4f33-bb75-e2776405c210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbe1b61-69fc-4f49-a738-e25648cfc1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5057324c-cbf3-43a2-9c9d-bb67685241b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c4ac1-66fd-40b6-9420-1cecf618bb63",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9cf0ee-ae13-4c4d-bd3d-d06be42c8531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ed0cbb-2cbe-40b4-bf8e-92641becccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab599f0-b27a-4242-aaca-b5acc16ef2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e367a14-eb80-4cae-8911-b3631cd7c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2862e5-2eb4-4cd4-8d4f-615318d603d7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca0221-2eca-483a-ad15-bb4fe8305b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3892b3-1adc-4f90-9b7b-387d44898386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82142e1a-a923-43da-aefb-e1b09499b176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5524e179-bb10-497d-97b2-ca5b15442e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6e386f-626f-452a-83a8-0c529a903106",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0240268d-3b7b-445b-8fcc-35d5f101f42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc12a22-2631-4fe9-bb08-a2dbc94d0f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81943fa-f455-483b-9755-0360100bc5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "541dd13e-feaf-4751-959c-3ca722a24ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2da29f-ad42-493e-a10a-6155fd750f11",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c717c5c0-8e65-4493-97f8-f9984ab5ff33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656782bb-1282-41e4-b78c-be1a82158afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47349db0-3e25-4ec6-b655-9b81f4e0ee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586ed179-1cd3-4d5d-b13d-69f67a8eb6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e009f2ba-7db6-4091-ad1b-83f490852302",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3804cc43-66ab-4a46-85a1-ca1c32646bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b26ccc-6aaa-4c61-9223-2089a62acc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3d117-e943-4513-973d-9693bba45308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919dc1d6-8920-43f6-9621-542eb62a3879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a05012-b18a-40db-9832-143a48c7fff9",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65adf8d2-d270-4ec1-a216-ded4afa2eae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7576e0f-1ce2-47cb-93f6-a73f56d44b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e56424-f909-4e16-93d4-cb8dbf4d2748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "084415b1-0f07-43c3-94e5-18f35462757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3bbbd-c135-49c7-8c13-f87d7081b272",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51320319-ebde-40e6-bda8-b96d618fa265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b7c7e-2fcb-4635-8bb2-487311fc6610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0217af-ee04-4e63-9d0e-b4460f0e8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ceab66c-75a2-42df-884f-9070228e1cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5010cf-8180-45aa-bc3c-abca84650fa9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfe8c5f-0f46-43e8-9782-c99ff5967dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8eb559-0399-4eb9-b254-755644971649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a7c0a6-f4f7-4c62-803a-8517990a4ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37a077b9-f562-482e-acf6-e5b9cd9405a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b82e4c-f427-44b4-956a-e17eb07a6487",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c130da96-13f0-43c2-a946-1acb52aee640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2999832b-b597-466d-8a8e-8b99c404fabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fd8960-5e91-450d-a598-d699ed5637e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44c479dc-fea4-4023-9b90-d0c795782f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc9d572-11de-4396-b581-489426fd2d6a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a1a64a-4c31-46d9-b434-ff609985f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046f2a7b-e682-4056-bd7a-cd3cc38dc756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37846a87-9a64-49d5-aa5a-94ac87c3edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ce80a7c-4373-4c86-b4c4-7c9d51f7c01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef03b2f1-fbc5-4deb-ab97-738f2ada6bdb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cb88dc-d18b-4318-b3cd-2320ad4753a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81aac043-ff24-4382-ae5b-8351fdd873ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8617ae-f938-4367-a14a-9218a2f56973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dacad40e-2f6e-4cfd-b019-1a9cc8e374a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5331ba7-32fa-4eae-818d-e76395e89cde",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa12cc-49a3-49b6-a995-3412369f6cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecea55fd-533e-40da-b071-eeaaae8e31c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8805da52-aef4-4916-b23a-b32164914cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3088f0e-1f73-4bf9-b7f7-bb1f5cb0f892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ba85ef-7d4a-422a-b054-7d1d831d3495",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a0b837-6205-4e70-855a-c3b69781925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f4b9c3-18ec-47a8-9086-8ab3094aefbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c052cf8-f4de-4058-8130-ee0a1a5b4066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df72467a-7555-4a17-bdd3-415b9e351f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e762b-30c8-4070-83ea-4c114cd3c82a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00dad9f-0fdc-405e-a9a6-94bf4d3695d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839d9ed2-0b17-4e89-85c9-ad18aeec0686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd24c6-aa51-4db8-a93e-0770c5bd1cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0751e719-5d69-4aed-894a-f37031613f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009cc367-cc53-4b4d-a4fe-755f50e10339",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680af91b-d638-4aa8-9521-be2913254d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3a96bd-c9d7-4845-a80d-09f288c44cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b26bfd-c809-45ce-b064-fd29620543fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ae5022-4129-4b5f-8cea-18b61fc8a842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e54971a-68b6-4520-ad4c-b38e7b1a00c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260300ce-303d-431a-9b29-64fbe43ff967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28444b4-bc6e-4ff9-84d8-527f9cb7d2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acf5acb-faa6-47cf-8651-be427be7f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02557a6a-b999-4e00-99dc-11f050fe769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409cbaa6-d219-4634-858a-3590139a8bdc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f201a-f5a4-472b-bbaa-c3f9be8e9a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeedbf5-8d59-489f-b454-cf232ce5233b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb3ecf-aa6f-421a-a96f-8f9c908a9a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11f70d40-fd2c-40c9-afda-b94ea1826ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba4782-4768-4d0c-942c-d676e1d42a52",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91df05aa-9958-40d6-9805-d62441bbf7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7372a10c-c73f-48c8-9c04-908413f34e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a517f7-13e0-4790-87e4-6e91fa607834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d100fecd-f545-4a1c-b7d7-8583c1f8a33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582dd343-9418-4496-96fd-1c2d19ba4690",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c675e0f1-957a-4707-937e-93705ed1c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6bdc89-6bd0-4af9-b721-c40174c60240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a184e80e-df1e-4dc0-bcdc-b5ccd05b8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f67fc4-b353-4c85-93e8-28896271beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3a2580-eb43-4c2b-91a2-d8f800c63552",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f42722-2b27-46ff-b76c-36dfa4f0e745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050da1b0-75c9-4ff4-8f8b-78436986b19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103e094-e635-4409-bcc7-6e670957eb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d68c7a-2565-4679-960e-8904832d6c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad2a6e0-4f4f-4ee2-adaa-f14351a5bbcc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ef9887-7856-4b4a-b74d-f2f6bad5c187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d41bdc-58a0-43c6-b942-538ff5dc5466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0b7e76-1d4e-4d40-bd71-d3660cb4736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c961bf5f-72ec-45d6-9715-243149797cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9599c5-e7dd-4d39-800d-39f6662464de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef3ecc3-cdec-4476-91f0-fb19d1e8ca4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc39f5f-f75e-4b85-9bb8-1ddd7f56a3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7257fa4e-3db6-4218-b3f0-e29bfe729fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92a1153-5809-4916-a51d-f9425c36ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc23d90-bebf-4711-9c25-6ac8e8ddf1e9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76db7934-f59f-49d2-a999-fcf30fcedf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da99f78d-ef96-460a-8796-27446c195b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0539eae-c2b6-44fb-b95b-6c8540aa4b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7801cdc2-8935-4558-813c-1c8bf1841a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dc0bcb-955e-49fa-b587-19fe7995976f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2702fe-a504-417c-ba1e-8cdc636fca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb86a026-fbfc-4c01-b8ba-0fa1f14d698b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f4742e-d591-4f0e-aac8-cce1186f6c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "140f977e-1e3e-45ad-b173-8a932c52dd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08554615-6783-4c28-ab6b-67d05ceb8163",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d488d793-a96b-403f-a523-95db7cc5c78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee963ec3-21b9-40fe-8ef5-373d3cc2bb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb14dd9-992e-444f-bf4f-05c8bedb9a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1d3725-4936-4eee-b67a-22f99fecccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2598a9d-e4a2-40f9-bdf3-91ac82cefc19",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871cfb89-f163-41aa-9662-47893f3699a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74756227-3144-40a4-bfe6-c3f43c5f6c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d9b89c-819d-4042-9140-b2941758ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e69fe7c-f274-44c9-979e-63090b1eba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf361ebe-48ba-420f-bd3d-cdef5c7d2618",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf530c-eb8e-49e2-95fe-84f1d0ce7831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925ba464-6d9e-4eab-ba8a-1d47f404bca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4bcdc2-d46b-4b74-b0ff-a30bcc2efe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d21fdc8-7dad-4b9d-bdb7-c8431cc31f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52d51c5-f7de-420b-9745-3529a63d7412",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f094a-e6df-452b-82fe-eab039dd2e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32fb978-5cad-458a-9fae-ae9c9590592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f67058-6b11-4d80-831f-8ecbfefb5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "145b97d8-8e5c-4f49-b132-54d555ee88fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dae201-eb7a-4dd4-85bd-c7a712091c07",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0942673-f2ac-4f80-9bfe-8b91873eaa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e22a4ac-27c9-4f48-87e0-3cd0787dee3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b7e38a-6621-49b6-9bb6-79c3bee8127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "88742880-bd80-4cf3-ad4d-d3c55656c1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff6081a-1d6e-4630-a5f6-549afb17cbd4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cda920-5237-4085-938e-6188aee9eb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50cbb570-6c36-48b0-b64e-ed90ff83f35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26b9d37-4cc7-4251-81de-01078ed2b0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc58b1b-e589-4634-84c8-89c748270c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8430f6bb-e7b3-498a-ac80-53076ea3aa6f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c61493-b09e-4ff4-9b6c-3925248d7fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fca22b-3793-40f5-9f38-65c1cd1bb725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f860c055-d2b2-476b-a94d-246643873f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ab2e83-5b80-4c2b-bc6c-b399036ca1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96e6124-71d1-496a-bfbd-fed1c1da7440",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192b3960-182d-487d-969f-9364bfc678f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc4dffb-7f82-4a79-9444-1be1cefc66d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459bed04-d885-4141-bacd-53219bcc0342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ba9803-360b-4595-9009-4c083c37e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506b5b3a-5185-4e65-9019-2ef4732f82ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ad2d18-b1fe-49c0-87a2-41eec8cfa241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aba35a2-1644-4fd3-b9df-ddde94eaf0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec18b565-4940-4195-b3db-67fb1f864570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "625122e6-4607-4f89-b652-730789ae0019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58048b95-042a-481e-b08d-d9cc020a8086",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033470fc-21cb-4d42-b56a-002cbfd62c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90057024-8ed0-43bf-b098-9ae1537e10bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef946c-3395-4fe3-953e-4760f5384f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7c03b8-500e-441b-87f3-ccfa2ef34707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da577029-dad6-4f17-af85-248ca0a0a1e0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c0ee05-c19c-4138-bd63-861826462059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0c1d21-b1c6-488a-813e-a833595bb772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9e89c6-52ca-48a2-8a12-cc439a5150d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa20cc5-b51e-41d7-ada5-cb65417fe748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec0096c-41f9-4c80-8279-7af8346037ab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87df7e95-54ac-4ec1-b5d9-aec799974576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2e652b-b7db-45db-bb5b-ff839b4e8d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8938e2cb-5e91-44a4-89e1-d94e71be6e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "262fa690-e812-43cd-b64c-bb6bb22c204d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f693f42-95f9-4a90-b114-b8fa12e17b2c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0e014a-b043-4314-926c-55f8f4158024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbc56ca-d121-4eb6-a0df-785f41748ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b758a69-b37e-42ae-8d4c-4f601eaf34d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50127804-48cb-45d3-9644-f978b86103a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845b5c64-3474-463b-8d49-5da54fbd4d49",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dd44dc-df36-4dee-8f63-b8eddeef9aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59f8dd5-a19d-486d-a3ec-1eda39624f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b1a4d0-0935-4ef5-afa1-7d8965711b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "24adb458-3d33-4c27-9bd6-290ab293632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3541b1ab-6bf5-402b-8fa9-a0973e972d56",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc35c77f-2b9d-48a8-9bd4-2117771518ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b181ee9-0508-44f6-b691-4b3742f040f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0c22dc-41eb-47d8-adee-055a03d1b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30c0d48-e4c1-4302-a848-04ac3d059646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6279cf8c-194d-41b3-b5f1-0bf5bb9767e5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65924572-6fdc-42f7-9009-e8e25c09a1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce860fa-ddf2-4344-84b6-25dd93270654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e409b51-98aa-41a0-a5f1-724da7b1889b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeeb8446-79aa-4d52-92bd-16267c617892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1445b7-1c26-4ea1-b36f-1f81bfcde570",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aacb32-b355-4584-8a14-60902e81c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed014b7f-a7e0-4745-842d-b9ec78e42162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8a638f-a409-4d31-b049-dc2fd5edef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "004c36a4-1174-41d4-9897-b717569d869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d805b1-7eb2-4f21-95dc-9bf37c909cdc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eca3d6-1744-46aa-875a-607b39b1d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ce5d53-9670-4dcc-a7cd-331ca4e2ea1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9c2509-7fa4-4933-82e5-ac924835b009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c127bb0-5b20-4cf3-994c-a8ace4d7e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcedbd27-03d4-42f2-9891-4eb9a342a462",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dba07fa-8cbb-4f2b-b2ce-585e3982e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d225f7e-376c-4f94-bca3-975339be60d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316ec96f-82c2-43b7-9ae8-8e41f27d8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e3c00d-1eb2-41f5-a5cb-3f864e894356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177b15da-aae6-488c-b239-49429fb8e690",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fff2ad-d748-48b7-9298-aeb561a5b48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c89811-c00f-4426-a8dc-ad396c457131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5710e126-f703-408a-8cce-b066ee1a8ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7af2c353-5cf0-41be-b73b-534af643234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4035fc21-d52d-45fb-a9ec-4ab7aa30874f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f23ba6-63d3-434c-a5d3-26ce8b77fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5184b9c-fdee-4699-870f-40e09dc485c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c09c41-d785-4ea5-ad15-e86774fe2f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "596ba92f-606b-4743-8ded-3ff637aa9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06291a3-2b83-42b2-8da9-fe2f761d7464",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0cf0c1-3ff1-4665-8522-a8c2a476ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8925a5-af35-403f-bab6-9affbc20eb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff169b97-5f09-4596-9d2a-6ef8287ee655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0370889-825b-47ac-b718-f73d905a06ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b5946f-83e5-4b24-9dc0-eda805d0e9b1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381d2a86-ef0d-479d-a8f6-370c28df3f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b0d593-ba41-4397-97c5-e6d31f4e30fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f66e37-5a64-48ae-9e37-4857e63994e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "431de93f-82b3-4411-b7fa-aaaf7543a4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d7cf78-9386-460c-9bcb-532c4d600761",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeee767-572f-4324-8972-13320809fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8ecc0d-54f2-420a-8956-5b63151e4c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be15f5a4-5009-4f93-afd7-53fa3f6f40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a9ba72-6427-4294-b3b0-beb669857f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c15875-cbdf-4ede-bdb1-6aa6c4a2b597",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47d1914-e896-42dd-aa76-d3a4724d2857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb35af1c-7e4f-4fa4-b6e9-129d0ddc0095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9038f768-f626-4efa-bd7c-a39af30ebc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "483d4736-92b4-4c6f-92d1-b63f9b28b0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87df0d40-6bf0-42b0-8e1f-e81f43946c90",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829392b-8a4b-44d0-9a89-f90dfe6f6991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76d4208-882a-4ed0-84c9-d9566e806271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cc7c99-a7dc-4da3-9991-0a13577e0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e3b74-ea93-4f91-89e3-1e058c798d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2822d42a-7dfd-4d6c-be38-14e8c54bda9f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f01480a-d3ff-41ba-9fea-53d0f02813a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23244d3b-264e-41d3-b807-41758c2b07ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dd4e82-01db-42f1-9f3e-6faa8bf39902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c40237-3800-4c5a-92a1-8c0acae7666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcffec9-bf86-473d-8722-8cbeb6f3abc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227b4117-2608-425a-8f37-fad9478928e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefed4a1-f8f7-4238-9392-2e28e4b17ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694b99f-7af9-48c3-9c05-e72dddb7023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f60805b-21a4-4fb6-abda-a19def1a3f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874d98a3-a8d6-42fa-840a-bb7be0b3ebe1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567cdb8a-0ed1-40ce-8d14-70cda8deba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d93f30-c93a-4a1b-a0ac-99412794a9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6418000c-d1ac-4f28-9f55-50c6ea7a8c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30e5c1e-eeb7-4a2c-b144-49be819c4207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79333ba-05ed-4e52-be82-db945872fb12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0d47bc-6a5b-43a3-a458-aab9d406ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eede8e42-8338-4f63-b8c8-716dd38fb8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c2c1d-3c53-4df7-99dc-987e6c31e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bca8a39-6ff5-4bd2-991e-eca1ecff47ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06f878a-73b7-4e8d-9479-1bce1180e641",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53215a23-8a54-4bef-9157-45299956e04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d075296-3521-473b-bee7-6c90d06ad8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a28f14-f2e8-40a8-848b-cfac69a6e411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0230e6-3c05-4c65-92d7-68539f4e5fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c90d08b-399e-460f-ba4e-4bfec0995cd0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd3c243-2a6b-4a94-ab1f-e6d31e52df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eab9e4-d026-4302-adc7-999699671b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a449dc-ae0e-404d-b8f5-7d95e5395b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0adf210-52d0-42f5-9894-4332455eb8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48ea26-d014-4a53-98d5-f604ee46eea9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66204613-1fe7-4c6e-9f58-f57ba783400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01461b1f-1b28-43f7-9369-f1f132bbbfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f58e30-f0c7-4ba9-8d96-495efeebc95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c9a1f1-146d-48c7-b430-7e6e76a6f642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4091302-ae7f-4beb-b499-31c02524f502",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac46335-ce1c-4619-b324-93484870bf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd5287f-ac32-463a-9809-d7b6249c0440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea1183e-bc4c-40e7-80b6-0f7942dffc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a80b13-4d9b-4150-b24c-6461f3af0745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6ca831-fff3-423b-b53e-d2df831af367",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec89308-dd3c-4d8a-bb2a-7a39311a3eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cb1b8b-192d-4179-b2fd-87c9e03f9120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df1d82-e95c-4a9a-b4d2-b4165304fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebfc9c1-fccc-4dc0-b8f6-13ea712e6b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92378e7-08ef-4c70-a642-30450a73e324",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f3788-f29c-4932-923f-2071e72f5ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c869cb-2ff2-4ffe-a99f-0def74a97065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9430f-c775-4031-aecd-48336a916b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c238d67c-ffa4-4229-a195-2dec2b12caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976dd68b-53d9-4886-8eb2-c6192b44833e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e868369-63eb-41b3-8f43-4a05636e71b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487d6492-0fed-4e98-8590-4e2f2aac3119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46954eac-8a71-4371-b49c-77317322e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0472a726-aaf3-4fae-ab0a-262af5ec3533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64decac-47ac-461c-b993-30cf7d9d4104",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8bd2f7-13d7-4042-b1c8-132f217cdbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2cca45-2e0d-4570-8c25-25d8e7f56c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b17cc21-5008-43d0-9820-1e1a550cd7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "093fbdeb-f356-48b5-9944-e8bb2beb4068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbec3c0-aeba-4027-b3ae-3f39247deb3f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604406d1-0b32-4bc9-8006-619484d9200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c8f63f-3fe1-4f8d-9b33-82913ddd80e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea212e2f-6354-43dc-b53c-2f823329c945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f82f050-fe86-4a19-9d12-ac127f5a7783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae06f23b-200e-41f7-97a0-bff463d6352b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4d92c4-d1c2-4141-8091-8032153bac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac57348-347d-4baf-b885-bee50a5b2bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d5432-1fb2-4d71-b616-5144df1720c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcf464a-fbf7-4470-b9d7-a41526fb46b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc37866-fa93-4fc3-bcf0-3619490ed762",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0a0c88-4c6d-41f0-b558-bf80b44b7866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc9c252-ae1b-42ff-a088-86a32417f3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb0aa50-369f-40a7-b9dc-99c74f222f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de9ac5e1-c8df-4c30-8cca-856126dcb8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd84c5d-3ae3-411e-9413-646c9fcf2839",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb572cc-435f-47cf-8fa3-58861d112855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890b9576-fa4d-4db4-880f-d32e4372a7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c161eb-2264-4644-8fb0-5eac338f5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbff26a-3805-4269-b1bf-4ef8568819ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4018394f-87cd-4da1-8ecb-09853fdba456",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462320db-dbef-42d2-ab7e-acbffba1860b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b439b-09dc-446c-8c2a-d7162c3c025f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebe6b9e-aa3a-426d-9695-cf617970cf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f12a14a-4349-4b8c-84e3-24d258737c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0313e5b-c2c3-4369-80c1-712144082db3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25441146-f576-4947-834e-73770d80c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8302e9fd-37d2-4ea2-aada-69008fc630d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f2cd6-14a3-4f5f-aa5d-092f5ee2f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2514ac01-5261-449a-849d-c6d4fd1d6efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d17c2f-ab0f-4774-ac29-7ddf41b59527",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c15a2c-f336-4ba7-a477-53fafc4c7bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c13f9c-3e74-4b72-a3f1-0083be47e7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca80d3-119b-46c3-94b4-f5993674dd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "123db866-c97f-4f89-bef4-c38d9b1d2f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fd81a7-8e70-4d1f-82f7-48a346d0f95a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fe5f4a-3d25-4c4f-8552-0fd8cb814541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0690a3e2-3aa2-469b-b35f-dca0e2f16dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11eb79a-89b7-48be-9c77-a6d10b5be792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e52ad4f-5eb5-4c8a-9762-c3aab235e506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e97d32-c00d-4f79-ac49-ae9ee72543c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadb7e8b-cef7-48b7-bd96-17812d53ddb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1850b5-cc8b-4960-905a-90ad4725ad82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b961e-bb5d-4499-b225-c2becfbf0797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88372dfb-aabd-433a-9dd7-e9125b945a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89316622-f22c-40d3-9f67-e45f7de77fbf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e4e85-eac3-4157-8579-54f1c7529859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57f6e06-d142-4755-ab90-4643cfc4bcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe028e7-dbaa-4af2-a787-62b943a488da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79e72e51-b547-4442-b2d1-99013a0a6102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0cd4f-4d5c-43a1-800a-828315d6fb99",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edb3b32-f54c-4e79-9fa4-daa11b2c87ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c8d3ec-e673-4c40-ba40-4628fb205b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134c9f34-47d7-481c-b408-12b2b5a13a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f2b70-1084-41cb-848c-a216ccce1606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf2de8-4d3b-40d9-956b-7a619b1e3b20",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127bd2d1-48f5-43a0-a0b1-add7a45762e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835292da-37b4-42a9-bace-860399354de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1e4a98-3f8e-405b-bdfe-025eb56658bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adc3b221-d883-4f20-830e-9a5e8ba03806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed7df49-296b-4eb0-bad2-1e0e97a50626",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b2a2d-bc21-4d61-baf4-e11957ce3464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c3985e-eebb-45ff-8961-c5164f78a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ded0f-08bb-4570-92ff-63190bf00b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96a59c4-8492-4f80-a39e-ddc5007816ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f13d395-1672-4091-bb4d-9a43ae2b7806",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db65cb84-0801-41c4-a349-51c4d8f80e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed185a7a-1d9b-476c-a63a-713c35e8e982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706b5f21-cad1-4bfa-a6a6-e385e79a80f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19707755-07d5-47bc-a271-4b2345644720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12053e45-7870-428d-9e24-1b21aa6cb59d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c22333b-4374-44d6-b1fd-a91507659d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b06cf7b-fb55-4454-8053-27a71a85c8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc270a82-6681-4515-bfad-f9c8bd3693dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eea5b5-1099-4095-8983-b68f555d8f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aecb97-ce65-4c20-a387-0f6b93685214",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d3290-c034-4619-b866-ce741014d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e53165c-25b1-4875-b79b-a952d45fbfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fb5671-8e6c-4010-af04-47412dab1b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2fe53a-155b-41c8-a6ec-40d94818c3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f94078-e6cc-4791-a79d-cd696d0829b7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b08dc8-e933-4e74-9a48-f9958192b0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab842887-2724-4893-9e0a-71e019f3ff43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2446070-120c-43ed-bf92-5a32def351a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "435e4106-2f8b-40ee-ac16-88085115ccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4527cdf-d35b-4920-8a2b-07e7e0688436",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa1955-9585-46b9-b391-6bbba818b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c5bcc7-5363-4b81-85e8-d16c4a3ed316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f05e7c6-220a-42c8-8814-7a6aca2fb19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df37448-4efc-4591-87a5-4f41a17f50ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca3ba0c-1b04-4a69-ab82-ff5417fd79f5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f5127f-c2e9-4c75-ae45-1adda4dba50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f8731e-0f59-4686-adb4-a33ec4fed1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8460b1e9-3d4e-4f15-9cc2-cf36672a5198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8829b37-e2c6-491b-bc9c-d0e1a52464a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfb70a0-0b7d-4c65-9901-d7b6c34ceef8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d17e26c-32d3-4ad6-8c84-d7619d4218e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf578bd-70b1-44b2-9dc4-bdb64f8e594c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed088335-173d-486e-849c-877305b191a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c332c92d-f79e-4b5e-8775-726df48c3431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba5db64-90b8-4e95-9ada-24f8ff5310b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4281d0a5-e440-4c8d-8ebd-2afd4b7ab5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5056b7-5ef6-4312-b2e8-fde23300849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd73e90-db46-4503-ba3e-4c3e2733771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0df7d2d-16c5-4fc7-8f0b-59c1dbc46edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68931f-7a57-4c11-8484-91eab399b482",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6e7e58-dd12-4697-879b-548f0e928a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb93c4b-6326-4365-aa60-1f0fd9b3e6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2554a58-be59-4378-843d-080c44c875d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4ee7df-02c3-45e0-be2e-823b17ab6267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c936758-ef5b-490a-8cd7-19fe61845570",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d4311b-317a-4c3e-8cfa-5367aad0cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca069c2-7744-4ed8-9778-299e3a89f7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09daba7f-fe81-478d-ae13-4079607a3a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4741ea-2097-4316-8f3f-436d438c8fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ce2cab-7177-4e5c-af10-6e65205e58ef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eed442-ab14-4d94-b981-573c4111c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4539f126-c3b9-4b51-97db-77588ffa3ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c26675-bf66-400a-a5dd-ab2ac2270cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeac573f-e080-4c83-8c73-c6c1078b5036"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc267711-a1be-4fa9-9aac-b4706ace21dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aa31e6d-da47-4127-9c52-47af4223b149",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2c8bd-bb1b-4f0a-a2d3-429787f1d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7af44041-2fa4-493f-9b6f-42c1ca898106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b28c4a-ec04-4649-a0d2-212d362ed446",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dc6dfb2f-5097-4820-80db-8f4e690c429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea53e888-4efd-4bb6-97b5-8dce17f607fd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cb4cb9-338d-4f5c-9068-5efd277cb435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "975acf14-fc99-40f7-8281-3307a94d19b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5dd405-a2af-4147-9d17-bbbb048d8764",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8c92dfe5-1086-4033-8cee-a9cedef0db40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ac1650-0115-4b85-8934-11b6256f2d1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59e82cc4-f9ea-4327-a806-83e126677954"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b48edb19-cde5-4aee-a8df-29b01d74a4ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6513e6f-5070-4026-afb9-f3d06ce57ae8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fec7446d-e2f7-4e3d-8bca-5a45826b609d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37e4c062-2b9d-4976-82bc-74b56bff41bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9303e60c-4855-4886-a5ac-39a75ed4c473",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d19bc841-24ff-4a0b-8be2-605111e56cd1"
                }
              }
            ]
          },
          {
            "id": "1706d962-6f1b-4a59-b64e-e1d73a39ac6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02e26c20-5cdb-487d-b457-d7e184d61bed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56a6cee2-a1ff-45c1-b1c5-38444e817e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8151537b-264b-4cae-800d-298cb1856a61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af2f787d-8e64-423c-91a5-223450fafd4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1e7c540-1c7f-4f3c-abf2-5e5bcd93c9bc"
                    }
                  }
                ]
              },
              {
                "id": "7505faa5-2487-467d-b8bf-7e23197c9743",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7727e1bd-e04c-4978-9cf9-945a4f00c460",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "650ed4c2-064e-4627-867c-5d2c4f59cbfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74dbf1b9-87ad-43cf-ad18-ea2d516dcdfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab8b69ad-6502-42ef-bdf9-04067166b60a"
                    }
                  }
                ]
              },
              {
                "id": "3c1eec08-74fe-4823-9729-8f929a0e0c2f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f56e0eb7-3d1e-4787-859c-c54be8873750",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a79c0d92-e246-470d-bd6a-1f96196dd092"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e79df2-2c86-46a5-96e4-30c41b8e98a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b9af5153-9199-4e40-b651-b9aefbfa7c77"
                    }
                  }
                ]
              },
              {
                "id": "d1521e6f-80c0-45e5-943a-b261f7962300",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3235d7e4-0b0a-49c8-9ec4-12bfa49f70d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15b2829a-5e4d-452b-9065-6954241c08c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18cdb5c3-1d4b-4c10-ad4f-12b72a1d31f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "de1c617c-7ba7-45b0-a248-08db0c2fe952"
                    }
                  }
                ]
              },
              {
                "id": "d2b4d1b8-d7ef-4fd2-bac1-a95219d2bd94",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91ae0905-a7f5-4c06-9558-69cb5daae3b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "957a4418-360c-4d32-bf75-65ae76241916"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55aad02b-7545-41a9-8dd5-faf7731e1654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d20be57a-2bd4-4a25-81f7-4b0f70aea451"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "598c5325-7d89-4b53-ab05-1d387cde6e18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d972ce9-c287-430c-846b-20f5c7b1ed71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df51481d-ee42-4dc1-a6f8-f3e228bde72b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "616b0930-c814-4bfa-80a3-b10fd989771d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "164cd464-ce66-466d-b444-3d8e9ee5753d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "278f3c45-489f-4f26-83ca-19e7497cb143"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7019d2f-4806-4f29-b3a0-2742e2cfb52b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e065708-84f2-4784-b40c-40512d6968e0"
            }
          }
        ]
      },
      {
        "id": "c9b3f449-651f-40bd-9c75-f459fba0fdeb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5ba34083-e35f-465e-aca1-8310a266ba53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bcd4988-625e-4246-a8c5-ba7de77dac0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3242371-0206-4c6d-89ed-6dcdf75864f1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9218b651-1ecb-4883-9e48-6638c970a3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215e4872-6a30-485c-9154-b80267959c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412d041f-62f2-4028-acd9-ac3144226b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec982aa-5ab1-4be8-ae82-9401db5b9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c5d2a2-4f27-4253-9754-013bd8655453",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16442a81-3980-426b-b35c-28c0e4ab6f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70c6c0f-535a-48ab-8442-e5cc171dddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8f1e50-8295-49ce-8a3e-b5b5c36b0363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26517772-27f5-4906-bede-cfcb7a33e29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb324445-e326-451f-a3a7-c3a9fae3b820",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a5b35c-8daf-4ddb-a4f3-e12dd54bb0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eb1ddf-f09c-4656-8465-6f3abcad5e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7145a126-8ac5-4acc-953d-fc379d16524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2848dff4-229b-47ea-8943-d72f10bb5db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5a5736-afcf-433b-a6c8-bc12134374f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b28f825-a14c-49f4-8910-1a3fed7c0b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9f054e-30a9-4d19-b399-f1950b13342b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7f0be-b4a7-46e2-a0b0-7c67f43ec0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd4de44-eac5-410f-96cd-1edd696bbcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e8e2a-7730-452e-b01f-540276b0a932",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57523006-bfff-41be-9cd0-2d9dc86a642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926952ae-728c-41d8-b239-f007ec8c074c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6b3c9-0241-480d-9116-a68ce6c2a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0eb0e7-e1d3-44b0-b29c-d1dd74f19f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0292a21-6cee-496f-a7c6-1ea0a00d5028",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c3a212-9e19-402d-827b-08febf2563a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb9b1ed-f96f-47bc-8f9c-a22d8867c3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21871c77-17a7-4c14-8079-939cf1cdc8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48074d92-f70d-4260-bb6c-8d7a3a65edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da84bfa8-21c1-45ea-b87a-a0e162b262e8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3c8464-af67-40d7-ab5e-2afdaa037497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494356e6-8718-49bc-a216-d0f27583f919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbfda30-b1fc-4d53-bc16-791d1184ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be10442-e182-4b33-9691-adbd2126e300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266cd16c-6911-416e-85e4-a237f9e317ed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bfd7f8-2bed-4001-aec6-c5ad2ccb7214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34ffa4e-76ef-4b0c-986e-0e0ad6687ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbdf088-22b2-422e-9f89-72a5579b3b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0578ce0-9e1f-4620-b291-de5378c02cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f66786-4733-49a6-9879-7bd6a8150def",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfda609-6072-434f-be2e-d62454f96225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae41757-ab3d-496b-b799-ca5ae6f8660a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd92af3f-a5ac-407d-8607-73f0829ab79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ec9a5b-d238-4aed-aedf-97c3e4ecb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685b2902-47e1-4f57-888a-a06936bacd0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8946b5ae-f936-4408-b5ee-5820cf418163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204b9750-dd4c-4fcb-a08a-d30a1ea40428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eef898-90d2-4fe1-a2d2-9e0aa23e529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "350739fa-af7a-445d-b327-b3251e140c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847b8461-a19e-4bb8-9c26-5ad13acb5128",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58c7480-96a3-4e6c-bc8d-ee4bb1a87d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12327c79-ab82-4a50-b0c2-57fe5b31c703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbf8480-9856-47ea-8abd-dccff841801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a90b97d-8014-4145-ac11-9e1c35628f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11c5a6b-6633-4f59-b570-e2c03622479a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3207af4-fdcf-4252-b840-33f0e7fdd879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f93c91-72a8-48f7-b17a-cc580d2c9e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7393d30-4d58-4139-860f-a59802d59fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd37ac3-306d-481d-b74b-d77d66499ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaceeb1-efda-45a1-8dd4-5e609b45dae2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a07f4-8b2c-4a48-8ab1-7742cd48c244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbde8cbc-7a79-41f2-9877-3063df88f1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4e8aee-825e-4785-b98b-7fe49b5ddf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c186915-f23b-4747-aaf1-9b02001cf40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f15c38-f9d2-4b97-81f5-620f37829da3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c41731b-6ac7-4b5e-8b4a-e5e7be53635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46775c26-133c-4fc5-919f-c3e038d0bc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9f7795-6b81-4faa-8fe0-c51b6374ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52110c8-c4b3-4598-a871-06c693475c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcbe5f2-6fb7-450b-bc72-2a3dc4e5be0c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c595f-97fc-4b26-b4d9-c44afa748f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c120bc-a4b0-41c5-8681-f2bc37b1302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a45eb8c-7e7b-45e4-abcd-274fed891420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c773d9-adfd-49c0-ab69-b0fe4fd8a757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7ba31-5d01-4778-b6f6-0b98fee98986",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b45c3a-f1b5-436f-8e3d-d737e1360be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88444302-24cf-4db6-b09d-ae0232d7bd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d06f8b-2be7-4c85-9d9c-bd5558eced91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a3af07-81e5-4289-a40b-5b404acd0a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b2ae5-4b72-4d41-b046-5312a7e46d08",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168b9b0b-5e8a-4e31-ad1c-f65e92d5b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a791029e-232d-4a2c-8b52-06b51948bb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49c3318-d938-4f97-8bc7-71f5ef5e745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5b7f7c-97c1-458d-984a-4fd11c801ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5190f4c-c5ff-44e0-bb8c-6042e7c3f2c8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70def900-cb29-4193-9c96-fb42a0f8a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dae259-ef9a-4ac8-bebc-f53548235d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef11ce21-4c6f-4158-adb2-cfa5cf7733fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb179982-eaac-42f4-b6eb-1970045740b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526958e8-08de-4710-b413-49b217cae646",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f60db4-5ea3-44b6-97ce-459825a02436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9251158c-4520-4733-9beb-2acd94d9f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00d8797-7dac-49dc-a4fb-c586218eecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9ad2ad-947f-4394-b2e2-bd4f93a67a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494bec3e-b11f-4bc4-bd66-5cf37e8351a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e719ceb-4a55-449f-8d44-0edf39be1c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a922274-a596-4c7b-8ade-bbcfd30f746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f32790-b000-4f8d-84c0-39be64ceb38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9063723d-c483-47a9-8e7e-7c0dd9df434d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733c0c9-eb85-4f90-81d2-26b5c7059f6f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6b0a0a-375d-46f5-80ef-041fc56b9e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d1b184-340a-461b-ba81-f81ac616bbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1947126a-1b35-4055-9404-f2aa5ac50ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4bcec0-8c60-4c78-85e8-15a969a31159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bafffbe-0f41-4178-ac8f-6cb36c313a4e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667663a2-a304-470a-b3b5-3049e09adc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9c2340-e3e9-45e9-8de1-e2e9aecf14cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2f67dd-01b4-40ea-80c9-98a52d431ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db317852-7862-4155-8510-7647b4d90bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4737c3cb-f979-4b61-9fa3-ceceece317a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7924488-5f5c-4339-81fe-8df812536659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3576be89-fa3f-4f79-8132-0432c7e6ace4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444f000a-8777-4784-adbe-aed2834bcc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde50b77-b14b-4d27-b8d0-a9c0b7e737ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b075320b-08ea-43ca-ac10-6cca8a1f8599",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c619a9-58ce-4cca-bcd8-b1c951255abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2eed56-7c26-40df-99e1-17fb1f9dcfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1d19e0-ccea-457a-92b5-8ddd019e1c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6796bc4e-10f4-4c17-9f04-a8d693acb0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bff00a-86f6-44c6-9635-c877c2b435f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd1135a-bb5f-4d9e-bc10-8403a8d89a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46043d09-e008-47cd-8a76-7c4c54f003ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c4258-f835-47a4-8c45-78f1c931a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0474abfb-7589-4b32-a765-2b9ca4884fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4c7308-0535-4921-862a-02b961cae17a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996bca3-9190-48f2-990a-1356903720e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ab498c-1f3e-463e-8336-d860e8536cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c52ccf-abe1-481d-add3-d20a5a1da660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc8976d-1cec-4eab-81d2-15e0636aa53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe7012-7d20-45f5-a91c-b92da784c534",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b21407d-7383-4172-8b02-56f1296dd067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb3a32f-83ff-4de9-94d1-4f2f98b1bfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e72f7be-8f4e-416d-94d4-74f04d87f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f7a03b-da77-4dfc-bbbd-aa4bc9faef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eff5fff-92ff-43fa-aa7b-b4e6ac4966a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b3878c-0d5c-4730-ad6a-1c30261cf836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3bf77e-5aea-400f-b977-17931f1cb3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ef857-1642-4bca-9ba1-2c8bc71cc0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7367fa0-d122-4136-b240-d7d54a7d507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bd3f7f-f389-49e6-a37a-1dd6b7c2fb96",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3227a3c-8f35-438a-8247-f5b16a7733ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58731f26-872f-4e97-a1a1-2fc86dc9bb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab10e42a-ff93-49e7-8387-a9195ef0b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebeb24-7cc1-40e3-aa61-9198f99d3d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1743ac-254a-48d6-9581-e770fcd1972f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e469198e-87d1-485b-81e9-e88d538e0c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bdcab6-a707-4cf2-b9b1-bca1a4c9b755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b14e40-1c61-4212-9824-9e63e1263287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d242b4-9826-4f9b-baec-219fd8678a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65addff-d558-41da-8d6f-f1c92a3ffcb0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfa34a-6570-45dd-9a68-209f3ef1fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32adafe0-e42b-42f5-b884-47efec817b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f9f6e8-a059-4a4f-9045-bfba0522b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cef662-6468-495d-b569-ca5ab177a289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c908f-8da2-45d6-97c1-4aa956c425f2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f2582-02ce-4cca-9ba5-5694b70ac9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c5bc3c-d128-40b3-91ff-838a0d798246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b66aa9c-a725-476d-9765-54d0150df772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc31c334-d751-472b-bbb2-d49aa6e0d399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bff8c674-36dd-4d5f-8219-cb44dbf260e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3910597-2968-43ab-9ea4-64e53ce4ac89",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87587b0f-feaa-4699-a36b-58eadb8fc0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b75eef-32ae-4c36-bed4-77873abba45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd9dc06-2629-416d-9e93-0246e6576792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed411ad0-2323-4783-a80d-6545857ba0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d066ee-33b6-4351-9894-3865b0ac6736",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331ad4a0-af0f-4095-aea2-0c40c20c68d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "529abc5a-a420-41f5-ae7f-929efc92b477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80534216-45ea-4469-a9b5-131bec5d430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "418ee793-707a-4d2d-b822-fa5790970497"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27991037-f169-4748-a9aa-eb47b78099a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cdc75d0-9cd9-441a-85c4-747ec57ebf53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddfd3406-f350-462c-b59d-3767f95e92fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81cdb559-d57c-40ec-8440-386f00f37cd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faf0e6dd-ba55-4e4a-b885-061f497af016",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48bbeadf-1cf7-413c-aab4-4bd9f4bf36b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce3567e6-c21a-48cb-8540-58d4b8900a8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "371a8e79-240b-43d0-9c63-761dd761df07"
            }
          }
        ]
      },
      {
        "id": "a3c4a1ac-a327-4fc3-a9f6-c4c8b5de3b2a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "176ebbda-5c03-4513-bc38-f877b4f1bb83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "024386b3-d27a-41d5-83f1-601896e53faf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "611b5d90-71b5-403b-8094-7dcd6a451eb8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9ac7ff-27a8-434d-8d3b-27e665e96a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2419527-4a36-4549-b336-ad9b188e54ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f6a398-d170-489d-b7a7-292d9f42a6cc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51a7fe7-69c4-4556-91a8-cf5fa796be80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce83e94-16ed-4c4f-ba87-9ea739849c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bbf60b-ad7b-48dd-a065-00e190841d42",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aedb91-a698-41d8-b215-8105efb1712a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0df17b6-7a51-4a49-bb51-294893cf860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9548096-a196-49ea-87c0-dbbe171bfad6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2797732-3de4-45fb-8636-937f8aed6065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bd1faf-cfe8-4482-812b-128326a39f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a1058b-b1a8-4412-871e-bef0879fa9f3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eba2991-a4a4-4db1-b5ab-d0458b22895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568ca9e5-df5a-45b8-8fd9-68531538f3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb976e4b-1b12-43ab-a889-bddd2eecfe04",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d073ec5d-132d-42c6-8591-b44a8feb9b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4a74c9-f39e-4327-ba14-3de00d00c6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e363d52-d9a6-452f-878b-66fbc47af775",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16465188-2e2d-4967-abda-1953aa067846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdb46d4-a956-48ef-bdc5-55263c012aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f18185-7dd8-43be-8c0c-cf00e759bc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7acb11-1c62-4125-8292-442321181c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1495cfec-2f6f-46de-b3ab-b002c7bd7820",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01de8570-435b-4c2a-97b5-86ee4928cdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75fd83b-c679-447c-bc81-dc26f2e58019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06a1221-b091-4f81-b90d-dcc981d56a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0a410f-f000-45eb-8002-62b285d74e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421bbedd-30a2-4442-9baa-c1b1f5476e82",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11961c47-1453-4da0-8832-24a372cd533c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df02f67a-04c4-4ef0-9d0c-db5312c76251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5e0055-cbb3-4d20-aeba-deae49ac779e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ff5d9f-ffcf-411d-9960-ac7a31016fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f75ac6-caf7-4e2a-b676-bfbe59481db3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3b05ec-1ebe-4dc6-80a5-b4ca0afc7a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62f3752-ed15-4db6-bf27-eea14d65b80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb53fa2-203a-492a-9b31-2cb13e67416d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb4a1de-a863-46c0-ae88-0ec1a3dbd4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18817ab-c4dd-4d4e-beb2-c5bc84d1639d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c468c8-9f38-485b-8148-d53f8da40478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4333e3b3-e859-4b04-9391-8e2b1d4a355b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da38fcf3-4102-427f-b765-b24eda18ca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a112be67-f559-456e-ba6b-042c772f9ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0788c05-80d2-473b-804f-f6de5edf9fd3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17846b05-7c7c-482f-b3c0-edbc63c0f46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871aab57-6a2b-4fdd-b19b-e50c28264947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80768e8-c0cf-4f8f-a238-adffe90317dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73b7641-ceb0-43f0-be27-a451ada67135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c27c06-4299-4b72-a8b6-8f432cf5a142",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f6a6a-96b0-4f5d-83fb-9fac746413ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b433ae83-df13-4906-a4fc-678216b20975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25d9b9a-bd9c-467e-9221-1fce2f6c996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd36c50-4ca1-42e7-82b3-88546349e2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338cb8ab-fbe3-4853-913a-72c5f9fed2d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7b644b-915f-411f-ad55-d9c6ca2bc434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348bc8c7-72a0-4bd7-8f14-e49ba9fde181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc6bef6-d33c-4be7-9933-ac87214ad008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cb6b5e-75c1-4a75-aa95-f5e7176f8c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c929e0-5fcb-4015-8561-566720094941",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82717f5a-875a-4061-ae6c-02494889e204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8070802-a27a-44e6-8d3a-cdeee0d2e6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561b352-27a0-421b-b7fd-2723a9db24eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ec2439-0874-4e67-b405-7d617831af14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c97cb24-3cf6-4076-aa14-3ac5f4baffc4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f190fa-aecb-465f-a44a-14df64ef1fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8b611c-9339-45f4-a017-a032a615086c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78121833-66d3-4091-821a-dbb9abaf2b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdc7f57-aaee-4d8e-ac4f-9443a85287c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8196e5-1675-4130-825c-d7f47963f90c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343dacdb-a40e-4408-ba6c-68511fd6fe93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b80523-28b7-44ad-84a2-f03f3e655cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6028ca-8930-4411-a8bc-aba2a512fd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadf95a9-9be9-49b8-8c05-cfc917848b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431a32fb-6116-4c81-b845-5fd3a264ca72",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6588df2b-3196-4127-9461-e74d195ec80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663e2478-a7df-459f-b655-4a9284bb530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddae6448-948d-43c6-9084-2dc9501740b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27978edb-bbe3-4317-97a7-9d9c829c2da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4a0ce7-e9f0-494b-80ba-400462f19bbd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df25f706-f0b0-41ac-9d70-b2f0a4d01afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4522bd7c-b56b-431c-928a-711ccdd80018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08651b9e-f639-479b-bd0d-552542922946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f696c2-a3ff-43ac-9833-e51bab66a964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60558e06-d0ec-48b3-806a-f9164f60d049",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998c597-eab9-4636-a9e5-e63d65ba4065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35c0166-7080-4ebf-888a-1bf291756793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf67a723-192e-461d-ac47-a9e785ed771f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8862f33d-8c37-4527-8c15-ddee1a822715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f12ce5-5780-4b1d-bfa1-701abbe79d1a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d3329-aba0-4168-901e-648dbe50a14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9288e5-4d60-4c6d-9bee-4c72a3e75cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a89dd6-aa1c-4f0a-bf09-629a4d64f278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffccc3d-741e-46f4-bc5c-a8a6c8a9eb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac42e3-bec1-4f5b-b84f-2fa0dd791a3f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703b9d8f-05b5-4d0c-90b0-212a76a4b88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06f9acd-3001-4178-8e6e-85d040997f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f766ef0-9a68-4c60-b30f-304bef259f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c30b25-2bf9-4527-bbc0-5a66d7995115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90538e9c-4888-4df1-924d-872af872dafd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54604ea-94b5-46d6-9a47-e87952431700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d18a6a-1737-478f-8588-d61fbb40c367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f1a49-3ced-4140-ab73-4948feb6d472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58252d7b-fac8-429f-b2b2-eee0aa3898d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db862de6-6b1d-403a-92d0-372b869377e1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ae9f32-47ab-4d1f-ac0e-ae5775d55502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcee218d-41e1-40ec-817e-5a693c11421b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8841db-cfbc-4f5b-8e31-551eeec4099b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc6bde8-1a2a-4669-bbee-4dc32ac44460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e42ef57-cd46-40b3-bdc6-a42895b88a35",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4505187-58bc-451e-90ff-4d3e47b20010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb3846f-41d4-4efa-a495-2e4be8556bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5553721-52b3-4297-86f0-e48a5c27a099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606023b6-0bf9-49df-aafd-87b35f50a069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b264d24-c6a5-4685-ab2d-2e4116045599",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1436e9b3-4ed4-4844-8d82-3cc4f81d64c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5336d55f-5fd0-42ad-8f34-6342a1937fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e15ff2-2948-48f6-8c2c-4438a05fb6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0b30f0-95d7-406c-b5f4-53e2172e1b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2c9b2-9e86-4a93-a25d-4d52c26eb6d6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6ea2c-8760-4281-b210-a6d1a9afc0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae065fd7-78af-47ce-a99f-242eb9e74634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a3411e-3f27-4202-8402-863a650bbb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fa489b-4e2b-4bc3-a27f-fe5525936d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8cb30c-07a2-4bb2-a8da-007a130bb86f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d709ae-0522-4dda-8212-8b212d9dbb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63619679-fc50-4ae4-8f10-527e33da9ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bba575-8efe-4d32-a21e-aae5d125a8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b611c16-4b23-488a-8daa-07770cfd0ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d836a67e-5731-4cca-bdbd-b012870bf84b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab941a1-3d33-4ecc-8117-5658cec8c85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f88fcb-71e6-44bc-a608-07ec6dbf4594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b65ab9-b0f6-46f9-b44c-1b59abe4554d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779d860c-ae15-4b79-9430-4ae2f7627cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5027a1-0f55-4f63-af00-35e1a5ed601b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe3bd35-b0b7-429f-99d0-266c4d178a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb13bf7-60e5-4545-8b38-25b37b8a914f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e019ca34-7ddf-45c7-ac1a-d6df2e09a2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f70990a-c36d-45a3-bab3-2a817b4b3630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0daaba7-00cd-44b7-9b10-eec44df977d3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aebf33-b329-47ae-ad58-164a338c60d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717cecd2-d807-4752-a4a2-6c02ac3007f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e5f72b-301e-4ed2-b9d6-10dc57775231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72126b2f-1277-4942-84f8-3811696ad0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37354b60-9aa7-4332-998c-d7a19b42baa0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3424fdbd-8e36-4c95-b8f9-9d52a55b55c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd41593-a96b-4cf9-9ced-656786ec5b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c8018f-6441-4cf5-aa9e-10d445a412df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd23739-12f6-4bc4-a49b-c3f9e7915e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bf1de2-6135-4581-9b8e-f53693cba788",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6210c9-dd96-4abb-83b3-7e1fbb3a5453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca0e660-8eb3-4cc3-98c3-60a2fbad5aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37d0d89-a178-4aa2-9d8c-3c46e1a74683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d4a23f-7215-4570-92fa-85e255a41373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a870aee-de68-4eca-af4d-0255d631d137",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3447380b-ada0-4bb6-a82c-72f7cecc866b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf91ba4-19d7-40ec-bdeb-6525d9fdffaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82006e76-b63a-4543-9f6e-610041a6b470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b955691a-77f6-4fc9-849a-f31b962200cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef0f88-b1c7-41b5-af39-ef291e710d87",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832ab2c1-b5d2-4f69-9f78-6bed5045d52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d20d6c8-0593-4dbb-9973-ef60d7773d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a94d2-9b65-4fd9-80e7-e036be918737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a6b997-722a-45e7-b213-fa29ae9ba705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ad64ed-14ee-41ce-86cf-24613bbcb125",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100acdd6-bc1a-4ee4-83d5-21f0e1adb08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eea2764-e19c-4084-89c0-4d175f973407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc67b2a-2dd8-4e3b-9139-853bf393d1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354df02b-ee56-4dea-bb3a-8f3da8fae68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688e98f4-3a7c-4f04-82c5-68620581e8cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e253ad-4110-491f-9fe0-b2c68582950f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67df7a60-7c31-4107-836a-422520ebf83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89068d13-ca3b-49fc-b7fd-8c70c784de9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93e84c3-67a7-4289-83a6-545112fdcdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65b80e-7797-4c35-9e18-41dd4485bc47",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711cf1d5-ebb9-4357-bed3-436a97417a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f8efef-3715-4089-9d76-78b9bf0777e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c5633-9917-4e21-bf70-b6a0b5d07d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ec7cfa-28dd-4166-9d49-fc50a6c1c0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4ec497-ebe8-4f80-93c1-fc31f4496326",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582214c-724d-48b3-9996-643fa6237293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e097fbf-dfac-4bb3-8499-2d1bab5f6839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2e38e3-becf-4e58-a057-5435b1ee1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2ea9fe-66ea-446c-978d-e5ccc03e2f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0663298d-899e-4a5f-9e8e-b77e56aad040",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec233e1-187a-4459-9997-86b9b941296c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2062cfc-96d4-4c27-995b-e9e2e7b4b78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdc064e-f0cc-415f-9d86-4a0ea36ea0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a142c661-01d2-4f94-b148-5de992d5c913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a30e2-4fd2-4ef5-95e7-fdf0a484a0cf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b45ee0-4318-43a1-9704-35c7895914f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b013376-7d3a-46a9-b994-f5a7387932cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9646aa4f-bd85-4c80-a802-6bbbf640e61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ec7b7f-24b8-471b-8d9a-74beabf031b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab68d84-5dd8-41e8-a280-2b8d699e0802",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d59fe3-2fab-49e7-baa9-16e732d1c2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d70179-056f-428d-b200-3851a643dbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e89615c-19e1-4e51-9229-a16fd5d4929d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b9f935-0741-47c0-9d36-dd988a764ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af2880-eaf8-4ed8-a2cb-a24d44e83519",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cf749a-33c5-456e-bfa5-145046ef03c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a603fa4a-7cb0-45b5-9d44-9af4a665af56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91446f9-ca37-4b7d-b2ac-c48ecc3d5e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b0bf25-add0-4f81-8025-80c521e17a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f2e257-9f5f-47ab-87c4-d9a3a3a8bcb4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6e0417-5a32-49ba-b085-7a7d82f83eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3eb255-9f43-4cab-9ba6-89cab0bd6649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc2f41c-060d-4e11-a2d8-1c889ee46298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4414a18d-ccfe-42e1-a6ba-497dcf1853c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c2a8b2-3834-4721-a981-52240911d076",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b226bba-dfbd-49a9-afea-3468f7e38515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c018ca0-bace-4ca6-8be4-94411ad8738e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd199aa1-ac7a-4558-892a-e566a8d71b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92d955a-c4a2-43c3-93f1-05c4d36cb154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b09747-c783-40e3-859d-f38b806c37b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c839faf1-a05b-4798-ad8a-98d1cb13d499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28462fee-b66f-43b8-a334-48ab606b041a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a77a46-43bb-4787-90fa-794d33591ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4adc78-4c26-4ff2-9b7c-e0b0763b0813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766e4cf2-1562-420b-a707-91a1a00d579c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5bb438-3cb1-41db-aff0-4a93eb740aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c33a6b2-ea37-4492-a837-d10b032935bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89acaf14-c5d9-4c7f-87bd-c4afacf4c397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5da91-1434-4b9c-8abc-92f8867a21b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1074cffe-3fec-4ba7-8711-8938210c10a9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f4f01e-a309-4e26-99cf-1e54b5c11751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec981f09-c400-4cb0-b37f-b409ad96fc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642fd222-3d65-49c3-93fe-571e96392df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a462e23e-5608-4df0-a6e8-6196a799027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df972c-d67e-4fcc-aada-f9b9b8466ca5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754f5e42-92ed-4118-954b-b2af90b2f5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d525617-05d7-4787-81ca-59a4403046a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5301074c-5b48-497f-803e-a3d76ac15e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dc23fa-d72f-4152-9549-ffccd2046d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b744ee-1cfd-4012-b552-6430dada4ec2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f870d51-2bd4-4b0d-9973-25c8ad06abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06647877-8253-44be-a7de-62b1e21ff9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851f43f-fdf2-49fb-9b8d-fc8ebe6323fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3957cec-d350-477e-911b-84358c717159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa8a518-20f2-4160-bca2-ba4a66509da4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca2b6a0-6cc8-4232-990b-a836655476d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce73ca9-5a25-497d-8020-f8b4fb068fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22a6a21-24e3-43d2-8f8d-7ded78786c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ac077e-1269-40f1-9ed9-0e0706c37639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554caca9-85d5-4317-b241-1d9445a6c6ef",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161cc3eb-5ce2-41b4-a97e-d802f7fece5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d45d0b7-bbaa-4abf-a847-f9277a02f9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442135cc-dfa9-40ab-b235-3e265902cd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d5c453-c032-4b9e-9e5e-4cf00932bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b7006-f1ff-4735-85e5-4f86550fb966",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67ad62c-d4c0-4751-bf08-d642d563e326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710e5533-b4ad-4b64-b365-7284f7392afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c2ec2-5954-40b2-87f1-bd2d81bd7fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c9bd3e-9c18-4abd-a473-09232581bc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daa619b-5f04-4e6c-a7b4-6df045d807de",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51e3ae-cb45-44f0-976a-1282ffc1ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca5e78b-e478-4f69-937d-09a40174e786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cb85e4-0c79-4fa8-9506-f755e001b04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3508f52f-7c48-40af-a99e-3fca527f8f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4f1261-9387-4006-a7bb-97eaacd7ad7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a9a933-e76c-4657-a4df-6ade30e2f97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be517156-b4ea-4583-92f9-d9092031a3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32df78e5-66a8-4d3d-921b-c38295a9a1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b2d6d6-c9db-4752-8925-11d3b8f8b7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5c4169-bda7-4d85-8cfc-f8c78c33c30c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10d8e5-350c-4ed6-8e75-00670344a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7024cf8b-0ced-425f-89df-04f15e123ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2139553b-02d7-47ec-84be-a1714d86514b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748f78a5-4f00-4ec3-8599-7f57f66bc078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792d5b3-3de0-4ae4-a4a6-07fd2b8f7e53",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dcc3c0-b9b5-4281-8126-4aab9241b758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7366a4ef-66d7-4d6f-992f-6d466e9f670f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56ad6a8-4996-497d-b1b7-16fff498aebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00262f59-9856-40a0-9753-c85bade51b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f103e2-eef2-480a-ba5a-dcc11dc29647",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a42942-6358-42d0-b682-2d063977f4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d66691-5806-4aa2-bf30-65a75e54cc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109e36e-04a3-4a1b-841f-62110ce0c723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cf845c-f3dd-4029-8c33-ff609f8b2780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbdfc5d-8e99-42b2-b8a2-1664c8feb881",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df69e455-a2ff-4797-9ecb-2c51c322f20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bdf7f6-3c17-4505-8293-0bd3af8ca763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1475445e-5fbe-46f6-97dd-0e4d8b717354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c76e661-34cd-47c2-9f0a-bcb08e0d5c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4a1290-c377-40a8-8c76-a9e23bdb4219",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cfb009-beba-433a-9ff0-0947ed900831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df40731d-83b0-4efd-bfbb-41e7906b6a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec464bb2-3983-4e7b-8b29-005078f3f8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0184768-4cd9-4a8f-aa38-3e747388b7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3fbe47-f912-48f1-b819-c89e7ef73348",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eb0047-29fb-40a9-a6a8-1d6c0cac5467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51277b7-a399-4d44-bee0-5dda40b270de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7a5e79-3c33-4f68-b529-36f829327aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd70d89-af7a-4618-b21c-58944a865a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8f44b5-fd65-4166-b112-65fc23d570a6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cde8bf-4eb9-421f-a840-2db7fe7867e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cf74db-54c1-471c-8d20-f323d96e1bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d9190-7faa-40c3-9602-a66dddc95a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062e220e-3170-4eb0-aa38-1c47f31e9c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d291da3c-7cdf-43bc-baaf-b16424141199",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439bc872-c07a-4f46-b954-45e96b0861f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621aca5b-c0e8-440d-a443-226c68ba9e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f3a86-f02e-4408-8eb0-d77fcfe7e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94df9142-f5f0-4868-9668-3a560559fbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1706ffb-5c08-411a-b4a8-974dbc1b7ea8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a9f783-0f87-4a03-ac62-c8c5f3b102eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc27744e-3c25-4b40-b19f-d69a02e292f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb851a2-cd01-4af3-bfca-a6a1ba6954c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b76116-2718-4443-b79d-bc56c34a15e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe909b-b691-4917-902e-a9c36d11d32d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b86c8e9-a4be-45b2-b2bf-d494c4299146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989fa331-8fde-4c9e-a686-b4bee500c863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5541b4eb-71e1-4130-8b87-9e72394433c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcfb2cd-e11d-4abb-9710-fd70e60f4d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac95f55-0f04-447c-9e0e-fc24ce0fe8fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45ddc0-fa70-47e9-bb53-790345c7dc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abac802b-7469-419f-b8bb-6eed2af0f3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6016c745-6144-4ff2-98c9-70580a8c9f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fcdb24-267c-44e2-b33e-e04481b3582c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d42780-dbed-4e4c-a986-419bd53c9282",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0494d3a3-6e82-49ca-a0d9-00f483f11490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6dce00-5ee0-4067-8eb8-987c681bf53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed2724b-ed43-4468-a4c3-4ccff4c53440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79ec864-8009-4ef7-9795-d5cfc3ea4bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dbce38-e22c-4f50-ac00-fbb4dde6df18",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a30c88-a38b-4703-976c-b0801a3c4d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f9e8b1-1a7a-4749-ae86-388fac37b9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ffd5e9-a245-486e-a5d4-d3a0472569b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e6f5db-57de-45f7-8d0b-0e34edbff41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747b08c9-a3c4-4f77-bcd1-ef955c800c7c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561c384c-498c-4b79-97aa-380e2a0d64cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd07ebb-5151-4ff7-b576-b9b5263f815e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cd031-efe5-415a-81fd-7c478d1a9df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1125f0f-ae20-4c4d-903c-16135edcc2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a57c77-ae86-4882-888d-f1b3650b6094",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e141e8b1-45e0-4228-939c-e75ee26a6d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b65f498-01c9-4bee-95c0-9856fbd5a5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d34d8bb-699f-44c9-9753-e2ab6a3d6df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287fca52-0c58-4d7f-a77b-cd141a53d901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b4f6bc-e1ae-4187-8264-c0ed27b94e69",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a029e109-06d7-4d24-9dd1-7467ec7ca880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691d576d-7d88-4e71-b8e8-8f3310e7e93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c882ad-5000-4983-88d6-375d6878fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfc386a-5269-441b-8b86-f353e0ff1152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65defbb0-4e19-48e9-989b-7d1f126e5fba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f52d662-bcab-4aa7-8303-ffb7154f5a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4d0e9b-c515-4045-9a8c-f37b9f63250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d85132-d766-4444-a26d-e16f9141df45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcbd272-bea8-47a0-8cdc-406bdee07d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530f2afc-9997-4d4c-a875-001a37c3f12c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbb7e17-7ba7-4649-bdd4-dd5ec7a4796b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dba6d41-9edd-4d92-b65e-fb72885bb5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb6050-912f-4c89-9406-1628a23fcd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61cc715-5d1b-42a3-9d34-6bd19d277010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718ba082-6c4c-4251-a87f-57ff7880e54b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525b381c-183d-47ed-9e99-4f1304740bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed66611-3dff-4840-8899-5ab37123a9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3900a1e-f261-48f6-ad93-10ddbd2293bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2468eaa7-0f97-41f2-a776-5db550e5c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8201dab4-b7b0-41b3-bbad-420df862d0a3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1ecf1-1465-450b-945f-202ce7fd82c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85edb2dd-d92d-4073-af73-c5cccc4a1e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddad00a-164d-4f16-abbd-305419e481d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d4f8d0-b382-494e-aa62-d186a98d71f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedea1f9-36ef-4e62-aa4e-3c064ac7dcc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ca4383-4995-4e69-9196-dbf64e642e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6032811-34b0-4d1f-89c2-0be2fda8bebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde190b8-2364-486e-8cb2-0fc471c5875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfb8409-ef53-4a5e-9e99-c9f525f523f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c395315-c927-41f3-8ccd-e9deb2e3e5c9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c61c17-c9a7-4c24-8734-acc283f7dc54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aece24be-d85c-4a20-ac21-52d7365df464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9f945b-a89d-4aa3-813e-9cd15b7dc8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3512cc6e-0e52-41fa-b54e-c4d83edcede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aca4359-88f0-4d00-9732-593154a572a1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5147b586-6095-4f83-be5d-1cbb250b78ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fed99aa-48b6-41c6-b26d-fca3561b4b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a55922b-ed63-4966-a1a1-d3668bf36911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7318be6-c334-4383-939b-378aa2d55296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d92a73-18e8-4bd8-bb1f-9ddb875c8b85",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb49539-3fc8-4c28-8e30-b9b99ea9caae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c864c58a-b9bc-4a50-9318-7a16b7c1fe0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8013d856-6fa6-4ef8-abfd-3ff499179b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570aa0a4-1aa0-4ce7-b17f-5ee29609d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfe56a2-85cf-4291-9d8c-7606269fa008",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1bf85d-48e4-4db3-883f-a748ec4aa285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e63431b-4ce9-4122-af98-fc9399a440b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cff1ec-8e6f-4ca3-9522-0731035a1643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15da41d0-b727-4a47-954c-cba3ede1c03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6907c9-96b7-4812-84ec-172c57d1e8f1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33234973-eba7-496f-b457-71391ca13e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79744bb3-51a3-4953-a95c-1a46d8793371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c0bef-dfbc-4299-b398-ff31e5daa684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a048d72-1087-46f5-a01c-cb82eebc2ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1871a036-1e15-4058-9131-8cbf832f4d72",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c37d7c-0da0-45d5-95e3-5c2e1df38144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887c7909-4f20-4baf-84fa-51d5cedeb198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bd0979-ea68-4c2f-9fc0-c7be88b051c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f58262c-7560-4a0c-9c1c-a1d9004320b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bd879c-5920-479a-9def-11d8b44a8e42",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb6ad76-d578-4c2f-af97-8ce19b31c23a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2f4f36-3371-4e19-9db3-0f05edfc001d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57d13f0-7127-4819-b00a-5ee5c4a66934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31afce10-bcf0-4edf-9c51-e60be7743c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6fe2c3-0e15-4b03-a88f-b8544952d068",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51c3c79-9de5-4bf3-8522-bb81f94e4a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96be21fa-cc53-4553-9720-d79aa16cb557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7af7e3c-828d-48cc-baa7-2568ca07fbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3622f3-8e49-46a2-a53c-3a0a1e6b1191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ac0293-ff01-40d5-9475-c83d578c35bf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73380418-a89e-4784-94a9-f24089003c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0d6345-873b-463f-a517-0574b26843a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39805b22-3007-412d-9bb8-869249b5f498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0616970e-d72d-43c1-924f-a6693045562e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e6105-88ee-4834-a6f5-9c62074487f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed7037-0903-4f19-a028-6af5cba4f581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9800e3-4baf-42f7-893b-272b0a83ad82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9ad1bd-3dbb-4620-bf35-c6cafaf9ce97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933a237c-265f-4ae1-a482-0faf434216a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b153788-0260-4534-af6a-e983fbe9b8a4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e584f-6bf6-4d66-b21b-d0bf5adc30e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6dca56-9ecc-4cd4-9769-720c78d9aeb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbea2ef-af94-451b-b4ed-594ad281a431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90415733-408b-48eb-b379-9b174c547449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80542daa-cf27-463a-a934-3c5cc3c22eb5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f399336-0741-489e-956d-e29d2680b74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32e37e1-5eaa-4935-b078-32b6c2ca2d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d48645a-f436-423b-8a82-5a1b45698914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e901ed95-fcd7-4e92-98bf-6558ecacceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc1b178-e272-46e7-aa39-9ef2fdf71997",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c45424-e9ad-47c6-9c41-d87d7933aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edcead6d-c77a-4ef1-b415-79368de14955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53758c83-b4d9-492f-b92f-7988fd451402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e81b682-a9a7-4e8f-9418-0c1356410635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ea6ced-2049-4676-95d7-3e8b992937ae",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c845ad29-724c-4153-a277-127b5716dfe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ad97e9-4247-4c90-b141-33b657cf161d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a00b10-cc9b-4b2b-bfba-d3d40c7b56d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4370fca8-7d9f-4c47-98b2-1e0f613f97bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5220fb-8a75-4c82-aa57-5f5fb60a5be1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ac254-d053-41a2-a6d7-6f186d09a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80375a01-f3dd-4bb1-9fb3-e90100d060af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df426771-f957-40f9-8b21-54f28be7a642",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00199dd-f6ad-45b8-87d4-3cd97c9e0f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62745e23-fc5c-4cde-a29b-a31e05494795",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c2823c-7f6e-4564-8c49-00827d6133d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4968505-eb32-4cb2-be01-b3449b9f84c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f37ad70-9cf6-4290-9e91-b68865691392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f645a7f1-4077-4108-9d53-6e6bf0c1e2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2bf8a2-2784-47a7-8a20-cef604151207",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba22a6c-e77b-44f3-b950-4703c8a506b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5096eed-905b-4984-b423-9f59c5c746a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0481028-8e3e-40e2-825b-b49c75257596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8916f4d-5e69-47a8-9d54-ca330353ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe92c93-d4a9-481d-b3bf-95de6021384b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d169607-1b65-4836-bac8-8a38e4c98b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c914de2-7318-4e87-ad21-47336e4602b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9049710-e41f-4d8e-8468-9e8406840146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75155a1c-d25c-4db6-9d53-3f5faa3d0e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6444dcf2-80d7-4c66-9407-f7b026be852d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d21fd3-4bef-4f4e-8af2-067738a09c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59116b03-6642-4a98-8742-a5c6e0c347fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa5af93-9e43-4715-a12e-bc1d06b3b423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cfa1a9-c97d-494a-a5b6-211e2b6150d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab240747-c5f5-465c-9e1c-ed02bf66d4f1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9b2a9-adc4-40a0-b504-d0147b3b29bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0d029b-5c20-470f-88e0-77a660e6b8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f649a47-92c4-4311-9b13-8120e52cee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f08298-1369-411c-a465-d39fbab970a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56234e5-f09b-4ffe-8807-fb2b2765e299",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee4620-d45a-4a1d-b8a1-dff2c54e74b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffb8c81-3e22-46de-b4f6-572060b08e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fa4c6c-def6-494e-84b8-a0bbf17cea95",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67e5151-03a9-47ec-a9b0-8e43b23fcbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a787388-461c-4a8d-a767-6c17370b9b21",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d551a7e-f067-4409-97c2-3991bec6284e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91306b2-4f1c-4c20-ae97-cf37d35e2449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309f7827-8c6c-4c8c-aaf1-6a900c6d93be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4b6d39-3915-4974-a0b6-9137fa404173"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6481da92-b53f-4af2-a1ac-f09064be8f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a871f4-384e-4d11-95b4-08d8f41a71e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f46d255-cdef-4f17-a767-bbdde61569d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46be6bda-bad5-4731-ae51-371f04540982"
                    }
                  }
                ]
              },
              {
                "id": "0b4d6c00-cb13-484c-8d28-793daaa6d347",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6dba104-d04c-4b67-bd0c-5c1ce6348310",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57153ef-74df-4566-aad7-61cc18fbce7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "49279a7a-e815-44f5-90be-0e790d9fb8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04464f-b06b-43aa-9b08-0c30f1bb7a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "560634b5-2efe-4bf4-b009-50543793d912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9189c1a-9559-4e07-9038-c71fe521ec7c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0d049f-ecb4-4492-a17a-d7616af0446a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5c354ee-b1f2-4989-8a35-d28302190e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83da00d-b64b-4911-ae23-6ccdc16f1d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "843374af-1353-4b66-a46b-97b10011b7a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c4442d4-2320-416a-bb23-6cdf02c93b0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f9db8c-546d-438e-ab93-7249ef87c939"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc9bd3b0-0784-4616-b853-2118b706496a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b38a273c-3fbe-438f-9424-d17d02563a58"
                    }
                  }
                ]
              },
              {
                "id": "cec5b79f-aae6-449f-bfef-bc4298fed2cb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4ea8277d-ab84-4899-a477-7dc895cf486d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a0cb8b-c983-43d4-bc86-90abd7850754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "332ea084-a948-42e2-bc38-5ca18dff8bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f953db1-abe3-4195-b57d-ff917992ec3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632af2de-56bb-4769-9954-541276bbffc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de3f10b5-e246-422e-b798-d2aa4e42bbc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2191f7d-460b-43c5-91df-95a1fa2ddd53",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c20db8d6-e251-436a-8f86-f3f7f21e45b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6aaf475-4ae7-487a-a125-1cc8ef1a4937"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae827055-48a2-4927-bc94-a67130943cf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4221278a-6285-4b5e-b860-c4f64582a55e"
                    }
                  }
                ]
              },
              {
                "id": "9214729c-3c1f-49ff-9168-ac41acfa4cdc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77361a9b-f66b-477a-8e27-b8715822352c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86ed74bd-de91-4113-a1c5-524cd3377594"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0611e57d-7a3b-4028-9025-7ba536b81d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a5c8023-9bfe-4847-b653-ecca1771a49f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46c3e075-7e4a-42a5-827b-3affb0d087f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6e3d3171-7694-42e8-987c-d4ebb2d566b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11058d7f-82db-45c2-bacc-4e3f06621045",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57a6dc6e-a4a8-4901-a89e-91d37eb1ec90"
            }
          }
        ]
      },
      {
        "id": "00e57c46-bdd0-4c4f-95cd-35efa144eeb2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5a0a9436-2eea-4430-9276-96e8dfcc5da4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25b3ba46-1366-4e51-aa5a-06899e8b5ee8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589e7264-6731-4a1b-9d3c-97e105433033",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9c8149a-e614-4f3e-bbe1-7ec69128c127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88e8122-c92a-4aa9-b5e1-f5ec357c6946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e3c765-fbe2-49a1-ac84-295cc2181216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552acbb-1b6a-45f6-9f7d-37ebf967bc18",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b36285-dfe2-4423-964b-12b78daa73ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa1106b4-c1f2-4f87-bed8-40c497b118f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ddf6b5-6c89-48e7-8218-0afc956eee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1237fec1-ddd8-409d-a037-032d645e0a2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e30c2295-cce0-4a58-a738-8607527c8f1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70b6bc45-7b7f-43a2-b750-44e860645de8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9d6b0d3-06db-4553-bccf-d98a24690fb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632600c7-cf92-4436-b56a-550952bf538f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c04fc18-0b99-4666-9a90-356dbbc38b4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f66d50b9-d675-4854-a441-f4be216960e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7961c38-8fcf-4e80-9700-502cacf013f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fefed7eb-dbdb-432a-90f6-c8af8f2e4389"
            }
          }
        ]
      },
      {
        "id": "9af367fa-6526-47d7-b508-3bafc174af10",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68b7f3f5-e839-41ba-a819-65d64633ebc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2c66ddb-eed2-43a4-908d-aff85584613f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dcb4cf4-d784-48f1-8ffe-6a010536e654",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca238fe-df83-47e8-8606-95a307a060ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e00501b5-4739-4b61-a80d-24dd66797c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94a91c2-9ee1-42e6-8231-d3dcdee625f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "271c1d8f-5ea9-4cb5-a7ef-0e66089f86a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd23929-ef0b-4395-96de-b6c49eb200aa",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cb5548-9f99-4eed-a9c5-45ddea3c2f8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0f85352-c3af-402f-9eaa-1ea933a4ce69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6d3bc3-9d11-4e8f-ac6c-20b32afdf476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b020f276-bb07-4018-aacc-f19a4b37419f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbd6bc24-23fe-4abb-94b9-04fb91775bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df97cf9-a5ab-4a30-ac9e-cad72b002d1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70743152-d128-4257-a14b-bbef1d485404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6adc09fc-e833-47f8-aab9-6e9b94d8530e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c47cfa-6993-4f48-a1f6-e1ed77d46d54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0f3d346-5026-41c6-82f3-e1cde7e84e39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e14edca-737d-48ea-86b4-9596ee519395",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a26febe9-46d7-4708-8278-29ec6b57078d"
            }
          }
        ]
      },
      {
        "id": "00a84af4-4275-49a7-9489-b39bd18dcc30",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "15828a2d-bc35-467b-be23-e9fd8971d94b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad032c6e-6728-4300-9cc0-3a99138f5f26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf862b11-d3e1-431e-893a-b2bb87a0ad7a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4af1f-09d2-463f-bb50-194ade1a1912",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e018d4b2-8bc0-4882-9c4a-0f079cb8cfaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72086c9-beb2-4199-a61c-a9b29ddb2c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ed8828a-d552-4fad-83c5-4c9b0ca4f02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e748ab-2405-443a-9746-42dff94ed60c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3454f0e0-0e48-482e-8a62-5f396b94da59",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c24b3d7c-0e42-4df6-870a-f53988b63632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4968c880-6fcd-4389-9ded-560f2c08b607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9190de67-f1a9-4501-b46f-e1567270c70e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6711149d-c8b4-4e75-9ad3-6f30bd9d1c99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47151ebf-a702-4754-945a-9c647d9d06a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e7d00e-d702-4da6-be92-e7e663b429d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b278416-85f7-4981-9995-c84988ceefa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1dffd9e-9197-4030-8580-d898bf6121c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c93cf1a-85a0-4a52-b994-3f5055db6cb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "484a21c0-ab92-4fe1-a787-50b0ad77ee7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dffb31f7-92e0-4be1-a160-87a8d0d816eb"
            }
          }
        ]
      },
      {
        "id": "9ce7939d-828f-4808-9dec-d4baa5c94938",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33a8fd20-2ede-467e-80bb-905c4a9f0774",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a8fb0e9-2bcb-4fde-bd92-1b931fedd59a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c983b0c3-3136-4091-b835-962bc9a98cd3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc50e206-183f-4bf7-a9f1-6681429d3053",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af5373d0-2381-403c-9539-8f484b19a08b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.0419847328242,
      "responseMin": 5,
      "responseMax": 7120,
      "responseSd": 856.0475002386049,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675471050496,
      "completed": 1675471231570
    },
    "executions": [
      {
        "id": "c5abd89f-7c90-4aff-9107-b6211e64bec3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c16d3c8-e1be-4d03-aecb-1ca52b628b8f",
          "httpRequestId": "dfb5ef03-63e9-4be0-bd9f-543833d9b14b"
        },
        "item": {
          "id": "c5abd89f-7c90-4aff-9107-b6211e64bec3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c2f16a44-4914-4f81-a76f-7a1c2cac3792",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "6d0d7703-b366-42a3-ad93-f099a0f15c02",
        "cursor": {
          "ref": "cad30cb9-549d-4249-89d5-69163929edf9",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e93cd194-1435-492d-94ad-5e4286f9e16c"
        },
        "item": {
          "id": "6d0d7703-b366-42a3-ad93-f099a0f15c02",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7d3d413d-0a5a-44a6-bde8-5978fb3e53aa",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "048f9c94-a9cc-4772-81b9-6e4a43abb3af",
        "cursor": {
          "ref": "5776b869-b4b6-44d0-81e0-1b1e200a123e",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "99ae2835-4b8f-4cf5-98e8-929d782fb5a4"
        },
        "item": {
          "id": "048f9c94-a9cc-4772-81b9-6e4a43abb3af",
          "name": "did_json"
        },
        "response": {
          "id": "63e288af-9b36-409a-8803-ca664af786e4",
          "status": "OK",
          "code": 200,
          "responseTime": 463,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e1ab03-62bf-4f85-a4a1-f132fb70a227",
        "cursor": {
          "ref": "5e3f5f7c-2167-45f5-9705-488423b10ba1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06b8957d-d7fe-4c4f-8ee2-a3cc9a20422d"
        },
        "item": {
          "id": "f8e1ab03-62bf-4f85-a4a1-f132fb70a227",
          "name": "did:invalid"
        },
        "response": {
          "id": "31d81f48-4bb3-46eb-aa70-9e8ad7f41106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e1ab03-62bf-4f85-a4a1-f132fb70a227",
        "cursor": {
          "ref": "5e3f5f7c-2167-45f5-9705-488423b10ba1",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06b8957d-d7fe-4c4f-8ee2-a3cc9a20422d"
        },
        "item": {
          "id": "f8e1ab03-62bf-4f85-a4a1-f132fb70a227",
          "name": "did:invalid"
        },
        "response": {
          "id": "31d81f48-4bb3-46eb-aa70-9e8ad7f41106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e1c93e-4264-45da-a74e-7447b5ab0c78",
        "cursor": {
          "ref": "449014d8-14a1-4d4f-9308-8e0e87e854ce",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a751e364-e343-4a99-a345-c964e4b5877e"
        },
        "item": {
          "id": "b5e1c93e-4264-45da-a74e-7447b5ab0c78",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d78078d2-db02-4991-8d46-ead6a43e03bd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 728,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb93cf3-d1f9-455f-92c8-96e8e0c44582",
        "cursor": {
          "ref": "c28cdd42-595e-42dd-805f-08e4ef508ec4",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c16b3360-da5d-4103-b063-1854bcef329b"
        },
        "item": {
          "id": "efb93cf3-d1f9-455f-92c8-96e8e0c44582",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c2f45ab3-9176-42cd-bb72-a329849996b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 487,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fb8bc5-3051-426b-8d33-edaece210521",
        "cursor": {
          "ref": "ef52f4e8-b74e-4f47-aa02-b94f2a71d561",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8fc2405e-d09f-489f-9067-5337f8a16f90"
        },
        "item": {
          "id": "85fb8bc5-3051-426b-8d33-edaece210521",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "15cf1533-28a4-4503-a2ef-ca330c35158a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee09143-1e50-420c-98cb-91726b1cadfc",
        "cursor": {
          "ref": "6a7c6fb4-2219-44d8-b849-c8b0fc5495ab",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a617c1e8-51f4-4b07-a047-b415306c5032"
        },
        "item": {
          "id": "eee09143-1e50-420c-98cb-91726b1cadfc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "23c50dae-c083-4474-84d8-0f00afa1f565",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 880,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee09143-1e50-420c-98cb-91726b1cadfc",
        "cursor": {
          "ref": "6a7c6fb4-2219-44d8-b849-c8b0fc5495ab",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a617c1e8-51f4-4b07-a047-b415306c5032"
        },
        "item": {
          "id": "eee09143-1e50-420c-98cb-91726b1cadfc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "23c50dae-c083-4474-84d8-0f00afa1f565",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 880,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c895056-f96f-4913-b10a-a313b33eb57a",
        "cursor": {
          "ref": "e589d740-9622-42d5-b078-24b256a3cbe9",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1830649f-6fca-4256-a333-ac7e10c68ce6"
        },
        "item": {
          "id": "7c895056-f96f-4913-b10a-a313b33eb57a",
          "name": "identifiers"
        },
        "response": {
          "id": "f3fa4951-af49-499d-992b-2e9be98e7ba3",
          "status": "OK",
          "code": 200,
          "responseTime": 1429,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5057dd6-4377-4552-8546-633607c83cd6",
        "cursor": {
          "ref": "b8d79804-31a8-4097-98af-4841745a3015",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6d5416d8-095b-4757-b7a2-23cfc0107be3"
        },
        "item": {
          "id": "e5057dd6-4377-4552-8546-633607c83cd6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69eb78b6-cab5-448c-abcc-e873f9479967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5057dd6-4377-4552-8546-633607c83cd6",
        "cursor": {
          "ref": "b8d79804-31a8-4097-98af-4841745a3015",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6d5416d8-095b-4757-b7a2-23cfc0107be3"
        },
        "item": {
          "id": "e5057dd6-4377-4552-8546-633607c83cd6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69eb78b6-cab5-448c-abcc-e873f9479967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3343a0ae-2f2a-4c24-b70b-c2a75da5a77b",
        "cursor": {
          "ref": "bdbc2eb8-fc10-4ac1-8474-c3ca78af91da",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4604e01c-123a-4518-9a8a-e641c24932a7"
        },
        "item": {
          "id": "3343a0ae-2f2a-4c24-b70b-c2a75da5a77b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ee88a75c-0d8c-46c5-97eb-524e6ab76a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1e3851-8c39-4884-8603-f1051a4688ec",
        "cursor": {
          "ref": "05d2a3e8-42c6-46d2-a7ab-bb6f10fd83db",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e44c4cfa-ac6e-4446-92a9-dc760ba7ca48"
        },
        "item": {
          "id": "2e1e3851-8c39-4884-8603-f1051a4688ec",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "71e9ccfb-f337-43e9-87c0-29b2bef0a453",
          "status": "Created",
          "code": 201,
          "responseTime": 2947,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "c3a9a906-7678-4f2b-aec0-fe9c4293afe0",
        "cursor": {
          "ref": "e6676185-0f22-4725-b7e0-61292e236931",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0671b84b-2d06-4203-8eae-7c2a4f951603"
        },
        "item": {
          "id": "c3a9a906-7678-4f2b-aec0-fe9c4293afe0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "57820330-afea-4f16-a0be-a54f2c845183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69ef3d9-5c8f-4b88-a121-2e457957a7b2",
        "cursor": {
          "ref": "b5646695-397e-4207-b486-42a04eb0c547",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b15b4993-e355-4539-a6e4-977282f01750"
        },
        "item": {
          "id": "b69ef3d9-5c8f-4b88-a121-2e457957a7b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "993abd81-be37-42fa-a54b-a5738ea9c64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461a2d46-fa4d-408a-ad6b-c3f67173f0b6",
        "cursor": {
          "ref": "bf71e043-dce7-4c55-924e-5bd91015f47b",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "25cf20bf-18f3-47c3-8c4a-f0a75d9f890c"
        },
        "item": {
          "id": "461a2d46-fa4d-408a-ad6b-c3f67173f0b6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ffa4ba2b-f8a6-4d79-a75a-00d9aea64f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea4526-9926-40f2-a7de-6327cd658e30",
        "cursor": {
          "ref": "bd693fe3-d6da-4d79-9f5a-e340f1d41686",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "00f0fe89-a36f-4335-baa3-1dfb82bddb53"
        },
        "item": {
          "id": "a3ea4526-9926-40f2-a7de-6327cd658e30",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "19cb2382-be68-45f7-a11b-2dd8f8c9dab1",
          "status": "Created",
          "code": 201,
          "responseTime": 4012,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "62ad0b1f-0ba7-4014-92d8-1cdbd9bf1d3c",
        "cursor": {
          "ref": "fb7e76f2-f057-459b-a3c8-a78bef934c80",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1baea016-6ca7-41d1-9d14-03d0929418c2"
        },
        "item": {
          "id": "62ad0b1f-0ba7-4014-92d8-1cdbd9bf1d3c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "25dc913d-41b7-43e3-8fad-d425529b92b7",
          "status": "Created",
          "code": 201,
          "responseTime": 3307,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "b14c4ac1-66fd-40b6-9420-1cecf618bb63",
        "cursor": {
          "ref": "34e83bb9-d164-40cf-8c31-450552e0b8d6",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8a53cb65-f3b9-49df-98b6-c82c424455b1"
        },
        "item": {
          "id": "b14c4ac1-66fd-40b6-9420-1cecf618bb63",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da6df8d9-4476-4340-b390-41f82ae2a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2862e5-2eb4-4cd4-8d4f-615318d603d7",
        "cursor": {
          "ref": "190a8e95-d947-4a71-b439-28982edd9d21",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c2f59bfc-975d-4801-9a20-dcc67f7b2a50"
        },
        "item": {
          "id": "9b2862e5-2eb4-4cd4-8d4f-615318d603d7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3080918d-c524-4896-9154-0c731bbb2aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6e386f-626f-452a-83a8-0c529a903106",
        "cursor": {
          "ref": "8068bf18-0394-4fba-a988-1490bbdf2be6",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5e89c7f4-71ca-43a6-b4ae-9fdf57820bf1"
        },
        "item": {
          "id": "4b6e386f-626f-452a-83a8-0c529a903106",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "17c50607-3c65-4247-9ea7-46d3a5075c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2da29f-ad42-493e-a10a-6155fd750f11",
        "cursor": {
          "ref": "bb947aa3-d27b-4eca-8f6b-de3460109fbb",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4f120dd-278e-473a-bbb5-cec5965659b3"
        },
        "item": {
          "id": "bc2da29f-ad42-493e-a10a-6155fd750f11",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "854e24bb-b977-4e30-a981-253d3f924386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e009f2ba-7db6-4091-ad1b-83f490852302",
        "cursor": {
          "ref": "090e3f51-be5e-4c62-ad1d-fd168aa25c60",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d79fee39-67c9-41b1-b5ec-552fb8adcd44"
        },
        "item": {
          "id": "e009f2ba-7db6-4091-ad1b-83f490852302",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ba5bba3-d532-483d-b41d-cea386c02c8d",
          "status": "Created",
          "code": 201,
          "responseTime": 2420,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "59a05012-b18a-40db-9832-143a48c7fff9",
        "cursor": {
          "ref": "765e5b97-62fc-4e17-85a1-4e290bd7b6b1",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3ac0b6fa-c2af-4024-81bf-d4117343b204"
        },
        "item": {
          "id": "59a05012-b18a-40db-9832-143a48c7fff9",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "cfbdd035-9dbb-4393-8162-6b8b73c4f56e",
          "status": "Created",
          "code": 201,
          "responseTime": 4304,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "d1b3bbbd-c135-49c7-8c13-f87d7081b272",
        "cursor": {
          "ref": "38c40f8b-02b1-47fb-bce7-aa3600e03ec7",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c653314e-1075-4de2-854a-d9878d04fea9"
        },
        "item": {
          "id": "d1b3bbbd-c135-49c7-8c13-f87d7081b272",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95a36c60-5cf0-4388-9442-5238d1f4c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5010cf-8180-45aa-bc3c-abca84650fa9",
        "cursor": {
          "ref": "616aab01-800f-4174-a08b-c036c5ccd34d",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "56c4ee28-ea4a-4395-bcdb-56acdec10d5a"
        },
        "item": {
          "id": "2f5010cf-8180-45aa-bc3c-abca84650fa9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1ee0fba2-6a3e-4cbc-83c8-87faba2690f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b82e4c-f427-44b4-956a-e17eb07a6487",
        "cursor": {
          "ref": "4f870b99-6a58-4e6d-97ab-65f9207bcc83",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f3650614-e8ab-42d6-b02a-5b4f90902dbd"
        },
        "item": {
          "id": "29b82e4c-f427-44b4-956a-e17eb07a6487",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "75920d0d-fe13-49fe-b941-b35854522563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc9d572-11de-4396-b581-489426fd2d6a",
        "cursor": {
          "ref": "34948011-7b13-4797-9d76-b4c55e32f04a",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3826274-d7ad-4247-b66b-9682df28306d"
        },
        "item": {
          "id": "6dc9d572-11de-4396-b581-489426fd2d6a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "68d630d4-94f7-4db1-b87a-2faa60d6b9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef03b2f1-fbc5-4deb-ab97-738f2ada6bdb",
        "cursor": {
          "ref": "0a44243b-ca71-4b82-abf6-1fd16a7fb3da",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3b6eed48-8a56-43af-a605-9b62c07ce787"
        },
        "item": {
          "id": "ef03b2f1-fbc5-4deb-ab97-738f2ada6bdb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b328363b-3e98-47b3-9903-ee01f683f425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5331ba7-32fa-4eae-818d-e76395e89cde",
        "cursor": {
          "ref": "5cdd4dc0-09e9-4abd-a7fb-89480a09e898",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d8efdb21-047d-4b8d-bd64-e2bd41effe23"
        },
        "item": {
          "id": "e5331ba7-32fa-4eae-818d-e76395e89cde",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a9a8eb24-2f18-4fc5-9389-3e5264334eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ba85ef-7d4a-422a-b054-7d1d831d3495",
        "cursor": {
          "ref": "4983b3d6-a809-4e26-89c6-3f9e35db1e35",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "633f68aa-cc9f-43f3-8560-4993c283b9d4"
        },
        "item": {
          "id": "c8ba85ef-7d4a-422a-b054-7d1d831d3495",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba17952b-e616-4d7f-ba5f-e7e7d86c9a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e762b-30c8-4070-83ea-4c114cd3c82a",
        "cursor": {
          "ref": "98dc6621-d251-4ce1-8b69-19e8ccf1640d",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "849dfbe1-1cf0-4960-b0a2-3a56ce2d0bb0"
        },
        "item": {
          "id": "070e762b-30c8-4070-83ea-4c114cd3c82a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05016709-6b99-4a8f-89c9-1f1e78bf8622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009cc367-cc53-4b4d-a4fe-755f50e10339",
        "cursor": {
          "ref": "5721bf3b-afb9-4337-b66f-058332191e27",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2a09aea3-a331-41b6-a7c9-2d7f3ea87a39"
        },
        "item": {
          "id": "009cc367-cc53-4b4d-a4fe-755f50e10339",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2780d1eb-6deb-46e6-b1eb-8ab278cb214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e54971a-68b6-4520-ad4c-b38e7b1a00c2",
        "cursor": {
          "ref": "08e62ea1-89a8-4bfc-b9d8-eb28cb342bab",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "24545c27-60df-42b9-a949-7a346e899533"
        },
        "item": {
          "id": "5e54971a-68b6-4520-ad4c-b38e7b1a00c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fcbcf1d0-e664-497f-a593-361ef7518b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409cbaa6-d219-4634-858a-3590139a8bdc",
        "cursor": {
          "ref": "4a707c47-0784-4962-ad09-97aef34a714b",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3bc87d05-c166-4096-96e9-2e0acc190a9c"
        },
        "item": {
          "id": "409cbaa6-d219-4634-858a-3590139a8bdc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "30147338-4ee2-4b9b-821d-238c635e1d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba4782-4768-4d0c-942c-d676e1d42a52",
        "cursor": {
          "ref": "39d5ed2d-73b0-4bf2-84de-dbf09fb15b6b",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ba12f090-7060-4a66-8af0-0a1194e0da10"
        },
        "item": {
          "id": "21ba4782-4768-4d0c-942c-d676e1d42a52",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c4a61dfd-51ef-4e11-a8ee-ebbb5aeee3c5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2294,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "582dd343-9418-4496-96fd-1c2d19ba4690",
        "cursor": {
          "ref": "398b512b-4472-4ace-9af7-674964784125",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4af3d09a-d4cc-4490-b1cd-7cb25b1f6c3c"
        },
        "item": {
          "id": "582dd343-9418-4496-96fd-1c2d19ba4690",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "244a9087-e5c7-42e1-957d-2207823e191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3a2580-eb43-4c2b-91a2-d8f800c63552",
        "cursor": {
          "ref": "48384481-46fa-40df-bf22-2ca54ef1e652",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dcfb9f0b-3176-41d0-95c1-3cf2c72fc87b"
        },
        "item": {
          "id": "8e3a2580-eb43-4c2b-91a2-d8f800c63552",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2c3f9eb6-3d6b-4ac1-9e3b-7706a22fa32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad2a6e0-4f4f-4ee2-adaa-f14351a5bbcc",
        "cursor": {
          "ref": "df42b0ea-52a0-43db-ab43-086c87a3cf6d",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f0ce3851-0aa7-4246-b7ba-e3ae074b1a53"
        },
        "item": {
          "id": "1ad2a6e0-4f4f-4ee2-adaa-f14351a5bbcc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "458511b8-6bb2-4ff9-ae5c-800ca6b129f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9599c5-e7dd-4d39-800d-39f6662464de",
        "cursor": {
          "ref": "4c95102c-6f7b-409a-9d1f-d5058e08bac0",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f8ed7b1-8868-485f-aa44-51eafd1fc9bc"
        },
        "item": {
          "id": "fc9599c5-e7dd-4d39-800d-39f6662464de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2e5c0043-3c3f-43bd-84ed-acf237e20991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc23d90-bebf-4711-9c25-6ac8e8ddf1e9",
        "cursor": {
          "ref": "ccfb0efb-7f82-4e5f-bbed-e050d21a14e7",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "40429ac5-5e6f-492e-b19c-1ffcbc2e77ec"
        },
        "item": {
          "id": "bfc23d90-bebf-4711-9c25-6ac8e8ddf1e9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e60450b5-2081-4a18-a7db-8fac368e3c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dc0bcb-955e-49fa-b587-19fe7995976f",
        "cursor": {
          "ref": "529e7a61-7535-472b-9d5b-6fc6a5aa30f9",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "259c91b2-0967-491a-9124-fd03f9be4e31"
        },
        "item": {
          "id": "93dc0bcb-955e-49fa-b587-19fe7995976f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3186e6d5-5bc2-43fe-a3db-9d238c977274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08554615-6783-4c28-ab6b-67d05ceb8163",
        "cursor": {
          "ref": "1ca596c2-ca92-4537-8487-8ae6548b81c0",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f69652e3-7b23-47e2-8568-4a218c2a9e1b"
        },
        "item": {
          "id": "08554615-6783-4c28-ab6b-67d05ceb8163",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "159d4ff2-4893-4d69-a505-a3dcc046a844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2598a9d-e4a2-40f9-bdf3-91ac82cefc19",
        "cursor": {
          "ref": "42626d25-3f34-4362-8aa1-c9c9db619e44",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f7c823b8-4a13-4af2-b8a5-d50f4df69628"
        },
        "item": {
          "id": "f2598a9d-e4a2-40f9-bdf3-91ac82cefc19",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "92297a1a-86ab-46ad-9b52-e201be18fe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf361ebe-48ba-420f-bd3d-cdef5c7d2618",
        "cursor": {
          "ref": "c8ab4bb3-9a94-4f6a-be2b-ef6a6c38984b",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1c18c242-03e1-41ea-b2a7-8437f99b2d6e"
        },
        "item": {
          "id": "cf361ebe-48ba-420f-bd3d-cdef5c7d2618",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1c28967a-09c5-46af-b41e-e37a62f78b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52d51c5-f7de-420b-9745-3529a63d7412",
        "cursor": {
          "ref": "c60631aa-7644-4cfc-871d-53ca98021312",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e79714f8-6204-4996-ad95-1f0464197da1"
        },
        "item": {
          "id": "d52d51c5-f7de-420b-9745-3529a63d7412",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "873d2a5a-757a-4bc3-8a7d-b5d04a0c0a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dae201-eb7a-4dd4-85bd-c7a712091c07",
        "cursor": {
          "ref": "63f8a888-0de2-4e43-ac04-7340081e0956",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6121aa2b-bc18-4041-9d76-ec508a8d48c0"
        },
        "item": {
          "id": "c7dae201-eb7a-4dd4-85bd-c7a712091c07",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "11dd4f50-5d91-426a-9fd2-140a991610db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff6081a-1d6e-4630-a5f6-549afb17cbd4",
        "cursor": {
          "ref": "f5eea3b5-4f37-47e4-88d4-e1bde1499396",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c0c8132-b1ec-400f-892c-9d9bbab8eecf"
        },
        "item": {
          "id": "4ff6081a-1d6e-4630-a5f6-549afb17cbd4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d21df10a-b522-4660-b2b9-634a9ce79ded",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8430f6bb-e7b3-498a-ac80-53076ea3aa6f",
        "cursor": {
          "ref": "025cbc5f-9d1b-4b4e-9ca7-b59e5dd22a34",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6446a241-a8bd-4d31-8252-ce83bea006ff"
        },
        "item": {
          "id": "8430f6bb-e7b3-498a-ac80-53076ea3aa6f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "611c21bd-126f-4943-b843-87a6ae570f31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 517,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "d96e6124-71d1-496a-bfbd-fed1c1da7440",
        "cursor": {
          "ref": "83ad433b-cd58-49f5-a06b-8a7404383c10",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ae573dc2-59d0-40c5-b99b-0facab0c3b63"
        },
        "item": {
          "id": "d96e6124-71d1-496a-bfbd-fed1c1da7440",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce42714e-6bd8-4aeb-a1e4-4a021bdafe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506b5b3a-5185-4e65-9019-2ef4732f82ad",
        "cursor": {
          "ref": "b12c1234-1dc8-4402-b0b8-f1a99b255992",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a85e77de-d260-4e7e-be17-2ed2e8daae05"
        },
        "item": {
          "id": "506b5b3a-5185-4e65-9019-2ef4732f82ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3b631231-fc06-4a21-a501-fa5ced56d0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58048b95-042a-481e-b08d-d9cc020a8086",
        "cursor": {
          "ref": "67e6b578-07c9-463a-8791-844d3eb16548",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4c17fd62-ece6-4e7d-aeee-8f124ca7b729"
        },
        "item": {
          "id": "58048b95-042a-481e-b08d-d9cc020a8086",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61200880-b910-40e8-b565-a41b4316b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da577029-dad6-4f17-af85-248ca0a0a1e0",
        "cursor": {
          "ref": "1a15e852-dc71-4214-8bbe-44df2ea933c2",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4295731e-5d8a-4efa-92ff-7161743c6029"
        },
        "item": {
          "id": "da577029-dad6-4f17-af85-248ca0a0a1e0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "99dd9deb-3c95-44d3-af78-375ce1cb5ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec0096c-41f9-4c80-8279-7af8346037ab",
        "cursor": {
          "ref": "0f1cb884-cec7-47fa-9c90-84790dde9acd",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a8383080-22bf-4633-93b7-3464fec77f39"
        },
        "item": {
          "id": "4ec0096c-41f9-4c80-8279-7af8346037ab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d8f37f53-4bf0-46bc-a3eb-1649f4606230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f693f42-95f9-4a90-b114-b8fa12e17b2c",
        "cursor": {
          "ref": "90868421-c3d5-4c85-b883-7235e33cd45e",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b7637eb1-b104-4747-9a02-5b6bec1578c8"
        },
        "item": {
          "id": "1f693f42-95f9-4a90-b114-b8fa12e17b2c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0e753032-27cb-44d2-beb4-bb5916b3bedd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 577,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845b5c64-3474-463b-8d49-5da54fbd4d49",
        "cursor": {
          "ref": "3c1c00d4-0b13-4b38-b347-799580c4389b",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e540159b-84d9-4a49-b6cd-d596b14b7ff6"
        },
        "item": {
          "id": "845b5c64-3474-463b-8d49-5da54fbd4d49",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "361de159-a63d-461c-b5bd-f58a916b5838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3541b1ab-6bf5-402b-8fa9-a0973e972d56",
        "cursor": {
          "ref": "7c43a7b9-acf6-467c-99dd-43afebf7a1e2",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "178cbc65-0936-495e-9d20-cf1869c91825"
        },
        "item": {
          "id": "3541b1ab-6bf5-402b-8fa9-a0973e972d56",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dbca6b32-a5eb-431c-8034-fb4630cca7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6279cf8c-194d-41b3-b5f1-0bf5bb9767e5",
        "cursor": {
          "ref": "164979af-4423-4804-a750-fab727bec1b2",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "57fe5174-361e-4579-9a5d-f08a66dd241c"
        },
        "item": {
          "id": "6279cf8c-194d-41b3-b5f1-0bf5bb9767e5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7ebb02ad-8ce0-424e-983a-b1d1e30ec185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1445b7-1c26-4ea1-b36f-1f81bfcde570",
        "cursor": {
          "ref": "7a95ed1b-1ed2-4e6b-bf9a-e03019dcc438",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cd7184ec-fe4a-4c9c-ad94-5c0a49bdeb45"
        },
        "item": {
          "id": "5f1445b7-1c26-4ea1-b36f-1f81bfcde570",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5f5ad805-23d3-44f8-9eba-dce2aa9a68a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d805b1-7eb2-4f21-95dc-9bf37c909cdc",
        "cursor": {
          "ref": "b85f9760-f9c5-4ecf-b73c-34bb55381815",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e0c0b6dd-2084-419a-a0f7-c39acf97028b"
        },
        "item": {
          "id": "96d805b1-7eb2-4f21-95dc-9bf37c909cdc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5dd6aada-35c3-40f6-9c66-9998cd5d3cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcedbd27-03d4-42f2-9891-4eb9a342a462",
        "cursor": {
          "ref": "9b863899-52cb-47d4-94b5-2c3f80debaef",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3f71dccd-8cf9-4ade-bd2b-1646a79a5563"
        },
        "item": {
          "id": "fcedbd27-03d4-42f2-9891-4eb9a342a462",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8926c513-240e-49dc-9e7d-e65dec31d6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177b15da-aae6-488c-b239-49429fb8e690",
        "cursor": {
          "ref": "6c733900-306e-48bf-8822-8cd0f5c4fdfe",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40bc1335-ae8d-402c-8bec-5cff53ce3a64"
        },
        "item": {
          "id": "177b15da-aae6-488c-b239-49429fb8e690",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "65607d8a-14c3-46ea-b306-96a4d0fe338d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4035fc21-d52d-45fb-a9ec-4ab7aa30874f",
        "cursor": {
          "ref": "6c60f127-a347-4fec-9423-933aac7295ac",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "99f58616-9f1a-4c0c-b6bb-2e36a730ceeb"
        },
        "item": {
          "id": "4035fc21-d52d-45fb-a9ec-4ab7aa30874f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aee7174f-4431-48dc-935e-ebeb1f1c38a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06291a3-2b83-42b2-8da9-fe2f761d7464",
        "cursor": {
          "ref": "dc450735-7f1e-4a54-9a1b-4c06aaf00cff",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "eaa7ec34-9bb3-4214-89be-11ebb08a75ea"
        },
        "item": {
          "id": "e06291a3-2b83-42b2-8da9-fe2f761d7464",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "debd71d0-bfe7-4f03-9df8-0f741bae1dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b5946f-83e5-4b24-9dc0-eda805d0e9b1",
        "cursor": {
          "ref": "0a4e6e8d-fb4c-4696-a836-8167e2d0712b",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3692cdf-7c11-4405-9475-ba2fcf0a07b3"
        },
        "item": {
          "id": "58b5946f-83e5-4b24-9dc0-eda805d0e9b1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3a13e205-9297-48f7-94c0-6da6bbef53f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d7cf78-9386-460c-9bcb-532c4d600761",
        "cursor": {
          "ref": "8fc1d991-911a-4e6d-88b6-70cbdd0374a0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f9d7e32c-f431-478b-9017-d328db54327b"
        },
        "item": {
          "id": "84d7cf78-9386-460c-9bcb-532c4d600761",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "592a46bb-69ca-4d7e-9276-88b3e4bfbd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c15875-cbdf-4ede-bdb1-6aa6c4a2b597",
        "cursor": {
          "ref": "7e223710-5a48-4be2-b363-94df387bd794",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e7968f38-0d47-43bb-945d-8811191eec66"
        },
        "item": {
          "id": "92c15875-cbdf-4ede-bdb1-6aa6c4a2b597",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d308d1b7-824c-478d-bb7f-45156f9d5939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87df0d40-6bf0-42b0-8e1f-e81f43946c90",
        "cursor": {
          "ref": "b2391028-3fc7-4094-acea-25c1a85cabe9",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e0d356ee-e0b5-45cd-9ba3-ab3e5d713d2b"
        },
        "item": {
          "id": "87df0d40-6bf0-42b0-8e1f-e81f43946c90",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "830a8cea-2810-4fbf-a16a-6d37affefe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2822d42a-7dfd-4d6c-be38-14e8c54bda9f",
        "cursor": {
          "ref": "d746ffdd-7287-4169-80c4-c4dd466913a3",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d8e0ee7f-7870-4b1b-9e78-e0ce6f77f49c"
        },
        "item": {
          "id": "2822d42a-7dfd-4d6c-be38-14e8c54bda9f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9568cb72-219b-424c-9a34-a00be9c8566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcffec9-bf86-473d-8722-8cbeb6f3abc4",
        "cursor": {
          "ref": "7d958803-681d-40a1-b1f4-0beacd8058a3",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5c32b8ec-94a6-4d31-9d22-c3ab8b65afe4"
        },
        "item": {
          "id": "fbcffec9-bf86-473d-8722-8cbeb6f3abc4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5276624-4b8d-4dcf-8a4f-b525c2f7413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874d98a3-a8d6-42fa-840a-bb7be0b3ebe1",
        "cursor": {
          "ref": "4099c250-c8a2-4ace-a50c-11777e45513d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8c3b0247-2a58-409a-bb3c-7b9c37baaf38"
        },
        "item": {
          "id": "874d98a3-a8d6-42fa-840a-bb7be0b3ebe1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "772b8de7-5195-4a04-8f21-1057e3f170e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79333ba-05ed-4e52-be82-db945872fb12",
        "cursor": {
          "ref": "52250790-eff8-493c-824b-0b223ba1602a",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fc7f9aee-b02e-48a2-ac10-f94eb5523a41"
        },
        "item": {
          "id": "e79333ba-05ed-4e52-be82-db945872fb12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5f7e8704-f6d2-4dd4-8c22-3377e4ab5df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06f878a-73b7-4e8d-9479-1bce1180e641",
        "cursor": {
          "ref": "70ce9536-7b83-4d52-9abe-1ccf3e63fc10",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "02199d54-acfc-41cc-9969-9270041dbb96"
        },
        "item": {
          "id": "e06f878a-73b7-4e8d-9479-1bce1180e641",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2c0a1927-29f4-4189-924b-4f8599bf9667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c90d08b-399e-460f-ba4e-4bfec0995cd0",
        "cursor": {
          "ref": "28eb32e8-638d-4053-bb96-1e849854fbfb",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3a8affac-b8ca-49fe-96e2-cb9dd1c996ad"
        },
        "item": {
          "id": "0c90d08b-399e-460f-ba4e-4bfec0995cd0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "88b607a0-cb87-4807-b0f9-ff2adaa83f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48ea26-d014-4a53-98d5-f604ee46eea9",
        "cursor": {
          "ref": "1238be65-75db-40f7-9859-949899419a0e",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "25f76db1-abad-44b9-a641-8b6147671c17"
        },
        "item": {
          "id": "1e48ea26-d014-4a53-98d5-f604ee46eea9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d59fd155-d48c-4b50-9a4d-0260ba7ede79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4091302-ae7f-4beb-b499-31c02524f502",
        "cursor": {
          "ref": "b2a5d914-1182-4620-95e3-10c17b85a9a1",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e676863a-8695-4135-ac94-b3e05e14148b"
        },
        "item": {
          "id": "b4091302-ae7f-4beb-b499-31c02524f502",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d6901c43-ad30-489f-920b-382ff46ea8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6ca831-fff3-423b-b53e-d2df831af367",
        "cursor": {
          "ref": "11d144a9-0ccc-4f86-ad7e-c2be19760b8a",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "28306fd2-b50a-4ed8-ad43-61dc54227248"
        },
        "item": {
          "id": "3e6ca831-fff3-423b-b53e-d2df831af367",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "404c4620-26c9-47de-b46a-105928fd5030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92378e7-08ef-4c70-a642-30450a73e324",
        "cursor": {
          "ref": "ce6fcca4-3465-415e-ba91-b1f7d3fc2ddf",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "22dc8e9f-2d8a-45bf-ab7c-c2bde481843b"
        },
        "item": {
          "id": "b92378e7-08ef-4c70-a642-30450a73e324",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6f7fa49a-3225-4634-8a92-69ea9243204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976dd68b-53d9-4886-8eb2-c6192b44833e",
        "cursor": {
          "ref": "b77fb56c-933a-4377-aa60-5a1972e3ae39",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4c721ec7-641f-4ddd-916b-cd260a853388"
        },
        "item": {
          "id": "976dd68b-53d9-4886-8eb2-c6192b44833e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e96dd050-d194-4d89-99cc-b44bfd0c3a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64decac-47ac-461c-b993-30cf7d9d4104",
        "cursor": {
          "ref": "3e2bebc9-6c1d-47c0-9677-7a47f138b6df",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a5592f70-4067-4d12-8f9d-f007b224f3a7"
        },
        "item": {
          "id": "a64decac-47ac-461c-b993-30cf7d9d4104",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e791e8ca-0081-4637-b4c9-cae53a5ed61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbec3c0-aeba-4027-b3ae-3f39247deb3f",
        "cursor": {
          "ref": "66caa16b-8d66-4138-9940-795dcf0082b0",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c8a6d50a-81ef-4ecf-b6e3-e3be5ea38751"
        },
        "item": {
          "id": "8dbec3c0-aeba-4027-b3ae-3f39247deb3f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "27391da2-d39a-46c9-a9b9-eec61569b942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae06f23b-200e-41f7-97a0-bff463d6352b",
        "cursor": {
          "ref": "43ba5612-e012-4d1e-8c07-5a988289eb32",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "276555c3-d0df-4e80-924f-df2f9a69dd52"
        },
        "item": {
          "id": "ae06f23b-200e-41f7-97a0-bff463d6352b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "830d2fff-cd0f-4f68-a6e0-dd2b851f0bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc37866-fa93-4fc3-bcf0-3619490ed762",
        "cursor": {
          "ref": "78819aa6-8f49-43e0-8444-7dd61ad1fab8",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65b7c834-1765-40cb-8c02-366f2bb2e0ed"
        },
        "item": {
          "id": "fbc37866-fa93-4fc3-bcf0-3619490ed762",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e395b02d-f294-4827-87c7-0a8df5737e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd84c5d-3ae3-411e-9413-646c9fcf2839",
        "cursor": {
          "ref": "b07f7b25-991b-4a1b-940e-d16fa6d94440",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "47726190-691c-4860-82d1-5317178ea896"
        },
        "item": {
          "id": "0dd84c5d-3ae3-411e-9413-646c9fcf2839",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ae031a6c-d213-44ee-be11-0d974ed5ff45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4018394f-87cd-4da1-8ecb-09853fdba456",
        "cursor": {
          "ref": "301e6efa-993c-4690-aa56-a5dc1f234904",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7c3ef6ea-673f-4f4f-9d7f-58ee1ee08844"
        },
        "item": {
          "id": "4018394f-87cd-4da1-8ecb-09853fdba456",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "841f4d3d-e575-44fa-b2cc-9d842239b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0313e5b-c2c3-4369-80c1-712144082db3",
        "cursor": {
          "ref": "374e8703-2b52-444c-a37d-f62869084971",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "39c1602f-74dc-4e67-bf96-43997260bf22"
        },
        "item": {
          "id": "a0313e5b-c2c3-4369-80c1-712144082db3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40c3016c-f138-45aa-abe8-df1d3fd065eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d17c2f-ab0f-4774-ac29-7ddf41b59527",
        "cursor": {
          "ref": "3f082949-73e4-4ccd-9a6f-ced30e7d5bbc",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "20961d56-076f-45a2-bb4e-d9612bd21ce7"
        },
        "item": {
          "id": "31d17c2f-ab0f-4774-ac29-7ddf41b59527",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "77daaaa8-2a50-4264-842a-380f4d0f585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fd81a7-8e70-4d1f-82f7-48a346d0f95a",
        "cursor": {
          "ref": "13b99515-1819-44af-9001-70034a0a94db",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3c5ea8b6-ebba-42db-8453-793a77aee449"
        },
        "item": {
          "id": "a2fd81a7-8e70-4d1f-82f7-48a346d0f95a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "88579d74-cab9-4802-b92b-fec4b8a38107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e97d32-c00d-4f79-ac49-ae9ee72543c8",
        "cursor": {
          "ref": "170b4a21-30c4-4ae8-8524-bd986a728723",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0dfbd67a-e2a2-4b60-b7bb-b6db253bf077"
        },
        "item": {
          "id": "d5e97d32-c00d-4f79-ac49-ae9ee72543c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d600eb45-c387-487f-a1c6-3ba02330b6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89316622-f22c-40d3-9f67-e45f7de77fbf",
        "cursor": {
          "ref": "f9c856dc-edce-483c-ac70-5bfbfdc6101b",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "76072cee-d51c-471d-a413-cc4986596c34"
        },
        "item": {
          "id": "89316622-f22c-40d3-9f67-e45f7de77fbf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d88e53b2-a0f4-41cf-b060-febbdcf24f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0cd4f-4d5c-43a1-800a-828315d6fb99",
        "cursor": {
          "ref": "c33e46eb-0bf7-4f96-a7d3-7d14e07e2d2b",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "725fd915-cb29-4b9e-979d-32d987c41ce1"
        },
        "item": {
          "id": "62e0cd4f-4d5c-43a1-800a-828315d6fb99",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d319c453-63ad-4ee4-899d-9c849bf1b1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf2de8-4d3b-40d9-956b-7a619b1e3b20",
        "cursor": {
          "ref": "89f9aa2c-31c1-407c-82c4-9b2bc8018ce9",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8c5db131-cb08-4d32-9b98-a9e5b417d563"
        },
        "item": {
          "id": "40cf2de8-4d3b-40d9-956b-7a619b1e3b20",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3391902d-fbc2-4e15-b818-00d71409958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed7df49-296b-4eb0-bad2-1e0e97a50626",
        "cursor": {
          "ref": "8d758b59-0dd4-43cc-b23d-e853013fd479",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "38a106e1-605c-4ac2-a849-5dee84176c3c"
        },
        "item": {
          "id": "5ed7df49-296b-4eb0-bad2-1e0e97a50626",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1036cfb1-5d26-409a-8fcb-59b1863ffe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f13d395-1672-4091-bb4d-9a43ae2b7806",
        "cursor": {
          "ref": "52792ce7-3559-4884-8ea2-b3b1d6c124e3",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7084fda-1849-4695-96d2-b06f8b72235d"
        },
        "item": {
          "id": "7f13d395-1672-4091-bb4d-9a43ae2b7806",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "31e070ee-b2af-41a0-93e6-811097cec49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12053e45-7870-428d-9e24-1b21aa6cb59d",
        "cursor": {
          "ref": "54d42bd4-2892-4093-bf69-29923ea1dd7b",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c4160880-7c1d-42e8-94b8-4762c1b2c3a5"
        },
        "item": {
          "id": "12053e45-7870-428d-9e24-1b21aa6cb59d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50077e9f-a938-4ff4-b7f7-93b529b71efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aecb97-ce65-4c20-a387-0f6b93685214",
        "cursor": {
          "ref": "580f81d9-8e14-4854-977c-2f65d50ce618",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "72d526f9-d3b4-4584-ba1b-ce78edb2b359"
        },
        "item": {
          "id": "98aecb97-ce65-4c20-a387-0f6b93685214",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7e5032cb-dfc5-40a3-96c5-54f4e7c63059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f94078-e6cc-4791-a79d-cd696d0829b7",
        "cursor": {
          "ref": "147654ee-d37b-44e5-a6e9-9d3b8cf7a47b",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9ad5ff53-2ccd-4b5d-9fb2-1b4e86ef5fb0"
        },
        "item": {
          "id": "00f94078-e6cc-4791-a79d-cd696d0829b7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f7032594-edeb-4d45-ba54-7a1452a155a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4527cdf-d35b-4920-8a2b-07e7e0688436",
        "cursor": {
          "ref": "3ba88bf1-7c6b-45d9-b8aa-b28388663408",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "308b6fa0-3643-4358-a3a8-efa22192f06f"
        },
        "item": {
          "id": "f4527cdf-d35b-4920-8a2b-07e7e0688436",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "794d2118-c623-49f1-a6f3-03d6c1522c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca3ba0c-1b04-4a69-ab82-ff5417fd79f5",
        "cursor": {
          "ref": "2db422ae-fa06-4b8c-8a90-ade70855b10d",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "311e5198-8139-471c-93fe-736b7fa11558"
        },
        "item": {
          "id": "cca3ba0c-1b04-4a69-ab82-ff5417fd79f5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0183516c-6496-4a22-8ea9-6ecea9f254b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfb70a0-0b7d-4c65-9901-d7b6c34ceef8",
        "cursor": {
          "ref": "00737160-35d7-441f-ad50-a10f7f45e0ae",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "35a54a0a-8b10-41ef-9f84-baf6c41d1e7b"
        },
        "item": {
          "id": "6dfb70a0-0b7d-4c65-9901-d7b6c34ceef8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "25ba5bff-de1b-4eae-8a02-5bf6f8bbcc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba5db64-90b8-4e95-9ada-24f8ff5310b3",
        "cursor": {
          "ref": "1ecd230f-af54-416b-a6e8-40a6e208b8c2",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b58bd2c6-587a-448e-91af-854b753b9a21"
        },
        "item": {
          "id": "6ba5db64-90b8-4e95-9ada-24f8ff5310b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ba69fdb6-8be4-4637-8744-8dbd88940160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68931f-7a57-4c11-8484-91eab399b482",
        "cursor": {
          "ref": "a6d8929a-b399-4327-9e3e-a384d84a3e82",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ccc9d7fc-1475-43bf-941c-2e993765b3a3"
        },
        "item": {
          "id": "cd68931f-7a57-4c11-8484-91eab399b482",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b8df8fcc-69c7-4809-962c-0e16444d535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c936758-ef5b-490a-8cd7-19fe61845570",
        "cursor": {
          "ref": "fb056a8d-a565-4404-873c-4aff82d709b0",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8ab615a9-2d99-4332-b5dc-550cbc859416"
        },
        "item": {
          "id": "7c936758-ef5b-490a-8cd7-19fe61845570",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "afeac2a4-0abe-4be2-a205-a40bc5ded1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ce2cab-7177-4e5c-af10-6e65205e58ef",
        "cursor": {
          "ref": "66d09cee-39bc-4e2b-8be9-07ffa29f4185",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eee3034b-6b5c-422d-b44e-348b35e8065f"
        },
        "item": {
          "id": "e6ce2cab-7177-4e5c-af10-6e65205e58ef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6906c294-7a20-4572-bc02-9bb10fc4c3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa31e6d-da47-4127-9c52-47af4223b149",
        "cursor": {
          "ref": "9a09a49d-35df-4993-a3d6-470ed728229f",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d400d1bc-6ac3-4282-a30c-424cbb4fc502"
        },
        "item": {
          "id": "5aa31e6d-da47-4127-9c52-47af4223b149",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f16ed80d-c4ad-4aee-82b2-58398319eb9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53e888-4efd-4bb6-97b5-8dce17f607fd",
        "cursor": {
          "ref": "7887ff56-e025-4071-b484-66716b1826c9",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9ce801b6-ed7a-40e9-8aa9-52f77064d056"
        },
        "item": {
          "id": "ea53e888-4efd-4bb6-97b5-8dce17f607fd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4fe4b971-ebfe-4fde-97e4-35a2a259ef7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e26c20-5cdb-487d-b457-d7e184d61bed",
        "cursor": {
          "ref": "537ce9bc-8287-46ec-93ef-2f5563032db8",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7e7de509-ce19-4ce7-9a92-a79a0bf25990"
        },
        "item": {
          "id": "02e26c20-5cdb-487d-b457-d7e184d61bed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4450fd55-7759-44d3-a55f-192fcefd1116",
          "status": "Created",
          "code": 201,
          "responseTime": 4157,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7505faa5-2487-467d-b8bf-7e23197c9743",
        "cursor": {
          "ref": "ca4abb03-0de5-4be9-8ccd-97bcce46f286",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "569e3f3f-c806-4f9b-bd2d-7f2e57881c7d"
        },
        "item": {
          "id": "7505faa5-2487-467d-b8bf-7e23197c9743",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ce1b9b01-b651-40ce-89ac-bb36256989a3",
          "status": "Created",
          "code": 201,
          "responseTime": 4848,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1eec08-74fe-4823-9729-8f929a0e0c2f",
        "cursor": {
          "ref": "79b08186-c643-4c9b-a59d-a6bffeddfcfb",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1fd9b8cf-e281-42c5-9c51-fe63881753db"
        },
        "item": {
          "id": "3c1eec08-74fe-4823-9729-8f929a0e0c2f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07d4dc3a-d9e3-476a-a910-7d3793e51382",
          "status": "Created",
          "code": 201,
          "responseTime": 6512,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1521e6f-80c0-45e5-943a-b261f7962300",
        "cursor": {
          "ref": "0c0bac74-8849-4bc9-964f-fc5004edfec5",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "58a48113-c786-4ff0-95da-bd75885aa3d1"
        },
        "item": {
          "id": "d1521e6f-80c0-45e5-943a-b261f7962300",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6d904e58-d680-4d67-99a8-11a88bef49ee",
          "status": "Created",
          "code": 201,
          "responseTime": 5457,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b4d1b8-d7ef-4fd2-bac1-a95219d2bd94",
        "cursor": {
          "ref": "0ca6556a-2111-49c2-961d-02314c6b18cc",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "14c614f1-2f3d-4fec-a45e-eedfb4fe3498"
        },
        "item": {
          "id": "d2b4d1b8-d7ef-4fd2-bac1-a95219d2bd94",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1b6f36d8-6b10-408c-ab99-8bec011fae5c",
          "status": "Created",
          "code": 201,
          "responseTime": 7120,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3242371-0206-4c6d-89ed-6dcdf75864f1",
        "cursor": {
          "ref": "8cc7cf9a-355d-4a40-87ab-580063d2aa29",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "158b3138-950f-46ec-9274-d8fafd91f3a0"
        },
        "item": {
          "id": "c3242371-0206-4c6d-89ed-6dcdf75864f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "daec3cc2-3b88-4141-8cae-6533587092b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3242371-0206-4c6d-89ed-6dcdf75864f1",
        "cursor": {
          "ref": "8cc7cf9a-355d-4a40-87ab-580063d2aa29",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "158b3138-950f-46ec-9274-d8fafd91f3a0"
        },
        "item": {
          "id": "c3242371-0206-4c6d-89ed-6dcdf75864f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "daec3cc2-3b88-4141-8cae-6533587092b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c5d2a2-4f27-4253-9754-013bd8655453",
        "cursor": {
          "ref": "16d4076c-89ac-4a0b-80a7-1006aa3fda50",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "18753f99-5448-419e-928a-f4ab1590869c"
        },
        "item": {
          "id": "40c5d2a2-4f27-4253-9754-013bd8655453",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e9edd57-c1b7-48f5-9ddb-1955a4be9e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb324445-e326-451f-a3a7-c3a9fae3b820",
        "cursor": {
          "ref": "d2e2c19e-39ff-4a98-8063-782bcfaf3f5d",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "80b4231d-989b-4305-9774-cd541e585183"
        },
        "item": {
          "id": "eb324445-e326-451f-a3a7-c3a9fae3b820",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40e960f5-4e40-4a9c-a12a-26be4387283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5a5736-afcf-433b-a6c8-bc12134374f3",
        "cursor": {
          "ref": "f1754464-65e6-478b-940e-d209a238dc5c",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bcfe7dab-9f6f-4745-8e95-4898bf5467d3"
        },
        "item": {
          "id": "fa5a5736-afcf-433b-a6c8-bc12134374f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f4998c94-b069-44c5-b01d-4eadd7955cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e8e2a-7730-452e-b01f-540276b0a932",
        "cursor": {
          "ref": "e685de48-6201-47e8-8f79-89aee229f736",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "20ef06c4-9a51-4cbb-b43b-802943c9ba71"
        },
        "item": {
          "id": "bc4e8e2a-7730-452e-b01f-540276b0a932",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c8996cf-6dd8-420b-83a5-8e30f2f30878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0292a21-6cee-496f-a7c6-1ea0a00d5028",
        "cursor": {
          "ref": "c275916c-2634-4fe9-832f-303f02429f46",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "176fe7f4-ca74-4ce8-a11c-0327423e8ef7"
        },
        "item": {
          "id": "e0292a21-6cee-496f-a7c6-1ea0a00d5028",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "11746a67-e545-4c3f-b02c-97b68ddb2fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da84bfa8-21c1-45ea-b87a-a0e162b262e8",
        "cursor": {
          "ref": "e9eb8569-d227-4131-aecd-61cff9c9477c",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2404bc4f-2de5-407b-8b67-68101e31fb7f"
        },
        "item": {
          "id": "da84bfa8-21c1-45ea-b87a-a0e162b262e8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ef9aada-5188-42a9-8251-3a15017399af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266cd16c-6911-416e-85e4-a237f9e317ed",
        "cursor": {
          "ref": "3c496ca9-3c98-4829-90f5-272d12a2fdf8",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9228aee-5741-496d-ba54-b950c89d4eb3"
        },
        "item": {
          "id": "266cd16c-6911-416e-85e4-a237f9e317ed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e3d38a6-7182-4557-9288-c4432741e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f66786-4733-49a6-9879-7bd6a8150def",
        "cursor": {
          "ref": "38f78f1f-5c34-43de-83c1-e0e34f94d5ac",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb3ece4b-a740-428c-a116-8267bd0ce42a"
        },
        "item": {
          "id": "d8f66786-4733-49a6-9879-7bd6a8150def",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0018f68-5459-4ecc-bc34-3f0611af18ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b2902-47e1-4f57-888a-a06936bacd0a",
        "cursor": {
          "ref": "92cd40a1-34ad-4757-b84e-b834173d48ab",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b099ec82-aa35-4485-ac53-b0c67892719e"
        },
        "item": {
          "id": "685b2902-47e1-4f57-888a-a06936bacd0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a7e88e7f-f484-4f0f-acd1-ebd5975bfb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847b8461-a19e-4bb8-9c26-5ad13acb5128",
        "cursor": {
          "ref": "073af4a5-a2d4-47a0-8b7a-c17ce612fc23",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bcd32d4f-c76e-44dd-a662-723ff72ef0c0"
        },
        "item": {
          "id": "847b8461-a19e-4bb8-9c26-5ad13acb5128",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "10de0714-dd3d-437e-9945-fc8d0c6c4195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c5a6b-6633-4f59-b570-e2c03622479a",
        "cursor": {
          "ref": "d3db9cfd-86ac-4f93-9eea-966866714b14",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dc8a54e5-5520-4f01-a4f3-b6dd8834b3bc"
        },
        "item": {
          "id": "a11c5a6b-6633-4f59-b570-e2c03622479a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c09f148c-7934-47b0-a73b-227141d724cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaceeb1-efda-45a1-8dd4-5e609b45dae2",
        "cursor": {
          "ref": "3f571c14-0a2c-4b7e-8d6d-0d2f88cd5ed8",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d22e8a2c-a959-4189-995e-409197a579a4"
        },
        "item": {
          "id": "4eaceeb1-efda-45a1-8dd4-5e609b45dae2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da88ea67-dd07-4e72-b7a8-34cd9099fb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f15c38-f9d2-4b97-81f5-620f37829da3",
        "cursor": {
          "ref": "e3ca8406-77c9-45bc-a123-320c44baab59",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6e9be964-9907-4aa9-8604-86c7d4df3602"
        },
        "item": {
          "id": "46f15c38-f9d2-4b97-81f5-620f37829da3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e7d4692-2406-4eeb-b888-a15cc9ada688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcbe5f2-6fb7-450b-bc72-2a3dc4e5be0c",
        "cursor": {
          "ref": "2284ed92-ed4d-4354-825d-542ceef0b11e",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "da9b8be5-b934-43ec-a140-e6bdcf218695"
        },
        "item": {
          "id": "bbcbe5f2-6fb7-450b-bc72-2a3dc4e5be0c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "deda4b40-1502-4c2f-b487-131f222274eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7ba31-5d01-4778-b6f6-0b98fee98986",
        "cursor": {
          "ref": "0f21eb83-032c-4b3c-997b-dff0a8b6cf59",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c07e2a4c-b7c0-4237-ad80-79be8bdc632c"
        },
        "item": {
          "id": "88c7ba31-5d01-4778-b6f6-0b98fee98986",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec358d39-b000-4208-ba2d-8bb7553beb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b2ae5-4b72-4d41-b046-5312a7e46d08",
        "cursor": {
          "ref": "bde178e4-c16d-4349-89bd-17a87abd66f3",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a40c5684-9550-45d4-bd9f-ef74954e0173"
        },
        "item": {
          "id": "a69b2ae5-4b72-4d41-b046-5312a7e46d08",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f8e4a266-eb10-42bd-bbc2-3e36a3d802c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5190f4c-c5ff-44e0-bb8c-6042e7c3f2c8",
        "cursor": {
          "ref": "6fc057c5-ee7a-4d25-9618-952c4b284989",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "40ac3d12-353b-406d-9c95-221d5f6b87db"
        },
        "item": {
          "id": "e5190f4c-c5ff-44e0-bb8c-6042e7c3f2c8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef46f130-2e19-4f5e-b96d-5dc2a6814dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526958e8-08de-4710-b413-49b217cae646",
        "cursor": {
          "ref": "bf54f3d7-0efd-4331-8734-e6f0b17db1b5",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6eda261b-4782-4547-bbe5-57ec86270852"
        },
        "item": {
          "id": "526958e8-08de-4710-b413-49b217cae646",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2e73ca32-d1a3-4fc5-bde6-a9f76c93712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494bec3e-b11f-4bc4-bd66-5cf37e8351a7",
        "cursor": {
          "ref": "96635c4f-564e-481a-8a01-c1c2e25f2adc",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "caeef746-ad00-4763-b8b7-265a74092a04"
        },
        "item": {
          "id": "494bec3e-b11f-4bc4-bd66-5cf37e8351a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1352c7c-b328-4922-bdd6-747466d3b002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733c0c9-eb85-4f90-81d2-26b5c7059f6f",
        "cursor": {
          "ref": "3a3c8764-b1d4-4b48-8e7a-79d3ac4b1e45",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9a28e145-5948-489d-b731-8caf7df86035"
        },
        "item": {
          "id": "f733c0c9-eb85-4f90-81d2-26b5c7059f6f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7027331e-d27f-4c84-9258-f42eaa7fa728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bafffbe-0f41-4178-ac8f-6cb36c313a4e",
        "cursor": {
          "ref": "f874db19-59ca-4d5c-af54-ac8d5ab4eecd",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7cb6b4d7-f367-4c77-a370-2cfd28b41a56"
        },
        "item": {
          "id": "5bafffbe-0f41-4178-ac8f-6cb36c313a4e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "533be8f8-1787-4e5e-a961-3719dae5236f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4737c3cb-f979-4b61-9fa3-ceceece317a8",
        "cursor": {
          "ref": "b1a9d3f8-1ff6-4382-80f4-8bda3f2c877e",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81c6037d-83b3-4e3b-91ad-93bf20fe2848"
        },
        "item": {
          "id": "4737c3cb-f979-4b61-9fa3-ceceece317a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0fdb3061-b8a7-4922-a6fb-640f45984ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b075320b-08ea-43ca-ac10-6cca8a1f8599",
        "cursor": {
          "ref": "edb144c0-4384-42d8-ac04-6ff6e25aa897",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "84f7e91d-ec87-4565-b74e-b5a547b0a9a5"
        },
        "item": {
          "id": "b075320b-08ea-43ca-ac10-6cca8a1f8599",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "df114cef-d03f-4fc3-86b7-f385166ae06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bff00a-86f6-44c6-9635-c877c2b435f5",
        "cursor": {
          "ref": "98eeb00c-c441-4a7e-8bd1-b8ad7ce0e7fe",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a1609f2d-9fe2-47ad-a598-c9fe71d37e9e"
        },
        "item": {
          "id": "d2bff00a-86f6-44c6-9635-c877c2b435f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2011a857-de88-4750-ad67-44b80ebd4fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4c7308-0535-4921-862a-02b961cae17a",
        "cursor": {
          "ref": "b04dbca6-ab30-4e1d-9f93-b08ebbc153a2",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3eddd89e-ca19-456a-8956-5989b1cf02ae"
        },
        "item": {
          "id": "3b4c7308-0535-4921-862a-02b961cae17a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "415a07dc-8a04-4718-a6e9-4d092a38d433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe7012-7d20-45f5-a91c-b92da784c534",
        "cursor": {
          "ref": "c20e3736-7ec2-4fbe-ba1a-483c62d1d5f8",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "145515a0-8a12-43e7-bb4f-4d222ea6c31c"
        },
        "item": {
          "id": "3efe7012-7d20-45f5-a91c-b92da784c534",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b398b243-3472-4489-9413-bd3849047267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eff5fff-92ff-43fa-aa7b-b4e6ac4966a9",
        "cursor": {
          "ref": "d29d7230-d6df-443c-8a90-c74eabbc322e",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1d2b89b7-23e0-49e2-868a-64b3b95cc330"
        },
        "item": {
          "id": "0eff5fff-92ff-43fa-aa7b-b4e6ac4966a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f758d750-1004-41b6-b662-2537c253b08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bd3f7f-f389-49e6-a37a-1dd6b7c2fb96",
        "cursor": {
          "ref": "b30d54f1-fc1d-4bab-9660-a716aa445b9c",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c58a4f60-9312-4858-8e21-3d3e78b5d0b1"
        },
        "item": {
          "id": "43bd3f7f-f389-49e6-a37a-1dd6b7c2fb96",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c5430d6-4f0d-4f22-bb3f-919be2a3edd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1743ac-254a-48d6-9581-e770fcd1972f",
        "cursor": {
          "ref": "c54e94c5-88e1-4f22-9c6a-482a53d83b67",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "865c8dab-f5a2-4273-9764-157aa4f73d2d"
        },
        "item": {
          "id": "3c1743ac-254a-48d6-9581-e770fcd1972f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b24469c0-3e74-410a-a9d9-6f7da96e7457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65addff-d558-41da-8d6f-f1c92a3ffcb0",
        "cursor": {
          "ref": "8e926fef-42c0-4d86-94a2-41622f813f15",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fbbfa881-7862-4336-ae3e-d02fc789a9f6"
        },
        "item": {
          "id": "b65addff-d558-41da-8d6f-f1c92a3ffcb0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "000f38d5-c4c1-4313-ab11-c3b37935e5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c908f-8da2-45d6-97c1-4aa956c425f2",
        "cursor": {
          "ref": "8794ef06-4491-4367-b9ba-2eb4edec9843",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "48df28d0-8c3a-470c-9475-376af294600e"
        },
        "item": {
          "id": "861c908f-8da2-45d6-97c1-4aa956c425f2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "75313255-418a-4bed-afed-812370447aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3910597-2968-43ab-9ea4-64e53ce4ac89",
        "cursor": {
          "ref": "44935640-01d4-4745-8ad1-0f7379ec3e25",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42cd71c5-1f44-421a-be57-8f20da064cb3"
        },
        "item": {
          "id": "c3910597-2968-43ab-9ea4-64e53ce4ac89",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "942862a6-cddd-41e1-9ac5-e34a19f3f10d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d066ee-33b6-4351-9894-3865b0ac6736",
        "cursor": {
          "ref": "b892f9eb-9124-45de-a570-eeb3d1a4bb64",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2618a1a-90a2-4693-8925-d27fb838e638"
        },
        "item": {
          "id": "03d066ee-33b6-4351-9894-3865b0ac6736",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d3fcac08-d121-4816-9343-ca9b54987847",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b5d90-71b5-403b-8094-7dcd6a451eb8",
        "cursor": {
          "ref": "347411ee-6245-4104-9b58-6ef497dc13b3",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "824df0e3-f641-4a90-b979-f370c78b2a32"
        },
        "item": {
          "id": "611b5d90-71b5-403b-8094-7dcd6a451eb8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ecc5815-928e-4d6d-ba39-6ba99e65eb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b5d90-71b5-403b-8094-7dcd6a451eb8",
        "cursor": {
          "ref": "347411ee-6245-4104-9b58-6ef497dc13b3",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "824df0e3-f641-4a90-b979-f370c78b2a32"
        },
        "item": {
          "id": "611b5d90-71b5-403b-8094-7dcd6a451eb8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ecc5815-928e-4d6d-ba39-6ba99e65eb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f6a398-d170-489d-b7a7-292d9f42a6cc",
        "cursor": {
          "ref": "86718316-b713-43f5-b222-f25a6557896a",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "575c486e-747b-4c61-a81e-32e63330e913"
        },
        "item": {
          "id": "a9f6a398-d170-489d-b7a7-292d9f42a6cc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e9e80c92-76c7-47fb-99b8-f24265dc83a5",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "10bbf60b-ad7b-48dd-a065-00e190841d42",
        "cursor": {
          "ref": "e1e81ad1-61e9-445e-b7ac-f428da84043f",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5cbe38b0-4085-432d-ba59-d665389f3b35"
        },
        "item": {
          "id": "10bbf60b-ad7b-48dd-a065-00e190841d42",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da26ec59-051e-46ab-ba65-21e23ab9a37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9548096-a196-49ea-87c0-dbbe171bfad6",
        "cursor": {
          "ref": "726cf408-30a6-46ea-8c40-282bad939b2e",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d10db149-c5ec-4d20-b42c-4fb1bfb4cc39"
        },
        "item": {
          "id": "b9548096-a196-49ea-87c0-dbbe171bfad6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23ef2830-a6d2-447e-980b-1e1f4d7cb07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a1058b-b1a8-4412-871e-bef0879fa9f3",
        "cursor": {
          "ref": "0d12a392-6f43-4531-a99c-961e158b18ae",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83325852-681e-4ba7-aad2-4a42ec1191b6"
        },
        "item": {
          "id": "e2a1058b-b1a8-4412-871e-bef0879fa9f3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ad3aee3-baa2-44d5-b4ff-6e942d47841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb976e4b-1b12-43ab-a889-bddd2eecfe04",
        "cursor": {
          "ref": "041fdf63-bd6e-4c4b-9580-d3aa3ce20dab",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5fd24ac3-053b-48cb-9edc-1fbbd99425a9"
        },
        "item": {
          "id": "cb976e4b-1b12-43ab-a889-bddd2eecfe04",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8df066c4-a407-44dc-8f37-e0a9d0933798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e363d52-d9a6-452f-878b-66fbc47af775",
        "cursor": {
          "ref": "0a62bddd-a71e-41f2-b9ef-7346ca33f617",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7577737e-a7f8-4bca-b8c6-50ffd64794d4"
        },
        "item": {
          "id": "1e363d52-d9a6-452f-878b-66fbc47af775",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4d435b56-32be-4df8-a450-431ddda7ef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495cfec-2f6f-46de-b3ab-b002c7bd7820",
        "cursor": {
          "ref": "09dcfc70-95d9-4e0b-b5b9-ff9ea14e1820",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ae1f52c5-c241-4598-8de7-3dbcd42e49b7"
        },
        "item": {
          "id": "1495cfec-2f6f-46de-b3ab-b002c7bd7820",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "28a8e159-6f70-4547-96b5-e3bd7dfb1f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421bbedd-30a2-4442-9baa-c1b1f5476e82",
        "cursor": {
          "ref": "f0113ad8-e044-4965-bf49-38185cceceb4",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d0917712-3408-4ed6-8a51-53300a2a1cc7"
        },
        "item": {
          "id": "421bbedd-30a2-4442-9baa-c1b1f5476e82",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b3ce61aa-4dd5-48c3-9bcb-65f7f731c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f75ac6-caf7-4e2a-b676-bfbe59481db3",
        "cursor": {
          "ref": "3d6ec040-34ed-4470-9cc1-7f545c5ccab7",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5ac3cd34-f738-44be-ad25-aa6ba1f5ff46"
        },
        "item": {
          "id": "b5f75ac6-caf7-4e2a-b676-bfbe59481db3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b4acfed6-9fa6-4dcd-9a63-18649b0e4256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18817ab-c4dd-4d4e-beb2-c5bc84d1639d",
        "cursor": {
          "ref": "7bf0a84d-0593-4d40-af0a-fe39226a6c5f",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "73860b8a-1cb4-4a40-b960-b7abb3b51d34"
        },
        "item": {
          "id": "c18817ab-c4dd-4d4e-beb2-c5bc84d1639d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de31d038-da04-46e2-8403-207f0d352a6c",
          "status": "OK",
          "code": 200,
          "responseTime": 423,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "b0788c05-80d2-473b-804f-f6de5edf9fd3",
        "cursor": {
          "ref": "5c2400fb-6cbf-46e8-8424-ce4e70a2f527",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7876c8c4-b3e3-4d3f-9bab-f23cf6dbd7a6"
        },
        "item": {
          "id": "b0788c05-80d2-473b-804f-f6de5edf9fd3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "660a3614-78ae-4e40-8dbe-282063516e80",
          "status": "OK",
          "code": 200,
          "responseTime": 449,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "c7c27c06-4299-4b72-a8b6-8f432cf5a142",
        "cursor": {
          "ref": "bdbea43a-e9bf-4d26-876f-44f262dfabcf",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "397ad73b-b85d-406b-afcf-b26a52bd9ceb"
        },
        "item": {
          "id": "c7c27c06-4299-4b72-a8b6-8f432cf5a142",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b9594b5c-b980-4883-a8ae-93fc54a3f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338cb8ab-fbe3-4853-913a-72c5f9fed2d1",
        "cursor": {
          "ref": "fe44c6ba-5c0e-4591-8709-53ab1c4b2612",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "de681b04-b474-48d9-b979-6ae90e0dc934"
        },
        "item": {
          "id": "338cb8ab-fbe3-4853-913a-72c5f9fed2d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "33c1ecf7-feeb-440d-944f-ffff4d02ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c929e0-5fcb-4015-8561-566720094941",
        "cursor": {
          "ref": "6fc34535-486e-4a0b-841b-e903b35c86da",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "006e1fd8-8d7d-40c6-be19-9adca57eec3b"
        },
        "item": {
          "id": "88c929e0-5fcb-4015-8561-566720094941",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7780b75d-b7e5-4113-8dcb-3278cca7fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c97cb24-3cf6-4076-aa14-3ac5f4baffc4",
        "cursor": {
          "ref": "02573514-7296-4a6f-b9a9-15e7b1a68b8a",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2039e23c-ed2a-4c41-8180-8ab362f7b9c4"
        },
        "item": {
          "id": "6c97cb24-3cf6-4076-aa14-3ac5f4baffc4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6e024e0c-0ea0-4847-888e-3c01d9bc2bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8196e5-1675-4130-825c-d7f47963f90c",
        "cursor": {
          "ref": "54d58bb6-be62-4d03-9104-fdd46e95fd3e",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1ccd116-b5d3-4ef1-89c0-bfb71c2a7023"
        },
        "item": {
          "id": "3b8196e5-1675-4130-825c-d7f47963f90c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "41f77086-ce04-4012-8c82-b1df8d68c76c",
          "status": "OK",
          "code": 200,
          "responseTime": 490,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "431a32fb-6116-4c81-b845-5fd3a264ca72",
        "cursor": {
          "ref": "381d4b27-3b26-4abd-aceb-79d0ff00f16e",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "946e7159-1ee3-4958-b3f0-66c7c1f680af"
        },
        "item": {
          "id": "431a32fb-6116-4c81-b845-5fd3a264ca72",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "94aa6818-10ff-444f-a913-1d848362bc7f",
          "status": "OK",
          "code": 200,
          "responseTime": 1834,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "8d4a0ce7-e9f0-494b-80ba-400462f19bbd",
        "cursor": {
          "ref": "8d99544a-de3e-420c-b0f8-eb1105f5b886",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6b309c0b-a6e3-41d0-8130-edae87973242"
        },
        "item": {
          "id": "8d4a0ce7-e9f0-494b-80ba-400462f19bbd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb3c40fc-7bd4-4987-9bd7-817ae48d32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60558e06-d0ec-48b3-806a-f9164f60d049",
        "cursor": {
          "ref": "234ab921-1228-4726-b28b-8716e0f5b968",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "210aeb4e-c3ae-4d07-8351-da786ddd30fd"
        },
        "item": {
          "id": "60558e06-d0ec-48b3-806a-f9164f60d049",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "33249102-2783-4bae-b6f3-50b4eca93a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f12ce5-5780-4b1d-bfa1-701abbe79d1a",
        "cursor": {
          "ref": "a8e4121c-584c-4fde-8f9a-b1befb2787a0",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d7da4ad9-5efb-4372-be69-d1246b6cebc7"
        },
        "item": {
          "id": "11f12ce5-5780-4b1d-bfa1-701abbe79d1a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "938a4ae8-6547-48ce-a811-6da1204eb183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac42e3-bec1-4f5b-b84f-2fa0dd791a3f",
        "cursor": {
          "ref": "eefbd2d5-b683-4515-a6ab-6f7b7de11bd7",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d1d700b2-bf25-44a0-929c-9d4c4bc83bbd"
        },
        "item": {
          "id": "69ac42e3-bec1-4f5b-b84f-2fa0dd791a3f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5b637353-9e32-4a44-8c8e-b972bdbb214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90538e9c-4888-4df1-924d-872af872dafd",
        "cursor": {
          "ref": "b76ef7bd-871c-42be-b7a2-81110cb9d92c",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "63138c48-947d-4d62-b8e9-3723f023349a"
        },
        "item": {
          "id": "90538e9c-4888-4df1-924d-872af872dafd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "38f626ee-3cd3-48a8-9758-a07dfb8f07bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db862de6-6b1d-403a-92d0-372b869377e1",
        "cursor": {
          "ref": "098f937f-ddfc-44dc-b6fe-36c55f2b6b6a",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac830fe8-d732-4dc9-9737-eb3bb08ca8ab"
        },
        "item": {
          "id": "db862de6-6b1d-403a-92d0-372b869377e1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e30a9501-8cae-49f2-bae7-741135d27590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e42ef57-cd46-40b3-bdc6-a42895b88a35",
        "cursor": {
          "ref": "2871f7f5-1d3e-4e44-88d8-e9967393b465",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1957d43-1385-420a-9b87-fdc6ed5b5ac5"
        },
        "item": {
          "id": "8e42ef57-cd46-40b3-bdc6-a42895b88a35",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d9c95467-cdad-4ea2-9d0d-5b270e7f52ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b264d24-c6a5-4685-ab2d-2e4116045599",
        "cursor": {
          "ref": "11a4ddb4-d1f9-4376-b605-680f163dee31",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "069365d3-8901-4b34-aa23-07e4aed00efe"
        },
        "item": {
          "id": "1b264d24-c6a5-4685-ab2d-2e4116045599",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2b0354e2-e781-4a4f-ae57-ed68e09600e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2c9b2-9e86-4a93-a25d-4d52c26eb6d6",
        "cursor": {
          "ref": "d81a6713-4a74-4768-9ec4-8c5a039ac827",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "444b8a02-94a3-403a-ae8d-963e2928a359"
        },
        "item": {
          "id": "f5c2c9b2-9e86-4a93-a25d-4d52c26eb6d6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4bc6f902-268e-4476-938f-e925af7c8d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8cb30c-07a2-4bb2-a8da-007a130bb86f",
        "cursor": {
          "ref": "33c81c2b-8d30-45d3-aef3-ada858ffb901",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ecbc9973-cdbb-46ad-ba70-c5160c64bb4b"
        },
        "item": {
          "id": "9f8cb30c-07a2-4bb2-a8da-007a130bb86f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f907c1a8-9dba-4e69-8425-159c56aedcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d836a67e-5731-4cca-bdbd-b012870bf84b",
        "cursor": {
          "ref": "b350c210-ca40-45cf-b6df-86f0a9f780a6",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "24261f08-d46a-4aed-a57e-3c3290db1b69"
        },
        "item": {
          "id": "d836a67e-5731-4cca-bdbd-b012870bf84b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "df975a3f-ae30-4540-bc2a-a3e801757a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5027a1-0f55-4f63-af00-35e1a5ed601b",
        "cursor": {
          "ref": "d1a9d21a-e509-40c2-b08c-6576e2785b9f",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5864f543-7782-4fff-a079-23e43ecef0fe"
        },
        "item": {
          "id": "5a5027a1-0f55-4f63-af00-35e1a5ed601b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e01ac6d5-8d87-44ca-af92-350dbf801549",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "f0daaba7-00cd-44b7-9b10-eec44df977d3",
        "cursor": {
          "ref": "e6bac20b-4e77-4b5e-be45-f92876f2a429",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33cb091b-9361-4037-957d-6d08c3f38520"
        },
        "item": {
          "id": "f0daaba7-00cd-44b7-9b10-eec44df977d3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "14271101-4a9c-46bd-90d3-c95e5a194ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37354b60-9aa7-4332-998c-d7a19b42baa0",
        "cursor": {
          "ref": "67fa5c75-47ab-4466-a2ba-cd38afa13b2e",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "72e6c24a-3511-48db-8fe9-1b675c22f7ff"
        },
        "item": {
          "id": "37354b60-9aa7-4332-998c-d7a19b42baa0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "41d41f2f-a6ae-4b8b-a301-4b9f435e1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bf1de2-6135-4581-9b8e-f53693cba788",
        "cursor": {
          "ref": "4697f911-6446-4d96-8193-1626d09b3cbb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "569d6ce9-252a-45e4-a961-b685a8675d94"
        },
        "item": {
          "id": "c4bf1de2-6135-4581-9b8e-f53693cba788",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5240917-ed09-4fc1-b0a6-935391cc3502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a870aee-de68-4eca-af4d-0255d631d137",
        "cursor": {
          "ref": "b989cf2d-18f5-4ee3-8c83-0c475bcbcdfb",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b5a22fb5-34b3-4437-8d00-b3466c43209a"
        },
        "item": {
          "id": "4a870aee-de68-4eca-af4d-0255d631d137",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "72a7cc47-3474-41ba-82c9-f6d23d3fa84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef0f88-b1c7-41b5-af39-ef291e710d87",
        "cursor": {
          "ref": "ac48268b-95d8-4ebe-9698-dad673d83dda",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "928f1bae-f20a-476a-96cb-5c4a3b3be406"
        },
        "item": {
          "id": "2aef0f88-b1c7-41b5-af39-ef291e710d87",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e8cb5fdd-ec51-4d1c-9c3d-73781bea5809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ad64ed-14ee-41ce-86cf-24613bbcb125",
        "cursor": {
          "ref": "a18bfc32-41a8-491b-966b-3c36184d69bc",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d8fbca1d-77c6-42d0-98cd-0d851b856f44"
        },
        "item": {
          "id": "23ad64ed-14ee-41ce-86cf-24613bbcb125",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "412ed939-7733-487e-8541-fdb92b1157de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688e98f4-3a7c-4f04-82c5-68620581e8cf",
        "cursor": {
          "ref": "a7df108e-4877-4bd0-90f3-4ba4ee9218d9",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a6edba94-e654-4665-b217-a05c8697cc14"
        },
        "item": {
          "id": "688e98f4-3a7c-4f04-82c5-68620581e8cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5f8d7fb0-0597-4692-a940-bfbc1c25b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65b80e-7797-4c35-9e18-41dd4485bc47",
        "cursor": {
          "ref": "5b78c160-bbe0-4269-90bf-2b948f4efc40",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "378336ea-5a47-46ff-a2c5-ab85422cbe00"
        },
        "item": {
          "id": "fa65b80e-7797-4c35-9e18-41dd4485bc47",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d529299a-3111-446a-ac28-ebb92d425412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4ec497-ebe8-4f80-93c1-fc31f4496326",
        "cursor": {
          "ref": "f7abca52-9a35-4072-adfc-6b07ed838a1f",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c3ad314-d7a5-478c-a243-659ed3349775"
        },
        "item": {
          "id": "2a4ec497-ebe8-4f80-93c1-fc31f4496326",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "096767cc-3fdc-422b-9915-f67e7672fe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0663298d-899e-4a5f-9e8e-b77e56aad040",
        "cursor": {
          "ref": "038a3803-0cdb-49de-b1fd-bbbdb29f9c02",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b7694a8b-06a0-4b0d-9eb8-d05c580fe20f"
        },
        "item": {
          "id": "0663298d-899e-4a5f-9e8e-b77e56aad040",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee554417-ef94-47b2-bbc7-550649548a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a30e2-4fd2-4ef5-95e7-fdf0a484a0cf",
        "cursor": {
          "ref": "65ff4f57-64e7-4f68-957b-58ea27d4982f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ab7729d3-2f0f-44f3-af5e-d525abac970f"
        },
        "item": {
          "id": "6a7a30e2-4fd2-4ef5-95e7-fdf0a484a0cf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "90fd2ded-bc74-4660-8475-215fc424cd7f",
          "status": "OK",
          "code": 200,
          "responseTime": 297,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "dab68d84-5dd8-41e8-a280-2b8d699e0802",
        "cursor": {
          "ref": "619e8af4-3f8f-4fa6-9f20-1d756d0f6389",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1ea1d3a1-4220-4d79-872f-a1b799eedce1"
        },
        "item": {
          "id": "dab68d84-5dd8-41e8-a280-2b8d699e0802",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e425904b-0485-4ddf-b9c1-37e580ddb9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af2880-eaf8-4ed8-a2cb-a24d44e83519",
        "cursor": {
          "ref": "73df7ec3-92b8-48f1-945d-7e33b0350d43",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3b052d5b-cc4f-4c3b-a7c0-f2db9f9135bd"
        },
        "item": {
          "id": "14af2880-eaf8-4ed8-a2cb-a24d44e83519",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "23425141-1714-4693-b6e8-55847e58f00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f2e257-9f5f-47ab-87c4-d9a3a3a8bcb4",
        "cursor": {
          "ref": "f388250d-996b-4f68-8ee0-7851ecc32ae6",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6b187525-7a52-45af-9e36-c4ba0898c461"
        },
        "item": {
          "id": "22f2e257-9f5f-47ab-87c4-d9a3a3a8bcb4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "31fe3ebb-16ce-412b-87e8-3734e8decd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c2a8b2-3834-4721-a981-52240911d076",
        "cursor": {
          "ref": "707ac033-cd1f-4b8e-9e33-5f294bff4aeb",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "486eb7c3-689b-413d-a043-55dac11678f2"
        },
        "item": {
          "id": "c0c2a8b2-3834-4721-a981-52240911d076",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1fa74e88-e704-4e6f-9588-4b36c7eb2ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b09747-c783-40e3-859d-f38b806c37b3",
        "cursor": {
          "ref": "2b31e890-dd30-4b2c-9e0e-89e55040920f",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4e4757b7-f221-4533-ba7c-9e755cc81ee1"
        },
        "item": {
          "id": "c9b09747-c783-40e3-859d-f38b806c37b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d588a45c-18d5-4376-8842-244e99546aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766e4cf2-1562-420b-a707-91a1a00d579c",
        "cursor": {
          "ref": "8dfc95c8-9b49-4a9c-87ae-489b131c837a",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d1a49929-635a-4263-83d2-05e7f06eb32e"
        },
        "item": {
          "id": "766e4cf2-1562-420b-a707-91a1a00d579c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72778903-0d77-4cb5-bb20-a7018a1b9293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1074cffe-3fec-4ba7-8711-8938210c10a9",
        "cursor": {
          "ref": "135a63e2-9b57-4535-a4b6-51a3b7cf4575",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fefa9acd-dce7-4a36-8b98-e18d98829913"
        },
        "item": {
          "id": "1074cffe-3fec-4ba7-8711-8938210c10a9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "091a3059-77f0-4674-b049-23a054f90eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df972c-d67e-4fcc-aada-f9b9b8466ca5",
        "cursor": {
          "ref": "c0d5915b-7d36-46f2-850d-8a599970432d",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "31762ff9-7061-42dd-89c5-9aa9a154d58e"
        },
        "item": {
          "id": "d8df972c-d67e-4fcc-aada-f9b9b8466ca5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "56897006-9e99-494e-815d-112c35b38ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b744ee-1cfd-4012-b552-6430dada4ec2",
        "cursor": {
          "ref": "44156c09-f4e4-49d5-8b51-6277d11e38d2",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ebc8a1e3-6a3d-4e78-8298-f2ac3120c46c"
        },
        "item": {
          "id": "e4b744ee-1cfd-4012-b552-6430dada4ec2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "826c91ef-536d-4632-822a-13844c5e131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa8a518-20f2-4160-bca2-ba4a66509da4",
        "cursor": {
          "ref": "de43c08c-fb92-40eb-9a8e-1b8d1af51af7",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b505582-fc50-4991-8fbe-b5e17871440c"
        },
        "item": {
          "id": "6fa8a518-20f2-4160-bca2-ba4a66509da4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc6b9721-4950-4ea1-8ec0-c71b45bd7faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554caca9-85d5-4317-b241-1d9445a6c6ef",
        "cursor": {
          "ref": "64d23c2f-6567-4c16-8c25-b952789ef889",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f02f1a7-fa0d-4d4e-b7ec-5603239f226c"
        },
        "item": {
          "id": "554caca9-85d5-4317-b241-1d9445a6c6ef",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "60809448-c8dc-49cc-904f-57d3ccbf9c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b7006-f1ff-4735-85e5-4f86550fb966",
        "cursor": {
          "ref": "c8507b8e-8003-4361-b24e-d2310b9d8021",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "883a2c67-462b-4459-8e49-7d77f1cbe88d"
        },
        "item": {
          "id": "ee2b7006-f1ff-4735-85e5-4f86550fb966",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6dbeadce-5ece-41fe-a85a-877daa5563dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daa619b-5f04-4e6c-a7b4-6df045d807de",
        "cursor": {
          "ref": "358a200a-b99e-4246-bb44-0c1a9794e1be",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "51e916a6-cb14-4919-b4c3-b9ed28f5619c"
        },
        "item": {
          "id": "6daa619b-5f04-4e6c-a7b4-6df045d807de",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed342fdd-1481-460e-8764-d713587335b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4f1261-9387-4006-a7bb-97eaacd7ad7d",
        "cursor": {
          "ref": "0d991abb-71f5-4284-b21f-ed8b70ff1428",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4722bc29-3525-4676-a5b3-dc8f40ce1f06"
        },
        "item": {
          "id": "5e4f1261-9387-4006-a7bb-97eaacd7ad7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d882510-ae6e-4989-8064-1f0ab09d1468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5c4169-bda7-4d85-8cfc-f8c78c33c30c",
        "cursor": {
          "ref": "983fe0e5-9155-4ddf-8df5-2d2405bfd90e",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8b2dd3da-56c5-4aca-8aba-17974f0ce22b"
        },
        "item": {
          "id": "7d5c4169-bda7-4d85-8cfc-f8c78c33c30c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "94109124-5c24-4496-85ac-3bfa4edfbd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792d5b3-3de0-4ae4-a4a6-07fd2b8f7e53",
        "cursor": {
          "ref": "10a2091a-61f0-46b7-b8d2-91bc85b1cf79",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "745f4fc3-9448-4030-b341-99a1eff630fc"
        },
        "item": {
          "id": "1792d5b3-3de0-4ae4-a4a6-07fd2b8f7e53",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e44f1ca5-216b-48ef-ac87-19991951a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f103e2-eef2-480a-ba5a-dcc11dc29647",
        "cursor": {
          "ref": "bc579a4b-70db-4f73-9b14-8790e389304e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c3d47dff-0b94-4132-8b6f-b0a69f5724cc"
        },
        "item": {
          "id": "89f103e2-eef2-480a-ba5a-dcc11dc29647",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e1861c73-1cee-4af9-8043-1055b122cea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbdfc5d-8e99-42b2-b8a2-1664c8feb881",
        "cursor": {
          "ref": "579df3ce-7c7d-47d2-bafc-e72d026204a6",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "789d8765-345a-4cbe-bba0-2d9e1b446488"
        },
        "item": {
          "id": "bbbdfc5d-8e99-42b2-b8a2-1664c8feb881",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1db36a05-bd3e-47f2-b46c-e61c72eeee49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4a1290-c377-40a8-8c76-a9e23bdb4219",
        "cursor": {
          "ref": "e3d6a187-bdeb-40de-a8cc-add7f4a33bba",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d80dcd54-3c51-49be-bd2c-be42d5514dc3"
        },
        "item": {
          "id": "0c4a1290-c377-40a8-8c76-a9e23bdb4219",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ead7902-435c-45ab-a398-14c56434ca8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3fbe47-f912-48f1-b819-c89e7ef73348",
        "cursor": {
          "ref": "ea163dd4-fef0-4455-a9f0-e9c04bdcd020",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a80db01-646e-4260-bd17-1d18b132065f"
        },
        "item": {
          "id": "8a3fbe47-f912-48f1-b819-c89e7ef73348",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "40ebef23-8463-4040-bb6e-ee64a4f8a1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8f44b5-fd65-4166-b112-65fc23d570a6",
        "cursor": {
          "ref": "ec75dcda-2b1d-4536-b6fe-f446d4640eea",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7c9655f3-f844-415b-baa9-d05967219a87"
        },
        "item": {
          "id": "6d8f44b5-fd65-4166-b112-65fc23d570a6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "816f81a4-60de-4617-8064-f406683fc92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d291da3c-7cdf-43bc-baaf-b16424141199",
        "cursor": {
          "ref": "c22bb7a5-635f-4cea-91bc-d185894f48f8",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b0051a8-220b-4b60-822f-4dd04019b1df"
        },
        "item": {
          "id": "d291da3c-7cdf-43bc-baaf-b16424141199",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2389c176-14e6-4ae2-b6ed-ad7055237fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1706ffb-5c08-411a-b4a8-974dbc1b7ea8",
        "cursor": {
          "ref": "1ca86fa7-a6e7-4b90-ad4c-eeef6445137d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f502eff1-4acc-49cf-85f2-f249caa91a60"
        },
        "item": {
          "id": "f1706ffb-5c08-411a-b4a8-974dbc1b7ea8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "be59579b-7c6d-49b1-b14c-d1335134a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe909b-b691-4917-902e-a9c36d11d32d",
        "cursor": {
          "ref": "53a4bb69-7fab-420a-80f3-7595f39bf2ae",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "96fc379b-aceb-4bce-87b7-0d49e82a443e"
        },
        "item": {
          "id": "7bfe909b-b691-4917-902e-a9c36d11d32d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8eb4f43b-7dff-4462-80a8-811ee0f23959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac95f55-0f04-447c-9e0e-fc24ce0fe8fd",
        "cursor": {
          "ref": "1fa5cbb8-cfaa-4a0c-880d-4013ca092aec",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27495399-03a4-414c-a410-aa33a99619ab"
        },
        "item": {
          "id": "cac95f55-0f04-447c-9e0e-fc24ce0fe8fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "176736e5-319d-45db-b022-9cbeb299c8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d42780-dbed-4e4c-a986-419bd53c9282",
        "cursor": {
          "ref": "ea4745b6-9501-45b4-8f62-fe00ba4d2622",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0419efd6-1e5e-4231-9c86-83b157fe8346"
        },
        "item": {
          "id": "e7d42780-dbed-4e4c-a986-419bd53c9282",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5fcea7db-6d89-4c37-a844-38f78a7c4928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dbce38-e22c-4f50-ac00-fbb4dde6df18",
        "cursor": {
          "ref": "275f9ffb-16e3-4942-add1-0a2e71562a6a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "21f86ea9-239b-4723-9f13-ea866d03c176"
        },
        "item": {
          "id": "b2dbce38-e22c-4f50-ac00-fbb4dde6df18",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b736f2bf-da67-4d4c-bd33-ba637a9bcecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747b08c9-a3c4-4f77-bcd1-ef955c800c7c",
        "cursor": {
          "ref": "8b6fa2aa-0057-4b8c-9ade-32f16c485709",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b915bfe-86e9-4c7d-bde5-209223c705d7"
        },
        "item": {
          "id": "747b08c9-a3c4-4f77-bcd1-ef955c800c7c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6306e6c2-b984-452b-9194-6730dbf551ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a57c77-ae86-4882-888d-f1b3650b6094",
        "cursor": {
          "ref": "dac5947b-de34-44aa-89d3-e2fe01d03b5a",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "634f11f9-8a5d-4a53-8312-122ab5f31962"
        },
        "item": {
          "id": "71a57c77-ae86-4882-888d-f1b3650b6094",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e8efa37b-c3b5-4a01-97bc-de16c28f0bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b4f6bc-e1ae-4187-8264-c0ed27b94e69",
        "cursor": {
          "ref": "5744742b-be17-411d-a090-7465cd78ce6a",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42272112-7a82-4780-8e0c-ea69d407f16a"
        },
        "item": {
          "id": "e3b4f6bc-e1ae-4187-8264-c0ed27b94e69",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c04dcdf4-15de-4891-afc6-4f4dcd482f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65defbb0-4e19-48e9-989b-7d1f126e5fba",
        "cursor": {
          "ref": "c17010ab-77e1-48d5-a5c9-895dd00829e1",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e5a5ba3-b4df-4120-92aa-117cb652529d"
        },
        "item": {
          "id": "65defbb0-4e19-48e9-989b-7d1f126e5fba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a10556d9-67bc-4157-9322-f1565a713cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530f2afc-9997-4d4c-a875-001a37c3f12c",
        "cursor": {
          "ref": "ec1211b5-a2ce-4bc2-abdc-2ea57c100c63",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8669397d-fef5-474c-91b5-04a94045995f"
        },
        "item": {
          "id": "530f2afc-9997-4d4c-a875-001a37c3f12c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "685e39bb-3d9c-4fbc-803d-6ecc9c8dc20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718ba082-6c4c-4251-a87f-57ff7880e54b",
        "cursor": {
          "ref": "1bdb3f39-5c07-4f1c-846c-207720f388c6",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a8029e8-ec49-42b0-a782-2f592c78e2f7"
        },
        "item": {
          "id": "718ba082-6c4c-4251-a87f-57ff7880e54b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6a636301-ecb8-4859-a15d-eda166e54cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8201dab4-b7b0-41b3-bbad-420df862d0a3",
        "cursor": {
          "ref": "926496bd-3f62-4674-8c91-5a523ae76aa6",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "64e46fad-4746-4159-80ed-75dfc0183c1a"
        },
        "item": {
          "id": "8201dab4-b7b0-41b3-bbad-420df862d0a3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "18f27ead-c378-4209-aaba-b30a38d0b813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedea1f9-36ef-4e62-aa4e-3c064ac7dcc9",
        "cursor": {
          "ref": "aa8d8892-cbdd-4b7f-85cc-6186d655dea7",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e4789d1f-5d67-4cfa-847e-46cc2307a74f"
        },
        "item": {
          "id": "bedea1f9-36ef-4e62-aa4e-3c064ac7dcc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "904ecf4e-d139-4648-811d-9933647b652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c395315-c927-41f3-8ccd-e9deb2e3e5c9",
        "cursor": {
          "ref": "40aba2d7-1839-4306-bd5e-dac38477a9d4",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf5c4803-57b9-4b4e-bd54-03c86e876972"
        },
        "item": {
          "id": "9c395315-c927-41f3-8ccd-e9deb2e3e5c9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e029d64c-2668-4542-bd9b-b57bda3ebe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aca4359-88f0-4d00-9732-593154a572a1",
        "cursor": {
          "ref": "f0f42a20-d6f5-4854-86ca-55d607a82ea7",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "be686024-7761-48f7-9a52-46d762f10d2a"
        },
        "item": {
          "id": "3aca4359-88f0-4d00-9732-593154a572a1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b61b5fda-65f2-4632-8d00-5e4cf7d43a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d92a73-18e8-4bd8-bb1f-9ddb875c8b85",
        "cursor": {
          "ref": "e9491db8-12d2-40f6-a876-91e84879bcc7",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d1a148ae-be1d-46a9-a4a9-4f307bfe5230"
        },
        "item": {
          "id": "84d92a73-18e8-4bd8-bb1f-9ddb875c8b85",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "35298eae-f47d-4bda-87cb-5d39af1f369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe56a2-85cf-4291-9d8c-7606269fa008",
        "cursor": {
          "ref": "f96af5d8-f1ab-48d5-8ee4-73202d463fa1",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5a52524b-16ce-42d4-9879-d5f3b6991bb9"
        },
        "item": {
          "id": "9bfe56a2-85cf-4291-9d8c-7606269fa008",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ecbce731-02bb-4ee0-a602-2ba5b3bca957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6907c9-96b7-4812-84ec-172c57d1e8f1",
        "cursor": {
          "ref": "25bcea42-fe66-47dc-bbad-9c579638dba7",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "49554df4-2856-469b-b93e-2c37409382ed"
        },
        "item": {
          "id": "2d6907c9-96b7-4812-84ec-172c57d1e8f1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d28748cf-efc2-4a85-8a69-0de26f905986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1871a036-1e15-4058-9131-8cbf832f4d72",
        "cursor": {
          "ref": "51cd12ae-e648-4471-8646-e24a2b59678c",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ca3dec0c-5dd8-4707-8112-79c35fd4692e"
        },
        "item": {
          "id": "1871a036-1e15-4058-9131-8cbf832f4d72",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d19ac4be-387e-4f21-a497-0f3ea50bcae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bd879c-5920-479a-9def-11d8b44a8e42",
        "cursor": {
          "ref": "82dd4e14-0289-4cbb-b490-55e87128f13e",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ecf87cee-71cd-440e-9b25-453307aecabb"
        },
        "item": {
          "id": "17bd879c-5920-479a-9def-11d8b44a8e42",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4262f153-0ca2-4930-a879-8b6548e887d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6fe2c3-0e15-4b03-a88f-b8544952d068",
        "cursor": {
          "ref": "4948afe3-bf96-4b25-92c7-fd0851e781e5",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "34d7c546-cd1f-4f36-8865-17190e1d13ce"
        },
        "item": {
          "id": "4f6fe2c3-0e15-4b03-a88f-b8544952d068",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea8a7569-0086-4a83-9733-9e467e688afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ac0293-ff01-40d5-9475-c83d578c35bf",
        "cursor": {
          "ref": "2ca2bf1f-3f89-498f-bce6-400dfaeb3956",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aadb3056-c9cd-4a43-a9e1-82bb4327f00b"
        },
        "item": {
          "id": "70ac0293-ff01-40d5-9475-c83d578c35bf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "88b4f6cf-84a6-4aed-88b9-40faf312723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e6105-88ee-4834-a6f5-9c62074487f5",
        "cursor": {
          "ref": "20576858-b663-4135-8066-e416506a557e",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d86bcef5-d41c-4638-9221-779b9f091504"
        },
        "item": {
          "id": "9d5e6105-88ee-4834-a6f5-9c62074487f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "24950f7e-6310-4b15-bbad-00f4f684393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b153788-0260-4534-af6a-e983fbe9b8a4",
        "cursor": {
          "ref": "2cbf9356-0e35-44bf-9be1-73a40a50bef0",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1b15f231-a36b-49dd-8b58-72596d3d3b6d"
        },
        "item": {
          "id": "9b153788-0260-4534-af6a-e983fbe9b8a4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "50433fb7-f664-478f-ad60-cb40230fce00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80542daa-cf27-463a-a934-3c5cc3c22eb5",
        "cursor": {
          "ref": "e8e4e21f-8746-4387-8850-eca6f0578a0b",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a01f74b-891f-42b6-9fd1-9c04f23d3be9"
        },
        "item": {
          "id": "80542daa-cf27-463a-a934-3c5cc3c22eb5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a8f5ec5-bce6-4244-b862-a4d007e5f033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc1b178-e272-46e7-aa39-9ef2fdf71997",
        "cursor": {
          "ref": "1b1d8da2-82bc-48a5-ac81-1a221d9f2efa",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d12a64cb-edf3-4f71-b3e1-32b3fcca7ee6"
        },
        "item": {
          "id": "2bc1b178-e272-46e7-aa39-9ef2fdf71997",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9aa0c776-2b14-4331-aa07-6e57b879cc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ea6ced-2049-4676-95d7-3e8b992937ae",
        "cursor": {
          "ref": "92906e0c-6b42-4044-b94c-5bdc31e23639",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f0d3f72c-c23f-4ccc-a43f-b077faebbb80"
        },
        "item": {
          "id": "d4ea6ced-2049-4676-95d7-3e8b992937ae",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "994e3ba4-eb58-44d6-9fd3-502798a6cffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5220fb-8a75-4c82-aa57-5f5fb60a5be1",
        "cursor": {
          "ref": "cbf5604d-c678-4290-9d11-1e7bd13dc01c",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "473f7fd1-a63d-4a3e-8470-eacc2ded2704"
        },
        "item": {
          "id": "ac5220fb-8a75-4c82-aa57-5f5fb60a5be1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "67af69f4-ca6b-4b23-a11e-644610d72ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62745e23-fc5c-4cde-a29b-a31e05494795",
        "cursor": {
          "ref": "82b7bead-ccb6-403b-9a2e-f1936115652e",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "efe768d3-cd0a-48d7-b8db-4999178eb10b"
        },
        "item": {
          "id": "62745e23-fc5c-4cde-a29b-a31e05494795",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9c5149e5-8bc8-4d3f-91dd-0a820398dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2bf8a2-2784-47a7-8a20-cef604151207",
        "cursor": {
          "ref": "8b2eb303-5f5a-4c0f-9f61-0334df703608",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8ba4a505-43e2-4b27-a611-909b759b2df1"
        },
        "item": {
          "id": "6f2bf8a2-2784-47a7-8a20-cef604151207",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0493c061-de35-4332-ae72-b17bc04593aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe92c93-d4a9-481d-b3bf-95de6021384b",
        "cursor": {
          "ref": "451c3ab0-9c44-4c1f-ac30-b19ec1870ad4",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5fef6422-58d7-40d2-8cb4-55fea629ecf5"
        },
        "item": {
          "id": "5fe92c93-d4a9-481d-b3bf-95de6021384b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9feb6c2d-eec4-4167-9b32-852922514de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6444dcf2-80d7-4c66-9407-f7b026be852d",
        "cursor": {
          "ref": "d1c22189-a7c2-4c59-beed-2b20791026ae",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a62cf6c1-f051-41c5-a11e-cd9c0d75faa2"
        },
        "item": {
          "id": "6444dcf2-80d7-4c66-9407-f7b026be852d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c9988779-3c91-452d-bddd-736b396e8716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab240747-c5f5-465c-9e1c-ed02bf66d4f1",
        "cursor": {
          "ref": "3824baaf-0c00-452a-bd25-08e2c407328d",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "12b50080-ecc2-4e7d-855f-a0e87e53a853"
        },
        "item": {
          "id": "ab240747-c5f5-465c-9e1c-ed02bf66d4f1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "727beffb-32af-475a-a1ef-41de58cae1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56234e5-f09b-4ffe-8807-fb2b2765e299",
        "cursor": {
          "ref": "cf0e8ec5-0418-46e7-9e9c-5f4456bdec1a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "328a25d1-d1a0-4f1c-8a8e-80aad35d1dd2"
        },
        "item": {
          "id": "a56234e5-f09b-4ffe-8807-fb2b2765e299",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "033e5cb6-912e-4ce8-99d2-b67d464a76d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a787388-461c-4a8d-a767-6c17370b9b21",
        "cursor": {
          "ref": "9ebf0c5b-79c2-467a-ad27-f81fd596c476",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abd9264f-e7ab-4c30-b9ef-7db1cc2ee098"
        },
        "item": {
          "id": "7a787388-461c-4a8d-a767-6c17370b9b21",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a6690d58-fc8b-4f72-811e-406445224db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dba104-d04c-4b67-bd0c-5c1ce6348310",
        "cursor": {
          "ref": "29e6b93c-8b71-4d86-b0bd-c77014024d9e",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "53abd260-bd61-495c-a2ad-f53a350bee2a"
        },
        "item": {
          "id": "c6dba104-d04c-4b67-bd0c-5c1ce6348310",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "523ee005-3368-40f6-a9b9-16c0ba6d4f95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9189c1a-9559-4e07-9038-c71fe521ec7c",
        "cursor": {
          "ref": "2057b1a6-bb3e-4576-87a6-2199079a7e71",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "501e4e71-9323-4f04-8f3e-89a4aa444f8a"
        },
        "item": {
          "id": "f9189c1a-9559-4e07-9038-c71fe521ec7c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5bd8a5fd-4898-4b9b-b588-aac550f6e666",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea8277d-ab84-4899-a477-7dc895cf486d",
        "cursor": {
          "ref": "12f977a6-d94c-4cc1-8a04-8aa37460b9ca",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d640e523-d317-4c42-9d84-b589c5848ff6"
        },
        "item": {
          "id": "4ea8277d-ab84-4899-a477-7dc895cf486d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2711a3da-a13d-4215-8559-17c0bd7733d2",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2191f7d-460b-43c5-91df-95a1fa2ddd53",
        "cursor": {
          "ref": "1db40e0f-0cde-4e7a-9159-4cc885278e48",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e9397160-0bd7-4d20-8a40-d2f70c837ad7"
        },
        "item": {
          "id": "d2191f7d-460b-43c5-91df-95a1fa2ddd53",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f10367fc-5105-485f-9f77-1cbba3839dc8",
          "status": "OK",
          "code": 200,
          "responseTime": 1849,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214729c-3c1f-49ff-9168-ac41acfa4cdc",
        "cursor": {
          "ref": "61c1ffcf-5865-4014-865d-54cf3163af0c",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0c8384fe-9947-461a-8b78-c9baf80e65a3"
        },
        "item": {
          "id": "9214729c-3c1f-49ff-9168-ac41acfa4cdc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ff94d75d-dc6b-486c-9981-7030ee09f32f",
          "status": "OK",
          "code": 200,
          "responseTime": 1837,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
        "cursor": {
          "ref": "f6b3dfd1-2563-4994-be2e-a973b77156b5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1cbe6ff-cb08-43ef-b9cb-249d0a5f2dda"
        },
        "item": {
          "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3637d524-f74a-4f0a-9088-420864a2df21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
        "cursor": {
          "ref": "f6b3dfd1-2563-4994-be2e-a973b77156b5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1cbe6ff-cb08-43ef-b9cb-249d0a5f2dda"
        },
        "item": {
          "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3637d524-f74a-4f0a-9088-420864a2df21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
        "cursor": {
          "ref": "f6b3dfd1-2563-4994-be2e-a973b77156b5",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1cbe6ff-cb08-43ef-b9cb-249d0a5f2dda"
        },
        "item": {
          "id": "a2eaf213-a514-4338-b5cc-d36ed0960c00",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3637d524-f74a-4f0a-9088-420864a2df21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552acbb-1b6a-45f6-9f7d-37ebf967bc18",
        "cursor": {
          "ref": "58591295-4edd-4369-a95d-347ad0bf8ccb",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ff898fd-aecc-4299-b1da-b4ced39bab83"
        },
        "item": {
          "id": "1552acbb-1b6a-45f6-9f7d-37ebf967bc18",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fb2fff1e-693f-4889-a1de-11dcb1c4f2d1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 288,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb4cf4-d784-48f1-8ffe-6a010536e654",
        "cursor": {
          "ref": "bb49545c-138a-432d-b05c-cb4ae227fec9",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f4dbbac-0ff8-4eeb-9b92-4ddaeb16e9d1"
        },
        "item": {
          "id": "1dcb4cf4-d784-48f1-8ffe-6a010536e654",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e75fc61-4d46-4341-b31c-59a0e55b8bf6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb4cf4-d784-48f1-8ffe-6a010536e654",
        "cursor": {
          "ref": "bb49545c-138a-432d-b05c-cb4ae227fec9",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f4dbbac-0ff8-4eeb-9b92-4ddaeb16e9d1"
        },
        "item": {
          "id": "1dcb4cf4-d784-48f1-8ffe-6a010536e654",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e75fc61-4d46-4341-b31c-59a0e55b8bf6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd23929-ef0b-4395-96de-b6c49eb200aa",
        "cursor": {
          "ref": "ee0a105f-5d1a-4a3a-ab3e-a9f179bcdcb1",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "78579a47-cecd-440a-9da8-c0f26b72a8a0"
        },
        "item": {
          "id": "0cd23929-ef0b-4395-96de-b6c49eb200aa",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ec06023c-753e-4c17-8b47-edc26512fa86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf862b11-d3e1-431e-893a-b2bb87a0ad7a",
        "cursor": {
          "ref": "b4d79aa2-94ba-48c5-a344-767dd9c2d72c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "71037436-4ee9-4a09-a6a6-a01c10b3e4fb"
        },
        "item": {
          "id": "cf862b11-d3e1-431e-893a-b2bb87a0ad7a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ecfbc0ba-2c51-446f-9f72-e00790519f9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf862b11-d3e1-431e-893a-b2bb87a0ad7a",
        "cursor": {
          "ref": "b4d79aa2-94ba-48c5-a344-767dd9c2d72c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "71037436-4ee9-4a09-a6a6-a01c10b3e4fb"
        },
        "item": {
          "id": "cf862b11-d3e1-431e-893a-b2bb87a0ad7a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ecfbc0ba-2c51-446f-9f72-e00790519f9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e748ab-2405-443a-9746-42dff94ed60c",
        "cursor": {
          "ref": "06b53b26-4791-440a-849a-649fdd3f0793",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5dd1bdf2-747f-49bc-b7df-ba09af01e6b2"
        },
        "item": {
          "id": "f6e748ab-2405-443a-9746-42dff94ed60c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "642c9417-c431-408a-8532-a7c0451e846b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}