{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e01e565b-a9ba-425f-9528-acd8625b622b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f15629cc-3698-4be3-a24d-43db82542e1b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e80d3b28-49f8-4aae-af48-fdaa50755d51",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dd1b68fd-235b-47ba-a802-20c643b20dcb"
                }
              }
            ]
          },
          {
            "id": "12df334e-bb4e-44ac-b73a-82ed2d476477",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1be97212-cd04-4baf-89ae-fd99ee4df5fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67c6c920-ad70-4e1f-9c36-76890f1c4159"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "13f18196-1b4f-4ec7-80b1-d6a72c0a2124",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7812ee90-f68a-42fc-83f5-caea124f4791",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b24558ad-72ca-4f4f-8e1d-aaee9976b9ac",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95051504-7fb9-4375-9ea9-edb5b9831e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f384a41d-d9ea-40a2-875e-97d94e341679"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47a17d68-6e19-4fa8-a795-b90b4882b195",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4418adad-b0d4-4624-9f51-f16bd928588b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81547142-8882-40ec-b94c-c68f66b62e00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18aa73c0-47fc-4dc2-9f08-e8ec9d7dbf78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88f767fc-a947-465c-b9e7-74982e71b963",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "253c93d9-9c97-4aef-81d2-78f4bd72b5f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1de37b39-bb8a-4b88-bf4a-1e7232688a22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7559fced-8d5b-45ba-bee7-03aa98b85a08"
            }
          }
        ]
      },
      {
        "id": "134b08a2-b6b8-4f07-ab5b-8278949aa2db",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "49487bf2-a695-4f76-93d1-b83c5d970e53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d35848f-5ec7-4764-bff6-3fb278e04af8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a48ff897-7580-4746-922a-c1e3209c624e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa86887-5e8f-4a41-b0ef-98ac80452b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f36aed3e-6f8d-49b3-ab7d-d276c3ee806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67df02c-8304-40dc-8c93-c29731e621bc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885b6c6b-4e7c-4e97-9a09-fa68277f9845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3a71484-3a19-4e32-a88f-ab551834a627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c3def4-c498-4ef5-8153-da0ae30f88a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a0d767-c699-4823-abbd-c0755ceeb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c302a0-6e8a-4646-90e2-8ded24beb2fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5b5ea20-9b2a-4ce7-800c-eff95904ab3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "268237da-625b-4a94-aa1f-d55602c94318",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c80862-9f0c-4be8-a76f-d441854f4aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "014e7b5f-adca-4af9-8f60-138a383889be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae829e7-787d-4db8-9367-c02fb78299ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950c2cd8-287f-47cf-9099-cfb2bad567a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e89fd65-fa98-4373-8bd7-2795d12bc90b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a30181f0-b317-437d-8591-f25678635f84",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "424b4d1d-dcba-49a4-9af6-a0621414c197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2e912843-f43c-4cf4-bbbd-a09296cd9f6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6718ab7-4a1b-4f03-a553-f249e4543f19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "19fcb1f0-3776-4198-9bb9-38c86b9c2fda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbf6989b-a123-4ead-bdba-4656530a7eaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb012124-67f5-454e-8553-104e56839503"
            }
          }
        ]
      },
      {
        "id": "76115300-c36b-41f3-8ed6-8644146b76c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "662a0697-0b40-4b70-b0f1-45baa7d6a261",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dba5a25c-5c41-4824-98fa-4d5f5aab3ff7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "be139398-f4fb-42a9-a952-349f94e2b096",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cedeb14-be6c-4c94-8016-6e5098db8fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40badd56-eea3-4706-a9d9-83027e6c369e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecdd13d-638f-4716-a70e-7958a60bdb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f763bdf-4609-4455-a43d-a357139f2794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5a358c-ce11-4f03-8d2f-7caf0d4ec3ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4613ef-9210-440a-898b-d86fc73440cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be32d325-317d-4a0e-bfac-788498eee348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fff9582-2130-439b-b03e-7b72867dc2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e1a733-85f6-4daa-884d-67a7d5325584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3971494f-e6d0-4c61-aef6-1989b665040f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee083275-7415-402a-afc3-376e05c0e898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b384786-4c10-4db2-9713-7fd84bb8a3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db9358f-733e-4d7e-b700-0db664983d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dbe1157-1a74-4bf6-9a59-384cf375d032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3831160-6b66-4928-bd4d-3d305cffa638",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d297b-0154-4085-910b-e352bf4553f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38bb7b2-c161-4be9-a0c8-5e7f4ad87121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf355d2b-aaae-4680-9577-979b2eb9c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95a82c25-db6e-46ba-8d36-a5a08533dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64557c8-a1d5-43bc-88ae-bf426aa070f9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b9274e-1fc4-435d-95a3-6326b6ab1831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c545f6-de02-43e2-971a-5ef884bae857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b72bc97-4bfc-40f9-8109-952029da559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59fc65ad-76f0-4b2f-b9c7-76ac3fedfeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1c6bae-5f1e-4ddd-999e-bb491966f598",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f080582f-9b62-4fc4-9fbc-a533f90485fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ecd580-9c79-4ed2-9e73-f469be615a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb6f6a7-0d2b-49d4-9b96-bd3bb50f643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c16a3c-cec3-4f2a-990a-7fee1fdc0054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679d924e-1d55-4c19-aef4-cd48693382e3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a8558f-4db2-4d51-87b7-3d642c03d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cfcaa5-14d8-46ee-b4bb-e478aed725b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15f48cf-aede-48b4-95ed-682a2dc4472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287c1c0e-157e-423d-a12d-eb022b453f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794d10c5-fed3-4bd3-8557-843b14b65e2b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fddb75-f29c-4d00-8b6f-bf8f11872d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f9239d-0b12-4e8a-ae7e-a94f2bc1a4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22577a3d-c8a1-4717-aac2-ba8a7b7835f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "241750df-21a7-4a39-a2bd-b7b0c0bec0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb32beab-9b30-48d4-99e1-d5123a89159d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0faf2e1-b1ee-4288-957a-e2d290175611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcdb9b2-90b3-4302-9138-562968abea93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b1468b-7fd8-47c8-9002-7514aff71828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbcb6c17-aec9-490d-9099-6c40b4e3c15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6add3a95-df75-4ea3-a8a4-22fab59cc886",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1083b94-9b4a-428c-af92-63488bbef1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb3434d-b07b-4dc5-b48f-535184103759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3380c18-21af-41a0-bfd0-1485d68d9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7179702-d1e1-4338-9fa7-44844845da72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566bd47-150e-49a5-a828-e0dbd9a49648",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15123f70-51a3-4926-912a-2aaa34c0e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cc1e22-7e74-4de2-9693-1da820c175a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa305840-a965-472c-aa2c-04e92f015fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28cf2709-0f6a-40fa-90ee-30c31688f4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f074302-9a3e-42a4-807a-de5a29e13144",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6840c0f0-a508-46d5-a066-074eeb835605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a6a91d-0c01-45de-96e5-0dea85aed5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c5d9ff-8b38-4c1f-bf83-2b16b7ab8950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f7a40ac-098c-4c07-8503-c2f8e35d1f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea1f8ba-efdb-418b-9d69-1317e80492c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d7e27-3acf-40d5-bbf5-83f83a7b2c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fc26c6-f5d2-4593-9f16-894444655f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b7f58f-5211-423d-92a3-975bbcf85693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85d243cd-be5c-4291-a5fa-4ed451461487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45c0c9-2191-4417-9a0d-ddca4fd51e00",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f45d0d2-e3fe-4525-8fe6-c64fc2acd2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172e096f-a67d-4010-9d8d-bcee5ddbbd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c340daf-b74e-4b5f-bc5a-cea532f41005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d349aff-9b6b-4609-948c-9c65c12e925b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca6dc88-3bfe-4cc8-93b5-1b05f4c66d00",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fca546-b30d-4dc3-b58a-3a164c607836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102b4769-3b32-420f-b23a-5b6149f1aeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8621f1a-5831-43e2-b380-495764916c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27a92874-29bc-48be-bab7-b8a8af171db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f916735-3ae2-4a37-9488-1735db5a4eb0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2558f3-2398-47bc-a85c-f8b9c6027d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da28fbb0-b757-496a-b60c-7eeb5e8930c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e7d9e6-4a9f-4ff5-8ead-b1e043233d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c599bf-ddf0-413b-ada9-cbcae197e83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6c6e22-38bf-483c-869c-086875bc4a5e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee7ba7-d0de-468b-ae6e-be1d35d08474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f46b72-57ea-4122-97c7-5ba513b48f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b93e89-5ea7-463b-b341-2210a4a920cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df4ed3a-1d89-494d-8c32-82cad7ff6f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904b7ef5-7e23-4bdf-8566-b37feddce316",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f24bea5-ef10-48a3-bbca-a1ef46dd736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b42f1fa-b6fc-43ee-a60a-4423efa043eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41440759-96f1-47df-9243-1324de64bb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d22283d-0461-4aef-a8d9-ea4219178db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2d4d08-da33-4f87-acb5-76db150ed084",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858d00e4-0bee-4d63-9cb4-95a4c8702382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29afa117-c8fc-4db4-aada-1da03fb0e66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad8d28f-d556-4f63-9612-7766e4d6e952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58410dac-5f8d-43ff-8de2-5cfd3fda92ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254259cf-fb5d-4ec7-ab6d-3078a9ff4217",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae465a8b-2011-4d85-9402-ec8b97a8b4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdca28e2-ceb9-4896-b74c-df52632e38bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4231a577-5a54-4fb0-b139-6f9efaa3e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ddf2bc-c660-44f4-a425-6d73bb09f030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00994b04-a888-4ccd-984c-5ed4b183151b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5933a3dd-265b-4bbc-9513-abe29c03a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b7c86f-3758-4f6c-9102-8d921e7544e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1ef88-42a9-4296-bedb-9e13e9b28116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c674ca-8ec4-466d-a8ee-084d8f9edb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96def0e-8a9e-46fb-8fbb-469b47b832b6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9580df-4463-4f53-81c0-39aca29ed867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9a9b79-e4f8-4979-bba8-d06db8c58721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8286af38-1ff7-4b8c-b8bc-8528af167e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "782e0b68-c17f-4ca2-8045-32438cf46a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6b4ff5-01ef-4068-a269-1b975e605886",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29415dc2-501d-4204-9ca7-0e17276c4e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428f4755-0783-4d88-b2af-a3c2243c228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4693b48-f6ae-47d6-9d15-55e3a9b07ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc79038-e452-43e0-9b58-4e53548029d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076aff53-c514-4880-91a5-9e819a57f45d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332018c9-4f29-4f67-be6d-ca42dc6f1e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38861c2c-6331-4551-85f1-7ae587034a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15894a02-03e6-4105-b0a3-a6ef409128c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30cd9ba-e489-42c9-8471-81f59e715703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14b9803-81ee-437a-aec3-fa5a649b0518",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d45206-8f34-44db-8ba1-d16c09e691e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1544f3-2fc0-4c94-9a18-4e964fcfd1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e18870-40fa-4deb-82c9-ec5ae55b39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c1b539-a3a3-4d70-9225-e43c7c13fdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f67a2c5-271d-4272-a1a8-59743f61b29b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d3bee0-0c1f-47b5-85b5-77292df2438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead8350b-f0b7-4608-b625-1216423b0343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e80188c-729b-4517-811e-5e16a8833806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fde03e5-57e1-47a2-b39c-56b51094ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7db3f08-9214-43b8-9d41-3fad72d3ffae",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e9e363-b7aa-4d56-a2c1-6953dff905a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b4d5c6-043a-4b36-85ad-0a5e82151b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d682f628-fde1-49fb-ae18-5b3506bcc4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3816f40-45c0-4037-89e6-e28f35725b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e19b5af-6365-4ab7-b102-54978280d8de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e514f7e-3f46-4121-b20f-342f9fcb1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129951db-802e-4af6-8ee2-299ff227f315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9974d43a-4026-4fb3-b5c1-2f8e35ba6be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c9d13c-0b4b-4d38-9ea3-a10c40e04ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e63e6-e7f3-4a82-be94-1e8a45ee8105",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18759e9f-9f88-492a-8e14-270af5c2c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f819b8-091d-4d7c-ad7d-afa78553981e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ca071-e856-46df-b473-6c5542661ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d3d13a-c530-48f1-9e84-cd74adc589ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7ae4a1-b3de-4dae-ad21-ec8431d3e36b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f955558e-30c7-428a-88ef-989a14cb3625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f732a3a8-c5d6-4986-a8da-ee679ffdf59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fb6d60-44b3-47fd-834a-d8b6636391aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca99e98-a408-450d-8425-5b900936991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b928d1a7-d215-4d12-bc57-fde48a1ca9f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a914bb59-9448-4250-8da2-50e6a6e1b24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ee65ad-0539-47c6-ba12-da4db760eca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b373bd-6d97-41b3-8542-00a9a90faf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de16112-0964-4234-8118-b2f3224c28be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abca107a-fb61-44e3-9593-2bb992e452be",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55144ca-ccd6-4829-a8b5-359829c60500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a9c437-d030-4723-afe4-b75038be35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07ad3a-eca8-4d0a-9aed-54bc2c4a0cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb9ae1a-4f59-4c70-8a9b-b4af2182e590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecef342-b1e6-402f-ad19-70c8da83cb30",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0be7f98-83c9-46d8-b3d5-cb0873c610a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a219a659-a2ac-457e-b334-d339c6d83674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c784f615-9d66-4e5d-a059-ee5d0176e873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4309bb44-c0a4-4447-9461-406fe0f2cfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1d90c-6299-4054-b9c0-177267591221",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d05de14-0c34-45b8-a24e-99512bd3383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d979f5-fd82-4714-b268-b5bcea7fa71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e50ef-c0ce-42c1-8e26-fc7e457284df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1277b9e6-eb56-45b9-b211-32c8c0b43a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6ae491-8de5-40e3-a742-5b2f317d4faa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90b298-7789-490c-b255-74f1432b3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6ee958-2a3e-4424-86ab-36cb0d5e43d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a7c2d-d5db-4ed1-b785-c5566bc12745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8f06d8dc-3e14-42f6-814b-65d833244682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5802b7-fe30-49e0-b263-d8c13101dd31",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5f5a1b-e153-4d36-83b7-3530e3956e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7a234a7-29d8-4096-adfd-65590f7b04df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3858b0d9-2da9-4a95-8bb6-064cb539842f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b24b7e33-3387-479f-b708-e9b0cab0c1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e8ab4-f1c9-41ee-bf54-dfe2d48ca2c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11caaf51-3118-4b44-9396-d74daa651458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e28dc0-1d9e-432c-afe3-3985d8b2a78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f43a251-302d-43c8-ae7e-f02bf951d950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f60367-dcae-458b-8577-1e657361c2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9838c2c-8bb6-4b2e-84b1-72aa723bfdbd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63df539-4a0b-4b1e-8d4e-d9b2fee255bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe19d65-9889-4a38-8ab2-a4329bed5414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ea5f4-4c2f-4daa-bd1f-1b1264f4f3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84bacfab-c96d-47e2-866e-ff57cf881d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6670b978-82ec-46ea-82b3-8ceafb503449",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ed092f-bf69-44b1-aa71-87754b42e505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6f98e3-a206-4dcf-a74e-8582178a99c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5e2aa0-d5b8-42a0-816c-2da130e6c2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "922ddade-32ac-4ba5-ac54-ed8a8436e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2ebe0d-ef92-472b-a896-60da56e383cc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b429cb2-ddc6-4eea-b3e1-bec02d3ac154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5cd64e-1ed5-43ca-941e-8a9d67434889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf84185-0c17-4e6e-a9fe-0bff4fea68d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d1d3c6-cf2e-47fd-a3e0-5ceaa459c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f47a69-a7c1-4481-b6ff-fdce0e177b4a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468cc315-f307-442a-bf6a-287a5947abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3e00be-a12b-42ba-97fb-ae982f3db374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34f95d5-d338-43a9-b0f8-432ce399190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dcfbaf-690e-4172-9cab-9a486d5f61b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc269680-b4cc-4014-81ed-f4e2b260b9e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3897af94-d542-4973-a905-6cadefba06e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8c6ab5-006b-426a-bc79-7c7982da1a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02cd947-2999-409c-9aab-309943f95052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "58b1a892-bf78-4796-8f16-e89c1847626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d1b548-6acb-4eae-b457-2061a33e0b93",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe9685f-c23a-405f-90b3-1eaaccc16192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260c36e1-7bac-42a5-b8ed-5ca642109d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e975afb-0bd8-4739-97a0-7c06f1e7b425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85b2c0c7-34cc-476f-8f5b-17828c58a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4128d5fb-fbf1-4d81-9900-0cb016890219",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0349749-946d-4c3b-a01e-2844fa5b0861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366af3c0-1178-44c2-baf6-e4022ca71eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaadb7d-ddc0-41eb-a4fd-f7943e319544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b72a55b-70c8-4dc1-ba2e-b4b9b1922597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c0be03-5a04-494d-89c0-fd2324bd547e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d363d04-952f-44eb-9347-0585464dc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3ae0db-839c-4a73-bfcd-e788627e7ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff16dd9-65a9-451c-aa6d-3a060cf5534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db4df4e4-1eb8-4f1a-812f-eadc3b67c83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db6878c-ba98-4859-86ee-25b0b64deaf0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6499e4b0-591e-4bf8-9601-ef2e5434100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4441fe83-a3ea-494c-9053-76dfccaabe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef28d34-90d5-4004-9b99-53d2345700c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f223d7be-1fca-4d1f-8414-c1e5fb920e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd950c-c5df-44c6-90d7-81a67132bd5e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf86b36-68fd-43b4-9a2f-227c45b36648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb066182-c3c1-4abf-a74e-824c9ef62c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977d2799-61ad-418d-84d5-be09e3818efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b060b0-d6f2-4b21-b233-c5aae75a12a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49147c1-6d4e-4764-893d-f6cb3d3d5740",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c607a4-adad-4881-8bf1-47bb8cc726a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12170fc-2cff-4dc9-9010-d171edc58dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5659ab53-6bb8-4731-aa96-b44b59a24848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11519ce3-a9fc-427e-9576-87ef1c12c3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dd4542-54a0-44bc-bb9b-050e4afb6168",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d685788-857e-48c0-8ddf-8799b5a0ab07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7efc4b7-363e-49a7-aa21-6859137b2630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763099a-bb40-442b-b510-3d764291a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "407ff699-e45c-40ec-9225-d39d2de735c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a486fda-7d53-4d3d-9fa5-98643aac8016",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3147bb4a-17b9-400e-841f-2b1037156b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf1839d-11e0-4acf-9ea0-d8293e6e830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663e7a20-1ca5-4d82-be8e-e8f7cfbdb098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "944e0810-c206-437c-bbb4-7f2d78152313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7207345-d5e2-4c8b-80a3-c58a15ccf899",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e403c5-7ad9-4f4e-9e55-405a3e496f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcec42a-b053-4a56-881b-2a8093581473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cfb42a-8dbf-4c12-abca-3868f87160da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1224ef-98dc-4a31-ac55-e458cb714d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f5e7b6-aa51-425e-b6f0-c44ea3c91712",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa22a1a-13e0-4184-9333-acd76a09be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb2f440-e8ee-40d9-abb2-160ef364c8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35515be5-6d8e-4092-b0e6-514b724439c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ea03e2-2eb4-47f1-b407-464b35cff24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ae2c1f-99c2-42c4-938e-c0e709179316",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c221370-77d7-4105-baa8-6e6eb70d8efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efbb59d-3034-4440-b6dc-42a35287ea75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1aaffe-0adb-4aa5-b7fc-b4d27666911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c915372-d834-4af6-84f7-84324417a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5662bd1d-6493-4e3e-ab85-af291eff3860",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce8c74c-58a9-435d-96f2-ced3c90d4ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9834322-4735-460f-9d8e-ad90bb8e4e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cdeeeb-1831-4fc4-8e5c-ee4224f11dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5041338-f9a9-41ef-bb6c-2ae1b58c79cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0329df-1e5f-4e76-8261-83d478040851",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767c2d0-bdea-4669-a770-4ef36c7d112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35b5511-3976-44d0-b735-d21a9d01c00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7b1f46-955c-46b4-a01f-7882391f87c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc71bc9-56a3-43ab-8105-5fcbbaf7675f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e977a4-fe80-4d90-a712-5f9f727b1b38",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0043a36-1f9b-4b43-8cba-39276af0f279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aa0dd7-a9ea-43a0-aadb-e76ba24eba4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d3325e-5ccc-42a9-a0b4-ec2e12dfbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9cad360b-5fa9-46f7-a61a-e3318578a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9402b119-b965-4d8c-923d-d9cafbd41109",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c1e086-2286-4d86-b27a-41e46400dc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0501ae-bfd7-4522-9e37-93d7240084b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71896546-6a48-4f34-854d-8a874fee7240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a401fa86-5929-4b0d-a1a6-9448812d6771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d292ba-23bc-487e-8f2b-b2bacd9ee1c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ead7069-2105-4b8b-ba40-9832af16346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878540d9-9905-4836-8484-9d4fc1a045d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e90bdb-fd4c-4872-bbf6-ffb8cfa28341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb31b7ed-0755-4a7c-80ab-4eb0bae7e26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c436420d-585f-4978-9bfd-e4acbdbe61b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3a8176-a6c4-4e5c-9eaf-2849cd68ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4da9ef-61a9-47ca-891f-c2613050d981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b5b5a4-763a-4d92-bfd2-b73b15691579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcafc703-f677-404b-acd2-a77a5fac6956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55ee7e-1188-440c-ac5f-1ab7d071cfaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44430a7-421d-4b39-9dc9-431fd2c6a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1af2336-af94-4e7a-a821-26fc17b91be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b081717-649e-44c4-bcd7-22046771173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c98b9e97-80db-4f8b-b648-aae595d4c9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a328debe-7fa5-490f-83db-08f30ec6779e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860f2e2e-438f-4486-95c8-e6d476d3595b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2654aba5-f6aa-4f57-8cd0-ea1b8e90011c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701bb1d0-019f-4499-a07e-527494051d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e937e2b6-e7ae-40a3-9f84-cc4b4f6ef32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683999be-f67e-4d5a-9cc8-42511eb53d3b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a750c4f4-a410-4963-83e1-8688f1954089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cd1fae-038b-4b41-8bcd-d73846048ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8278044-84e2-4235-b994-85e9a9dbc336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3e24f2-d83e-4639-81c3-471596d796a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf69ef5-c528-4913-b609-855e1f8df491",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41351ff0-36c2-4a5e-94e1-d33089089015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfec2ce-1f88-496b-8a4f-c0cbe85d204e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12d607d-7178-4d0f-920b-fac75070add2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2fcb61-2fbf-4f4e-b167-db673aef65dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21efe841-fd81-4e36-9157-127cecfdbd25",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a477e5a-2e8b-4c99-8a53-76d59a891660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2d23df-c12b-46ae-a74a-00babf6d8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091c714-5739-47a8-9951-a11d08e72dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f473137-db45-4f90-a0c6-8e0621796ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42282b5-0b1e-4ebd-a24e-6aefd5924eb5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d102e3e3-174b-4a50-8640-c1ffab1d5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0865471-ea99-4229-818f-9b05df1bfdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16f9ed1-925c-4e5d-ae11-6d2fd22b54d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b512b34a-6cba-4cdb-9b2c-3bfd87a76cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a185bc-4379-4a25-b96c-fb3ee59737c7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5110936-0254-4211-8f80-3bd2900498cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5b9ee3-b986-4dad-a9c5-537605da2e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3cbc48-3f2d-472b-b7a2-c7384097c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05408dd0-c45b-4b2f-bee7-5e27b994f1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88a15a7-1728-490d-a19c-6de222ba4a7c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeb7c3f-431e-49f2-85a1-348d4686a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c42d17f-97bd-40d7-b8e7-e1d9574d6996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3eb87c-6151-445a-b833-5626552cabaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d6c0cb-8b16-480b-9de1-71884bef1c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d61a87-85f6-40a8-bf2c-f80c8b2abf04",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf30c9-a7a3-4e67-b49d-2543dcb74ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f2e1e7-70a0-4f53-825a-94d49d562590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb07f37b-b687-4dfd-904f-457e2d75fd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2a3fae-e2f3-4bb8-92aa-775492b99ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3e867d-1e20-4db9-95d8-a25e7e88323c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a57b6-5afe-412c-9432-e902793a958a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab36123-a25c-48d1-a45b-d2f5cfde3735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a76890c-7cc6-4b77-9b2a-25bab0177632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e2591e-a973-4b8c-9898-b79144a8559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2705cfa9-7cff-4ae1-b94e-cb684af3a0c1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8d41f2-4a22-49f9-92d2-093ce0e35ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b2ec0a-9a0b-466a-8a13-cae863bf88d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017b6c58-6165-4aa1-809d-a8826404aba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18514b03-ab8a-4f10-94ae-4c7e317d76e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d978ed9-7571-4a67-a0a0-b7623a07a9e1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d71ee2d-b321-4afc-8904-cc62f14caea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d818bfc8-eecd-49ef-a0c1-665eca8d3d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf49578c-cfa8-4aee-bc50-47b0a9bd61ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a58c71-ce49-4b64-9ad0-18ae9580ed68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774fc8b9-43f3-4cfd-b3a5-6f03a2576444",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded7fa0d-05db-4955-b391-c884fb2ea2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe4c03e-0a72-4df2-8200-461e361d2452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036cafc9-c082-4ab0-b576-b2539d22507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9909ea90-9f91-484a-8ebc-ab36b23fe895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3031cb9-7dc4-428c-a6c0-ad87f479c656",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428e50d8-640c-4e7a-8e48-f5d6ba125acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f4b0a0-08d9-4ff8-b742-a9c796db1ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93901cb6-c939-4cf2-8995-5932e18c2f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65bcd704-50ae-4909-9308-4f80efca1718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af377d19-c411-4b87-be7b-3bdee39b9caf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6584deed-8d47-4294-bd7d-1633899a09d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2cf81c-afa9-4328-a6cb-a33116d67655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d756fe0-a82e-4a1a-894c-75bf669c8078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "675b7fee-af68-4545-a0e4-fbcbed56dcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf7a738-cb88-444a-af47-7e5d2576f7d7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9081a70-636b-4b2c-8a5d-87615b059b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ced8f6a-1461-4872-a7b2-f27b80de3fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17be5f8b-15b3-48c3-8847-901957116822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a214cc-b1c3-40c4-be38-39998e698bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec76ffc-0771-4afa-889b-6e90d6771266",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667d6b58-60e6-4776-bed7-a93f27984153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39607943-6140-421e-b635-ee1f05bbafbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0b7331-01be-481e-9e05-7654d658fafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a36ea7a-00fb-41c9-99de-a4a553d640c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baee95f4-7faa-439a-b963-2a542a9b2c69",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37a734-6f93-4037-91cb-4a7886d427c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d6ae0e-f2d9-4797-8f00-284721a25b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16b6bcd-5ec8-4938-916c-c236cae6d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1914a6-4c17-46d3-9c37-845d9de53b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83fa2d-45ff-4773-8434-00f22f3dcacc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480373e7-580f-4464-a74b-7223c8b10b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6aad18-d526-44a1-bc7c-b2f186e617a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554eff5f-4db1-4a9f-bd52-90e0c8ee0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b04788d-6fec-47bf-a583-03926fe3c69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ac3179-6bca-4ad9-94be-b3ef1d963d29",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e96e61-23ea-4e76-a3bc-5ab869084dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41030d0c-2d40-467e-88af-1cf2e036c828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62a539-9507-4952-b3a1-564bcf434c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "188fe7bf-0e8d-4e52-a19a-42fd643c3029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976445fe-a7ff-405d-899f-bf26c48805dd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d4417a-15bb-4583-9b91-ef87090fdc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8656f717-80b3-402e-8b92-9d7623abd49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5a4518-4713-4324-8f46-de683fb42984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "664abdd2-0d03-4a37-89e3-194e0406400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158de0b8-591a-4f5c-9015-6ff9e94a02cf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc773ae6-d45a-4a12-aea6-2a554d750048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a8309d-bf38-4ebd-9475-f886ae63dc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ee7d6-a0b1-4deb-93e1-d64eee158d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf1469a-af47-4de6-8e7f-823b5b08cc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a22687-1cf4-48a0-9895-222a56503e41",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a99dc4-6819-4655-9e94-3ad5654fc450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eeae2e-e8e4-4506-9c0b-ebf2bdb53618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df3550-02c0-4b18-9428-472708785178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7a1704-a8d8-48d8-b0b6-573b1814be8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4220a6-e66a-4255-8097-413862d7b03a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55588ea-8a00-4219-a66c-cc6f5584538f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01179fe-48e5-45de-a74a-eb2000c604e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a759050c-677d-4413-bbae-bc8fe2afaf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8eedad1-bf58-4157-991d-3dbe4da0bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc58d088-c6f8-4531-bc33-9753c3266699",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511683db-c7f9-4534-bf6a-abc65c404bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88196b8-a9f1-4dae-ae0e-9cdbdaa25159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80602ce0-10b6-4139-b932-caed66ba56f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a72bbb-04a7-4ce8-98dc-62be0b3e7002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84993ec6-1388-4f52-a30c-4472acda0445",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84ee3bf-1b9e-4c72-a86f-da61dd3289a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e426193-5b24-40af-9aa6-f99744ca4135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e6895a-b610-420d-b59d-00b452eab63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27abf540-5533-4538-9750-b9282cd3f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bff6ad-24e8-49cf-aeee-8b6139487404",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f787fbfc-1103-408a-a5de-f8a9340f2244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048f9921-00fb-45e4-afe3-e2516119568b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9503d0c-472c-4050-8eee-0657d8046fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f88e96-79d8-4f3d-9a78-e6b23e30910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7a2b90-544c-4944-9a48-ca9e4696af9f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce07e7dc-7e6f-41d9-9cae-596697b1be94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb49b45-1b8c-488d-b8d1-fc263e39a53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e42f076-851a-4eb4-ba98-cc206aa25061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a9d134-9fed-4754-a11b-a499f0fdf27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cffa77f-c211-42cd-9575-fae957912ded",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f0b42c-b380-4a4b-8c46-e6250e4abc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2420fc14-4c80-42b0-b5b8-3e432cd04b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d11acf-9cec-4cb1-b5a6-b510c7d254af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f62f680-49af-4c73-b2cf-b4e984ef6474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63489532-aca1-4517-95f6-7def83545890",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ee4795-1dbe-4ee2-a4cd-e2030402af65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09451a09-a064-4a87-9caf-5446b8a7a794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68e503f-d301-4b94-a8f2-97958501e599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c13dc8b6-0292-41ed-b0f1-93e17b1e3267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad3ce4f-fd60-4e70-b003-c050b3c1baaa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69a225-1037-4c26-ad06-69898ee2d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8938accd-1ff0-4203-a9fc-ccff2df08e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f874e5-076d-4a1c-966d-fbdb55f5fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5ecf6e-c560-4c4d-897b-9600e0532ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae3851c-7ede-40f8-85e4-7e64b07cbfc4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6568a60a-9fed-4092-bd64-2af8a34b3edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d874a282-d488-4fbd-b35b-68ef86889e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f4128a-a4fb-4aaa-aca6-dbc24d265c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c49878f-148e-4cad-9bd0-97c63e2b6cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6f8b33-7c8b-4dc7-ae74-33d1093facb4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5c01a5-f8cd-41c7-ba14-0476bc9aded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0275bb40-6d4d-4511-b064-a050fda658e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638b6d36-6fdb-4cf9-a810-6a029ba1452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c5da1c-39a0-4afe-a998-3bb5cb24a9fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "443e254a-9f1f-4a01-bd11-891187627cfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a950443f-63a9-44b8-8d2a-542d67582044",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e5fa9-e12b-471a-b361-a8180f7d916f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d665cc27-261c-4d9b-9226-a96720934065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28e3908-4bc9-4816-ad8b-f0e09a0ab5d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b211b34-b3a4-4f4e-a9ae-5ae6484b8d37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb90f5d3-df9b-4130-a604-3fbc13f68508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed1c733-7c9d-4e99-ae4a-a359f322cd18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d452bbed-877c-4b00-af6a-930d8dabc91e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0647c118-e018-44c8-8925-41b7402a11a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d06ab47-a6cd-44a1-8bc0-76e79676d2c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e46716d-34d1-4923-87bc-028036a5e689"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef67fdce-d523-452a-babf-f571dc373812",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "301e5b27-9c94-4e8b-a958-417f240784ab"
                }
              }
            ]
          },
          {
            "id": "f3bf32a1-a302-4a56-95fc-da40067db549",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb816af8-bbf3-476a-91e6-102a81ec9f07",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a125cff8-bf7e-41ce-8b13-1b3eb00191d8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b3258c-6f85-43ec-b7df-b1d60de0423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "704d5f5d-5eaf-46b6-84a8-6c0a7a75563b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2083ddb2-8627-49fd-b7fc-55ca46744ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd4fa92-ffeb-49a8-be59-57a50e682b5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a31cc62d-e207-4798-86c8-4689e3602abb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc9e375-90b2-4acf-b332-2641dda7e8c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91547e36-b12d-4fa4-a200-37e369850aff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0733055-c69b-4c62-ae63-394965130141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f5d477d-5361-4d74-87e2-db5d91005b1c"
                    }
                  }
                ]
              },
              {
                "id": "e6650587-e435-46c9-9fb4-e2e4442a9a5a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a6a30f6-1a7d-4538-8e97-a1276bb59d3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "914cf5c4-3dc1-474d-bd0c-6a821f759e1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44c86798-6bfc-4c62-b663-84fa3e1e0aaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30130d39-74fb-4093-8202-5fdde5af4483"
                    }
                  }
                ]
              },
              {
                "id": "199a81c4-7aa6-473f-9ecc-f9d4f4668b5f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2d76356-5961-4188-90d5-228513a62067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3d92e40-d792-49ac-ac69-108b5a2cdb1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ac7db99-d60a-4b3e-84d4-9b80d57fe6a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "deac21c9-6e0e-4613-9b9d-b25250adc184"
                    }
                  }
                ]
              },
              {
                "id": "aae2c3f0-fb37-4d16-b26e-dca408600c98",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce64602f-844a-4ed2-a495-6a51b5aaca87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6d99f2e-279e-4bd2-a012-b9a537dbf969"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c964150-b25e-438c-bc4a-5c5966011225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2f75ec67-ad86-43fe-8328-73245fe59e14"
                    }
                  }
                ]
              },
              {
                "id": "036cda48-16a7-47c1-9840-5153e36c417e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e78feb90-506a-4db1-a3e1-25d71cecaf78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d63a343-8b97-497c-a62b-672cf3441369"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a6c35e4-471d-4a08-ba64-0a83ffb3159a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3a42facf-90dd-4fe1-992f-dfd74ed0b5b2"
                    }
                  }
                ]
              },
              {
                "id": "88ed552f-4892-4832-aa22-0f228710317f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3df95ee-2239-42bd-94fb-8ee24ea553fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c92c2ee-5f0c-4518-80b3-bd9d426fc1cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c3348f7-c58b-410d-98a7-9aad765c1e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8213988-2386-4d8e-b754-e4757c405729"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49a61cb7-67cf-47bd-bd9f-61e75cdace52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "034afc7c-60a3-4551-8e4a-c8aa05311b17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48386a6d-bbf4-4468-8e79-6b12bbd79673",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ec68fbe-7c92-4afb-acef-ab9b17c3b09e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77e2188c-25a1-41f2-9766-f9e4dbad40aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ad0a2c3a-9f1d-46a2-b8dd-d750e5dd9edc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23242242-b828-41ba-a4d2-2f66c65a168c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5893d0f6-b73f-434e-874c-800cc9fb3182"
            }
          }
        ]
      },
      {
        "id": "e4371c11-06a7-4825-9022-fb0ac5acdb3a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8811101a-3a5f-40d1-93a9-e9675f9ede5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0acd26e6-401a-42d1-85ab-0e07eaec2a0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "39e24918-4387-42f3-a539-58c526e432dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f145a45c-b3d8-4098-a280-f7f605ad8a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1221f350-728d-4906-958b-b114d0d20716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cec3e9-58fd-4ce1-a3a4-ab666716cc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "76bbb72d-d1ff-47b2-88c2-70a6a5fb6782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34303b6e-3746-430f-8fd1-e13c85490ada",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa322a54-106b-45f0-a1cd-6ef75fedbdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d40c3e-6400-41a6-ba59-ab8cac872e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4865dc30-1da2-47c9-aedb-265acb8a3042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0a56c8-b40b-4af4-9ac9-f0453bf2284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f370523-f49b-4fbd-9a42-754ec0b66358",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6adfd0-72a3-40ad-901d-243cf57e2d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc52326d-dc16-4316-abd1-0c689211f885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1569bab8-4fe1-4e49-8aef-a0ea7b84a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9be32e-1226-4eed-875a-798b96c8cbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4661c3-5ab7-47e4-96de-3a2399f6a8cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ad71ca-ebc8-4f3e-bb7d-3fee3e4c3893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed6197d-42d0-404c-bf72-28e8f763064a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dcfbd0-9a80-4723-b501-2894efcd84d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "431509d6-2780-4ef2-b6b4-a4ee9aa16ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06324054-c6bb-4b9f-bf4e-9d8b87c57d10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66c3d9f-2cd9-4777-8524-0f94c501aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9404c215-4da4-4446-85ab-4565b6c79ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4550fdf6-2734-46b7-8121-8edfb083acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a95f107-2dce-4dd5-a7fe-e8bbc2ef4700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d28a5d-289c-489c-8abd-7a5ff42a49ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d12e07b-a6b0-40bf-ae29-ffa349b8c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90992f3-6550-47b1-af15-db6e67724ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c97ad3f-b5da-42fa-9227-dd0f5172301e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c27b77-c64d-42cb-8b4a-45f233f04210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caf2960-9086-4056-9591-c86569b55e9f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8195da73-9415-45be-9bcd-b93433cdae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f35b93-3116-4d85-9d26-b0fee251f997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f705069-c4c6-4376-bf40-0e0ffcc42f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f54710-9ad9-4205-8de3-f631a5a981a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d9977-e8b9-4da6-b286-413566996083",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b939f1-1b2d-4675-b6d8-30e8b9e9e512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a1059f-949a-4c1c-b9ad-7e26d7caaade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e383363-6311-4a3c-befc-8b2556c0e26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac2f700-55ae-46a6-88a4-2c5222b5cb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b396737-1f08-4e48-b75a-6fd56abad018",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717aeabf-b7f2-48fb-b377-be717929133d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4fa23f-b560-4fac-b739-5f841b8f18f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd736e68-bd79-4975-8a29-8761e1cb1a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b225f3da-e21f-4d70-8409-f84a72229ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bd4ec2-a5e6-408d-85b8-b944208aef16",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15592ee-6876-4acc-9bb7-bdd97bc31dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ee6181-253f-4ee7-91d8-b2f047ebe9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5561cd70-72e3-45ff-99bb-2aa283e6e63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4327b4fe-aac4-4f16-9ff6-273c6d4c42a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb7eb08-f464-4d73-a286-c1f889be32ff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e562588-a21d-436c-a2ad-55026e202b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760d7cb3-d6d0-4595-9170-9dd79c4b8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eb83e1-03b3-41d5-8c59-c4b40fa42089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b377a60c-e0ce-4192-b9f5-cb6af58dbc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7d7d80-6442-46b2-b3e6-8d88d387dabf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e909efe0-4c63-4f53-b51e-09975fd9c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085ec3c5-e86c-4102-81ba-0ccdd4558eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3090f8e-10b9-4ded-b07f-8cd2dcf0d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7844e0-9bf8-4b69-8528-e7008b2e57f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6577228-32ad-442b-ab42-5174deb28a41",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7e72be-e84c-43d0-9679-851b672c510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9a4d4c-cafb-4a70-a777-b2167687d7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf3f7e-96ad-484b-b874-6630523a97c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d59bf-6c8a-4284-b630-ee1394069e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5adb6fd-ff7d-4577-8b52-efb995ef3e51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9830b23-9544-4b3e-b6c1-d0877178f5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343f9c69-3390-464c-a05c-8eefc1f2ff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822b6bb8-d39b-4877-b44b-8ee24b91fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea0af2-dc30-4cc4-81a5-0c1342d2934e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b86528-2c59-491d-ad03-bb5826a256e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b20b312-70a9-4a2d-9e88-10c275b4e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9842cdb7-92de-4c04-9d3a-8363e48e8e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044a9fa-4da4-4d4e-8fe0-72d7da541666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0901f534-220a-4a0b-855f-673bf866bd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ee7d89-c72d-449a-947a-d8a11eee525d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f83bb3f-e3d0-48be-b3f1-4550ef68cf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fd5ba4-5e9e-4cb4-8f6b-d5271985350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97781007-4475-42d5-a7d8-6999dc8230c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "329f60af-a8a5-4cae-9aab-220e782a53a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16331982-f2f9-4191-bc6f-fdcb453e2f3a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b26b51-b354-41fe-977d-e37ede71c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4654725b-e65c-41fe-b2ab-fa07588fc702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46807c59-0ec4-4b2d-a966-610ce4994d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9717bc-29c1-4978-8b79-29875c59ea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d6e470-23f9-49e3-91a6-05f9d7de90af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92be25e-119e-4558-b022-3e7ad3d3938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e53fe5-b95d-4381-8924-d31d5711c412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a851d4-a48e-40d5-b1fa-633563b49e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b922c95-048f-4d80-a2a9-d9b47789e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e651d-22fa-4757-956b-d4a60710173a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b728be01-60d4-494d-b2ef-b7d748243133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bee1db6-675a-439c-94d0-cdef407cfd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca7ced6-d93a-4bd0-8f0d-bacb8d17211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fc3ece-62a8-4d27-bc52-ce343bc23df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd8000e-2b50-4304-82c4-771fdfd5c6dd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba59b8d8-3282-4110-b36c-68549e20fe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7541c7-1475-4976-8f18-a339166da9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1d0ffb-c4f9-4477-9b36-4983d8e8d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28da0f0d-abff-44cc-981e-56ea4cbb87f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3d8c82-4b23-4d5e-8c79-40076fd5563f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7000a4e5-97bf-47d9-8033-060d3a2dbe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099abf47-21a1-4bb9-8361-b08a73246cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5d61a2-24c8-4321-af6c-6e04dba24086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a77c8cf-fcf8-47b1-81c2-111f0934c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de34d968-1695-4585-9976-6c5a7714a3fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb6ca4a-fd85-498c-bb6f-a3f7578e237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c249474-7658-459d-a0b6-962d8c31a6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b868db-76d6-40da-9846-2552b52cd654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c62a7c-add1-4f41-89f4-ea5794628189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca43acb-20de-4ad2-9f83-d93c87d3dcaa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60c6cfa-1de9-4b12-ac11-b139f931f6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dc8c7f-3bad-4eb5-a452-9432bb0b3d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8af3f6-9fd5-490e-bbeb-43f6c2b42122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2c0280-eb98-433d-b9d2-da0b9beee8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119c2d30-65f5-4d8d-9567-c82b15ae69aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d5f4b3-eec4-4e38-9d04-f57747ab478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18842bd0-eea2-4ea6-99f3-e4896d56c94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705505e-3f49-4d3a-be02-80f2ac54b33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ab607f-7a33-44cb-b751-f28c7751902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd9b94-5627-4c68-ae67-77893b9e470b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac062aa-af91-40de-862d-1ad27b6bf2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259222e6-cf1e-40db-8998-65222417ec1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c948d87-f215-4891-bef5-4561bdc11d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e751489-e557-4a53-83c7-e16dc32c96b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a64ad2-d220-4f6f-8af7-c70e0afe19ea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdac3de-b334-4db6-92e5-29a80f147fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11297099-0f19-4858-be0d-7f13a86640f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127890ab-7698-4865-bcc1-e6022fb9480c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e9df67-7118-4ee7-850b-1acd37cc176a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c3467b-b6ea-47cf-9f5b-5a860e39f33b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef2bee5-e811-4335-99aa-bfefdc28376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64615629-cb85-48d6-8296-663114683176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11f515c-3bbf-4d74-a5ae-03e244c66051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72db4fd-ac4d-4098-a42f-4732e41728e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc66156-e10c-4382-a199-dc6eee5daf62",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddacebaa-3bb3-4424-9e7c-b08ea6560c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5330a1-c1ea-4b75-910e-7821883d62f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee37983-36d3-48ba-9a22-a4a9ed1859e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dd50fa-89f7-4b13-b57a-f3785c7e2484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0b23f8-d97b-40fb-b324-bdb5fea11caf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b18822-8c5e-4ac6-84c1-f8ae044b49f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1430f1-5035-4358-b3f4-d2f2a794f8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbffdb7-fa95-4531-a0c8-b943004c3543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d740b855-6219-4db1-8503-c489e963ed3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907e2641-0a91-491f-a27e-259aa80ac7cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d26241-92c7-41a1-9b25-b8ad82d520b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0704209a-493f-4297-806f-83d3e6f09675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279f236c-cd33-4d81-8c39-26b9dc6c4dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfa6ab7-62b7-425f-a788-6d9f143b3ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b5f719-31b4-42c7-b811-06482636ae94",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d39da-3af1-41ef-a621-9c877bb540cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c44a203-b3f0-4f3e-ae93-b6e1414b864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f64c63c-9c70-4f56-aa4a-cdca7f864707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b232fe98-60e2-4875-863d-2574916d00d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778aa3d-da74-4cfa-a76e-d790ca4f416c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacb726a-ad02-413b-a5c1-56db9d98cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086e7e33-6bce-4222-a122-3733e571fba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bac4ee-50b9-4a73-8075-53b614da16e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3b3785-0ec8-4e55-ac50-488a0a0b562e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cde362a6-c204-44cc-bdf4-cee01e92df27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "740e2d7b-ba19-4abf-8e69-ec359a2e0dc3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e966150a-c5c9-4ce9-a25a-adeaa25ddbed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c680a58-a4a5-4f8c-bfc2-1566e3d1c8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04be5be-11a6-4189-9ad7-e191a6b18137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0234db16-8178-4b39-bc53-ee02e8f6d45d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b3ff37-5cc5-4b33-b2e4-b6b5e2bb28bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a7c3165-6c66-4893-a084-2dbfc7974a98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4eac2f9-9528-4fb9-b204-c2568e36219b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c85e4a94-8aed-4c91-bdad-ee0a876b55c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51502b4b-3439-493e-8485-67865f6c500e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ede2f23-8820-473b-88b0-fdb503dad7ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd789959-a7b1-4b9b-a2f5-953bfbd1e40c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c634eb66-0cde-481f-ba5a-610a0f1ebcf7"
            }
          }
        ]
      },
      {
        "id": "31f1a074-2de1-437c-b669-864c24e9c166",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9258e175-4584-4137-a3d0-f3f40359f5cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bc4aa6c-3b92-4ef7-8bb2-182fc760cae7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab330af2-8f85-498c-be6a-4ecd2193ea23",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717671c7-1884-4689-8205-7eee416b18cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0c7cd9-cd79-4143-b3be-68ef568c6274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f723c6d-dc5a-4aa9-a8e9-e7961d3857d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0f1448-9475-4b2a-934c-82f04bdb5dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a22343-47c9-4f4c-bbda-ef84e6c16ab5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe1844-9f8c-41cf-b0d9-57886e8cde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3fd981-a561-49b3-b31f-48cafa36c0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33d62d3-8531-4e54-8ca5-2f670547860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2376334f-3d1d-4627-ba48-9a22fc042718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed54263-e455-41e5-86a9-3922a2fbeaf9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5a13c4-9285-4e17-91b4-46750e4dadf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39045058-ea09-4160-bc96-284bd8fde784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5c9548-6031-4a40-8c43-9f5b6fa0457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e969edd0-0889-4ce6-9766-ad6acb27af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dbc0dc-e91a-4a34-a004-abd393b9ea08",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a2d2f9-09cd-4835-911a-484fa4c4effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104f064e-f606-43aa-8f72-10cb87422ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f49664-fa41-458d-825e-5572b7691f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de76389-a660-4357-aa2c-909c14695530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1d1f02-2bdd-40b6-b406-aa13de1f2fca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf982d2-ad40-4686-a52b-036c52fd6cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3571839-39cd-4099-8613-ff10f9404600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be63d0c-8226-491e-8a26-5425b10c1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45d843f-5a13-443f-b130-859b394292b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7796b980-7448-41cc-beb9-35ba40c1dbc7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f0eafb-e851-40c1-9a5e-06ec93ce4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc46b3b-f334-4436-bb06-60ef0cb987dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f59a77-ce3f-48a7-84c1-bd60028214a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7729e1-5740-447a-9c03-205182694656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba3130b-fcf0-4a9b-a5c4-18aebd8d5488",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5f695c-5192-46c4-bcc7-96bfbaa86c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272056d7-28ca-47d7-887d-554526c56476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ef664-c49d-4af9-b2e1-bf6e8f31ce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "168c4b1f-25e1-48e5-a324-1b382bf823b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b839c4a-0213-4469-a09a-78d38d292a82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c24a6-2a30-4442-9390-55f06493647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea9fda3-8a0e-42c7-adbd-9a7d7c56bfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fba79-f672-42b8-843e-9da45567c0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6ecc38-568f-40dc-834a-27376bb4ba27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c2bf97-449e-44e8-a2ec-6dbfff79283f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7df61b4-e9f6-43fa-a1f9-d6597dbc6a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06e49f1-584d-475c-9b71-4eaa078ed107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2378b8-3961-4761-9ac1-4bd720cc073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3522f2c0-c11c-4227-be82-d567c541bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c9d40e-56fc-45d2-b46f-8d0d24599eb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e482e4ef-fba7-4665-88c0-07149a1a5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77b07c4-8ff4-40bf-b984-57cc612e79de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adf87e0-48f1-4628-b5bb-57033b87a745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23bd168e-9550-47e2-936b-176ed709d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ece1f-56dc-417f-9a23-c6c883700272",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0dcc42-1bdd-4a90-a383-3e477a513f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbd0cee-6ea7-4898-9d01-81d13621dad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef65d2b5-9501-4849-a334-05883395e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae6fd4f-8522-4d10-a223-79539faa9f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c219b76c-c703-4a90-9ebc-7c595a7733f7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240289eb-cabe-445e-9fed-555f189d5e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3ddcd5-7869-41c5-ad9e-c9278a0779f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f45bbb-7e34-43d1-beac-7844adc1b92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "253cd151-1fd5-4ade-8697-2d6ee63eb5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6266ba1a-0cc3-4004-8351-3fdce5bbe153",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f167f8-b8c9-4048-8834-93f2fe971d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc60afb2-fb4f-49f6-80cc-144cd27d7d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b737f0-6538-4012-b623-b889fa54aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3572de9-3d7d-401c-9e32-b4ab5160b4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c63481-9972-4a2e-9eb1-b0e83f11aaa4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69a43d7-e40e-4d35-a2e3-af3d53718345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6063e9-30db-45ff-bd77-32416ad53056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca81a571-ffa5-451e-9397-0d0a500224bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f8b53e-0cbe-4d96-acf3-4dce707f64c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba9683f-915d-430f-b578-1c1c15aee0e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c9072-427e-4217-b80a-8944ad8a87c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d38e6a-40d4-46b9-bbce-8ad3fc95f524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d95c42-d2ba-4cb0-af37-40445f586a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14ef645-5e9c-426d-bb99-67391530e963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99d73e5-1a61-477a-999a-a2e2808edb85",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168e3c4e-4af4-4d01-ba45-c1e3943ff201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c769bbb-0140-4f74-b58a-79dc34d75e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e36951-52ae-4623-9c64-757638e8a5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "42caecab-b038-42c3-8cae-f5861f155235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d091fe-9dc2-49f5-b290-68e21ff5ad97",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19769ee-e3bf-4629-a6e3-76efc243ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c669ea6d-4d0a-4f0d-89a0-2944f718a585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4949f1-f864-494a-86b2-25a0666be800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "41eccbb2-113c-4180-9f99-90ee3f4d85ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0065687-2bc5-42e7-bfe4-f0e9d9bbd393",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86acea1-cb2c-4a35-b8fe-6b5f109001ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feb00b3-153a-4826-8950-bfec7abc947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7c40b-31b1-4616-9982-0004501ae5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cee362-9d9e-4fb0-a3d6-cbc8747bd3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3aa2be-bd09-413c-b91b-598ae646ac5f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf0df8a-1fcb-40dc-bb78-48c3bd54045d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afbd517-cb49-467f-bfd6-19592c70ef82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6fbea4-26f3-4cbc-a13d-cebf61947e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf54768-15c0-4f90-a7dc-9e23f22e0eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bbbe63-17b7-407b-98b2-eec1e014e213",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41dacf8-9baf-4f8a-aa7e-1a39e2687d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00b0f07-c04c-4c61-9ac7-39c9b13d86b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614446f6-c49e-4185-a2d5-7d466582d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b2b96b-2c03-4278-af3f-b0bb17990c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7526d6f8-77bc-4705-9b13-3b356221359d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929c3f98-8afa-40a6-ac83-737650780a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dd4f0e-aeac-41aa-8fec-ee4b7810cea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c394897-71dd-4c9a-a8ad-45db76baac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa58b3b4-992d-43bd-908a-3532828fda0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84809ad-3a4f-455b-97b5-fd9169af13f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d80f133-e8b2-4f22-b08a-59e8f64de15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f33ee43-ccfa-4751-9a9d-c060363c1087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baabe5b9-c258-430d-887e-4924457eaf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97aae643-199a-4e5a-add7-5f6e8ebf539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d66b12-e43b-4052-aa9e-485083b3f21b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e083a35-c0a2-4e67-98ac-e114d4d124ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73ae0b9-1612-4e09-9205-22d2e0845969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52b29ea-d4e4-44f4-97c1-ac75aed56a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ea26fd-7de8-4406-b005-303fe3f26845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb337618-ee04-4569-9c1f-114fe4245813",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba3bcf-4cae-4c18-b240-7e4854145dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d60137-3ca1-49ad-b02b-a8dd2fd925b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb06cba-944a-40a9-9f59-601f4eb27398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bc0302-1d11-4d52-97c7-a07aa78126c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa81723-9ff3-46ba-9b77-0a200c7338ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c3e87-2be5-431a-a5c2-24f2ee4708aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fc76eb-a18f-4c13-90d9-17c15134bee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b175ec2-ecd7-48d5-a76a-b0e0cd95a08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e05ebe-b24d-485a-bcb9-1613200c1f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f0386-0353-47ac-9314-87abec8e7fb9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e5e56-40bf-48ca-aadb-bbec60d1a95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878980d9-48fc-4c79-9334-9e7fee5c4ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6487c99d-0a3d-4ddf-9ac4-8a832a40cd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e858c42f-81cf-4f4d-b20b-42f887abbf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53ffe0-09cd-4508-a74b-c539b0ca234e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490d6a33-a8e7-47c6-bcd4-eadab7a739e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62d2111-61a0-4c3f-a5ef-f02124871ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cced21c2-81e2-4f71-b677-4887ed0c7ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfab6524-4f71-4875-8f5c-e9e04fc4f61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b16b0c-6379-4d14-955b-abdca435c54d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ae9a3e-d157-49fa-9fd6-26545cb6355a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d4cdc3-9420-40eb-af08-47c2247d331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774640c8-5f91-4518-b4bb-08e7f5ab4c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be8e6c5-a543-417c-9b93-838326322463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e005b04-6635-4963-a316-c91a7ccdcfd4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b688d-e58d-42ba-830f-e21a01353a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afb3779-9b79-4d2b-8cff-cb404bec4edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74af47e-7cd6-43d7-9d68-e578dc95e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49548081-57a1-4790-b093-d3d78cdd439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c99ce72-d062-48a7-a72b-1beba6f6206a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b62adc4-4bff-4985-9415-c573a3607b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80077e52-0084-43fb-9587-d586dc6f1698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd048a62-4500-4a98-aa76-80a0432821df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7f2e8e-ad51-4875-b833-13a7004ad201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf524d9-1507-431c-8335-cc14f835e195",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6469dd-6b64-4f9e-8f6f-4a213457072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ca066c-8537-4d29-94ec-ad836207630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff3fb84-82d6-4509-9be5-fd4fc16e26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7e9655-aff3-4587-bf04-d0b3645b799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094ad7c0-f83e-4058-be2a-91b36378bd28",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805f330d-5c1c-4ee8-bbc3-82333fffeb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e5eab4-3323-460b-ab38-9c1ae8ca8d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f291aef2-f489-4dae-8749-564aa1e85fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d41c4a8-617c-4493-aea0-613be5e281fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c34c192-d1d4-4e14-93b7-67419607132e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368d36d9-c7e8-451b-858e-69c48fe17378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37afe117-afdf-451c-b7a3-bc5c7a510499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96429598-f0f0-4364-a154-8d46b09ec454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "514eedd2-e47c-4091-a45d-c6cf3747c806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b5b408-06f9-4c06-be53-a59a2bb2f876",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a348df-17b1-4c73-b6dc-b98cdf70db56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18fe363-2e88-4fd2-b6df-54330540ac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6e9d75-80a5-4bda-ac3d-cfae8a762926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a2671c-9741-4b06-a701-92370f76ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de60405-6ec3-4561-8a04-8ce8711a5e67",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5bc5c3-c867-4a52-99e3-7985ee2d74e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3deb415e-4254-4eec-9873-d54be57544b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d43b98b-1a4f-4765-817f-c725e584f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c38c7d8-4aa3-49e3-ab74-55b3e1a184fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3275ee-f16c-42ae-bbe5-cce59b791e56",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc1e8e4-2ae3-4a2b-93d3-6e9c7d6cd642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580c6de5-1a37-494b-bf9e-057fb833fe38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b711fb16-0d23-4075-b6b8-b75747a77a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc68fa0e-1f80-4c67-a45d-ca0f74a11d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4bd6dd-7dac-4950-a011-5eedf4e7d624",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5346aa0e-43e6-444e-a5ef-80b633d2f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e7c36c-9f24-4387-8113-81f228c1fb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f1db4e-2faf-4699-bce1-a4d1bb8c08e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8513c188-6130-4107-8430-4f9ecf4a3cb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46825653-ffca-4676-bba8-8c7b30b7b841",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8f55260-916b-40f7-9752-26cdbc8e5d3a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91799cec-d9ca-4118-9558-efb799ee8f33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81e51a45-2c74-4a96-a0d7-ffd3903d65cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e303fd-8e01-405c-90fc-593912fda0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3421007a-1969-4ca8-aa7c-f0dbd39f63c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dcc8976-2c4d-42b2-94ee-a4edabab9370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af1c3c59-547f-486e-8452-aea2f89681fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f51557c-e7ac-4bc4-b529-3bc7b3ff63c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e283f3ec-ce78-44c0-8d6e-a0f09339eaf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e826c57-8b63-4d60-9518-66af2604c9c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aed41a2a-e325-41fd-a67d-18a87554de19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df6c66d4-4502-4d11-aebe-0693a4843053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55740df4-6211-4dc0-add1-8f8f0056ad50"
            }
          }
        ]
      },
      {
        "id": "57bfb294-1052-43e8-8c34-df243f48f15e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7259bddf-803f-44d6-8321-5ea750d4c558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92d40c5e-e8bd-46fa-871f-6446c343e956",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0788a04d-a7b4-450b-83f1-3fe4fcc8c2ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e13a2f-bc1c-4fb4-a063-058e42ed57b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae06bdea-aef4-4c4b-b1a5-4c3bef066a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84606d5-1321-466e-a850-e07121383630",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff9d394-aa31-403b-9c5b-adb1cc81426e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7aed3e-a73c-4acb-bef7-b38511f2cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d416382-ad3e-4e9f-be3d-7b2a73928dbe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9db6499-1a99-4802-b52a-7d3e82bd7218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125ed1c-ffc2-4985-b6be-9d09e85d245b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a6bb3b-b154-4e87-b54a-9972f5d58763",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2b9f69-f6e2-4735-b0a8-5f0867f3df9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc6e851-9368-4b24-b6f2-4a0aef89ec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7dee3b-54a9-4332-9090-ea9f52c6ed5c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45f0574-2855-4834-8397-d91b970547b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71382a97-c2c0-46a7-a7a3-7a5e5ada7520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae859592-af64-4170-bdb7-02ea703bc739",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a291d5bf-13ce-492f-a486-5ff620fa358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6494d3-5c64-414e-b83b-77cd31a47250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc826a2-e329-4849-91a6-5a989a36de97",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db61ee5d-937a-4184-b679-4efc64af4b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdedfc0-925d-48e1-8d2e-6e3a47b278dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83cfca2-2581-4045-a79f-ce42bd6cb8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61501616-4686-453a-a353-b6185dd08694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ace298-fc6a-4cdb-b052-924ab41f1e4c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9711074-ce73-45ae-8302-7aa2fc82c41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac410f5-0584-4ed2-a788-4f6d36275b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde96c17-0534-4f86-a05d-e93902b1a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7a9a74-b8cd-4d2e-a54f-64b717779880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2234a10c-575c-48cd-8dec-33a0f781a25b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8022488-a344-4ebf-9f06-29429e63ddd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48386d26-cf38-4f88-83d9-bab7f747b931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2501b373-cc75-470b-b3ca-537566025b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f941ed1-f2ab-46e2-a965-6f3a45368bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6bfee4-a83e-4753-b55d-769af01a7670",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b47252-6c00-41cc-bb0e-da5ae6f20641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550f638d-6b68-409b-85a9-f5ca6c304e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6877e879-0549-4ed8-9a57-1d6073202949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f0c114-61b3-4882-8c1e-2a90aaefaeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962e284e-de66-487c-a9c8-743ca6f8d927",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae576d2-7018-436a-b0f1-dbea2dd9926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0749fa37-fa2e-4cf7-81e5-58af08c85e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6294ac4a-8cb2-429d-a22d-688fb2707830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5fd8f7-4c7e-41e5-adb3-69b385b44750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed686f6d-8061-4bcc-a814-c4bb596bb60b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fad89c-28c8-49d0-b617-967bf699316b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcbb130-c98b-4523-b88d-c79a0efbc533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb552b7-cf81-454d-84fa-59087a943ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6273599e-588d-4761-b362-5790191eae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887bb53a-bca9-477f-8fa7-00353125589c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0078892-ebde-445e-9f98-beac3e946019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74279a33-3b9d-417a-9106-b2c71e1875b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e979641-93dd-419a-9a8b-1a5857adf31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d84ed8d-fdc9-4055-810a-e3e873b72dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bff6f25-a07f-45ce-8997-efdf88d541ae",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21dab08-579a-4cd3-b651-09ebf3e5614d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f668a0-4dc5-41eb-a060-06b3dde530b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2072ef1-0aa0-42fe-bae4-2336d0872985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0104f89a-175e-4ad0-bfec-c16130891486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3952cdf0-b425-45a6-b9d8-d7f3e7db74a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b621b-884b-4ab8-ae0f-07766b083067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d38e10-9682-41c5-907b-f72e5adaa2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dae0bd-055f-4d3d-ad04-d80239b4e3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b45adf7-9573-453d-83ce-4b0c3294edb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de02d70-4306-4ffb-803c-3d73c8c0b729",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b7d8dd-10c5-424c-828a-ec271b2edcc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026a12a6-60e2-43c3-9f6c-70a031239453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80e26e6-b229-4360-be98-85cc0656a85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacb9174-e860-4451-8db9-2dc62856bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773015b7-5a1c-4de8-8b19-60f14feb90e5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c56eaf-cbd5-427a-b88f-b747d774df1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6a5e14-ecac-4bce-9caf-2518ab26ff59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b25c72f-6b12-47ba-937e-720ccc827751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8050b87b-9333-4ab8-af48-71b27c52e948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694206ac-8ab1-407e-9774-f0e778610b1b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478996b9-b3b4-4810-aa9c-a0b9b40942b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f609e31-d22e-4a70-b399-83aee8068a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9892d2ed-02cd-4334-bdae-b22c80b628cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cef4c3-c4b9-4094-b3a4-7aed620469d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e0279d-b38c-400a-85dc-787988ad7132",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967fd985-d4d2-4af6-98df-c3eeaf49749d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce65fb4c-b0de-41ab-b684-c0539c816d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4003f0-b4dd-4a5b-b507-1f26b2838449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6518c83c-fa05-4dbf-813d-460a23eaa2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3bea27-bf41-4055-8959-c5e64e1682a0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a79148-9913-4014-b109-af6feb8f4e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dec532-ee59-4663-a1af-10dfb2de0e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32c08c-148f-4029-897d-d2a38bce81cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf68319-331d-4bb7-b7f5-77e2ce2e3202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cefab1-1f60-49f7-a9f2-59a8eeb66d2d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416087d8-49b4-4153-9880-c8fbd896112e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa35e042-5713-4b1c-87ee-7f6fee857895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74548086-23d2-487e-a9c2-d0fc4012eea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e356d5de-7c06-4076-9247-41cf408eec92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8806e7-9902-4669-97f6-1b8e863e5998",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea53f471-2d75-4d57-8bb0-2a21b361bd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc6c7f2-e9f8-418b-9f5f-6fd4071675ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a22826-c54b-48ca-ad7b-498fb58b0825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f8373d-32ff-48f9-bf2c-cfbc1b754839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74f1368-b248-4490-bfb6-6d303ab26386",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d9b91f-e445-4209-afb2-7fd70ab23a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b75a5a-76d4-4c68-be3e-6bfb0e9cfb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2237f33-3aba-4417-80ea-6b6dffe385de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2f8e1a-c28e-44b4-a70b-9fa87f4d2d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50101caa-87e2-491e-8974-473db64c3388",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d378cad-022f-43bf-b300-ee9a660ca8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde113f6-5b6d-475c-a98e-cfe315e3ff2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0487d4-c3f8-41a3-bfda-35691f077817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd958135-72e6-4971-b31e-ace2f428921d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1bf0a8-ddd2-41d9-94a5-35435ced7ed3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e445f2d-5bb9-42b7-8164-a435c18af2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a7c33b-8e6e-4c98-ad06-6ed5ab893e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf08f1a-272c-4c55-b4c4-0e4873721c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40306b0e-dd33-4842-a726-1391616a73e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f94284-a6bb-403f-a57a-eabccb1cb434",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74ab506-8a9e-4086-a8e8-b7f08c28deb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200c586f-e0c1-4777-acda-01f9ce436640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6f84ea-0d81-4286-bff2-e98866075551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883f1c53-c664-4fa3-bd17-6b5eff90ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd047a-5494-4dc2-a0cb-6ec4718675ad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83abefdb-803f-4152-a603-a42b373fa85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6c748e-96d2-43b4-b914-1bf152f744e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c267a13-d0d2-4f97-9e0f-666ce7ace037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea7a3bb-1346-41ce-a019-685baf1e30bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131cdc92-76d5-4a0d-8329-5a4c3b258268",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e8d9c-01e4-49b1-8efa-b46b48e4edcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fa07e7-5021-4363-85a6-fcacc38009ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104f446f-c72a-433b-abc5-1fa1510c59aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7b0b6d-e2c1-4c3e-8a8c-f1e57f8efc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8056ba7f-3eaf-4a22-acb6-c7de17a20aa1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d016266-fc2c-4ad8-a84b-870fb264d0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9890c423-c159-45e3-a0b1-a29c55e8656e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bb3df6-7c62-497d-9add-c6d99748e213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f49cd0-de36-462a-aa17-d9b539b12276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64912406-9824-49ae-8931-50fcffbbf89d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f572e-1f41-4726-8e62-9dc6ae53f627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30f65ad-668a-40b5-b1d6-d13368642378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fbe8c5-1e7d-4438-b6ae-481d35ea7244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7b7e84-11b1-47f1-a14a-92bc33f6be70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb65d116-5b4f-44b0-8cae-ec4dfc807405",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ba70c-42cc-4223-bfda-468cf57ae26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ede045-54e4-4204-babb-e2b17524718b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41140e9c-70cd-45be-9bc0-63795b690ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4a82f9-fda8-45e4-b92a-571785e7c55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0afb20-77a2-42fb-97a9-2db729adec68",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c2116-2e16-4af0-ac03-08c0a55305b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ff494c-acdd-4255-9c07-b810343b9515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94441ce-cdea-4364-beaf-37fb74f0a06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819fea17-cfc3-4a4e-8969-30005e2e2607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f17dfe-6c74-4d54-a6c4-821ed69f89ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d944664-37dc-49e7-b134-4e34af540751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e145ccc9-2cb0-4bfc-83c5-c1e5a31623f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50915ebc-063e-4432-8a96-40099292e325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c411fe4b-27a2-43ab-ac97-ce18bf41900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707f54ca-6f92-4174-bd3a-93e5fcaa5da0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85596b9-c076-4835-9c63-742afef78fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cccd963-7163-4b58-af0c-92eb8d08cca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d19cc-f057-486c-b958-cb6c5add73f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedd0235-cf04-4021-ae22-98e260d7781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0354730-b92a-451c-8ac3-a0de45b126a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b560cba5-649e-44d5-a1e9-42f5216c94db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4b9810-bc3f-4680-844f-bedff3d22f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b22f6b-2b5f-4c5b-8a2a-5eb70b6224fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa3bf06-0508-4ee3-98df-ea09f3ba043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47897f28-f31b-498d-9613-90f19345ecdd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b72233e-2277-4401-9a29-006a7a561fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c4282-9b78-412b-ad72-9065c3eb9ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e677a887-ab3a-4ee9-a946-78753f93150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca436f7-98f4-4e1b-92cf-2fb4ede3599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707b3f53-4915-45cd-b7f7-422f9b20a569",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5458e3-e6ef-411f-af7b-3ac97404f7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133a9a10-8c3b-4fb4-9268-aa1ae7d21447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8bfbbe-52d0-40e7-9f31-22decec7be89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e8b990-9f6b-4384-99b3-d60f21ee174a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e1a6b5-e4cb-48b1-9b11-6233fe725390",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673c8c51-4be0-47a9-bdb3-4faff84e5806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eac80ab-cc54-4ab5-9979-941fa45b3cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cf0e3d-e8d0-4eac-bafc-8b32f45c860c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5809d63-778d-45d1-b611-11ff668a2b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222abd54-4502-450e-bf1c-eabe6f8f5b10",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b055b719-808b-416d-af8d-f2e44a803f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db867da7-a91e-4a90-931d-ee1e7e7d79e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef5dc5d-cda1-47fd-81c6-4e6b91de53cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ce5937-f641-4b5e-b330-04e4ffcf8562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f29a1f-db61-4537-85bc-3d81432f3e0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f035463-304d-4e43-b0b7-6825df3175ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f229d968-ccbb-4b04-903f-c4e1c999cfe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743dc8d1-cf33-421d-96b7-da4df79231ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90519465-433c-4c07-9ea6-bddf32c54678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8e8908-fca6-4bd5-be82-77466dc7088f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d627e8f-4db3-490b-ada9-a176a805eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f25fe9-f4e6-46c5-967b-05f930b427bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f0a283-c9ba-404e-9122-5241329fdb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8816d021-dc9d-4ee0-92b7-dbf3242fc702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb1968-eb65-4280-95da-dead1c799921",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdbb950-88af-4a58-8fa9-200fefa17245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141e85a3-836a-4af2-bd3b-7925aa90cd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785013ac-3e08-4508-978e-acc028dd3b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e2a8ab-38f5-427f-ae2f-a28337024d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e1565e-fad8-4f79-abdb-8bb75f328b29",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3795ff0-041e-440a-95ea-55abb29aace3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0406c8-43b6-4469-90d8-f8c2f3c05f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdb1105-01f6-4a1d-8725-668bce206528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6c2f17-7519-41b9-b628-853488bd1cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f20529d-9d84-404c-a968-b8d43fbdc49d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d26a4b2-7405-491f-9c5e-74f631d7a9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054939d0-5f32-4848-b0f7-251f29f67273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a8ec9-a86a-41a8-8526-a48da7e4bdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572ee457-24a0-481e-a078-8186133ecf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b62f3-0b62-4bd5-83c0-874e9fb2b186",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb963b2a-3241-43bc-b65b-097204671c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee33b747-2ae3-4d8a-bd76-3b981badc18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc075570-ea2a-4fa4-b56a-ab726451be17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ce72f6-2a98-4693-b013-83a173eddb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668c091c-1586-4b95-86f6-34e9063cf65b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebde5c11-1aa7-4591-be33-7533b571c34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88d6b1a-d755-4880-b411-a81a94137066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53443309-d23c-4aa8-9a69-0aca4deb1b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cb3374-e495-4527-ad18-331e5c16c3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6c5dc-5ca4-4115-97f4-486f7ff9b3c2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42e64f-649f-4551-8f2a-10703d30cfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a38bb8d-187c-477d-8c55-e558a1dcb646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645e971e-cb7e-4203-bd42-4e18e9b4c90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b0e55d-6d1a-4f5c-872c-f5f90639e179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db300db9-a0ce-4561-90d5-11789a99448d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4271c7-61ed-4f19-bcc6-0236df34e05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff53a89-e6e8-4c64-bf23-e023f8b68062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5860735b-5357-45a5-9979-978b7c6a2367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56572039-7528-429a-85ae-61603b3fc280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f2cee-0516-4a4f-9b08-5343e11f4444",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7f987b-6593-40a2-b560-d489c6b6e472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16139575-0d8b-47fe-9ab2-57f35ee647ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98636181-cc7d-439d-8596-778a68be2186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d50a3b-b67f-42b6-a494-2371d10e6bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da9ef5-37e6-4441-8c8a-dffc2181dad7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685013ee-af2d-4b1f-8904-7a58d6bde9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d681cc10-82da-41eb-bd21-c16798bf6e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8901cd7-dcd5-4885-8c37-cd37909a6c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ac96ad-a61e-4019-aba9-1f1dca30a11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3286aba1-0fc8-4aa8-b119-925756eca57f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dcd231-5a4b-4ac7-bd3b-bdcc962e2f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90302b9a-d131-4600-89fe-57b073aa25b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfba4471-c33d-4cee-8a7e-d1759a9076a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df6cbe7-d65d-4eb2-83e5-55b1ebc13029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4233aef0-d409-4a54-a5fa-410cbf8ef670",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdcf943-2de2-4da1-a643-af467cb1f662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce023f9f-921a-4a8a-80f3-cb7af3f7fd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4804d2-50dc-43c8-a04c-ec4a97a5abe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242a399b-329e-4d8d-b951-89ed8bbc0560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db84780-4844-4f3b-9016-1ac7f66124f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607a020e-25a3-4b5b-bba7-6e4d155fe63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750de1a2-70c8-4ccb-8ad2-afdeb886e3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dad586-0685-4b64-9c19-84427bfdf5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee2aa57-b713-4551-9dc0-468c70af5273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c485d2dc-a8a4-4c2c-897d-189534f9e3ff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37277185-e48d-41e5-a957-de22def8440e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72f7a4d-7a83-46b9-9a0d-a4cec0214b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b1a15-8e95-4dd9-990c-973e2ae1b84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024d3d69-bd6c-4bf4-9c95-2ae5eba6a0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e65438-fd04-4d19-8b61-489e1870b0bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e0253-ac57-48f5-b226-ef757c7662ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127cc0e2-e6d3-4bcf-a196-e16b12f05059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b6cdbc-e7e9-45b8-930c-d95bdfc74f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbba9a6-99f5-4ed4-8231-4c94432a49da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d7dedc-122e-4e04-a5fc-5e5debbc7830",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7306c-1366-43a0-a6bc-b7f168068fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d4c031-0454-4e5c-9dc0-6987117b03c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9288131-cc14-4d28-83e5-bae974ff9d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae468b51-99da-45ca-9a81-08ba7059186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c59c1e-129d-46f9-8b19-1e492fc73e2e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27fad4e-fcfb-4f83-8a48-36292325e017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c878d5f0-dcbc-4cd3-a02d-7a530fbdd9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6fd82-c48e-4287-867a-e818811ba034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1621470a-f0d9-4b15-8553-8f4167714973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3596f8-20eb-4810-96de-4a3d45326e84",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb017813-ed56-4b8f-a46e-92a99dea8dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac636e90-7c76-461d-b291-6b18ac692d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd058ac2-9018-44bf-b509-6a729d01a5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b096d7e-01b8-47c0-8909-cd92fa70a68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f13f7e8-0328-491d-a1df-b1decf74d770",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109ce125-45de-4db9-8fe3-3cda87f42de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fff1aea-48ee-4898-902c-2c5b38fe35c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ad2146-f4ab-48e2-afe6-f9f2d458bb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a08270-9849-400d-ac08-7ddc7529ea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c084a699-7843-40a4-a9be-7d78aecf345d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcd0ce4-6fc7-45f4-bc6e-709c9c78fbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7172f7d-e5fd-4d29-9cc8-9370a905c2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d946629c-8eff-4e74-8580-564298a7d04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d5ed73-30b1-4c1b-8ea9-9c7463cba756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17d2750-0efd-4acb-8cfa-a1eb74819400",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c308e-3dfa-4883-ba9e-e4f76ad5953c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f3e04d-93dd-44a2-a28e-00a91ec80d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c9ed81-cf6a-440b-a0ae-c828098f1d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd762d9-fead-45d9-8a13-30a1a97c0585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61333e05-1ea4-4a12-8d86-6e9ac6807ce0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3537e36-480b-49bc-b305-026dbc5c1546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b4e6d1-7644-4961-93ea-c2067072fd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f46ad58-8f41-45fd-b48e-a57a41ec9ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293cf2ff-07e8-4971-8f68-08df39b0ac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311fc3d0-5d89-4ade-8045-0cddaf3f9c38",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776fea87-b49e-4c71-8e21-a9598b5d753c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec73128-bb75-4c42-b4b1-fa24cde62893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b9700-9394-421f-a9c0-3cffaa3ccee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdfbbdc-c47c-4060-ae4d-400746eedb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ff335f-1e09-4aec-927e-00d4dc7faf5e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3932bd22-be04-444e-9f15-48ff7acc26c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ee91e3-e0c0-412d-8a10-d66b206d8915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ff93b0-f05f-4ac3-be49-5b4bb2e4f0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b97adc-25c2-4349-965e-ea312f978855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ce272-a1db-4a0c-a975-7f5eaed62c0c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616408dd-d3eb-41cc-ab91-356fb6dfa4f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b086618-7053-4cb0-919f-a51fdcaf70eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1e5e62-1175-4274-b6c6-aa2935f895b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8457707e-6b12-4997-8dd6-ae801b536243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c243fd3-ffd1-4475-8bc3-394bc30c8adc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ba27c1-9a11-49cf-977e-18d57f473dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e13606-7ff7-42d8-a849-a0c66bdb70c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82dfb77-26bd-43a8-bc17-967c792180f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b70d404-9026-42da-8fa2-592cd4e95d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f9944-afcf-42cd-9c04-397e11de8cba",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67740f57-b933-419a-952b-faf0096c1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f3ad43-7c6e-4ca8-b376-418fb56ef227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eb09b3-7ba2-4bd9-9c38-8c0b246efaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ebdb8a-95fb-4f56-9df3-ed9d58b716c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f1f555-9838-4d4e-8ad5-a092b773120c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809022a0-c190-477a-9a9f-b4843e497d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf82ee9c-6e3b-405c-927b-02078958b8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b98970b-09f8-4ab8-9745-aaeca4e8da8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3331d751-b949-481d-9d54-c9f5730589d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de71f7e5-5e68-4c00-89c0-a7d47f1b5729",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0529c26-ce0d-4f37-813c-b2a2c405e605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9f5a87-3d6b-4225-a37a-e225713a25c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e201e-6bdc-4cb2-a020-52cac1bdc681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f5f128-aa59-4e0a-bc12-f17ad6156051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f768db-722a-4670-a0d5-38cbfc356342",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fcbca9-cb2f-41e3-9f29-f74add0738c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78075063-e6b6-443e-b0a4-568d1aeadf0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f81217-797b-474d-b6f1-55d047a6ab34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466912fb-24ae-4949-acb0-360290137bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a844b566-f9c4-4c11-8587-213d0d371465",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b217248a-133f-4e52-af65-6d711f7b2756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092dc949-cb46-465e-b16e-58b189dfdf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355a1d0e-ca94-4c9f-ad99-d97b2f3f64ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfd5e38-1d45-47dd-9b7b-779506c23815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3efdabd-5fbf-4bd6-a763-26bc8addb866",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00366b27-6086-4559-b71c-6556a73fbce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55507fb5-94f3-4af3-9a3f-de66c134a9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a7699-90ad-4737-8578-28cfe3fefcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a201fc42-a49d-46e2-81b6-5eedd519d43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df6f684-8ee2-44e7-91c6-c018a9692096",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2fb35-b64e-4cba-ab24-f72423edc51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ae25de-6774-48c2-aecf-de72cccde005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648b3b3-3466-4a59-8149-982c6013b603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaaa81e-b9ea-478b-9f69-c964eb688477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70594f5e-78ef-48be-90f2-7d75f64c7bba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35716bf-1b72-413f-a51e-a43d93cacbc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6788be66-7d4a-412c-aa4c-01d0b38cc423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e1efc-7832-4d67-bfd1-30ee0c58a1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f5389c-b2b6-44f6-8feb-648c47053063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d83ca8-9fd8-4697-a547-7de88f24fa6d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3caae6-e0c0-4714-a7ad-a6a3ebcab1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96c7bad-b519-447b-a2ea-5e0b146b5be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fed4c01-17bf-4d5e-a8cd-00a4d6b1b574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7228fe63-8347-4dd5-b9e5-bf03575a6df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e2d684-c715-4675-9602-c5bbbc68a166",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0457d2-c8c6-427f-a2d0-3d350a1221b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c344f0-a542-4ce9-ae43-b619f88c99b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa671b0b-beee-4899-bf34-36b1ec5d6921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61a4acd-6e44-4361-be7e-666e53f19db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd37d8-fe8e-44b0-991f-f015ed211204",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1f48ca-aa1e-42b5-a483-3a01d12080e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18aa882c-d8d8-4105-9902-fe923a99dcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdf1712-a951-4401-9b43-9c8dc440dee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdf38d4-3b74-4518-956b-158e12484b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee8f14f-ca2f-4811-92c5-2b3165b1a91c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13f1884-230e-4e08-a588-05d909f73122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a412aa41-5bed-4223-be9a-561eaa251e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9617c1-eb53-4d1d-8a17-bf25ab491a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b21b58-4457-465b-8eb7-2af5658fdbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77098bc4-f385-472e-b4eb-b8540ee36ac3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1967012a-28a3-4feb-9084-50fb7f05bd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eeaacfd-71a6-427f-b4e8-cbcbbc1d8b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6b26f4-1525-4407-a10e-e91f57813c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c343c9-ffce-4874-8b06-4d3e9b4e2d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7722fa7-5333-42c6-9a85-5a019567f9e6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c7a6a9-bd4a-4b73-8a2c-ba840321d240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e296fabb-0f37-4338-9756-f2cddc4f68b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc0de79-2db6-47e8-b2be-eb1e0b311646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922b9793-fd9a-4058-8521-fe457bde4402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa4d662-a0bd-4225-a6d0-e151812c79d0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f24c68-bb9f-4000-8b0b-8b0a2f24d10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853a6b34-4944-4415-b654-e1b2071fbba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cd9ee1-e2db-4406-858c-219ce64ee3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37919be-7ca4-46ed-914e-1efd9cdcf8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d081c68c-719d-4049-8e3a-2ed2c858d5c0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2b9db5-0d76-4c75-b511-a620e95f0503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a646ef8d-e284-48ad-9b37-7e74ee07c337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f253ee-643d-46a4-93a9-bd8185f1bffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a3bbe0-0085-43a4-b7da-0df6c5456da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638a95b0-fab7-470d-a832-d49c68e359a4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc8af7-d7c1-47bc-9440-ac46b2f00975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c675f59a-7cd5-4612-84a4-99e44cc0fb28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800e2258-2df9-4d9f-8b24-db805af90aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a8ab5-020d-40e8-80e8-67eced7748bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e40c4b-d5bb-4e14-a298-eb1b3aa00f6a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3c19be-781c-4ce9-9949-7439710ebd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70a4462-f60b-44ff-a57e-fb7d464d19e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16266022-1adb-4bce-bd8b-860ad29cba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc260f-0b45-44e5-a296-2cef8cb08d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0036d8cc-4cc4-478c-ba94-29e8ecffb731",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae59b14f-1614-45cc-90a7-aca4f62a7e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e82f30d-ac2d-4ca6-8d22-1d16455187a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12246ac-cb93-47b7-8ff2-9c8194746bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dcdac8-e73c-4c6d-9eb8-5654ceb4c207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd506a05-142b-49e6-8bf9-6caf7019d6bb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ce62e9-70d0-4784-a241-f1d22b81e704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19705dbd-fa08-4a7a-a8e4-883a1112c876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e5189c-6513-4828-b48e-89204e5beb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cdd590-5e6c-4c3b-8a41-0b8515f7dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20599ff7-011e-454c-8c00-5be85eed4c1b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bf75a3-9e1e-40ca-93c5-f502145c0e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12d965f-7706-4c5c-b786-36a88fc4ec3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce73fd4-6416-49fe-8a3f-ba7bce44f7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f59e38-f1cb-4138-8a0a-e54b3cbdf774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b833aee-86e0-4174-9fd6-0578870b67b7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3af004-1c1e-49da-9035-a8594d484c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce3d0db-e0d3-42d7-81bc-5852b56f46b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63915458-af3c-4c6b-b846-548b8988efb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be8a5c1-2029-42eb-a8fb-422927972ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c7ebd9-370c-45f5-894f-b1bcb16a7590",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9054c24f-905a-44bc-b949-38feb3da1e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6f7533-7a8c-480d-93b6-e66dd8662ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb493e-266e-426a-ac03-cf011709f456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231f6e41-cf0e-4768-81fa-031e030ab910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4b919c-96ec-4d7c-bbcf-dd39e15eca9e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d6c8f9-fd3b-4d75-a456-5d0e261a2770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660aed05-8798-4700-aec0-e315424b60aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2377a4e-f850-4b90-81d1-f8116bb89ce3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4fb17e-6a5b-450f-99e4-e1f84a3d5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5da010-1255-438f-b464-d9ec608aba68",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c64e1f-eee7-4c8a-9486-8545a297666f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fc2d46-d51f-430e-a262-f5b3639ccaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde60e6-49ff-41eb-8600-56599b6c89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7329ed6-5de2-4c3a-ac39-77b57cff3632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ae6bdf-080e-44c8-93d7-36c88884da02",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091a0fc6-fe90-4cc7-a830-8c4e46819fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53d3b10-1325-480f-b47c-19bed2d5e727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c2ae8b-d475-44cb-ae84-721891fbb35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f75ed7-96dc-4551-89d1-8465a27aa26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b85a4-9a2f-4a71-a75c-64cdedea30b3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d35f4e1-cf80-4d96-989e-626dbe642177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add7f6b3-2574-428e-ae80-3d591c6f459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b559f-00d4-439b-bcf7-5c5eebe161a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bc13cc-862b-46e1-852a-ebf7f6702216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b1d37d-2864-4a55-93d3-a19ed9cb493d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4423c278-51e3-4641-9ce2-aeef324fb442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054b7561-b8b3-497c-ae06-dec16ca78ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03835a22-834b-4a49-b828-211b9bc4b4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d21ad04-b17d-4055-867d-bc25ef48c60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27959e28-169e-4e6a-b62c-330e15137969",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c63710-afba-44cd-a054-3414dd84d68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0294444-1432-49b7-9d99-3ae727b6c51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09ecc28-9535-4633-834b-bc5c56304959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d4efcd-671a-4dec-9c0a-a91aaad382e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69efc303-faaf-4543-90b8-1317673a7c21",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465d439f-8b76-4e03-9207-4abec74b1585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34f55dc-a14d-44ca-bb26-8fff658a1c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de119487-cc55-4c76-8bdd-e7e401150227",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90390d1-9fc4-4118-acc7-48c46ef1d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5791b05-deb7-45f0-9981-61301e876018",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f2f35-9acb-4ade-ac88-02b20d94bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8fc48b9-0537-47a9-a792-742af6db13da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71580929-fa7d-4c55-9822-8c30df270aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477ab738-3e48-4c0b-991e-11445876eebd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1431bd-0edb-43c7-bbf7-9921c2952afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44884285-317e-446e-8177-54184ff64dfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0529e904-0f3a-4a64-a3e2-0a559c24bc30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3997f681-1012-4568-9338-011227e21fd3"
                    }
                  }
                ]
              },
              {
                "id": "43867057-437d-4add-9f92-279e19819243",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c6c4d81-dcd9-48dd-b1ab-90fb4552668e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0df698d-6353-463d-a2f5-8bd74eaa6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dba55577-b06e-45d6-b6bc-c10b46b8bd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46767e3-445f-4eaa-a0c6-8feebc68b19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9602fad-ddf5-4189-92a9-9dcba0f035bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f12aebd9-6403-472b-95f1-2286525e7b0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18cf512b-5807-4319-9776-116b0cd74839"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19a9243-fd4c-477b-9228-7c4b9ae65350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b46780fd-a2c5-4285-b6a4-913ffcc337f3"
                    }
                  }
                ]
              },
              {
                "id": "17cb40fb-18f3-4f11-8539-6795162635db",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09944f30-ad4c-4dfd-ac02-ed59862173a1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aefe1e-b23d-4b17-a358-a0fa5cf2e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4514300e-7bf5-4c87-8ba6-24f9863bdf95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0354e1c7-6a52-4207-9c3f-960680cb7246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e4e82f-ccf5-4191-9b52-099bf8f22db2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bee85af8-554b-421d-a162-d5c3d87c9fb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ca1a482-b202-46a5-8bf0-fbda2b46a502",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4714f2b6-8846-43ca-b5e9-4dfb938ff180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56621990-5013-4b71-b785-0473743f23bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cce49e86-76dc-4701-98c6-ae6d1ecabd8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a708748-292c-4e02-b9f0-35a44eb8fef7"
                    }
                  }
                ]
              },
              {
                "id": "3604ae7e-5f60-4c85-b279-b2e38d65d6f5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "513be6aa-6fda-43b2-8a59-77a09fcf3970",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d209cd4-44ca-42a2-8af8-4357bfc5ddaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c0ddec-36f2-460b-9c71-5c6b64be9d58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ede7190d-1e5d-4f76-9162-0743ba8d3c2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0105873-a190-4dfb-bf9b-d0f542bd1a30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "870eb7e2-45ee-41d3-97cb-02f9cab674f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca40293-07c2-48d4-a793-3f0916a5c2d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31f9ad47-9d2f-4ee0-9c56-221bb5a9f3a1"
            }
          }
        ]
      },
      {
        "id": "43beedbf-1c1a-4452-9236-4b099b79d353",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4aa29946-728b-4b49-9f62-5586457558f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22239a29-6809-4e48-859f-12880d543020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5411dcb-a66f-4d32-8ddb-6b061c68c1cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d159a11-96c5-404f-80a1-d24a8d4e99ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1a8d8efd-c99f-406a-8616-c7115be5aa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e13776a-661d-4ebc-8419-e666c2f29ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b85046b0-19dd-4f2e-9ede-eef8f6e547c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ea184ed-deae-4f50-9cdd-476557b71638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7322e92d-2eba-42ec-a388-dbdd479c2da5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "694ba0b2-4aaf-4a9a-b039-b90a8522a2dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b7f2325-596c-45a9-8c19-a71e1e2543b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f12db231-965b-4bc9-94ac-974b15e59f9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b13b4da-2491-4bea-9d5c-42a8b09bdf83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca6c7ac6-43f4-461b-a2b0-6335b88724e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0a26a93-a122-4575-8db2-f93e427f14ce"
            }
          }
        ]
      },
      {
        "id": "665bc12a-0e60-4a63-9d05-4457d648ea14",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1284d59-bc20-431a-9e18-a35196263224",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cd7a605-4b9b-4aa9-9560-f1e6d7558ba6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "541c9769-5a89-420c-a776-3c79229166cc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b57e04-f2d2-44a3-b273-8a6387fca668",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6519b87b-f04d-49a9-af9b-f3f8474b0651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7090361-7309-4408-a91b-a8cc95274632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e7b288-be24-4d42-8d78-95e0d78f141e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49b5463c-e886-447d-926c-f57457e8e09b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7608323a-3e10-4de9-bd98-6b53f7b6e1d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd4a92ba-a997-4372-9405-9b7e9f9044ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e1e5dd7-e5e4-492f-bb16-b8eb9c8de88f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99fa59b9-3283-4e3b-b09f-294d5058b402",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b77c3e21-574e-4452-bb2a-296bc62e2284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cab15383-4100-4202-bd8d-c3c2dc6cd1bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa8092d9-993e-4d3b-8d7c-57048725eb25"
            }
          }
        ]
      },
      {
        "id": "0b900308-740d-4e80-9e67-a38f1143ab9c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "077bf0be-ab40-4ccc-abfb-73cd32406e28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddff6715-81ce-4e4f-90a6-913ec7ca55eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73f35f0f-6760-4bfc-9f91-20a595c2e616",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25fb2c-9c0f-475a-a2a6-03e3cb7b1811",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4540a452-b774-455d-9ab1-e995d95ff23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c3c5bd-8162-4a4c-94e4-822e975296b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5819327b-7cb0-4663-813a-d71bb287486c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b90c253a-bec1-4083-8655-3fe2732f21f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92afc88c-9d1d-43a2-8758-a9e97d872201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f02098-8016-459d-88aa-8e078ac405d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "125b5bc5-d2e7-493f-bff2-60ce19fbdfcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ea78863-4ffd-429d-9dd9-0456f115574b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ece29ed-11cc-4736-a047-2f1849738d13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4a4b5c5-808c-43f7-b8c5-60a09f71e9f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "867cf9d0-f11b-47ed-a591-d0ea10afb7e1"
            }
          }
        ]
      },
      {
        "id": "8fe5fdb9-9059-40f3-b5fd-b168bac95ead",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77fd435d-8ace-4c6b-99f6-4214504dc391",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "918eab66-ad01-46df-acf6-6d6dd860c185",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f15fe4d7-800f-4dbe-a78d-c981c0cec1ca",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6059ff8-f716-4a10-b02f-af3a23206b69",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79ad3a74-57cf-47c4-976e-368479ba61f5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 91.84912280701752,
      "responseMin": 8,
      "responseMax": 2569,
      "responseSd": 307.3682088840091,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704587980827,
      "completed": 1704588016362
    },
    "executions": [
      {
        "id": "f15629cc-3698-4be3-a24d-43db82542e1b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53760567-0340-46ec-a518-36ac6093bf5f",
          "httpRequestId": "e39a3243-b530-46a9-96b1-11004378a232"
        },
        "item": {
          "id": "f15629cc-3698-4be3-a24d-43db82542e1b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1321b2d1-572b-4b16-9f77-4e3258e54844",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "12df334e-bb4e-44ac-b73a-82ed2d476477",
        "cursor": {
          "ref": "f04d38f1-d8e5-4bea-b28d-43c2300b1e52",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ed7ba0c8-0577-4a83-8ad0-ec35b0e53e40"
        },
        "item": {
          "id": "12df334e-bb4e-44ac-b73a-82ed2d476477",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dce90813-a2f1-4146-ac6a-bd35e17a028a",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "b24558ad-72ca-4f4f-8e1d-aaee9976b9ac",
        "cursor": {
          "ref": "5593cd4c-7ec6-4a8c-b51b-87840281840d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fa2b2010-dc5c-4404-95e7-3163447069e2"
        },
        "item": {
          "id": "b24558ad-72ca-4f4f-8e1d-aaee9976b9ac",
          "name": "did_json"
        },
        "response": {
          "id": "4ae61d35-7f62-451f-b594-8e20318b36a2",
          "status": "OK",
          "code": 200,
          "responseTime": 500,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ff897-7580-4746-922a-c1e3209c624e",
        "cursor": {
          "ref": "d2a8aa72-929e-40c5-a4cd-3d8a6a5f2944",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80f1e18d-8c32-40ee-9ae1-8546731f199c"
        },
        "item": {
          "id": "a48ff897-7580-4746-922a-c1e3209c624e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e26bd2fc-69d0-40b7-96f6-2ad147eb5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ff897-7580-4746-922a-c1e3209c624e",
        "cursor": {
          "ref": "d2a8aa72-929e-40c5-a4cd-3d8a6a5f2944",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80f1e18d-8c32-40ee-9ae1-8546731f199c"
        },
        "item": {
          "id": "a48ff897-7580-4746-922a-c1e3209c624e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e26bd2fc-69d0-40b7-96f6-2ad147eb5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67df02c-8304-40dc-8c93-c29731e621bc",
        "cursor": {
          "ref": "171a82cd-8f30-4a8e-b97f-93d394ffa25d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8e04110-7380-4961-aee3-964dc0edf563"
        },
        "item": {
          "id": "a67df02c-8304-40dc-8c93-c29731e621bc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0316e2be-4d66-4e43-96a8-fb05100c47f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c3def4-c498-4ef5-8153-da0ae30f88a9",
        "cursor": {
          "ref": "a0e3b7be-96a7-416f-917a-436b476375f0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "247d5964-829b-49bc-9d7f-9c92e7d16868"
        },
        "item": {
          "id": "06c3def4-c498-4ef5-8153-da0ae30f88a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c03a12f1-039a-4c60-889b-38a2901ec5ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268237da-625b-4a94-aa1f-d55602c94318",
        "cursor": {
          "ref": "fc85b915-bf7e-4530-9e39-a863aad3cdf5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6cb3e152-88db-4113-ae37-6eb081946847"
        },
        "item": {
          "id": "268237da-625b-4a94-aa1f-d55602c94318",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dcab54e3-c4a8-4afd-9311-0ba3f04ad20e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30181f0-b317-437d-8591-f25678635f84",
        "cursor": {
          "ref": "bc850bbd-9878-4903-9705-a035ee9f7929",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "65447a2e-644b-4e60-964c-bdfa390e2b7d"
        },
        "item": {
          "id": "a30181f0-b317-437d-8591-f25678635f84",
          "name": "identifiers"
        },
        "response": {
          "id": "8c73b862-6a5a-4ac6-87a2-bc08665b1dc1",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be139398-f4fb-42a9-a952-349f94e2b096",
        "cursor": {
          "ref": "6b599073-a033-4d00-b6e6-230914f456df",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ebaa18d-e372-4731-af6a-669c5e649928"
        },
        "item": {
          "id": "be139398-f4fb-42a9-a952-349f94e2b096",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0726dbe0-3a7a-4160-b539-19238baea25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5a358c-ce11-4f03-8d2f-7caf0d4ec3ae",
        "cursor": {
          "ref": "6c2f3ba2-a37b-4989-a1f1-87cb08d6da1a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "58d88e2b-ef89-4a67-a417-3c90fb11ac4c"
        },
        "item": {
          "id": "9d5a358c-ce11-4f03-8d2f-7caf0d4ec3ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0398c53e-1952-45b3-9c41-f471d07a8f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3971494f-e6d0-4c61-aef6-1989b665040f",
        "cursor": {
          "ref": "5b935adc-6400-4fab-a309-236eb41539dd",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "510106b5-9447-4c73-8f20-0b290941b24a"
        },
        "item": {
          "id": "3971494f-e6d0-4c61-aef6-1989b665040f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1c3ce6fe-b751-4acb-9422-732faa91981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3831160-6b66-4928-bd4d-3d305cffa638",
        "cursor": {
          "ref": "7b14ee9c-cdeb-492a-a75d-a30e7446d887",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5b318fd-7ae1-4e2e-bc40-3bab15ae812f"
        },
        "item": {
          "id": "e3831160-6b66-4928-bd4d-3d305cffa638",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7d03d205-4a1e-471f-80df-74a836113e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64557c8-a1d5-43bc-88ae-bf426aa070f9",
        "cursor": {
          "ref": "819ed5c5-7f73-4edf-bc63-d5511eb4f058",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7db1d647-969f-442e-a9d0-93d372da4217"
        },
        "item": {
          "id": "e64557c8-a1d5-43bc-88ae-bf426aa070f9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "00623e6c-8ae4-4763-b351-7dfa1b79bc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1c6bae-5f1e-4ddd-999e-bb491966f598",
        "cursor": {
          "ref": "23809c3c-fbb0-4170-8084-62346221a88b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bbb8f45c-e663-4708-81af-5d03193a5efc"
        },
        "item": {
          "id": "5a1c6bae-5f1e-4ddd-999e-bb491966f598",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "14a74cef-e50d-445e-a970-db42c62d1158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679d924e-1d55-4c19-aef4-cd48693382e3",
        "cursor": {
          "ref": "a5a0f12b-3f15-4684-b164-2fd79e7271aa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0dd2780a-ac11-40de-86a7-9224f5463fb5"
        },
        "item": {
          "id": "679d924e-1d55-4c19-aef4-cd48693382e3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9c8dd0e7-652a-43d3-8f02-5ec57c9cb54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794d10c5-fed3-4bd3-8557-843b14b65e2b",
        "cursor": {
          "ref": "3adb3d7c-2b03-44a9-be8b-bf5217850fe3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "92cad1e2-96be-4d86-84d1-b22bca0a91b6"
        },
        "item": {
          "id": "794d10c5-fed3-4bd3-8557-843b14b65e2b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "12657f3c-9e12-428c-98a7-d50db2aa9d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb32beab-9b30-48d4-99e1-d5123a89159d",
        "cursor": {
          "ref": "b972213f-11d2-4c4d-911c-0259faa958b5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2fc73d03-2d8b-4dda-a2d5-3826ffc4538d"
        },
        "item": {
          "id": "bb32beab-9b30-48d4-99e1-d5123a89159d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "07b1e453-ccbd-4947-909b-0ce1ea5a1495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6add3a95-df75-4ea3-a8a4-22fab59cc886",
        "cursor": {
          "ref": "36c8686f-34fd-4aa9-96cc-4185cac39146",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d796ac6-aa7a-4217-8d8f-f60195f55483"
        },
        "item": {
          "id": "6add3a95-df75-4ea3-a8a4-22fab59cc886",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0ddcfa12-c8b5-4090-a6e1-a99af0c3a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566bd47-150e-49a5-a828-e0dbd9a49648",
        "cursor": {
          "ref": "54a3e4ec-bb9a-4a02-848b-e99a06adfda6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "720ca54b-075e-429f-a576-9f4e083cade8"
        },
        "item": {
          "id": "5566bd47-150e-49a5-a828-e0dbd9a49648",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "450ed999-406e-433d-8b47-9673d3fa3636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f074302-9a3e-42a4-807a-de5a29e13144",
        "cursor": {
          "ref": "40ff91e2-3beb-42fa-bf1c-cdc0d9a107c5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e578f739-b134-4f14-b9e1-9f99f85195bc"
        },
        "item": {
          "id": "4f074302-9a3e-42a4-807a-de5a29e13144",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4aeb87f5-0c2d-4ce7-ae70-059cb6ca4db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea1f8ba-efdb-418b-9d69-1317e80492c0",
        "cursor": {
          "ref": "71384e7f-9cff-4d91-90d5-4329c9816ff6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3145e1cb-9cfa-4422-bee3-849f043184d2"
        },
        "item": {
          "id": "5ea1f8ba-efdb-418b-9d69-1317e80492c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "35a68d7f-4892-4f00-baf5-83be2cfe3d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45c0c9-2191-4417-9a0d-ddca4fd51e00",
        "cursor": {
          "ref": "ec8d219f-5152-4d37-9805-18e58a792fd8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b4cd67b9-036f-47da-a6f2-408e9c64ec36"
        },
        "item": {
          "id": "be45c0c9-2191-4417-9a0d-ddca4fd51e00",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "73f8ed3f-9e76-4cbe-b543-b39548f2fa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca6dc88-3bfe-4cc8-93b5-1b05f4c66d00",
        "cursor": {
          "ref": "ebf1d5e8-5416-47a6-a2ad-f24e90d1367a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8be18716-5b22-4da7-a585-3cf9a9028de0"
        },
        "item": {
          "id": "8ca6dc88-3bfe-4cc8-93b5-1b05f4c66d00",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3e6f723a-be00-4e65-84a1-f3d9061ae4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f916735-3ae2-4a37-9488-1735db5a4eb0",
        "cursor": {
          "ref": "71fc3c77-5b6f-4c10-b46a-2a34d32f6ef0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "544df975-8f14-4b8e-878b-51c54c9a97b4"
        },
        "item": {
          "id": "0f916735-3ae2-4a37-9488-1735db5a4eb0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7e52e044-93db-4eee-9b7c-65488c0cf914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6c6e22-38bf-483c-869c-086875bc4a5e",
        "cursor": {
          "ref": "ded70be2-dd8b-4b2a-be6e-8eb6e7921d77",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ff673718-15dc-4ba2-97a3-f115643a39a8"
        },
        "item": {
          "id": "cd6c6e22-38bf-483c-869c-086875bc4a5e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f25d0978-cad2-474f-890c-a238d7bc143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904b7ef5-7e23-4bdf-8566-b37feddce316",
        "cursor": {
          "ref": "266c19ec-e631-4189-83e6-530601d12308",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b1d58b4f-b052-472b-80da-89a61a3205d0"
        },
        "item": {
          "id": "904b7ef5-7e23-4bdf-8566-b37feddce316",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f73689f-b916-40a1-91e6-6070f3594356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d4d08-da33-4f87-acb5-76db150ed084",
        "cursor": {
          "ref": "b200e110-48dc-41e5-83ea-44ceae1163a2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "523d9841-6ac6-412c-9ec8-0a1d70e3e1d2"
        },
        "item": {
          "id": "2c2d4d08-da33-4f87-acb5-76db150ed084",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f1191251-da5c-437d-be6d-61e3e22a066f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254259cf-fb5d-4ec7-ab6d-3078a9ff4217",
        "cursor": {
          "ref": "efae5b13-72e2-4815-bb45-b10451a76fc5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1297d3a3-08e1-4f19-89f5-ce5e32f4c037"
        },
        "item": {
          "id": "254259cf-fb5d-4ec7-ab6d-3078a9ff4217",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7b939d3c-185f-44a3-b865-a6f0dccd0151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00994b04-a888-4ccd-984c-5ed4b183151b",
        "cursor": {
          "ref": "58616037-9eb9-4185-b3c3-b90044f66ebf",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47017424-70ae-4bfb-a3a5-a77607247424"
        },
        "item": {
          "id": "00994b04-a888-4ccd-984c-5ed4b183151b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2498e8d1-782b-40c3-9c8e-761fce5156db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96def0e-8a9e-46fb-8fbb-469b47b832b6",
        "cursor": {
          "ref": "6686fb42-401a-4a67-a936-bd31dd0b5ca0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5fc6c993-eec5-4f67-b1a2-3b3f3a5b3fdc"
        },
        "item": {
          "id": "e96def0e-8a9e-46fb-8fbb-469b47b832b6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d995403a-ad5f-4d07-8a28-e7b043f3a73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6b4ff5-01ef-4068-a269-1b975e605886",
        "cursor": {
          "ref": "579bc21c-092b-4006-bcbe-4072a9faeb03",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6bfee7f9-fc73-42ad-8c84-836af1ebd422"
        },
        "item": {
          "id": "ab6b4ff5-01ef-4068-a269-1b975e605886",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f453f2fb-8e2a-4285-8a8f-29fcdc9d2999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076aff53-c514-4880-91a5-9e819a57f45d",
        "cursor": {
          "ref": "b6801112-165a-4cd6-a43f-c3586da2634d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "158439b3-fbcb-4d1d-bfda-f2981041dd5d"
        },
        "item": {
          "id": "076aff53-c514-4880-91a5-9e819a57f45d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "369fdfa6-2cf0-4239-a5bb-dc48f778fa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b9803-81ee-437a-aec3-fa5a649b0518",
        "cursor": {
          "ref": "a6d0a2c4-46f3-48d2-99b1-0871c0383b8d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "af18d353-87e3-4931-ab37-044cc9e41c3b"
        },
        "item": {
          "id": "f14b9803-81ee-437a-aec3-fa5a649b0518",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c7503ede-1e72-4970-99aa-0d1a21c6bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f67a2c5-271d-4272-a1a8-59743f61b29b",
        "cursor": {
          "ref": "c6808257-4556-43dc-8109-f6831e2ab6da",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "253f1405-50f7-4000-a06c-8a5c89c33a05"
        },
        "item": {
          "id": "6f67a2c5-271d-4272-a1a8-59743f61b29b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7dafef5d-7e80-4879-ab98-9c8cc20753f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7db3f08-9214-43b8-9d41-3fad72d3ffae",
        "cursor": {
          "ref": "95058418-0299-4933-b575-281b13eceb94",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a058cb00-e6af-4096-a305-00eea1c2d61f"
        },
        "item": {
          "id": "b7db3f08-9214-43b8-9d41-3fad72d3ffae",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2ce120a1-9774-4fb8-9221-9a75d0f0e090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e19b5af-6365-4ab7-b102-54978280d8de",
        "cursor": {
          "ref": "33550441-13c0-4b0f-bc44-45ea342a63e6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c5b58a4-96c6-4ba8-b847-77ccd2d180eb"
        },
        "item": {
          "id": "6e19b5af-6365-4ab7-b102-54978280d8de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "329eba9e-be9c-4def-98d7-094148be948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e63e6-e7f3-4a82-be94-1e8a45ee8105",
        "cursor": {
          "ref": "dda1150a-e8a4-4e11-bce3-6e217c5b136e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6ba8a101-e0a3-4d92-b146-eff4f4d17b2c"
        },
        "item": {
          "id": "ce2e63e6-e7f3-4a82-be94-1e8a45ee8105",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cee5a987-bfa6-4ecd-811f-d8d66573dd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7ae4a1-b3de-4dae-ad21-ec8431d3e36b",
        "cursor": {
          "ref": "c4b5729b-a576-4ca3-8767-7cecb2b4b29b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bbc4e264-77b2-4d1f-b5b0-5c68f8f6f3d2"
        },
        "item": {
          "id": "4e7ae4a1-b3de-4dae-ad21-ec8431d3e36b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d8bdeb9-fd56-47c9-8dc5-15bfaafbc555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b928d1a7-d215-4d12-bc57-fde48a1ca9f5",
        "cursor": {
          "ref": "6be2ce71-7d73-4b7d-a3b0-b8dfa8c473e0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "798ffaac-8f47-4d13-950e-b0cd4eec54d4"
        },
        "item": {
          "id": "b928d1a7-d215-4d12-bc57-fde48a1ca9f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "94973549-4be3-4290-8651-1a324bae6349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abca107a-fb61-44e3-9593-2bb992e452be",
        "cursor": {
          "ref": "bd951978-9d46-4e16-82a6-0d58da384493",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f66dbdcf-c4b9-46e5-8466-ca43e100c9b6"
        },
        "item": {
          "id": "abca107a-fb61-44e3-9593-2bb992e452be",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f5638fe4-7036-415a-9185-ccdfc08acf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecef342-b1e6-402f-ad19-70c8da83cb30",
        "cursor": {
          "ref": "8e7f6aa6-6464-48b7-94b4-79b91dc57f4c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "24d53a4d-2bae-4f33-8318-e91d36389e7c"
        },
        "item": {
          "id": "aecef342-b1e6-402f-ad19-70c8da83cb30",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ca6a655c-b915-41e5-ae6b-eeddbcd9bf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1d90c-6299-4054-b9c0-177267591221",
        "cursor": {
          "ref": "75cf8155-c9d6-4226-8352-3e3024e4a37b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33cd8af3-1b63-4d9c-902b-f071de075cc9"
        },
        "item": {
          "id": "5db1d90c-6299-4054-b9c0-177267591221",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "49ac41c9-2280-4c39-bc76-498671208e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6ae491-8de5-40e3-a742-5b2f317d4faa",
        "cursor": {
          "ref": "4eaee744-cb5f-4ba4-86ce-1c41137bfa9b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac63d6d8-9c96-4135-896c-3fb4126af81a"
        },
        "item": {
          "id": "bd6ae491-8de5-40e3-a742-5b2f317d4faa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d913a5ad-b77b-4be2-a4f9-021d31da8eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5802b7-fe30-49e0-b263-d8c13101dd31",
        "cursor": {
          "ref": "28a9f73b-7683-4f9f-ad0a-84f3b97d3950",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c246574-a804-4bf0-8015-46ebb64e1103"
        },
        "item": {
          "id": "8e5802b7-fe30-49e0-b263-d8c13101dd31",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a40bb9c8-8c29-46ec-879b-3ada05207d81",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 303,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e8ab4-f1c9-41ee-bf54-dfe2d48ca2c2",
        "cursor": {
          "ref": "e9caa27f-1ffe-4546-9295-bdd28eebe1ef",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa696998-db48-4f99-bb7f-e05c6c1dc198"
        },
        "item": {
          "id": "d10e8ab4-f1c9-41ee-bf54-dfe2d48ca2c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad67c314-7040-4228-bd29-0cd43c261abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9838c2c-8bb6-4b2e-84b1-72aa723bfdbd",
        "cursor": {
          "ref": "eeb8dfcc-a7c1-4295-a943-0348c161a7cf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "54d98c68-d76c-480c-b050-e1974d2e95ca"
        },
        "item": {
          "id": "d9838c2c-8bb6-4b2e-84b1-72aa723bfdbd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a65a988e-6184-482d-bac1-3516b37a7359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6670b978-82ec-46ea-82b3-8ceafb503449",
        "cursor": {
          "ref": "517fbb6c-8adb-4cbc-ade1-5db4e848af77",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "954ba5ad-9f42-42ec-9d68-4ada4ad40da6"
        },
        "item": {
          "id": "6670b978-82ec-46ea-82b3-8ceafb503449",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2931a6a9-3f39-4654-a89d-e24a9cc80c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2ebe0d-ef92-472b-a896-60da56e383cc",
        "cursor": {
          "ref": "caa6578e-7309-4a3a-adfc-e88fe02945ac",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d29c67d-9382-4321-8943-d71a803c76ee"
        },
        "item": {
          "id": "7d2ebe0d-ef92-472b-a896-60da56e383cc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2cc625d9-d81d-4d98-9a57-f218bdd7ad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f47a69-a7c1-4481-b6ff-fdce0e177b4a",
        "cursor": {
          "ref": "65be7a00-7dd1-450a-aa18-a711241bbd8d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6631a454-01bd-4223-a753-080cc647bd04"
        },
        "item": {
          "id": "d9f47a69-a7c1-4481-b6ff-fdce0e177b4a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c83c65a-4f98-4683-b019-81f20304957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc269680-b4cc-4014-81ed-f4e2b260b9e8",
        "cursor": {
          "ref": "b97f281c-8b78-4e59-bfbd-5affd1df9b3b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1aced568-79fe-4baf-8877-0e23b1e38fed"
        },
        "item": {
          "id": "bc269680-b4cc-4014-81ed-f4e2b260b9e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "05862e7f-0083-408b-89d8-871f7dbe4a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d1b548-6acb-4eae-b457-2061a33e0b93",
        "cursor": {
          "ref": "2a22c1b0-c75f-49d9-9686-5143c813689f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "86604c7f-b117-43e9-85d1-d47c26de4557"
        },
        "item": {
          "id": "f3d1b548-6acb-4eae-b457-2061a33e0b93",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "736bf448-e315-44c8-8a72-77f28f6fa15c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 306,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4128d5fb-fbf1-4d81-9900-0cb016890219",
        "cursor": {
          "ref": "fdda2f59-3df4-48d9-99f6-8718f511112e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cca63f35-a435-4d8f-bc11-34c51638e20d"
        },
        "item": {
          "id": "4128d5fb-fbf1-4d81-9900-0cb016890219",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d4a19f04-734f-4a6b-add2-f28cca70923a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c0be03-5a04-494d-89c0-fd2324bd547e",
        "cursor": {
          "ref": "b991d85d-5b97-4f00-aaa5-ded602383890",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f97a465a-c277-463b-8874-21c06ffe2e79"
        },
        "item": {
          "id": "90c0be03-5a04-494d-89c0-fd2324bd547e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eb5b192e-86d8-4afa-9e69-4309d49e6d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db6878c-ba98-4859-86ee-25b0b64deaf0",
        "cursor": {
          "ref": "00d14400-d94f-4d45-bcb6-6c7d8c636eea",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9b0736a1-4a27-4501-aec3-b99cc98f00df"
        },
        "item": {
          "id": "0db6878c-ba98-4859-86ee-25b0b64deaf0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "813c39f4-accf-469f-b3fa-f742d495c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd950c-c5df-44c6-90d7-81a67132bd5e",
        "cursor": {
          "ref": "b893554a-44a0-4385-82c5-494cdf581f74",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8cd4caa-4adc-4e3f-8564-35fcfae5f661"
        },
        "item": {
          "id": "0ecd950c-c5df-44c6-90d7-81a67132bd5e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e68b3299-134e-408a-965e-1e3ffe553d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49147c1-6d4e-4764-893d-f6cb3d3d5740",
        "cursor": {
          "ref": "f7ebe048-25ee-429e-8d7e-9d84e7b74bef",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "574e325b-dc2c-4bba-a664-38416d2e6453"
        },
        "item": {
          "id": "a49147c1-6d4e-4764-893d-f6cb3d3d5740",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "554972b3-397f-42cf-995f-f25ce2c20894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dd4542-54a0-44bc-bb9b-050e4afb6168",
        "cursor": {
          "ref": "a80ea115-c595-4ef8-a52c-e5f793689b6a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ca9a1ac9-8712-4e06-bafa-d376d11904d6"
        },
        "item": {
          "id": "12dd4542-54a0-44bc-bb9b-050e4afb6168",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "949a5fa1-9830-4e0e-8fac-8df19ad4769c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a486fda-7d53-4d3d-9fa5-98643aac8016",
        "cursor": {
          "ref": "2bbed619-ac66-47b1-b224-b546f2f41b85",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba0ed68a-608c-490c-b116-99a877881186"
        },
        "item": {
          "id": "3a486fda-7d53-4d3d-9fa5-98643aac8016",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ffd4549-ac80-429f-9761-d5a0f0000df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7207345-d5e2-4c8b-80a3-c58a15ccf899",
        "cursor": {
          "ref": "8d5ab8e3-565c-470d-8160-3bfecd51a15c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0650f0a1-a586-4188-b479-1a2c5c7d0e3a"
        },
        "item": {
          "id": "c7207345-d5e2-4c8b-80a3-c58a15ccf899",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9ee523af-9b71-41b6-8c61-f37f8c9f01d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f5e7b6-aa51-425e-b6f0-c44ea3c91712",
        "cursor": {
          "ref": "e29b5408-8504-45ed-b52b-d49af6a315ee",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1f4b6344-5309-4dc6-906b-31bc246e6d29"
        },
        "item": {
          "id": "e4f5e7b6-aa51-425e-b6f0-c44ea3c91712",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "49b91990-7005-4837-ae01-bef2caa99bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae2c1f-99c2-42c4-938e-c0e709179316",
        "cursor": {
          "ref": "363b1d56-8326-403a-bba4-da4f5f17df8c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf707725-3fc5-487c-9ff6-5675d11567b1"
        },
        "item": {
          "id": "39ae2c1f-99c2-42c4-938e-c0e709179316",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0632ff3b-b6df-4003-ae15-7425c746ea0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5662bd1d-6493-4e3e-ab85-af291eff3860",
        "cursor": {
          "ref": "7d181987-d693-452f-9822-081483c2fe10",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e75fc626-e946-485f-8e65-be40a030095e"
        },
        "item": {
          "id": "5662bd1d-6493-4e3e-ab85-af291eff3860",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dad354fe-53c5-45fa-9f4f-d664a5408291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0329df-1e5f-4e76-8261-83d478040851",
        "cursor": {
          "ref": "9b9b1f93-5c16-41e0-9036-1fbe4a8de4d7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "44fc8f8b-0c32-4bcd-9d21-d5163f9a4dce"
        },
        "item": {
          "id": "ee0329df-1e5f-4e76-8261-83d478040851",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e8f99b59-dc84-4dda-80e8-ca80dd334997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e977a4-fe80-4d90-a712-5f9f727b1b38",
        "cursor": {
          "ref": "93ec3ff3-770a-48d9-aa07-c9ee1fcbb9ac",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6216bbe2-ad11-4c32-8cb0-514cee85f8cc"
        },
        "item": {
          "id": "10e977a4-fe80-4d90-a712-5f9f727b1b38",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b0614769-4737-4c0e-a83c-0663e4842ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9402b119-b965-4d8c-923d-d9cafbd41109",
        "cursor": {
          "ref": "f385b74d-2747-4746-b721-e6e18a01307f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9258d8bc-4f0f-46dd-a688-414abfeb3cd0"
        },
        "item": {
          "id": "9402b119-b965-4d8c-923d-d9cafbd41109",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6e405315-0d8c-4fb6-86df-e21be4a53a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d292ba-23bc-487e-8f2b-b2bacd9ee1c8",
        "cursor": {
          "ref": "27e03bd8-44f3-41c9-b8a2-25add9aca0d2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc8be744-1d47-4d53-b317-2c04d48dda80"
        },
        "item": {
          "id": "07d292ba-23bc-487e-8f2b-b2bacd9ee1c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3aa2835b-daa3-4a49-be64-6a162a87b307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c436420d-585f-4978-9bfd-e4acbdbe61b7",
        "cursor": {
          "ref": "af6e4c2a-73fd-43a6-99c8-81d8a9aabf31",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2a8ca2d3-1b08-4aa5-b247-e79185626166"
        },
        "item": {
          "id": "c436420d-585f-4978-9bfd-e4acbdbe61b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "69fa22a8-49c3-49aa-95e6-3eaed8a38012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55ee7e-1188-440c-ac5f-1ab7d071cfaf",
        "cursor": {
          "ref": "21dfee7f-5912-4dbc-b52f-87477a96f46a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "342ec421-35f7-45b4-a37e-765fa459adf5"
        },
        "item": {
          "id": "6f55ee7e-1188-440c-ac5f-1ab7d071cfaf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "408138ad-8ac6-4318-9e93-74f8d59571f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a328debe-7fa5-490f-83db-08f30ec6779e",
        "cursor": {
          "ref": "3d6d83ce-f932-4592-b5ec-d716765ba464",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "37ebcc03-a21c-4761-8ae0-5fe401443753"
        },
        "item": {
          "id": "a328debe-7fa5-490f-83db-08f30ec6779e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "63ee3612-f175-4099-8e37-443abd98ac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683999be-f67e-4d5a-9cc8-42511eb53d3b",
        "cursor": {
          "ref": "219ebb7a-8716-4bc7-9109-0944f1ba8977",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "08790c7f-6998-47ea-b2d3-8c60d37428c0"
        },
        "item": {
          "id": "683999be-f67e-4d5a-9cc8-42511eb53d3b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "125c311c-d6be-4402-8233-19355aa577a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf69ef5-c528-4913-b609-855e1f8df491",
        "cursor": {
          "ref": "e3a465d2-032e-4993-92e7-7e86b535be0f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "156424ce-3d00-4efd-bcde-1b1a85a0cca3"
        },
        "item": {
          "id": "ecf69ef5-c528-4913-b609-855e1f8df491",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dfab509a-d98b-4f5f-a837-fb59985766f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21efe841-fd81-4e36-9157-127cecfdbd25",
        "cursor": {
          "ref": "ddc9c404-24ac-4c3e-a9d8-952854ca339b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d58c7707-df80-40a1-a9a9-9d0229509309"
        },
        "item": {
          "id": "21efe841-fd81-4e36-9157-127cecfdbd25",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "59e2b490-81bd-4ab4-9236-23221eae0e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42282b5-0b1e-4ebd-a24e-6aefd5924eb5",
        "cursor": {
          "ref": "0458e197-6559-4dc5-8fc3-8e131b408a80",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d474a91c-8131-4cd8-9d11-6c1622db36bc"
        },
        "item": {
          "id": "d42282b5-0b1e-4ebd-a24e-6aefd5924eb5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6531069f-6efe-4a78-b547-dd4c4637c89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a185bc-4379-4a25-b96c-fb3ee59737c7",
        "cursor": {
          "ref": "5706fd42-fa01-4afb-95d7-8e33c786f3d3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6cd82fa9-1dc5-4be5-9a81-31c37d82cc8e"
        },
        "item": {
          "id": "75a185bc-4379-4a25-b96c-fb3ee59737c7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1df717be-be3e-4b7b-ba19-9c03178fe277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88a15a7-1728-490d-a19c-6de222ba4a7c",
        "cursor": {
          "ref": "487cbd8f-c853-4cdd-b69c-5d0054513ebd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "259b9f94-0a6d-48fc-be98-9d69d5e240c8"
        },
        "item": {
          "id": "c88a15a7-1728-490d-a19c-6de222ba4a7c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "40c7e137-0203-4e0e-863b-143b743c9323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d61a87-85f6-40a8-bf2c-f80c8b2abf04",
        "cursor": {
          "ref": "88cfda1f-ad2a-40a1-add6-cf4a4c17782d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "31d7fefc-020c-4f81-87ec-4ce4c2238797"
        },
        "item": {
          "id": "d9d61a87-85f6-40a8-bf2c-f80c8b2abf04",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f6aa6237-274d-4700-b526-21a9c6a6dc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3e867d-1e20-4db9-95d8-a25e7e88323c",
        "cursor": {
          "ref": "c4283e81-f04d-4684-be6f-65a2efa275a0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a96f2df6-68be-491e-8a04-236863ea189d"
        },
        "item": {
          "id": "6c3e867d-1e20-4db9-95d8-a25e7e88323c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8a2da9f5-0f15-4237-89d9-8d0ea8e8d47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2705cfa9-7cff-4ae1-b94e-cb684af3a0c1",
        "cursor": {
          "ref": "fbb8789d-d35e-4219-abb6-9460e97adc55",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5593ea0b-3ae1-4daa-9c10-4e28793d90c4"
        },
        "item": {
          "id": "2705cfa9-7cff-4ae1-b94e-cb684af3a0c1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5ebee3a6-8269-4320-9e8f-04844eee4ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d978ed9-7571-4a67-a0a0-b7623a07a9e1",
        "cursor": {
          "ref": "ac14add6-ce6a-4c04-b9c0-934e32be76ca",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e47f25d5-ae53-431b-bc23-fd359dd702ab"
        },
        "item": {
          "id": "6d978ed9-7571-4a67-a0a0-b7623a07a9e1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "859a54fa-9a79-4f84-9691-a44064929493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774fc8b9-43f3-4cfd-b3a5-6f03a2576444",
        "cursor": {
          "ref": "32ccbbb9-6df1-449b-b542-396b56f17748",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d45ba4fd-6c5d-4253-9f9f-bd4562820e7e"
        },
        "item": {
          "id": "774fc8b9-43f3-4cfd-b3a5-6f03a2576444",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5272f081-852c-44ad-99a1-08cba5e8bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3031cb9-7dc4-428c-a6c0-ad87f479c656",
        "cursor": {
          "ref": "5e65f523-8d10-4931-9274-a45771ca6946",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f7acd6c3-7b3b-4e54-979f-17f83084c8c7"
        },
        "item": {
          "id": "d3031cb9-7dc4-428c-a6c0-ad87f479c656",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b70e0e1-6d7b-4471-9ab2-1b008aa91649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af377d19-c411-4b87-be7b-3bdee39b9caf",
        "cursor": {
          "ref": "7d52b6ac-02f4-49d0-8ce8-76e313008335",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fe861ced-38bc-45f9-8c65-66ae9d756b7c"
        },
        "item": {
          "id": "af377d19-c411-4b87-be7b-3bdee39b9caf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ed5ce8e-f362-4c21-92a3-c07644496e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf7a738-cb88-444a-af47-7e5d2576f7d7",
        "cursor": {
          "ref": "a06c935d-8756-4a13-ae2c-2d0814c0818a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c3e8948-613e-4780-b765-9b2886b4d606"
        },
        "item": {
          "id": "1cf7a738-cb88-444a-af47-7e5d2576f7d7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a05e093f-8dc7-46c2-983d-955e07e3e9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec76ffc-0771-4afa-889b-6e90d6771266",
        "cursor": {
          "ref": "19276847-3e5e-46b3-960e-54898bc81e8f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8eeb7bb4-4005-4813-a09f-76a60949d08e"
        },
        "item": {
          "id": "0ec76ffc-0771-4afa-889b-6e90d6771266",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d5e869ae-d9cf-460c-801e-8a1ea4411f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baee95f4-7faa-439a-b963-2a542a9b2c69",
        "cursor": {
          "ref": "df5874f2-f0ea-4adb-afe0-da730388e91d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7fb21725-62ca-4171-a5a8-81f20bead1a5"
        },
        "item": {
          "id": "baee95f4-7faa-439a-b963-2a542a9b2c69",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "03c97863-a1d1-4650-a116-65f86a290652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83fa2d-45ff-4773-8434-00f22f3dcacc",
        "cursor": {
          "ref": "9837197c-5d05-4c7e-8e2f-e896b34e2498",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cfb72362-d95f-491a-860f-6a4fc54e8946"
        },
        "item": {
          "id": "df83fa2d-45ff-4773-8434-00f22f3dcacc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ab1e4c33-5e4d-402a-bc71-376ad4ab1a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac3179-6bca-4ad9-94be-b3ef1d963d29",
        "cursor": {
          "ref": "12db4cb1-40e4-451f-b628-323b6b4aa9a0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "08776c94-9e72-4f95-a7c2-fc318835d81c"
        },
        "item": {
          "id": "51ac3179-6bca-4ad9-94be-b3ef1d963d29",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6ba6fc62-a03a-489d-bc3c-2e54169a9219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976445fe-a7ff-405d-899f-bf26c48805dd",
        "cursor": {
          "ref": "ab632575-29e3-4664-8fce-a77eea99258a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54870c24-6420-4e4f-aff5-24656d05dabc"
        },
        "item": {
          "id": "976445fe-a7ff-405d-899f-bf26c48805dd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bb47477c-87b7-4ea0-a7d1-56592bb052b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158de0b8-591a-4f5c-9015-6ff9e94a02cf",
        "cursor": {
          "ref": "d03f5350-46b0-441e-96a3-cab11e7056a0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "83b2698b-bc6b-4764-9374-d92ea70e1309"
        },
        "item": {
          "id": "158de0b8-591a-4f5c-9015-6ff9e94a02cf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1e7400b8-5109-4590-9629-7f31a848d106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a22687-1cf4-48a0-9895-222a56503e41",
        "cursor": {
          "ref": "888027cf-fee3-4336-a469-07d4fe3a14bb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b0b4206c-d819-4493-9504-a9917fd5bb3a"
        },
        "item": {
          "id": "44a22687-1cf4-48a0-9895-222a56503e41",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "09b09e81-c82c-4942-bdb6-51a454565c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4220a6-e66a-4255-8097-413862d7b03a",
        "cursor": {
          "ref": "6adbb2e4-0c4e-49f3-8aec-d19af0c285a0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "98822313-ee42-4e7f-90dd-4f88a12e9fea"
        },
        "item": {
          "id": "6d4220a6-e66a-4255-8097-413862d7b03a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5eaaa33-8bb0-4db2-a44a-269422c0d40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc58d088-c6f8-4531-bc33-9753c3266699",
        "cursor": {
          "ref": "0780de17-385f-42ae-8516-350483cc2e4e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ab927a9d-b5ac-4316-8429-7a110c389b0c"
        },
        "item": {
          "id": "dc58d088-c6f8-4531-bc33-9753c3266699",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f92485f9-ee25-46c0-bc69-f2c4a08ce3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84993ec6-1388-4f52-a30c-4472acda0445",
        "cursor": {
          "ref": "00366167-34ff-4161-a12c-a831871262de",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2cf51217-da1c-45d5-ab7b-4c8f863d60a0"
        },
        "item": {
          "id": "84993ec6-1388-4f52-a30c-4472acda0445",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cefafe27-154d-4826-b512-f37b4ab534a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bff6ad-24e8-49cf-aeee-8b6139487404",
        "cursor": {
          "ref": "46ad4a2c-70b6-4f8c-a3ce-eb05f8ca4418",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ffcfde89-cc15-4e05-85bc-002e3ba54238"
        },
        "item": {
          "id": "c1bff6ad-24e8-49cf-aeee-8b6139487404",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1774a9be-d011-452c-bf9a-2fedfbf68ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7a2b90-544c-4944-9a48-ca9e4696af9f",
        "cursor": {
          "ref": "ae81f275-631a-4464-8161-4afcd118075a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f381197e-e6f1-44a4-868f-79a6c8e12b10"
        },
        "item": {
          "id": "db7a2b90-544c-4944-9a48-ca9e4696af9f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6ae60dd6-35b3-4007-af39-e7c35feee87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cffa77f-c211-42cd-9575-fae957912ded",
        "cursor": {
          "ref": "a82027a6-48a8-44de-b883-17c8bd0b2f83",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8b366ee5-2d01-4ede-b6f2-e3388fd08c45"
        },
        "item": {
          "id": "9cffa77f-c211-42cd-9575-fae957912ded",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "70717e89-2249-4dfd-87c3-6f5ec6fc8b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63489532-aca1-4517-95f6-7def83545890",
        "cursor": {
          "ref": "f4b70efc-306d-4b7e-b47e-a82192dd2cd4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "756d5e72-535a-42d5-8c6a-c071c1989278"
        },
        "item": {
          "id": "63489532-aca1-4517-95f6-7def83545890",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "729394a6-81ab-46dc-ad45-e566d59ff53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3ce4f-fd60-4e70-b003-c050b3c1baaa",
        "cursor": {
          "ref": "81e1bfe3-2520-43ab-a217-6db1a0c9eec7",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "160e6c8f-def8-405a-90a9-d890ebfdef0c"
        },
        "item": {
          "id": "3ad3ce4f-fd60-4e70-b003-c050b3c1baaa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "31e9e4cb-130c-48c7-a7dd-d09d68e080ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae3851c-7ede-40f8-85e4-7e64b07cbfc4",
        "cursor": {
          "ref": "2c934265-3f5f-4b52-9b75-1f13d0070339",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e179d5a0-5815-4664-8682-aab7d8424ba5"
        },
        "item": {
          "id": "bae3851c-7ede-40f8-85e4-7e64b07cbfc4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1b69b2eb-7264-4efa-8bf4-20496f534fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6f8b33-7c8b-4dc7-ae74-33d1093facb4",
        "cursor": {
          "ref": "6d882666-aebb-4dd7-97c7-248caab7a1f8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b7af866a-08cc-4608-859d-02c1d56bf7d7"
        },
        "item": {
          "id": "ca6f8b33-7c8b-4dc7-ae74-33d1093facb4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3bd789d8-3dc5-4f7b-a7cf-6e419584f62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950443f-63a9-44b8-8d2a-542d67582044",
        "cursor": {
          "ref": "7f60ef06-59b7-4918-b5e6-3605bdf4aa6e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "55988757-9185-4825-ac1b-2f2bbd7117bf"
        },
        "item": {
          "id": "a950443f-63a9-44b8-8d2a-542d67582044",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7021ba89-2f83-42c8-9e7e-2696b5b128d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a125cff8-bf7e-41ce-8b13-1b3eb00191d8",
        "cursor": {
          "ref": "3f1a8b67-7c6d-4214-a896-b65e4eecd32a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "28b6cb30-39ef-4e47-9aaf-b8c5597543c3"
        },
        "item": {
          "id": "a125cff8-bf7e-41ce-8b13-1b3eb00191d8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "06dd7446-6488-4ae5-b960-2c4432b6f6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a31cc62d-e207-4798-86c8-4689e3602abb",
        "cursor": {
          "ref": "93833f1c-e6f5-4f83-94f9-5fee3a1ebb5a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eff47097-4fad-4650-b090-a13eb63ba97c"
        },
        "item": {
          "id": "a31cc62d-e207-4798-86c8-4689e3602abb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "63d456ee-ad97-4dbd-8bfb-21302d339e69",
          "status": "Created",
          "code": 201,
          "responseTime": 2569,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6650587-e435-46c9-9fb4-e2e4442a9a5a",
        "cursor": {
          "ref": "59404cca-193e-470d-87d5-fa5aed3827b3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b6363723-b702-46b7-befc-840b9caeeeb5"
        },
        "item": {
          "id": "e6650587-e435-46c9-9fb4-e2e4442a9a5a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fc0f3187-3901-4203-aca3-32162e7382eb",
          "status": "Created",
          "code": 201,
          "responseTime": 2426,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "199a81c4-7aa6-473f-9ecc-f9d4f4668b5f",
        "cursor": {
          "ref": "0bcdcd10-229e-4687-9f75-390b9851cc1f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c8d415c3-906f-4972-812b-ef9756fa7f44"
        },
        "item": {
          "id": "199a81c4-7aa6-473f-9ecc-f9d4f4668b5f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a43a551c-80ca-45ec-b8d4-045697933fda",
          "status": "Created",
          "code": 201,
          "responseTime": 1981,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae2c3f0-fb37-4d16-b26e-dca408600c98",
        "cursor": {
          "ref": "8dcac2ea-a608-438e-aed6-58cb2ac84041",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "724afa9f-8919-4d44-86ed-74f339c9bee7"
        },
        "item": {
          "id": "aae2c3f0-fb37-4d16-b26e-dca408600c98",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cb49af12-38fc-48ec-8788-946bbdecea97",
          "status": "Created",
          "code": 201,
          "responseTime": 1994,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "036cda48-16a7-47c1-9840-5153e36c417e",
        "cursor": {
          "ref": "f19ba5ea-9ab3-485c-b362-34b8632dffcb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f34f5989-70e8-410a-b0e9-d7000f276572"
        },
        "item": {
          "id": "036cda48-16a7-47c1-9840-5153e36c417e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e588cbef-5d35-4aa4-bdb3-532c4ecd30bd",
          "status": "Created",
          "code": 201,
          "responseTime": 1993,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ed552f-4892-4832-aa22-0f228710317f",
        "cursor": {
          "ref": "e7d94b66-7d8d-4fff-94c9-c92180d846cf",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0dc9c1be-c95e-4860-b1dc-f4408171a295"
        },
        "item": {
          "id": "88ed552f-4892-4832-aa22-0f228710317f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "99b2858b-bb1f-4277-af6d-677e30987c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "39e24918-4387-42f3-a539-58c526e432dd",
        "cursor": {
          "ref": "7d9d5fe1-db3c-4301-9248-4520f937ab1f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ecf5e0d-9a9d-4c92-a779-ec3ceae95070"
        },
        "item": {
          "id": "39e24918-4387-42f3-a539-58c526e432dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c95049a-02ea-42f7-b050-d335c6251419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34303b6e-3746-430f-8fd1-e13c85490ada",
        "cursor": {
          "ref": "e5336129-2ecc-427b-9cdd-4e56c42a209c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80514472-8ad6-499a-b96e-9283c178425e"
        },
        "item": {
          "id": "34303b6e-3746-430f-8fd1-e13c85490ada",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31a55f67-27cc-4072-9036-03bd83906a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f370523-f49b-4fbd-9a42-754ec0b66358",
        "cursor": {
          "ref": "2c8437c5-fb08-4862-8696-7e4e853fd6c0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5bf98567-4452-43eb-b763-4d38e9ee2536"
        },
        "item": {
          "id": "3f370523-f49b-4fbd-9a42-754ec0b66358",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aed2ef8a-272c-4517-9f3e-02ad46c95938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4661c3-5ab7-47e4-96de-3a2399f6a8cf",
        "cursor": {
          "ref": "8b411dee-95c0-4e0a-a7b5-cd5d8a9f78ea",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5bff85c3-11c2-4948-88c2-92c849313555"
        },
        "item": {
          "id": "aa4661c3-5ab7-47e4-96de-3a2399f6a8cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb39eb97-ddbb-4ede-9390-345fa9c0354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06324054-c6bb-4b9f-bf4e-9d8b87c57d10",
        "cursor": {
          "ref": "a1f88fb4-ab65-4c8c-9979-effcef350e76",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ff2d85a5-c9ab-4e1e-9c50-da518245329a"
        },
        "item": {
          "id": "06324054-c6bb-4b9f-bf4e-9d8b87c57d10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "317cbd02-41c9-4e32-8381-6b03e9b626f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d28a5d-289c-489c-8abd-7a5ff42a49ae",
        "cursor": {
          "ref": "3d936534-69d2-4bb4-9ddd-4dfba40d0c0f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dcc909d7-1159-4086-b0b6-469f7356b8df"
        },
        "item": {
          "id": "b3d28a5d-289c-489c-8abd-7a5ff42a49ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b2002118-3ea7-43d4-b180-84c14f51bee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caf2960-9086-4056-9591-c86569b55e9f",
        "cursor": {
          "ref": "08a20865-e2bc-4ee5-85eb-a94303372a1d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fd859c0a-027c-454f-9531-4f943ca09157"
        },
        "item": {
          "id": "9caf2960-9086-4056-9591-c86569b55e9f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8da62029-8a1f-4777-a5af-2335214f980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d9977-e8b9-4da6-b286-413566996083",
        "cursor": {
          "ref": "9d01d179-f9a3-423f-b5a9-2f7a9cfac7fc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "82e6f227-68a0-4e20-b13d-15697a9e6167"
        },
        "item": {
          "id": "678d9977-e8b9-4da6-b286-413566996083",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "658ec896-b400-40f6-b379-a6a2e6197cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b396737-1f08-4e48-b75a-6fd56abad018",
        "cursor": {
          "ref": "1092b1d4-8b3c-4445-8c1e-c0f40d7a572d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "482eeb7a-8555-4ec9-a5a1-a429abaa14dd"
        },
        "item": {
          "id": "5b396737-1f08-4e48-b75a-6fd56abad018",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "efb895dd-8789-4d88-9d69-86cd4fb6ca4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bd4ec2-a5e6-408d-85b8-b944208aef16",
        "cursor": {
          "ref": "f20799e7-e808-4be2-a755-d537e9817e92",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db8c17b0-ede6-4b84-8019-f732e99afe04"
        },
        "item": {
          "id": "f2bd4ec2-a5e6-408d-85b8-b944208aef16",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3a1319ac-11b1-4dc7-b75d-29fcb2817939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb7eb08-f464-4d73-a286-c1f889be32ff",
        "cursor": {
          "ref": "dfc10d0a-060f-428b-9ab9-bb59415e85b4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e878d2ef-565f-4164-b49d-f4a2c80395ea"
        },
        "item": {
          "id": "0fb7eb08-f464-4d73-a286-c1f889be32ff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7a622dcf-d7ce-439f-82c4-f3cefe0b9b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7d7d80-6442-46b2-b3e6-8d88d387dabf",
        "cursor": {
          "ref": "c79c4a06-0abf-480e-84bf-0a45b9945a6d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "26629668-4240-4a78-8bc6-560c709b8f49"
        },
        "item": {
          "id": "fe7d7d80-6442-46b2-b3e6-8d88d387dabf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c6c38da-3708-4716-a257-f75739782733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6577228-32ad-442b-ab42-5174deb28a41",
        "cursor": {
          "ref": "87ba7ec6-f480-4902-a979-46a14b2a5eef",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "101bd474-caec-40b2-8479-8a26ea1c1743"
        },
        "item": {
          "id": "b6577228-32ad-442b-ab42-5174deb28a41",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9c51212-c7e8-4294-b451-68ca1a57c9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5adb6fd-ff7d-4577-8b52-efb995ef3e51",
        "cursor": {
          "ref": "4550f945-8fae-4668-9d9b-766596f32ac2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a05de33a-afbd-4702-847b-ab5a5a23b613"
        },
        "item": {
          "id": "d5adb6fd-ff7d-4577-8b52-efb995ef3e51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1310b9d0-6017-42cb-8c21-7be564194b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b86528-2c59-491d-ad03-bb5826a256e4",
        "cursor": {
          "ref": "76b5c625-2432-46ed-8e4a-70e0ee825098",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "91698903-5fa0-433b-9ab0-57d457eb92b1"
        },
        "item": {
          "id": "92b86528-2c59-491d-ad03-bb5826a256e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d2b4d4b5-53db-425b-b0b4-0a74b6983de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ee7d89-c72d-449a-947a-d8a11eee525d",
        "cursor": {
          "ref": "012d8c4f-cb98-467b-826c-e4f2c04a98cb",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8549809f-522e-4708-9869-6f2a633203c3"
        },
        "item": {
          "id": "23ee7d89-c72d-449a-947a-d8a11eee525d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7666aca5-9d56-4524-94e7-576c15cd83d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16331982-f2f9-4191-bc6f-fdcb453e2f3a",
        "cursor": {
          "ref": "606775e8-1acb-4edb-9eb8-fe7d48aa537b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1229edc9-39f1-4543-ab14-9f4801fa7383"
        },
        "item": {
          "id": "16331982-f2f9-4191-bc6f-fdcb453e2f3a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "27c29bd7-dcfb-4f38-9974-59ad3f60410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d6e470-23f9-49e3-91a6-05f9d7de90af",
        "cursor": {
          "ref": "942c84b5-f6c2-48e2-a35f-6cfc66bc0f2e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a229d7fd-fa2d-4b4c-82e5-288724d22da2"
        },
        "item": {
          "id": "04d6e470-23f9-49e3-91a6-05f9d7de90af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "45eb82cd-d2de-4730-a95a-e95aa0b4471d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e651d-22fa-4757-956b-d4a60710173a",
        "cursor": {
          "ref": "03151615-7d0d-4b7c-9bfc-4c3b0976f6a1",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8cc04dcb-68fa-4992-80ba-3dcd7036918a"
        },
        "item": {
          "id": "a54e651d-22fa-4757-956b-d4a60710173a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2286499d-ed4b-4c17-9308-5de153b11a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd8000e-2b50-4304-82c4-771fdfd5c6dd",
        "cursor": {
          "ref": "944d781f-2f34-4e06-b62d-e059142bb801",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eb057346-8410-4e6d-9b94-0b2d1267f07b"
        },
        "item": {
          "id": "efd8000e-2b50-4304-82c4-771fdfd5c6dd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57c37eff-739a-4323-932a-ebf323584076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3d8c82-4b23-4d5e-8c79-40076fd5563f",
        "cursor": {
          "ref": "18ff44d9-44ea-46b4-9280-f621cc1fe2ef",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "37b59c97-2399-4b34-9372-da67c134a92e"
        },
        "item": {
          "id": "5b3d8c82-4b23-4d5e-8c79-40076fd5563f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bded665a-6bfd-4092-9804-cf9279b01973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de34d968-1695-4585-9976-6c5a7714a3fe",
        "cursor": {
          "ref": "4f3c0536-2faa-4b7f-ab77-5fbaf9dc6779",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c0dbfea9-1c0e-4cd7-9e3d-3434526bf637"
        },
        "item": {
          "id": "de34d968-1695-4585-9976-6c5a7714a3fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7f1954dd-e68f-4f1c-b535-70adad7e58a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca43acb-20de-4ad2-9f83-d93c87d3dcaa",
        "cursor": {
          "ref": "7ce4c0f9-044c-4e20-865f-a1570142d3b4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "834c3938-d1c1-4e7b-91fd-e911a2d239c6"
        },
        "item": {
          "id": "4ca43acb-20de-4ad2-9f83-d93c87d3dcaa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddb29c60-7ad5-40e0-a6a4-8fde9a575c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119c2d30-65f5-4d8d-9567-c82b15ae69aa",
        "cursor": {
          "ref": "1aab6720-cd2e-41b2-aea7-9a9c7b636cd1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3bc1695-f7ae-4bca-aab1-d6b36ef45e6c"
        },
        "item": {
          "id": "119c2d30-65f5-4d8d-9567-c82b15ae69aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34673891-f0ff-47ed-9a9b-f4b8e810013a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd9b94-5627-4c68-ae67-77893b9e470b",
        "cursor": {
          "ref": "57fd5aac-a5f4-4675-8471-cac4194dc09d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a8ae69d6-6c77-4a4c-a0c0-838ec03c3c52"
        },
        "item": {
          "id": "2efd9b94-5627-4c68-ae67-77893b9e470b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07deb3b5-2c75-4813-a9de-fcd10aa15490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a64ad2-d220-4f6f-8af7-c70e0afe19ea",
        "cursor": {
          "ref": "92cfc9b8-f2f2-4a1b-93a3-924968cbe533",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "94cc0321-2715-4734-af7c-a3310cca94dd"
        },
        "item": {
          "id": "94a64ad2-d220-4f6f-8af7-c70e0afe19ea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c369fa2-3ed5-45a2-8aa0-23598c2a3ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c3467b-b6ea-47cf-9f5b-5a860e39f33b",
        "cursor": {
          "ref": "393c543c-47e8-4641-a186-f2ebe4dd903e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d2074f12-c421-496a-a4df-663b799b5184"
        },
        "item": {
          "id": "c4c3467b-b6ea-47cf-9f5b-5a860e39f33b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "babe712d-4732-48a6-8774-08b960059d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc66156-e10c-4382-a199-dc6eee5daf62",
        "cursor": {
          "ref": "f9e8ad1b-b437-415f-82f2-d0883b188ef7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28885f9e-86cb-49cf-8645-214059d1b80f"
        },
        "item": {
          "id": "cfc66156-e10c-4382-a199-dc6eee5daf62",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dc8cd79c-bb33-484b-b308-04386b946ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0b23f8-d97b-40fb-b324-bdb5fea11caf",
        "cursor": {
          "ref": "bc6bbb61-5166-4f72-89fd-d3e307cb1796",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5324640d-bfca-43ec-92cd-90ae19d1a0e2"
        },
        "item": {
          "id": "ed0b23f8-d97b-40fb-b324-bdb5fea11caf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa3a0f4b-5d05-4b76-93c5-9c7f9f34f904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e2641-0a91-491f-a27e-259aa80ac7cd",
        "cursor": {
          "ref": "7b24cf62-908c-466f-9fb2-09224b8bae73",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20fa42f5-9e9c-4a75-b3bf-d8309ee6b39f"
        },
        "item": {
          "id": "907e2641-0a91-491f-a27e-259aa80ac7cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d04e6399-84af-4e45-b209-e64873a001e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b5f719-31b4-42c7-b811-06482636ae94",
        "cursor": {
          "ref": "4ee1d46a-3946-4848-bad0-31b14c13ab36",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dcf7f43f-60ce-43cc-a688-00f86e452a0e"
        },
        "item": {
          "id": "c7b5f719-31b4-42c7-b811-06482636ae94",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a21ce0a-cd44-4573-aa4b-429fdeb258b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778aa3d-da74-4cfa-a76e-d790ca4f416c",
        "cursor": {
          "ref": "aa39c6d5-29ac-4e77-bfcc-3d89c8630447",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5dbe1c9-0186-4283-a07e-e3199ab3f641"
        },
        "item": {
          "id": "1778aa3d-da74-4cfa-a76e-d790ca4f416c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "27154009-fb80-462d-9891-fff9a038831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e2d7b-ba19-4abf-8e69-ec359a2e0dc3",
        "cursor": {
          "ref": "bfffeadb-a8b0-469c-a234-5d8bcb2b8664",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc35245f-e532-4129-b456-980299c45e71"
        },
        "item": {
          "id": "740e2d7b-ba19-4abf-8e69-ec359a2e0dc3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "668c5122-4313-4e63-88be-26aa33ec2caf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab330af2-8f85-498c-be6a-4ecd2193ea23",
        "cursor": {
          "ref": "8b002301-22e2-4362-973b-a53f0a32b90f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5350e629-9cbe-4baa-9c7d-c3d0bfe344eb"
        },
        "item": {
          "id": "ab330af2-8f85-498c-be6a-4ecd2193ea23",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "15889fdb-31ca-4c18-9e2d-1d71ffa4f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a22343-47c9-4f4c-bbda-ef84e6c16ab5",
        "cursor": {
          "ref": "333c70ab-3cf8-41ac-b34d-0da3226ea156",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d66ac3f6-2a6f-4e1f-87c4-16403f3b8e9d"
        },
        "item": {
          "id": "a0a22343-47c9-4f4c-bbda-ef84e6c16ab5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5477a7ef-a1c0-4e4c-b05f-b807c4d1374a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed54263-e455-41e5-86a9-3922a2fbeaf9",
        "cursor": {
          "ref": "3979db1c-2d0a-4870-b792-e5852d3a38de",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a7429880-9e7f-4302-9d7d-919da6452719"
        },
        "item": {
          "id": "3ed54263-e455-41e5-86a9-3922a2fbeaf9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d94045a0-7e6d-4652-9a21-a9ca4cf730f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dbc0dc-e91a-4a34-a004-abd393b9ea08",
        "cursor": {
          "ref": "262ab22e-d30c-44b9-8d0e-174f1267f973",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "76c1b00c-bdb9-415b-ae3e-3b2b8db2b3f2"
        },
        "item": {
          "id": "d9dbc0dc-e91a-4a34-a004-abd393b9ea08",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "abcd8e5b-defe-44e1-9399-4af447beddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1d1f02-2bdd-40b6-b406-aa13de1f2fca",
        "cursor": {
          "ref": "75f45e64-8cf8-4186-84a0-9d4360ae643a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa90ccf2-7779-4520-a7fa-1f6d133e8660"
        },
        "item": {
          "id": "be1d1f02-2bdd-40b6-b406-aa13de1f2fca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3d688abc-9bb7-48be-8ec8-8166c417c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7796b980-7448-41cc-beb9-35ba40c1dbc7",
        "cursor": {
          "ref": "f961401e-2576-44cf-9995-ea7c2409a496",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "96a15235-1595-44c2-a3ab-9488474d0ff7"
        },
        "item": {
          "id": "7796b980-7448-41cc-beb9-35ba40c1dbc7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bdf6f93c-33d4-495b-8c7a-c1bb48ecfaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba3130b-fcf0-4a9b-a5c4-18aebd8d5488",
        "cursor": {
          "ref": "ffc90bca-37b2-4d3e-bc4a-c467585ede5d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "32431ee5-cf8c-4ab7-beac-6a0f32e481d6"
        },
        "item": {
          "id": "eba3130b-fcf0-4a9b-a5c4-18aebd8d5488",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "80e770d6-3855-46d4-9bab-1a8bcdf63542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b839c4a-0213-4469-a09a-78d38d292a82",
        "cursor": {
          "ref": "e677e800-2dc1-4329-8548-ca3f83bc717e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d5844190-4a05-4297-b06e-fd4602cd7c7f"
        },
        "item": {
          "id": "2b839c4a-0213-4469-a09a-78d38d292a82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c47a58bd-4715-44a6-9511-e329f42cbbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c2bf97-449e-44e8-a2ec-6dbfff79283f",
        "cursor": {
          "ref": "be01714e-972b-47da-bb17-7896ee57a35c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e3a4db58-4e95-4d97-9935-e976e3c30cca"
        },
        "item": {
          "id": "14c2bf97-449e-44e8-a2ec-6dbfff79283f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfe1a4cb-717d-49ef-8987-8fed44635e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c9d40e-56fc-45d2-b46f-8d0d24599eb3",
        "cursor": {
          "ref": "d87d324b-0a31-47c8-aa3f-708f7682556f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c70d89e1-b415-4823-b226-6a11c0917f77"
        },
        "item": {
          "id": "63c9d40e-56fc-45d2-b46f-8d0d24599eb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "34deb323-6c11-4406-b3b7-826704b2d470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ece1f-56dc-417f-9a23-c6c883700272",
        "cursor": {
          "ref": "eb38782c-0574-44de-bc0a-74c3a1afc950",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "81f09879-17a5-429c-a2e5-f26116e18db9"
        },
        "item": {
          "id": "665ece1f-56dc-417f-9a23-c6c883700272",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a63820c5-d7e5-4973-81a8-2a222f97db3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c219b76c-c703-4a90-9ebc-7c595a7733f7",
        "cursor": {
          "ref": "f71feb62-f920-40e2-ac56-f28e0856f1ad",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d5424a81-54e4-4fcd-aff9-098204231311"
        },
        "item": {
          "id": "c219b76c-c703-4a90-9ebc-7c595a7733f7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "07d821cc-ab02-4cce-b236-7cd5fb3db495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6266ba1a-0cc3-4004-8351-3fdce5bbe153",
        "cursor": {
          "ref": "6fad530a-da79-488a-b5cc-8bc04c429d0f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "51786590-7a96-4280-b827-be87bb3a93a4"
        },
        "item": {
          "id": "6266ba1a-0cc3-4004-8351-3fdce5bbe153",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ed0313b-ef26-4923-a563-7a131b6885cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c63481-9972-4a2e-9eb1-b0e83f11aaa4",
        "cursor": {
          "ref": "49a3f766-e835-44e8-871e-b119a72b4faa",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "35292f4b-3872-43d2-a20f-0258fb73a1da"
        },
        "item": {
          "id": "92c63481-9972-4a2e-9eb1-b0e83f11aaa4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c2fbe2a-3bb5-4700-95f2-fe05bd579d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba9683f-915d-430f-b578-1c1c15aee0e5",
        "cursor": {
          "ref": "978188a3-aa38-4646-8961-df8532eb3506",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f11de43d-ee23-4fab-bf75-0291332499fc"
        },
        "item": {
          "id": "3ba9683f-915d-430f-b578-1c1c15aee0e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7b252c52-2c8c-4c8d-8804-7a03f7966298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99d73e5-1a61-477a-999a-a2e2808edb85",
        "cursor": {
          "ref": "b1959e46-32aa-4b16-af8c-71452f40c199",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a1eede01-3d9a-4927-bd20-a769c6987fa6"
        },
        "item": {
          "id": "a99d73e5-1a61-477a-999a-a2e2808edb85",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a0acab6-d157-4456-a10d-d6e6201c49b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d091fe-9dc2-49f5-b290-68e21ff5ad97",
        "cursor": {
          "ref": "9bd61ff5-9ec5-4fa3-96b8-51c3f54bba66",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1dc73d8a-e799-48c5-9aec-a5c66f02cd8f"
        },
        "item": {
          "id": "81d091fe-9dc2-49f5-b290-68e21ff5ad97",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4934ff8-4abf-4520-ac3a-86b27f64f763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0065687-2bc5-42e7-bfe4-f0e9d9bbd393",
        "cursor": {
          "ref": "0ef59ab4-311b-4215-bd40-b41a8f41f069",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a7da3eec-2ec2-46cd-ad57-fe86e9512391"
        },
        "item": {
          "id": "a0065687-2bc5-42e7-bfe4-f0e9d9bbd393",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6212433-8533-4773-a950-8f25af35c4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3aa2be-bd09-413c-b91b-598ae646ac5f",
        "cursor": {
          "ref": "3acab49d-810f-4a2e-bfb7-e2ab11277903",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c27838b8-e35c-4277-8c1e-ebe389ef7a24"
        },
        "item": {
          "id": "da3aa2be-bd09-413c-b91b-598ae646ac5f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "066d6292-df8b-456e-9375-89cdfb1295e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bbbe63-17b7-407b-98b2-eec1e014e213",
        "cursor": {
          "ref": "9a992b3d-3097-4509-9089-8dc0ec345fab",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "07e54207-1e9b-40b6-90ce-ac5e0aafc1a9"
        },
        "item": {
          "id": "f9bbbe63-17b7-407b-98b2-eec1e014e213",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd70ab40-9b69-4267-9482-9e9388b5485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7526d6f8-77bc-4705-9b13-3b356221359d",
        "cursor": {
          "ref": "00eeff71-3332-4b07-930b-538b08f37912",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f830e3d9-00d9-400a-9da8-8f7967b932a5"
        },
        "item": {
          "id": "7526d6f8-77bc-4705-9b13-3b356221359d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a920f6b-a1b9-43fb-b7d6-f3e4452b78b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84809ad-3a4f-455b-97b5-fd9169af13f6",
        "cursor": {
          "ref": "ea55ce4d-a79f-4e7e-831a-7bf098df4233",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cadab2d8-2d04-401b-8579-8dadc284a21e"
        },
        "item": {
          "id": "c84809ad-3a4f-455b-97b5-fd9169af13f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4e475f5-7078-4ea9-89b0-7acb09cef8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d66b12-e43b-4052-aa9e-485083b3f21b",
        "cursor": {
          "ref": "d58e3be8-e8e8-4d4e-aeba-95e6488dc786",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a3330157-e7ab-436d-9e7c-4e07a6821874"
        },
        "item": {
          "id": "27d66b12-e43b-4052-aa9e-485083b3f21b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "47225b07-46d1-4045-84d6-7055ecff450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb337618-ee04-4569-9c1f-114fe4245813",
        "cursor": {
          "ref": "17be743c-8387-4e84-a564-b64cf8185395",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b908c8b4-9bc1-469c-b574-facf0b9ff12b"
        },
        "item": {
          "id": "eb337618-ee04-4569-9c1f-114fe4245813",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c47c7a92-efa1-4d34-92ec-ece1966bdf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa81723-9ff3-46ba-9b77-0a200c7338ed",
        "cursor": {
          "ref": "47f12c92-d51b-4c69-85a1-033c894f58e9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e7d55663-5529-4051-9c4e-4aac57c0fdbf"
        },
        "item": {
          "id": "3aa81723-9ff3-46ba-9b77-0a200c7338ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ef59f4ce-054f-41c8-9855-97d4017d7493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f0386-0353-47ac-9314-87abec8e7fb9",
        "cursor": {
          "ref": "32a758b6-4d30-4cf7-b14d-8a8b691e1887",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "be7d7c56-6748-47f6-ad9e-60453fbf9678"
        },
        "item": {
          "id": "7d2f0386-0353-47ac-9314-87abec8e7fb9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b851d3bf-dbe1-4eca-bcde-6b1a27e5e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53ffe0-09cd-4508-a74b-c539b0ca234e",
        "cursor": {
          "ref": "40fb365f-5049-43f8-bdeb-f963ed184726",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "058fae8c-119b-4f7b-aca3-38f8aa74d79f"
        },
        "item": {
          "id": "0e53ffe0-09cd-4508-a74b-c539b0ca234e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e32c320-3da8-4d29-bce7-ff8936de2f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b16b0c-6379-4d14-955b-abdca435c54d",
        "cursor": {
          "ref": "b15f4113-cdbb-47a8-bbbb-23bdff7cebc2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "270c770d-ad6f-4f34-86ea-c156abd53640"
        },
        "item": {
          "id": "e5b16b0c-6379-4d14-955b-abdca435c54d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a050e2a-8bf7-47ae-b7b1-e81689040603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e005b04-6635-4963-a316-c91a7ccdcfd4",
        "cursor": {
          "ref": "b1521cb5-1a8a-4c98-8018-9e5a4e28e26d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b3df96f-f2e3-41f2-b282-28ba99239ca8"
        },
        "item": {
          "id": "7e005b04-6635-4963-a316-c91a7ccdcfd4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af6ef764-5834-44d7-924f-bf99e33459a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c99ce72-d062-48a7-a72b-1beba6f6206a",
        "cursor": {
          "ref": "aeca839c-aacd-4fc1-863f-36e598834d29",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f811090f-1f83-40f1-8650-b03b3ae7f904"
        },
        "item": {
          "id": "1c99ce72-d062-48a7-a72b-1beba6f6206a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecbdb880-c33e-4d22-ac13-23f347389888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf524d9-1507-431c-8335-cc14f835e195",
        "cursor": {
          "ref": "6ca18c0a-6344-4b53-819a-3cceb2c99e27",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "891a43b5-ae55-4593-8756-1f37808317b4"
        },
        "item": {
          "id": "7bf524d9-1507-431c-8335-cc14f835e195",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "965fb6a4-f1f2-4f49-90fa-b8eb878c14ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094ad7c0-f83e-4058-be2a-91b36378bd28",
        "cursor": {
          "ref": "f69123c3-d22e-4a38-8c8e-519991888cda",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d2b6f445-b668-4edf-b18e-f294eeb316f3"
        },
        "item": {
          "id": "094ad7c0-f83e-4058-be2a-91b36378bd28",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f746a478-1104-41f7-a226-ccc0ff2793f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c34c192-d1d4-4e14-93b7-67419607132e",
        "cursor": {
          "ref": "c736aa74-64cb-4964-81b7-a24e151723dc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6e550a06-34db-4447-a8be-3fe697deec03"
        },
        "item": {
          "id": "4c34c192-d1d4-4e14-93b7-67419607132e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d8e33451-b5d4-4be9-adf8-4c989dd44a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b5b408-06f9-4c06-be53-a59a2bb2f876",
        "cursor": {
          "ref": "4fa5d2bf-745f-4b42-ac25-55d2d931eefa",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1942a7d4-4d39-4356-9201-29bb9e046c83"
        },
        "item": {
          "id": "82b5b408-06f9-4c06-be53-a59a2bb2f876",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d7019ec8-8a46-421c-8fd7-798daa4d109a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de60405-6ec3-4561-8a04-8ce8711a5e67",
        "cursor": {
          "ref": "a90325d8-8c17-4a78-9c92-f0778c69db5c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5b336a55-3d68-4137-8eb4-5f310ac344a9"
        },
        "item": {
          "id": "4de60405-6ec3-4561-8a04-8ce8711a5e67",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "73355444-c204-4a8e-86bf-6f869fb65263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3275ee-f16c-42ae-bbe5-cce59b791e56",
        "cursor": {
          "ref": "41eb31ff-8cc8-44bb-aa9f-e74b1c51e47b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1a7f68ea-5a5c-4455-8abc-fc3a77447874"
        },
        "item": {
          "id": "ef3275ee-f16c-42ae-bbe5-cce59b791e56",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0fc5b516-2328-482e-92b1-930c3c25a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4bd6dd-7dac-4950-a011-5eedf4e7d624",
        "cursor": {
          "ref": "e9b3c8a1-2c24-41f5-a0c2-8491baa82e8d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0dc6515c-8233-4020-a38a-61ef77270b91"
        },
        "item": {
          "id": "0c4bd6dd-7dac-4950-a011-5eedf4e7d624",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "73930236-069a-4329-88d2-cd2491f7a318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f55260-916b-40f7-9752-26cdbc8e5d3a",
        "cursor": {
          "ref": "1149342b-fbbc-4a6f-8690-ee6a2874be9a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2e9a861c-e57b-4a86-9818-aaac55033f2b"
        },
        "item": {
          "id": "f8f55260-916b-40f7-9752-26cdbc8e5d3a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f7e3ef7f-4b81-4cfb-972c-72971239fa39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0788a04d-a7b4-450b-83f1-3fe4fcc8c2ab",
        "cursor": {
          "ref": "a455e20b-387b-4e2e-b471-e59557018719",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1abfd5e-d2a8-4c2c-b7b3-76079d54f690"
        },
        "item": {
          "id": "0788a04d-a7b4-450b-83f1-3fe4fcc8c2ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "adb02117-d86c-4ef7-b0ba-5d7747164487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84606d5-1321-466e-a850-e07121383630",
        "cursor": {
          "ref": "06b7d48f-ff16-4938-99fc-b07165301949",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c51d568d-44a8-4872-9451-d7bd685d9f70"
        },
        "item": {
          "id": "c84606d5-1321-466e-a850-e07121383630",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea35ace6-a8d2-4991-a56c-d5f880c1bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d416382-ad3e-4e9f-be3d-7b2a73928dbe",
        "cursor": {
          "ref": "1907b101-0b5a-4685-9c5c-73203063b8b0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "147befb8-d4b1-4292-b807-3f1487820e4f"
        },
        "item": {
          "id": "8d416382-ad3e-4e9f-be3d-7b2a73928dbe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "42eae2c7-3ae5-43da-9f53-682bc8688adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a6bb3b-b154-4e87-b54a-9972f5d58763",
        "cursor": {
          "ref": "166f5b80-6206-40bb-bdef-d2629e561ec1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "654b42e4-d8ef-41b4-9586-1385c2cd6de0"
        },
        "item": {
          "id": "75a6bb3b-b154-4e87-b54a-9972f5d58763",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9fca1c9-bd06-490e-a272-e19b6ed2edc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7dee3b-54a9-4332-9090-ea9f52c6ed5c",
        "cursor": {
          "ref": "ef9d0183-e35a-47cd-b10f-0656a701da52",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a7437236-d9d3-4dd2-bfd2-097efd25bce6"
        },
        "item": {
          "id": "7e7dee3b-54a9-4332-9090-ea9f52c6ed5c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13698eed-b1d6-429b-9759-cddba93e305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae859592-af64-4170-bdb7-02ea703bc739",
        "cursor": {
          "ref": "fec2b85d-7e24-42ad-975c-f02fad271e3a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f7fbcbb5-396b-4fd7-ba6f-a273c9085088"
        },
        "item": {
          "id": "ae859592-af64-4170-bdb7-02ea703bc739",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2bc423fe-2b11-4aea-9f03-469ba04a4d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc826a2-e329-4849-91a6-5a989a36de97",
        "cursor": {
          "ref": "44939102-29e7-491b-9a5a-37f273045799",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "76da547f-a340-463f-a17c-bd0aa478e72b"
        },
        "item": {
          "id": "8cc826a2-e329-4849-91a6-5a989a36de97",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dc2c75d8-9f09-442b-a2bd-9fc76d9c924c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ace298-fc6a-4cdb-b052-924ab41f1e4c",
        "cursor": {
          "ref": "b946c8d6-b74d-4225-a0ec-ad0358a8db00",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d82ba943-3ddf-458b-be17-b2b01ce01b3b"
        },
        "item": {
          "id": "50ace298-fc6a-4cdb-b052-924ab41f1e4c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8dfbe1a3-c0c8-44d2-a21a-9528e8f0fa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234a10c-575c-48cd-8dec-33a0f781a25b",
        "cursor": {
          "ref": "4fba9f59-505b-4917-b10c-5d21a3e756c6",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4cc3910f-d6f1-400f-b086-e6a987533ae2"
        },
        "item": {
          "id": "2234a10c-575c-48cd-8dec-33a0f781a25b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dcb4a6e4-7707-4a5e-97c7-34af4f3a6876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6bfee4-a83e-4753-b55d-769af01a7670",
        "cursor": {
          "ref": "79d0b797-990e-4f64-ad1c-612099697451",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6598cff9-9067-4415-ae21-5045248390f5"
        },
        "item": {
          "id": "1e6bfee4-a83e-4753-b55d-769af01a7670",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9d67ba5-3234-4c09-811f-80b8279da3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e284e-de66-487c-a9c8-743ca6f8d927",
        "cursor": {
          "ref": "c22a422a-0e82-423c-93ca-19e6bf3336ab",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8621e9ba-94ae-4eb8-9d38-d427bde3d744"
        },
        "item": {
          "id": "962e284e-de66-487c-a9c8-743ca6f8d927",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0759d3c8-0fad-4d38-a858-0d23a5acd048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed686f6d-8061-4bcc-a814-c4bb596bb60b",
        "cursor": {
          "ref": "04a4fb7c-611e-45c2-8261-0b4eab9c3f44",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b4145c29-c357-4860-b007-e73722d74c22"
        },
        "item": {
          "id": "ed686f6d-8061-4bcc-a814-c4bb596bb60b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e573217d-a888-4997-945f-1c7166488066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887bb53a-bca9-477f-8fa7-00353125589c",
        "cursor": {
          "ref": "c8e84961-8832-47f0-8523-d7a52126ad36",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "43b79898-3a07-405b-95ab-15c3d34759bb"
        },
        "item": {
          "id": "887bb53a-bca9-477f-8fa7-00353125589c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86910202-6b76-4e9e-b455-16bf56bad64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bff6f25-a07f-45ce-8997-efdf88d541ae",
        "cursor": {
          "ref": "850c52eb-849a-40b2-9f5d-91173b163540",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71e23f16-edf9-482c-9284-881a173c01d8"
        },
        "item": {
          "id": "6bff6f25-a07f-45ce-8997-efdf88d541ae",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c9de11c8-1b70-404c-b633-735155ed013c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3952cdf0-b425-45a6-b9d8-d7f3e7db74a4",
        "cursor": {
          "ref": "2d76271b-004c-4a59-a93f-6b6a3056fafc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c8009079-5bf7-44f6-8572-ca0b26033631"
        },
        "item": {
          "id": "3952cdf0-b425-45a6-b9d8-d7f3e7db74a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46cd24fc-d8ce-4fc3-9342-242bb081151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de02d70-4306-4ffb-803c-3d73c8c0b729",
        "cursor": {
          "ref": "f2fcaaac-6ba1-4b40-8cc2-d309f2af6bc0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31f836e1-0dcb-441b-8672-3aac94f7032f"
        },
        "item": {
          "id": "4de02d70-4306-4ffb-803c-3d73c8c0b729",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d670450d-8f37-4ca1-860e-983d0a885109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773015b7-5a1c-4de8-8b19-60f14feb90e5",
        "cursor": {
          "ref": "579c3658-4804-4700-a5e5-4d87e2f91158",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3e50aa05-c9d4-4b06-918a-42c21fbd54b5"
        },
        "item": {
          "id": "773015b7-5a1c-4de8-8b19-60f14feb90e5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0dfd98b7-7c9c-4b4f-84e2-96ee0756f600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694206ac-8ab1-407e-9774-f0e778610b1b",
        "cursor": {
          "ref": "40dd4cae-91c2-428f-bb59-7d50eb7f5090",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5777ecc1-840b-49d0-9a76-0c5ba94c36f5"
        },
        "item": {
          "id": "694206ac-8ab1-407e-9774-f0e778610b1b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ce3beb3-e65f-44d2-841e-8c78484b84dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e0279d-b38c-400a-85dc-787988ad7132",
        "cursor": {
          "ref": "4107231f-ef3c-4350-aca2-17d8bb94da8a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e965aed8-119b-4f3b-b170-a9062710c96e"
        },
        "item": {
          "id": "b2e0279d-b38c-400a-85dc-787988ad7132",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa652a79-9f04-406f-8e9c-0ea154cee91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3bea27-bf41-4055-8959-c5e64e1682a0",
        "cursor": {
          "ref": "8e16201f-7e3f-4e39-9c84-603abdeabd30",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0bc3f449-fb1d-4343-9145-db83126f3b0d"
        },
        "item": {
          "id": "7b3bea27-bf41-4055-8959-c5e64e1682a0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3ede78dc-768f-45e6-834d-69075d9bdc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cefab1-1f60-49f7-a9f2-59a8eeb66d2d",
        "cursor": {
          "ref": "8490b73e-b1f4-488d-bd2d-a30d4f4af9de",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a645fe32-6af1-4e6c-aa49-6fdd7ca30cbd"
        },
        "item": {
          "id": "80cefab1-1f60-49f7-a9f2-59a8eeb66d2d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dccd31e2-a38e-41aa-84a1-ddc5bed82c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8806e7-9902-4669-97f6-1b8e863e5998",
        "cursor": {
          "ref": "963e2109-d220-49c1-8ec8-05a0c1c3e6d4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ae5cc577-226b-4adc-b130-b686d4502fe2"
        },
        "item": {
          "id": "ca8806e7-9902-4669-97f6-1b8e863e5998",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5ba019d4-1a98-4d4c-8784-3e30e8d2ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74f1368-b248-4490-bfb6-6d303ab26386",
        "cursor": {
          "ref": "dbb9d54e-b59a-4cd4-8c4a-621c1a38c593",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "87fb568d-d138-4893-b906-57417c5dd8c6"
        },
        "item": {
          "id": "c74f1368-b248-4490-bfb6-6d303ab26386",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3cad0317-a93a-4a5a-9aec-89aa51c77a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50101caa-87e2-491e-8974-473db64c3388",
        "cursor": {
          "ref": "f86c5230-7156-4358-bcb5-3993187958f0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "32e28393-958a-4a88-8c2e-d07897aa3b21"
        },
        "item": {
          "id": "50101caa-87e2-491e-8974-473db64c3388",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5dc3f776-8a57-46a7-8e07-86465ecef6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1bf0a8-ddd2-41d9-94a5-35435ced7ed3",
        "cursor": {
          "ref": "1f59a3dd-b26f-4920-9683-e59fae6481ab",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "47a9bb78-3477-4c12-8a11-27abd481023a"
        },
        "item": {
          "id": "4f1bf0a8-ddd2-41d9-94a5-35435ced7ed3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a438460b-e880-4143-84cf-4a2c0556279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f94284-a6bb-403f-a57a-eabccb1cb434",
        "cursor": {
          "ref": "64bbb825-85f2-4a4f-a5cc-028035e81f3a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "18e3dc95-581c-448a-b840-572b63fd6bb8"
        },
        "item": {
          "id": "b1f94284-a6bb-403f-a57a-eabccb1cb434",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9bea96d7-1713-4104-8d4f-0cccc7d4dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd047a-5494-4dc2-a0cb-6ec4718675ad",
        "cursor": {
          "ref": "f75f3a35-c820-444f-bac3-14098cf14a8e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fed73db5-3560-4d4b-88f9-3a3bbda7dc02"
        },
        "item": {
          "id": "0ebd047a-5494-4dc2-a0cb-6ec4718675ad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "be2650e3-08c7-4b12-ad77-5124aa5ef1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131cdc92-76d5-4a0d-8329-5a4c3b258268",
        "cursor": {
          "ref": "c0be43f4-b4db-47c4-b552-e7c16e40545f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "91d6b7b1-20d1-4941-b3fa-8cfa56db08a7"
        },
        "item": {
          "id": "131cdc92-76d5-4a0d-8329-5a4c3b258268",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "675bd2e9-3d6e-460a-bd67-fe1efeda79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8056ba7f-3eaf-4a22-acb6-c7de17a20aa1",
        "cursor": {
          "ref": "63572d8e-2457-429f-917d-03188da8741a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f47d473a-a1e7-410c-9888-03b06f14ad82"
        },
        "item": {
          "id": "8056ba7f-3eaf-4a22-acb6-c7de17a20aa1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40ddef59-8a1b-4031-bdd4-20f6c7b6d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64912406-9824-49ae-8931-50fcffbbf89d",
        "cursor": {
          "ref": "0e98f4cd-23f5-4fdb-931b-970a3692cc3c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7c48182c-067b-40ac-91d4-e44ab54bbbc5"
        },
        "item": {
          "id": "64912406-9824-49ae-8931-50fcffbbf89d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e7c245e3-9548-4f63-bf2a-2f72e7cd91a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb65d116-5b4f-44b0-8cae-ec4dfc807405",
        "cursor": {
          "ref": "551d4ca9-5d66-40ea-ab8f-64fee16dc2c2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ed4bfc9a-d4a0-4cbc-b0b7-f8a429f56c7a"
        },
        "item": {
          "id": "cb65d116-5b4f-44b0-8cae-ec4dfc807405",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f6697874-29cf-4b95-82fd-b69ec2735e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0afb20-77a2-42fb-97a9-2db729adec68",
        "cursor": {
          "ref": "63f17aea-4d23-461b-ab24-c8a968083b91",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2965df5e-559f-408c-8a88-53c90aed0520"
        },
        "item": {
          "id": "4b0afb20-77a2-42fb-97a9-2db729adec68",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68dfb962-f836-4ed4-99c4-597b8db3dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f17dfe-6c74-4d54-a6c4-821ed69f89ce",
        "cursor": {
          "ref": "a78ba0e3-e6dd-409f-a255-5aab813c4d85",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3ea5a4fe-0a0d-412c-a9ef-e517faea8586"
        },
        "item": {
          "id": "61f17dfe-6c74-4d54-a6c4-821ed69f89ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de5a01e1-77c9-4fb8-8e6d-4c48ba485625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f54ca-6f92-4174-bd3a-93e5fcaa5da0",
        "cursor": {
          "ref": "614ffaaa-350c-441f-a568-c9101158b675",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "40f84dc1-82a3-481a-8939-aff84f1f3a58"
        },
        "item": {
          "id": "707f54ca-6f92-4174-bd3a-93e5fcaa5da0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5595c6b3-c70d-44a4-93ba-b8cb97aef9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0354730-b92a-451c-8ac3-a0de45b126a2",
        "cursor": {
          "ref": "d3c3aa0e-8535-4068-b2a3-500969ea8677",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6d23600e-bdea-4d36-b9b4-556e83e0b0c8"
        },
        "item": {
          "id": "c0354730-b92a-451c-8ac3-a0de45b126a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "81b19321-1ea3-47a7-a63f-abb9ff1b17ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47897f28-f31b-498d-9613-90f19345ecdd",
        "cursor": {
          "ref": "805578c7-a866-4017-99ca-c62cc44d2ec1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2ebe9811-5d0f-42a9-80b8-e45058c939b0"
        },
        "item": {
          "id": "47897f28-f31b-498d-9613-90f19345ecdd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0dfad0af-b6f1-42c1-af07-345465ce3ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707b3f53-4915-45cd-b7f7-422f9b20a569",
        "cursor": {
          "ref": "5ad57c4e-78f1-45ef-8eed-2744f96e8399",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "62ca58db-653d-417a-a702-2fbb86f768db"
        },
        "item": {
          "id": "707b3f53-4915-45cd-b7f7-422f9b20a569",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c685e225-a086-487f-8332-1d60405f1d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e1a6b5-e4cb-48b1-9b11-6233fe725390",
        "cursor": {
          "ref": "53867c05-8e4f-4e86-8459-0182f6659de6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5abba3ab-a6de-4a3f-95f5-398d85f36acb"
        },
        "item": {
          "id": "b3e1a6b5-e4cb-48b1-9b11-6233fe725390",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "747a5da6-297f-4581-a7cf-5d5c4fee355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222abd54-4502-450e-bf1c-eabe6f8f5b10",
        "cursor": {
          "ref": "66facf74-6667-4b11-beb6-6268925c09d0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "40759e23-0e3f-4ac6-a55f-13e544f3d565"
        },
        "item": {
          "id": "222abd54-4502-450e-bf1c-eabe6f8f5b10",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "432f257d-322b-4ea1-9ec9-2234c0a070b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f29a1f-db61-4537-85bc-3d81432f3e0c",
        "cursor": {
          "ref": "19a7337f-8b67-4e63-9e35-073299da1155",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f79d955-04c2-400d-a1c6-eb5f179c0f99"
        },
        "item": {
          "id": "f9f29a1f-db61-4537-85bc-3d81432f3e0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fefc2ff9-756c-4cd0-8992-a47564f49af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8e8908-fca6-4bd5-be82-77466dc7088f",
        "cursor": {
          "ref": "c40608f4-49a8-42e3-ab38-5605b86f0f7e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0a0ec095-d32d-44de-8c49-fb4eb4a53393"
        },
        "item": {
          "id": "7c8e8908-fca6-4bd5-be82-77466dc7088f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0bf77f9e-4d2c-4413-ab69-4cbd861a621e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb1968-eb65-4280-95da-dead1c799921",
        "cursor": {
          "ref": "3be3ca2e-65b7-43c9-bf14-1a947698290d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b17206e-4ebf-47a7-8b77-6c423f6c81b9"
        },
        "item": {
          "id": "78cb1968-eb65-4280-95da-dead1c799921",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a4c6e4ba-e2aa-4f84-bae0-fd8232e45f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e1565e-fad8-4f79-abdb-8bb75f328b29",
        "cursor": {
          "ref": "a29e8d1b-a24a-44cc-adc3-7ac2a6a147e0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "83db10b1-001d-44c3-937c-9bec89f373c0"
        },
        "item": {
          "id": "15e1565e-fad8-4f79-abdb-8bb75f328b29",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2bce6c9f-3baa-48e7-9518-230b25d323dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20529d-9d84-404c-a968-b8d43fbdc49d",
        "cursor": {
          "ref": "4f0149ae-6f26-4453-95b3-10231c8359df",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2227b9f1-2d98-4876-86c7-ad73842407bf"
        },
        "item": {
          "id": "5f20529d-9d84-404c-a968-b8d43fbdc49d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f56076ad-98c9-4d81-93ca-6f554f15fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b62f3-0b62-4bd5-83c0-874e9fb2b186",
        "cursor": {
          "ref": "58eee4f2-c0e9-4f91-a2bc-bb08ecf0da13",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5bd88066-c0a0-428b-9f1f-27dc07bbff84"
        },
        "item": {
          "id": "ab3b62f3-0b62-4bd5-83c0-874e9fb2b186",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73074d2b-f546-4161-b1d8-b854cb385c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668c091c-1586-4b95-86f6-34e9063cf65b",
        "cursor": {
          "ref": "a6d5f5fc-3d56-4939-9699-3f8dcd19af86",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b82fcc43-b4fa-4abf-bc19-56d2b22f2aba"
        },
        "item": {
          "id": "668c091c-1586-4b95-86f6-34e9063cf65b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5299d00e-bd1d-4c9d-bc25-05db578d11d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6c5dc-5ca4-4115-97f4-486f7ff9b3c2",
        "cursor": {
          "ref": "bcdee56b-11eb-437d-8ec8-e8bde2ed2e3b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "037f242e-66af-40a1-a1a6-fe34c7cf643c"
        },
        "item": {
          "id": "38f6c5dc-5ca4-4115-97f4-486f7ff9b3c2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e908ec94-41af-4d9a-9425-eece40e9ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db300db9-a0ce-4561-90d5-11789a99448d",
        "cursor": {
          "ref": "4bc0fedc-1bf8-48fd-b322-8f7644e93854",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9a33d4a8-1f26-4edf-87b9-008f83da1dff"
        },
        "item": {
          "id": "db300db9-a0ce-4561-90d5-11789a99448d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f1a21410-5820-4941-96df-7cdc0556d3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f2cee-0516-4a4f-9b08-5343e11f4444",
        "cursor": {
          "ref": "ef552afe-7890-4de8-b7d0-e276a215ea88",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4bfb94cc-578b-4c94-93d2-fda17e1c03e5"
        },
        "item": {
          "id": "fa0f2cee-0516-4a4f-9b08-5343e11f4444",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af89bd51-a80d-44a9-8172-bcf177ee344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da9ef5-37e6-4441-8c8a-dffc2181dad7",
        "cursor": {
          "ref": "52180005-6fa2-4a5b-a1b5-bea79176a486",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1b9e2fe5-b722-4afe-b29b-d3fc2095fb0e"
        },
        "item": {
          "id": "44da9ef5-37e6-4441-8c8a-dffc2181dad7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f193620c-257d-4369-b4dd-cccb30de06d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286aba1-0fc8-4aa8-b119-925756eca57f",
        "cursor": {
          "ref": "6e5b1476-6797-48a4-bedd-aade3b4d3561",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f33ef1e-1077-42da-80fb-1e2d365367b4"
        },
        "item": {
          "id": "3286aba1-0fc8-4aa8-b119-925756eca57f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "aeef8e3d-623f-41d3-8611-78c031591905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233aef0-d409-4a54-a5fa-410cbf8ef670",
        "cursor": {
          "ref": "99fb2f4a-13be-4163-ae91-e362ac09a11a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b2dc9725-a013-4d5f-9ffc-1e65af8ca89c"
        },
        "item": {
          "id": "4233aef0-d409-4a54-a5fa-410cbf8ef670",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0cfe9de0-18ce-45b8-9b89-ce4e37e1f44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db84780-4844-4f3b-9016-1ac7f66124f8",
        "cursor": {
          "ref": "cd916224-e678-4ee2-93a0-539bf10e61b3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2217ac96-1bfd-456c-bd62-d84572287380"
        },
        "item": {
          "id": "8db84780-4844-4f3b-9016-1ac7f66124f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b153538e-0806-42a8-bdd5-c89beaff339a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c485d2dc-a8a4-4c2c-897d-189534f9e3ff",
        "cursor": {
          "ref": "5fcd2504-d872-43c9-aabb-ee3b0dbe01f5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "276324c9-e4ca-44eb-a075-5590c1b3374f"
        },
        "item": {
          "id": "c485d2dc-a8a4-4c2c-897d-189534f9e3ff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "17c06383-97b7-4a76-81dd-1f7974751ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e65438-fd04-4d19-8b61-489e1870b0bc",
        "cursor": {
          "ref": "e9fcd6ac-3fb9-49fc-858a-e12fed3ffcee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2e3220bb-d8fc-4754-b932-8d4abf567b01"
        },
        "item": {
          "id": "75e65438-fd04-4d19-8b61-489e1870b0bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "34e0ca8e-2a46-4134-b380-6764f92d328d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d7dedc-122e-4e04-a5fc-5e5debbc7830",
        "cursor": {
          "ref": "bf138391-9c39-444b-bda2-0bf81378e1f1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9d38171c-8129-46f4-b2ac-6c4e13ee82da"
        },
        "item": {
          "id": "87d7dedc-122e-4e04-a5fc-5e5debbc7830",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f1bb4e61-eb50-4350-bfbe-ea207a18c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c59c1e-129d-46f9-8b19-1e492fc73e2e",
        "cursor": {
          "ref": "94e591a5-181e-4ded-8eb2-8832c3799033",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "025a6549-ba26-436d-8818-c215de784aea"
        },
        "item": {
          "id": "34c59c1e-129d-46f9-8b19-1e492fc73e2e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4d9d76aa-8815-4301-ad27-ab01cf34d012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3596f8-20eb-4810-96de-4a3d45326e84",
        "cursor": {
          "ref": "8d924580-f546-4249-a9f5-e9ee74e72cc7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d84edd5e-2cf8-4b6e-92ba-69413cc44283"
        },
        "item": {
          "id": "fc3596f8-20eb-4810-96de-4a3d45326e84",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "074542c5-5960-47d4-9f3a-862248fbba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f13f7e8-0328-491d-a1df-b1decf74d770",
        "cursor": {
          "ref": "65fdd1a4-49aa-4e63-9d43-a7343238873b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "16ea6086-d870-4ace-8680-03cf748f4629"
        },
        "item": {
          "id": "0f13f7e8-0328-491d-a1df-b1decf74d770",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "95e05ee0-896d-44a2-97ca-85006402b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c084a699-7843-40a4-a9be-7d78aecf345d",
        "cursor": {
          "ref": "59fb97fc-86ea-4f99-a36f-aadefd6d5206",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2574d73-1320-46e3-9374-c2f5c6655d83"
        },
        "item": {
          "id": "c084a699-7843-40a4-a9be-7d78aecf345d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5d977f2-f36d-40fe-9219-213eee2644ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17d2750-0efd-4acb-8cfa-a1eb74819400",
        "cursor": {
          "ref": "c3694126-5c5d-4d9e-b0ad-96e2276095ad",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7251f8ac-e436-46f6-8475-b6bcfec953e6"
        },
        "item": {
          "id": "e17d2750-0efd-4acb-8cfa-a1eb74819400",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "07f03484-240a-48c2-86c6-dd224bb8bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61333e05-1ea4-4a12-8d86-6e9ac6807ce0",
        "cursor": {
          "ref": "82a3725d-be54-4fdf-8d8f-b5370273c73f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "acea6ef9-9082-4c79-a40d-314f25eb811f"
        },
        "item": {
          "id": "61333e05-1ea4-4a12-8d86-6e9ac6807ce0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0ef392da-25b2-4e4c-a204-fa42aa64a6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311fc3d0-5d89-4ade-8045-0cddaf3f9c38",
        "cursor": {
          "ref": "84052aa0-baa4-4dce-84fe-62bb27758a66",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "444d9dc3-de06-44d6-ad31-2ef790aa0f41"
        },
        "item": {
          "id": "311fc3d0-5d89-4ade-8045-0cddaf3f9c38",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6eaaf719-04ef-4393-bdb2-93fb860fa3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ff335f-1e09-4aec-927e-00d4dc7faf5e",
        "cursor": {
          "ref": "72a00502-55a4-43ed-8b31-953b3afd19f2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ee499f30-d404-4c8c-a418-c8353dd58b76"
        },
        "item": {
          "id": "90ff335f-1e09-4aec-927e-00d4dc7faf5e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0a5655b2-bec2-4def-9965-d82bee778e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ce272-a1db-4a0c-a975-7f5eaed62c0c",
        "cursor": {
          "ref": "f091f41f-0d1c-47d6-9f78-30685a928d63",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "478276b1-6d04-4c95-981b-86fdd915a3fc"
        },
        "item": {
          "id": "5f3ce272-a1db-4a0c-a975-7f5eaed62c0c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2ed0cc4d-4c18-4bfe-b95a-c58b1239ed6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c243fd3-ffd1-4475-8bc3-394bc30c8adc",
        "cursor": {
          "ref": "63d2a233-eaab-42c1-bfc6-68538d79f7fe",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "09819057-a57c-4561-b571-51a7f759d9fc"
        },
        "item": {
          "id": "3c243fd3-ffd1-4475-8bc3-394bc30c8adc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "32c5ad66-e2ab-4663-9e59-9d3a48420b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f9944-afcf-42cd-9c04-397e11de8cba",
        "cursor": {
          "ref": "45f6c7e7-9554-4b50-b5c3-c5814aedfa5c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd542ccd-93b0-40ed-8769-b1aa1b1e41ee"
        },
        "item": {
          "id": "2d7f9944-afcf-42cd-9c04-397e11de8cba",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e85691e9-fbc7-46fa-aa66-7e4885c409ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f1f555-9838-4d4e-8ad5-a092b773120c",
        "cursor": {
          "ref": "1b90acdf-0c6a-4390-bdd9-c13cfc738a08",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f1d376a-9e54-4775-abe1-46066470fe07"
        },
        "item": {
          "id": "53f1f555-9838-4d4e-8ad5-a092b773120c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5f57cec1-8a3c-4417-8415-af395f9ba629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de71f7e5-5e68-4c00-89c0-a7d47f1b5729",
        "cursor": {
          "ref": "8d49d481-1257-404a-9065-d420e9a10ecb",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5b741d8d-a487-4165-a01d-b3af4ee50a3e"
        },
        "item": {
          "id": "de71f7e5-5e68-4c00-89c0-a7d47f1b5729",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "317e2f74-42f4-410a-bb8b-766915ab33ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f768db-722a-4670-a0d5-38cbfc356342",
        "cursor": {
          "ref": "1d678192-ea23-4b80-9dd1-78c04b2a4316",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "53b3b8f1-16c7-4874-bd44-94f14999d1b8"
        },
        "item": {
          "id": "d2f768db-722a-4670-a0d5-38cbfc356342",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "56d43cba-6fe5-4a54-aa86-4877bc711ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a844b566-f9c4-4c11-8587-213d0d371465",
        "cursor": {
          "ref": "771fb6e3-dbb4-4805-b62f-18abac4d3349",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a0e20da-ef83-47ff-8f9f-57e06838af20"
        },
        "item": {
          "id": "a844b566-f9c4-4c11-8587-213d0d371465",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "598befdf-063b-40fb-83b2-e6c187e8d566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3efdabd-5fbf-4bd6-a763-26bc8addb866",
        "cursor": {
          "ref": "52e7f3b4-f8a5-46f6-a754-adb59b05b6c8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "11054322-5e41-4bd9-9ed6-9ea534b77c41"
        },
        "item": {
          "id": "a3efdabd-5fbf-4bd6-a763-26bc8addb866",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "225659fc-4d35-449a-8f15-c26ab8bc16b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df6f684-8ee2-44e7-91c6-c018a9692096",
        "cursor": {
          "ref": "ab514746-d0ed-4b96-bcd3-e539154bd691",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "adb10cbe-cae9-4dec-be1d-5758c6f9f923"
        },
        "item": {
          "id": "8df6f684-8ee2-44e7-91c6-c018a9692096",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "deab281b-3ca8-4c19-893b-9b97b4d53403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70594f5e-78ef-48be-90f2-7d75f64c7bba",
        "cursor": {
          "ref": "7f0f3262-408c-46bf-892c-46fea7a692b6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a4e900cb-e317-47c8-ba14-d8835e2f92c6"
        },
        "item": {
          "id": "70594f5e-78ef-48be-90f2-7d75f64c7bba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "def39675-d1dc-43b9-8baa-fbfc3df0ad1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d83ca8-9fd8-4697-a547-7de88f24fa6d",
        "cursor": {
          "ref": "c1c3ef18-2479-4930-a2b8-f22278a8f1b2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b9e5b1a6-7611-42fe-b2cb-d7f8d309f6a9"
        },
        "item": {
          "id": "35d83ca8-9fd8-4697-a547-7de88f24fa6d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1194a53-c5c1-4c47-b584-7c8a083c0f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e2d684-c715-4675-9602-c5bbbc68a166",
        "cursor": {
          "ref": "a6c60118-c815-48f6-86f2-5abbbe034f2b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "be5800b1-ab03-48f4-8b53-8dfdc48141f1"
        },
        "item": {
          "id": "76e2d684-c715-4675-9602-c5bbbc68a166",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2be999a-e86e-4519-b6dc-b8f1ef48b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd37d8-fe8e-44b0-991f-f015ed211204",
        "cursor": {
          "ref": "750bee9a-7690-4537-befa-a83cd6f08584",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4e11baf8-a397-44bf-a374-e2b70becb012"
        },
        "item": {
          "id": "5edd37d8-fe8e-44b0-991f-f015ed211204",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3e648f17-426a-44f8-9ee6-4cd2926d53e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee8f14f-ca2f-4811-92c5-2b3165b1a91c",
        "cursor": {
          "ref": "7fb6625d-01df-49ab-9e50-f14635b45121",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2d25f498-b289-4d07-8831-4e0100bd32ef"
        },
        "item": {
          "id": "cee8f14f-ca2f-4811-92c5-2b3165b1a91c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "01434084-389a-416d-a686-2817cf88b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77098bc4-f385-472e-b4eb-b8540ee36ac3",
        "cursor": {
          "ref": "d336655a-14b6-44bb-840f-b72686c9c3f3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4f64be20-f4b6-49f0-b9c1-6d9463c3b97a"
        },
        "item": {
          "id": "77098bc4-f385-472e-b4eb-b8540ee36ac3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "39d15029-3713-4a0c-bd79-7709931c06f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7722fa7-5333-42c6-9a85-5a019567f9e6",
        "cursor": {
          "ref": "9f1617fd-17a1-48aa-adb9-22fb11ed5b8c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d3996a5e-eddc-45e8-9e81-08a049277d32"
        },
        "item": {
          "id": "a7722fa7-5333-42c6-9a85-5a019567f9e6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d6457e6-b885-409e-a553-483cf1cb8f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa4d662-a0bd-4225-a6d0-e151812c79d0",
        "cursor": {
          "ref": "9fc803e2-c919-45c5-8830-fe81401dbd87",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be001820-c1f5-42a7-b6b0-ed51c803108a"
        },
        "item": {
          "id": "bfa4d662-a0bd-4225-a6d0-e151812c79d0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d8bbb58d-f6e5-419c-ac81-d30a65787784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d081c68c-719d-4049-8e3a-2ed2c858d5c0",
        "cursor": {
          "ref": "6a34bf8d-a0d0-4ac4-b873-595cd03fe09d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "42767f77-cb58-4b6f-a86d-ec91228b0bc6"
        },
        "item": {
          "id": "d081c68c-719d-4049-8e3a-2ed2c858d5c0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5208bfe6-d487-4fa7-9ad1-124f58f3b978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638a95b0-fab7-470d-a832-d49c68e359a4",
        "cursor": {
          "ref": "5f562a94-ddb2-4473-96d4-c782f20a487d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3b2141f8-a345-4981-afd0-15fd7b53cde3"
        },
        "item": {
          "id": "638a95b0-fab7-470d-a832-d49c68e359a4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8ae6ce09-289f-4b07-bdff-c03a1a9b8bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e40c4b-d5bb-4e14-a298-eb1b3aa00f6a",
        "cursor": {
          "ref": "aca978fb-0bfe-489b-86c4-372b8050748d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a420160e-90e1-478d-a997-d50e1601d91b"
        },
        "item": {
          "id": "e4e40c4b-d5bb-4e14-a298-eb1b3aa00f6a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6cf2976a-5181-44c5-8e57-2f5ec56940bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0036d8cc-4cc4-478c-ba94-29e8ecffb731",
        "cursor": {
          "ref": "f3f0c129-b3bf-4529-a88e-db824791f98f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "056b69d0-578c-4ba7-9168-b6098847ad6e"
        },
        "item": {
          "id": "0036d8cc-4cc4-478c-ba94-29e8ecffb731",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "19bb6892-f697-48f2-8789-88727d62a7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd506a05-142b-49e6-8bf9-6caf7019d6bb",
        "cursor": {
          "ref": "430d6087-804c-44f5-81e9-0fa94216dcf9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "278a7469-58ce-47bb-bb22-7e0c220557c8"
        },
        "item": {
          "id": "fd506a05-142b-49e6-8bf9-6caf7019d6bb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dd733164-aabe-4099-9029-b1372948192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20599ff7-011e-454c-8c00-5be85eed4c1b",
        "cursor": {
          "ref": "1ce51ca2-f133-4003-a9ca-f1065724fb2c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c354f891-6227-4857-b16b-30cf7af14205"
        },
        "item": {
          "id": "20599ff7-011e-454c-8c00-5be85eed4c1b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b24d585-2146-4b8e-af9b-1fc64494fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b833aee-86e0-4174-9fd6-0578870b67b7",
        "cursor": {
          "ref": "0e880264-7483-4662-8db1-d6fc6b899289",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "95e96633-ceef-4480-be24-e6502ebcce7e"
        },
        "item": {
          "id": "1b833aee-86e0-4174-9fd6-0578870b67b7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c1cd673e-c35c-4b4f-98e3-edbfd88cfa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c7ebd9-370c-45f5-894f-b1bcb16a7590",
        "cursor": {
          "ref": "a914eca7-5d98-476c-9aab-22357fbbdae5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f868c226-be24-4b81-8aa9-f08541455fef"
        },
        "item": {
          "id": "33c7ebd9-370c-45f5-894f-b1bcb16a7590",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8a3f90dd-2a00-418b-84aa-87468fbdd905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4b919c-96ec-4d7c-bbcf-dd39e15eca9e",
        "cursor": {
          "ref": "1c2de2d8-f249-416e-9140-b1a851cae690",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5a5253d7-51b2-4167-a2af-3f74cadebb9d"
        },
        "item": {
          "id": "cd4b919c-96ec-4d7c-bbcf-dd39e15eca9e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4e038396-0d5f-4b42-ac39-cd30470d6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5da010-1255-438f-b464-d9ec608aba68",
        "cursor": {
          "ref": "b62978e1-1832-44bc-9450-e9daf6fc09df",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3e0b50d4-c4c1-4b30-8ec7-1959e9df7c25"
        },
        "item": {
          "id": "0b5da010-1255-438f-b464-d9ec608aba68",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e8f8af53-e670-4371-adb0-1c35d8842135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ae6bdf-080e-44c8-93d7-36c88884da02",
        "cursor": {
          "ref": "f6ed8e97-673d-4281-ab38-84ddfd69964c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "24f391a1-f209-4d2e-aa24-7320a93a80d1"
        },
        "item": {
          "id": "b2ae6bdf-080e-44c8-93d7-36c88884da02",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3dbe8bca-eaaf-4f1b-abcb-070d520736bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b85a4-9a2f-4a71-a75c-64cdedea30b3",
        "cursor": {
          "ref": "96613d0a-027b-409d-a339-30391ee861ae",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2dfecf30-a8a2-4b1a-90cf-68b274182311"
        },
        "item": {
          "id": "c20b85a4-9a2f-4a71-a75c-64cdedea30b3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9c123459-91e5-4ebd-9220-c0aae3fe05e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b1d37d-2864-4a55-93d3-a19ed9cb493d",
        "cursor": {
          "ref": "8f672d18-8645-4088-92c0-8d89f7df32c5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a902889d-7477-4ba4-be5a-8aeaab503fb5"
        },
        "item": {
          "id": "a6b1d37d-2864-4a55-93d3-a19ed9cb493d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3d4cc129-3399-410c-a18b-309d18b6d76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27959e28-169e-4e6a-b62c-330e15137969",
        "cursor": {
          "ref": "1fc4a2b6-4cf9-4f2a-a355-b80a1f3f2cbd",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d6edf73c-f732-4d35-8fb6-a799d381da14"
        },
        "item": {
          "id": "27959e28-169e-4e6a-b62c-330e15137969",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b7b02244-cc37-461d-ba8e-b4c8001def4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69efc303-faaf-4543-90b8-1317673a7c21",
        "cursor": {
          "ref": "59d22793-5710-45a6-bef0-856e6843514a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ea878b6d-802f-4f1c-917c-e4844901030d"
        },
        "item": {
          "id": "69efc303-faaf-4543-90b8-1317673a7c21",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5a533ad4-d566-4d92-9188-9868991b2ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5791b05-deb7-45f0-9981-61301e876018",
        "cursor": {
          "ref": "3c7ae5c4-a63b-428e-ab47-e403773774a4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "548f5774-9a5c-4689-bebb-0319f8164648"
        },
        "item": {
          "id": "a5791b05-deb7-45f0-9981-61301e876018",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "da57589a-8e24-4444-9784-fe2f802e25b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6c4d81-dcd9-48dd-b1ab-90fb4552668e",
        "cursor": {
          "ref": "15561b9e-2e25-4354-96ba-a680d19e7bd3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6ba16b8a-2f10-48fb-96f6-fcfa16d4a936"
        },
        "item": {
          "id": "8c6c4d81-dcd9-48dd-b1ab-90fb4552668e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0c029a82-043a-4f33-8085-9187ea21ba85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09944f30-ad4c-4dfd-ac02-ed59862173a1",
        "cursor": {
          "ref": "e34ab78d-e1ca-46e0-bc77-be7e6309c97b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4040290c-f419-499d-9300-d47abb662204"
        },
        "item": {
          "id": "09944f30-ad4c-4dfd-ac02-ed59862173a1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8132612c-2e5b-4def-8025-39e41ef16020",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca1a482-b202-46a5-8bf0-fbda2b46a502",
        "cursor": {
          "ref": "1024b5cf-5a23-4385-9bf5-b435e1a29dd3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3fd0ffd1-0e68-49a2-b884-66cd75a684cd"
        },
        "item": {
          "id": "6ca1a482-b202-46a5-8bf0-fbda2b46a502",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7ff7e1f8-cee0-4d47-9f92-48c85b9f9086",
          "status": "OK",
          "code": 200,
          "responseTime": 1353,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3604ae7e-5f60-4c85-b279-b2e38d65d6f5",
        "cursor": {
          "ref": "715927c2-c965-450b-8c8e-f4b088737645",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0b3905d4-3824-45d2-b85e-7811e2bb2fb5"
        },
        "item": {
          "id": "3604ae7e-5f60-4c85-b279-b2e38d65d6f5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "59146768-ead5-4c3d-a741-2396de625aad",
          "status": "OK",
          "code": 200,
          "responseTime": 1395,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5411dcb-a66f-4d32-8ddb-6b061c68c1cc",
        "cursor": {
          "ref": "da9252ba-78dc-4ff4-90e0-cb61d6590efd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8242d7cd-496a-4ba8-a134-18401e723d68"
        },
        "item": {
          "id": "f5411dcb-a66f-4d32-8ddb-6b061c68c1cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c88e013-0dee-4dc3-8d7c-702befd4cb69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5411dcb-a66f-4d32-8ddb-6b061c68c1cc",
        "cursor": {
          "ref": "da9252ba-78dc-4ff4-90e0-cb61d6590efd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8242d7cd-496a-4ba8-a134-18401e723d68"
        },
        "item": {
          "id": "f5411dcb-a66f-4d32-8ddb-6b061c68c1cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c88e013-0dee-4dc3-8d7c-702befd4cb69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541c9769-5a89-420c-a776-3c79229166cc",
        "cursor": {
          "ref": "1a3b2cc6-ba7c-410d-97cf-86561d26ffd0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2bf75f2f-8607-477f-9fa2-5a4768a4228b"
        },
        "item": {
          "id": "541c9769-5a89-420c-a776-3c79229166cc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1138c8d9-923a-4737-966b-3513a7297da6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f35f0f-6760-4bfc-9f91-20a595c2e616",
        "cursor": {
          "ref": "9019de2d-cfb5-484a-a778-9b9c81bd592d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9e5a2f73-c4e9-4b16-8a3a-8a9c8bb3d7b3"
        },
        "item": {
          "id": "73f35f0f-6760-4bfc-9f91-20a595c2e616",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cb9b0839-c5f3-421a-9fd5-b351f940b29a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}