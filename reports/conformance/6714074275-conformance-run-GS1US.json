{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6970975b-c1b8-4fa2-a39a-2e976690e427",
        "name": "Clear Cache",
        "item": [
          {
            "id": "17a2f7ff-f7aa-425d-b186-88775f34a917",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3ba2ff9-21ca-4198-a94e-a5870f1355b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee7311f0-2715-4a2f-9e41-18f484435941"
                }
              }
            ]
          },
          {
            "id": "1708ea6d-6458-4177-83ff-dd3b8efaf241",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed36c710-a14c-4a95-a367-2ed418427f26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ffb0787-01db-4375-af9c-9237c2f98e42"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c69f86be-f63c-4393-9afe-2eaad6aa0977",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ca2a625f-a09b-4ddf-9e17-d714c2001119",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47ab0004-5a39-4720-9d71-abf6dbd7ac89",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09714cd0-1102-44cb-8bb8-2d54a81c15e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8472988c-1442-4736-8de9-fc361d19c112"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00545f23-b65c-47f5-999e-19f3bbc4ea7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0dd50c2-885f-4c45-9ef7-ad20da36c981"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d95aa2ed-b880-4186-938c-cc0509910f0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68a41620-245d-48ce-ab02-774488aa21fb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bbf0555-52d0-4548-8b8d-a270b9a9d344",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c934541d-1c04-4870-be01-ab0d2149cb16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d270589-d86d-4a2a-86dc-92ddc2f6113c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6995cf71-9f31-4edf-823f-1e92e2ef758f"
            }
          }
        ]
      },
      {
        "id": "19f09664-70a8-40ae-bcef-038330f52c02",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fc14f16b-ef5f-41a1-b578-29083c836828",
            "name": "Negative Testing",
            "item": [
              {
                "id": "215027f3-0ec6-49f9-bad6-351402cbacce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cff1f53e-10dc-4c59-a843-f095fd71f945",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b9b6f-9d8d-4137-92ee-101daf17b27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5d2224f-7e8b-43f9-abda-6380eae91ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8ea9c7-29a1-40a5-b444-28447c5795f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8eea1f-2d8d-4a67-8d98-826ce73e990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54e1b204-c0c8-4c33-8503-f4228859a1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ee668-470d-4cad-ac41-4ac5d23de1d0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a3e59b-a192-425d-8dde-9bcb484a1303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2221534-de63-4cee-9bc4-ad5dd233f67f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec73474e-d610-45f5-b716-6a86b37efcd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f227d0b-bcf9-4219-8d38-5da53af29309",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60a45bb-2a51-43bc-a3a8-548f014bb5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9baa073f-a238-4a15-b30b-8dd776e13f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eadc28-f7da-4538-982d-53497ba47cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af31a0-c71a-4d2c-99a3-d91e6562e47e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "857ccdb1-92f9-4d50-b406-2a21039cdf15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "862f39e0-d8e3-44dd-88b0-e8d06c6352bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72f00b8-97b2-4fe0-8a76-15e44575ecb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b33f0e7-3a9c-4882-8a2e-0967e1ac9272"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6cefafb-414a-4d39-b655-4b91b4055dab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4255a003-7a12-4ea7-b74a-a628b0ce78aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef5413c3-5f03-47f7-8cce-3a287a2b2cbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a704a00-2ea5-475b-ba3d-ced1cda1ade1"
            }
          }
        ]
      },
      {
        "id": "8dc8a92c-622d-402c-8c98-52e449256708",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2be1f8a6-a424-484a-bc47-2a56e55e3933",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cb19ad2-97ed-49db-9a71-92bc8abd87e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "33fa60a1-12fa-4b4d-8bcd-9485de3cd74b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f50b116-802f-4d55-8741-28f746dd84a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731b0de2-ee25-4cdd-8b8d-6b11f8068c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2ef93f-926d-45ea-ad55-99703d77e324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6301303-6edf-449c-94f3-68e513c476c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04988c69-7977-4d0e-812e-9e3821ed1fbc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f4b43-6ada-4ee4-a28b-ef629de6c341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7402ec5c-a635-44d0-84f1-950f386a32d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61f8afc-ef75-4a80-af0a-2036f723b7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afcf1894-2d1b-4e05-94c8-2c0e2f82cb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb192e49-e411-4e0e-b658-1199c1858e73",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48a215b-ffe0-4031-b76f-e743f2732c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bac659-3ef2-4ffe-9934-330a65e39187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cb7c80-e445-4ab4-b8f1-44e2f1fe6df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0505b79d-db61-4e76-980f-98d378f1595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2e9900-6417-4b39-bb9c-0991ef79a3fa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2398cf-8dee-458e-afc1-15d137ac04b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a633e32f-f280-4057-8c48-236f1f507fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60343ca0-8592-488e-8a11-bb52949067d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37fb7d16-23bc-4821-a86a-11499fd0c426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470d3c78-0d37-42cb-9405-0bc350528019",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a41f0c-032d-4d35-9849-6251c5dded8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd19bdbb-0793-456d-8e9e-5970ec991e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf235a-331b-4943-ab39-4fa3ec987b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba1a4dbd-2efd-40d3-8dc1-be99cc680e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa277741-6403-4cdd-a5ab-d00610ac268e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f860e197-39a4-4f45-a7ea-4fc32deb59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b6619f-8510-4245-9ff6-caebf5d2e322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bb399f-12ad-4064-ae42-034b98582fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a17742-ae7a-4788-a522-405edaf321c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc3e134-5864-4944-a8a3-14c38f233c80",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b27846c-d1e4-4ecd-bc92-6df435ea3d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a0e84-1beb-41d0-a316-e6bba2ca0d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba79b1af-096a-4c09-99b5-83697eeac845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "061d78af-ed2c-4076-8cdb-57bc32c04248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12671c4d-0157-4af3-8d8a-1fb418785770",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c9f5fc-eb9d-4141-af37-729555f90ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6cc2ae-9b14-4d6c-bc47-f46e813b7725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935ac658-1f96-4e8d-abc6-b1268a8bb4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4f432e-556a-4c26-bc39-c74ed4003e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9095927b-b9a2-4468-b3d5-b0f2b604c80c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a48011e-4856-4085-8487-5870d3ece49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eed06a-8d58-4e4d-9370-5bd76e9ccdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478e5dd4-9a97-4ebb-ba7a-f0454cf0aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3b995ed-3c81-4527-a0aa-61d01cdaa120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc7461-6223-441d-a73b-35043cd4e19a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d412ba-dfcf-40e6-a6df-c7d9c6c45545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be51da03-5abc-4f8a-8f48-e267f3545494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f00b1da-827f-4923-90b0-8084ed695e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba8abae3-b199-483b-b415-6574cfd81557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8383ae75-e027-4e7a-9ad3-0f5224115ff8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c090fa3c-1774-4ab9-a005-a8e218237f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c491a73d-7f70-489e-afb7-5bf2202139ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b86ef69-5ccf-4ceb-8b65-228c1578e963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5b8ccb-adae-4145-ada7-d1e4c4b9aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7d920d-5756-4386-9b39-904782af38fb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e317540-6985-4e04-896d-97c1a0de37a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc8f545-a491-4cc3-a443-4bfc8a1ad703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b9a835-2b30-4d06-b35a-524438a81ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b16cb74-950b-4dd2-bce9-a6098a5c96c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1676c8-5df8-48e2-8729-847d3409dd58",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54ed333-f9b8-4036-9731-95031750039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12452f6c-85bd-4673-b64b-5c0e60c52c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa24bda-db47-4a12-8ce8-a81b0715a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7ae60e9-63a1-4731-a17d-aeb4107889b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68938317-6624-4db7-9593-d685a99db8ce",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b751b2f-eb47-433f-84a5-4a411284ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cde65d-1cdd-48c7-b4e6-092dfad30567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a035f6e-6f36-44b2-b24d-08d8e12bee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02c013aa-a00a-4ba1-993c-89da436bb653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2952b1d-2e5f-4c70-9fe6-2a8ea2f01c71",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d11a5c6-9554-4f7b-af35-58ea0f01c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b8cfc8-5af1-4851-be44-e7a7c8dca14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e88120-9f42-4ad8-abae-32096ec1ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59f2f7a-c206-4ac3-be03-7b2fc071f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1364f5-da8c-49dd-acea-655305400b05",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ff166-3aab-4c5d-92fd-589ae5c72487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff3e36-c127-4ebe-b3d5-67336c47a9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1666e9e5-c11a-4185-9d3d-360094cdd5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f5406ae-adc3-4cf2-b27d-9ca8c7100169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253bd929-4db5-4c54-b193-4c2d6d74e8bb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b9e4b3-94a0-49d7-b1e5-bb1287fe22c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a91e7f0-983a-407a-8e4a-4019e68ce1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b86d5ca-3435-4d3e-b53c-bfb712bedf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd973540-0001-46b9-af6c-59989392c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a8a05-6693-46d3-8ab7-0dc2ae0d94d6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44199a44-e5c1-4e06-a787-a22ac003b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ce5659-58b1-4a8c-880a-a9ed4c9bd487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8c6cd4-84c8-4d55-a1b9-2b16cef86a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b671f0b-7c71-4463-8683-538e4f109a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eedc43-8f9a-449b-a62f-ae1e6c3dbc1b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4949e8b8-418e-4691-a4cb-9a1afeb9e354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf927b86-5378-464a-949c-7a3ec739196b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e99b2a9-3c08-4e7d-a648-a74c3b475ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae0647b-e4a5-4c87-89f1-913f6d8d5663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc400b4-9cfb-410e-bd5b-69f5427fc00d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d38c5ea-8574-4f8c-a42f-35c5326bf619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724118a6-cbfe-4eab-9866-7a8479cc3192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f47e522-f78d-4e26-a733-5a545477785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c8f8c4-c78a-4d3b-abb1-70ca0cb0fd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e6ce52-d38c-4d3b-81db-46f73c0e1dad",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f47960d-d885-4540-bcef-578ced96be32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db84a009-08cd-406e-bf10-e6ed81fb8c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92a91f-2c38-4782-8230-275eb08e0fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1b5fd4-3429-4cc7-9391-3177a94d3a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d489ca5-6407-442e-b4cf-10b13c9ba926",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ba8866-0c40-4932-8474-57a9b002a1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea58756-92fd-4495-9df1-4218adf889d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98817aba-73c8-475d-a903-12f78b1037eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d26d9527-2357-4106-8331-94557bba2487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e97b259-17a5-4bb8-89d2-4ccbc7be5230",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56180756-15dd-4410-a1f6-0670af5ba21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ebd91b-6a9c-4da8-888e-b7055894e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3455ac0-1573-453a-92cd-b9ce35f69d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ece4d59-26e4-42a9-97dd-249f59c67d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459247d5-74ec-4a17-9e76-37517ae834d9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc448491-5fc6-44af-9fcd-4b3298b4e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a781467-b224-4caf-89f0-db01a6440721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d945a-92a3-4f92-89b2-0aa201ccbd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f094fb2-fd39-46d5-a793-65476f833556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f202ed-6380-441b-ba16-2ebe2dbe2320",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49938799-d7df-4d71-8757-cd6084561582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421fbff3-3ce4-497b-b1bb-4914e35cc1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438c99e-86cd-462c-a4d3-44b5e6e2bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c4b0ee-cf7e-4ebf-b35a-67b8b1e81ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070a4c77-01ac-4fda-aa91-8f32932398bc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a8b620-7c04-49ed-98e1-196484faca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc4294d-cb37-4846-9f76-0f189df1970b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edb8296-f1bf-4dd6-85df-a5bf42104fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec98d9ad-ac74-4926-9777-180c409127ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3ec509-8466-4c2b-8c10-b4110d95a032",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f32ca6b-2bf0-475f-92e1-a441c42ef8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b891946-9b02-4334-839c-cc5d79d932cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206ff158-d062-4dd1-a886-36b6d2f8492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d269f67-8fc4-4872-ba44-8a61c55337b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7444c3a-a536-40ea-a20c-789a0c54dd56",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ad19ea-4c34-434f-9610-fe839c13e73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdbb8f3-3f01-4b7c-999f-3d188930c2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753f764e-d5dc-4387-8326-baebd31dfb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a48288-31bf-4604-9bf4-cd1dd2383fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9decc162-5510-4ae5-972d-3525a89d50b2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbfbf60-3029-445d-85ee-73a6d450c677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a944993-2454-448b-8b64-c7ef7a24cd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0516fe-0661-4527-825b-65206be75d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c84870-cc77-49aa-9d7a-c1aa5952286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0194a555-deb6-41df-be4e-fd13647873f2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889dbbc-de99-480f-8527-19e55c04da61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650516d1-80f8-408e-9b58-fedefe931aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda4e49a-7e6e-4645-becf-82541db3d720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d8698c-8157-4640-9715-4afa3c544c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fd04b0-05d7-4526-a8bc-52932da2a208",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d1e304-207d-47c1-b480-0034d9d8239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1be869-a07a-4332-acff-3b013816b073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3524fab3-d999-407e-b0fa-e7f46250e18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6595c2d0-74cc-4b22-8724-92b94d11c2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82ef8f8-d07b-4ec9-ad11-07dd46e85fe7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca9fc94-09d2-4bd1-aa80-20308db6ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e714c2b-b118-4b4b-b30e-9d7d717c03dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f225b8df-28ee-4dee-86d3-bc76921d4f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae29eea-ae74-4ffa-8302-7135e4447bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457c3458-dcd8-48f5-863a-3007d9b165b4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dcd784-0c1f-4c8b-8bee-554bc5618331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3f5ed1-66e9-473b-816f-69bd587eb363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bc2a49-d284-4952-bf94-abf71a55781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ca8118-3298-43d6-a06a-0e0c3902b00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc07e31a-d155-4e08-8df7-cfd120294172",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e27809-629c-4aea-996a-41c89fe40ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2904d4f-7d30-4c7c-a3b1-78b2a646d1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df991034-4d69-4ef7-ae59-cf6c8c061e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c34125-df59-4600-b30a-b28cd09af66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec02cc2-13df-4488-85db-dcd076c0c09c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871b122-e5ac-4066-86f1-2991cd2af7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18be3373-385c-4fda-ae23-6b55e70a7dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb3e7d6-e2dd-4039-a43a-0a5defafeab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a9004ab5-b9d5-4c1c-bc77-f91826b08b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f52b413-f2cb-4441-91b6-8da5d8f9bdda",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7586dd35-8bbd-4bfa-9523-9dd64c9bef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11d42e11-ebb0-41de-aa83-5e7c5f112933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8feb87-42db-425c-ae57-0fd2bee37d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be48885f-64ab-42dd-af74-7f62b83cad5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa3e04a-e765-485b-9456-6c0b53ae048f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4baa67df-2c9d-40ea-ba27-3106431b3ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf61d0c-476f-46c3-8bd5-3e41f6f92952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979ccbb0-3222-4cc9-95aa-49650d10abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ca004d-7203-42c4-82ba-22174fc3023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed7cb1d-838b-4d24-b5f0-d41b1d27d497",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0af48d7-3b8f-499f-a6d5-da3756b375d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbda410-1b29-436c-bed8-2fb5c2121a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c270496-96ab-4c86-af85-ab379c0d382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d209626-2334-44ae-a469-551473e5ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e23f88-d36c-4932-9fff-33a91fee152a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f528ec8c-5f53-4a71-bb01-2494070d8b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50783e8c-f4a8-4c26-a951-fbb5b6045fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369a57dd-d236-4146-aff1-aea2240d274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06dcb897-99dc-42b3-8749-5cdc56d4480f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3303f4-3326-4d35-91d7-18ea0e33a654",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a3c484-187a-44a9-9a9e-33bc6aad0849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ced4968-ab99-4237-8b2b-3c42f2ab32e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021b6f84-dab8-4c9c-92ba-5e5dbe081684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f8ccf7-f427-4261-bc16-d059ce128c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8cace-5866-4db5-bc2b-9d659efc8b93",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905bab96-247d-41f0-baf3-67d14e555066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dc9948-7ae2-4e80-9474-7a72b28d3464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a916af-5fe0-4753-9904-b604115d74c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14a8925d-a12c-4c0a-94f6-dec34ef2022e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d635ab94-4282-453d-afd6-c9e0889101f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ecf59e-b2c3-46d1-a37d-5a11942c2e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a972d7-a612-4723-9da5-6a5b137b9444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59b97e3-a6d0-4ab4-9cbd-bdd9df0bf9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "261d8943-c26c-45a2-853d-68d1dc8c143f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb891f73-19d2-4404-b328-4e3311b3101f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d63eb80-bb9c-4e1e-9dea-18e22ebb2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176777e4-4231-4b31-b0c6-13003a66933f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46f795e-6f11-4486-b374-1dc60aeee4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85a4749-f864-4fbe-b97b-9b6803c000ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2412d6f8-5f44-4a17-a9e5-92160660745a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd617adb-df46-43ee-b46b-63a28757b252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204e1080-169a-4a76-9449-205848f7105b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256cbb2f-df22-4176-bc9a-fa83bcdcec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae7c69c-3f49-45ca-a321-4f30f631fe59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bc1089-304f-4e0e-8717-b335ab533d08",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9350ef-aea2-4d6f-9793-6dfc4d437814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05b7e5a-57c5-4cd8-9487-a63ff9a5beb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1e0346-94ce-43d1-9118-4e9f92ffa6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a740cc7-08ef-493b-bc0d-b92302bb25d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc6fad-468e-44f3-aa37-7446c345317a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30738a8-5475-48e5-926e-41422ac9764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8877f73b-b120-473a-b6c4-95700822c980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3528857-68ed-4ee5-8ca8-fee9a4bf6df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5af870d-8fd8-446c-a038-c81eb71c2b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c481d-c4d4-491f-864f-49f86b4dcfa2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386ff281-ead4-4dad-8957-90ec7cc0bcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb16c156-2e5b-46cd-afce-a60da6a30231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fcf53c-0849-4205-b761-292b5f33b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa2e8bf-3c1c-4c94-bbd3-cdeee2cd6258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e36735-b97a-48bf-8608-434702ff941d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bdf655-1146-4a60-8f7d-02491d1a429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539f3f39-5c99-437f-bc5e-40e0f67cef07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4c7ac3-fc06-44b8-abb8-f55a58416e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c93af236-3881-497f-aa16-34a34bcc7286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b46fa9-03ab-4fb5-9020-a7a13d32e857",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9672c84a-9fe9-4fa7-90ca-3a43aaddbf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1d292e-a1e1-406f-822a-d50c2a0c7157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1b8614-c575-43ab-8022-86b938e87404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7abce363-83be-4213-a145-7e4a712705f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdb38e7-e458-4ed9-a01c-821f1640b136",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c53933-00d2-4959-9c44-afbba9a27879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51b19d3-f38e-4d2b-bcb5-090cecb911db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f899dc7c-e81a-4236-abf0-47e285c765b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f05cb60-5024-460a-8533-c65696a65486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d0dd9c-583f-47c1-a1a6-f92e84fae22d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6892313a-6222-48de-9ddc-bbd9cfb0ae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5970fde8-1aee-4045-855c-bee10e1cd539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae0cfd2-fd0e-42ab-aef5-bd0b2ffda14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadf8a83-e0fd-44c7-b8d1-be6799995e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda219c6-c433-4caf-a8f2-ca0dd6865485",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b376b-c58d-403b-a06d-1db9f00ab760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b165b480-f1ab-4c82-a022-76872fad6a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447d501b-050b-4e73-b397-2864ef03e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d36d77e-d02a-4855-9e13-2184710108cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fe25f3-819f-4a93-ab61-62fa93f9c91d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110ddf07-1eff-4728-8eb8-6e9e73a3d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a2deb-7206-42eb-bbc5-ebabcfadc1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a1b212-7437-4428-bdbe-80a50007f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c7b877-1775-4c76-a01f-775a19789356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b203a312-969c-4d81-b6b2-6936e1194a8c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569a5d79-4533-4489-9848-4dfb2caf110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da379133-4915-42a4-bfc4-44075c6c9940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d35c3-6e4b-4d5e-93e9-c616ad9e28ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd57389c-812c-49e7-92b0-96c0180f4150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353de2cf-226d-4cd7-853b-a7f5783b77d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdcb8bd-af3f-4754-8a6b-c93108077a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e79225d-676a-419b-a7cf-64dc59e446f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad3e73f-dd4b-4510-83fc-9afcb7e243e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c77512-0879-4c06-af9f-b81f197bb5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a3b5fc-8d9a-4775-8103-1dbab9b238bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e625e49-f52e-497d-80bc-4f87ea819d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705d1871-2ac0-44d0-a16e-9f3f6f76a2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db47841e-2908-47e5-a581-99e98fe48bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4c5d65-92f7-42fd-8c91-bd120aaec402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2e1a92-8622-45a8-b479-b488e24df666",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217fc4aa-2715-4156-8ac3-64ca6701cee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7dea64-e894-4071-8af6-bf8e2e11f1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e80934-33a7-439f-b672-1211438da564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00f769c-0177-42ab-af81-6e30ec3869ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5be42e-ff2f-4cf6-98bc-6b173b63079e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4fb6b2-3d49-4b6f-ae43-039414e73baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd64b2a-5ade-4bac-8eec-8741f3415d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d71f54c-5dfa-4256-9cd3-5f363ee678e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7846bd-2aa1-4495-b9f7-04e4358f779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff0069d-5bb8-4581-b673-3b3297fe3883",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb65ed-fdca-4e4d-addd-e3c929af7cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d914d63f-8ed9-40cd-a9ca-60c9aecb31da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3d1b3d-0356-4bf6-be22-53e47fb61787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdc7a6e-7a00-431c-866f-85ea3ad9f0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6ccb0b-1000-41c2-87f3-5f9e5633e31c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b4bb85-9bb2-4ecf-949a-af0c4c9befb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c587f54-8f90-4e5b-b03e-48e1034498ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da515b38-54de-4353-9aaf-36ab7eb85af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae53536-7943-476c-a7e9-bd19da97d635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0af0351-3590-40e7-847f-19fae51733b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa4e0f8-b9f3-4de6-8618-b3efce946fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1cb79c-105e-46ba-a433-5b3250ed1992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fb41bd-b01e-4f34-9bb7-01b7c142e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4736391d-a49d-42d9-aace-fcc631afa08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d369ccd8-9aa0-4df0-9294-394e8e2ce5f1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e730b3-dcff-4fad-b314-6360d4fe7c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fc21eb-6fcc-47f2-a54e-61d84bdec2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fb8d69-82b0-46cf-b051-b8fc6faa34b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "699f497f-4e49-4e9e-90dc-c725ec51227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41483df-fcdd-4f06-a41c-ea0291b6bc9f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89b60df-44fc-435d-b91b-66acd312bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8e5d96-1566-44ba-9bc8-6f5646d27cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a651956e-e0fa-4fb0-b037-45d148433429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d0d15e-94b6-4107-8e62-3e2ddf3386eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045b95cb-c2f4-4175-941e-801dbc46a22f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce4c44a-37b2-4f1b-93fa-890c6f54d36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e211ac-818f-4b4e-9d74-1aa9661b05c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae97b5-6a13-4f3a-9950-91287da0b413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "327cbf8d-0eaf-4826-b467-60d570e26190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b92bc-5dca-46bc-8f62-f1d19c8cc929",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ab4b27-ba05-48e4-81f8-944b2efcb340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c78cb08-fd5d-4bdb-87af-3fdf0bdd0ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50674f0-28f3-499c-8c91-2687e004d01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb930f7-cf85-40c4-be3e-cd6b4280231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a374ee6e-83c9-4947-b88d-56d3e0ec571e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3195b117-45f5-4edc-84bb-2d5e01779505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9546eefd-c06b-4fbc-8b33-4ceb39aac981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1dd98-6ad7-461e-a402-dfdd5f1872f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cada0e-9bf3-4686-b87a-a32303413e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57ecb57-f5e1-4d8c-9521-99d188f3df5b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aca671-cb7c-4149-b3ba-5cb58d925781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb00715-e71d-4199-8018-a45cc80be949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd95a91f-27cc-4709-a247-4ed0b8e21bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45a7f661-2e1c-4ad1-856d-a27691302c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bac11b2-b05d-4f06-a522-e42a90a9ec16",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f379f2-590d-4e92-a5ea-1a19b4c1c79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bc81da-2b0e-43b0-ac66-92f7dd200de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175d174e-4ef1-4009-a3a9-0cf31d30c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58254efd-6b5c-4c83-8efd-0cf9e803620c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22001c5-400f-4c8f-aa53-6629ecbe9448",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a406c54d-d6b7-42d2-aee7-3c5fc9f05828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0ed428-fcb3-4140-805e-c730df49bc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfbec04-c86f-4e65-99d5-6671c84db150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ec0a00-3869-49c5-9a9e-be2743f6f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68ee573-e93c-4079-add0-f24d389f4d29",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d77c84-b936-4971-bd25-c05793282377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1ca745-e1f1-4200-b24c-cb658b61293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3efe8cd-65f6-4efd-a319-38b696766165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e7ea71-1f7c-4daf-b934-33bd33ea1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55251631-f4a9-4523-8a0d-ea5e5b21ec5b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2faca6-5719-49d8-8d23-cee1ca5aa2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a566965-d22b-4a34-9c08-760e87cf9c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38b62c4-92a2-4def-9165-eea8a904f3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cab7d2-9b8d-4151-a96c-f726b566c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef318725-7e11-495a-89bf-4c17135caf27",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3357ebb1-5954-47ea-83f5-42d250b7b646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4baeec6-9840-46a3-be2f-4e7f9b253d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8327be-7005-4b74-b1e8-60a5a5307ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbafbb9-df4d-4ef2-92b3-454c98262c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d99918-f450-4250-a15c-823de7cbd05d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00b3558-9e25-4a29-91a1-88875d24a4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113705a9-35b6-4502-a754-bb1fe6b0543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6162a7d-b21d-49f3-b78c-4aaa78612caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c52e7d56-7191-4e71-b466-e549c77cf2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcc19d1-85b1-48f6-a3d7-c1a3213f52d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c70b80-260e-4a36-988d-f10d74fa358f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a98ad95-4776-42c6-a9f0-8fa33e7c8a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84066074-d59c-4819-8ad3-e8ef8b662385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "496913fd-0739-45f1-a98c-8a6c88470b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e3c1a-3cd1-4324-b1dc-d12ac776c0bd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1cafe8-26f6-4343-9ba4-dc2126e83d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b68d5fe-e488-44a3-bf0c-a7fc311c4bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4310ce6b-ea4f-442e-bb2e-2a7259f975e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e9f8b3-4611-4af2-9f62-9f57ec2b8f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b9e70-960d-4c05-8270-61219e2a5ee4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570f4aae-e78d-42d7-835d-76984309d72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ad7783-73fa-4260-848f-ccc546d99614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bc8f46-f7fc-4ffb-946a-42e1b31e2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8df937-281e-4f3d-9703-77b13bd31a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a498e-40a0-4f0b-8446-f94fede0f694",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80ad06c-1b37-44ca-ae45-60fa99157033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ca2352-cc7b-4042-a815-1c34a465bee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bbcf43-7bed-46fa-a04a-a758010295c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21115bca-3323-42fa-8b9d-a0c1321eb399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26b6515-e1a2-4e0e-bece-83a8d1e430f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41b786e-c345-43af-a1b7-a0edb7eed55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59446ced-feb5-467c-8f40-d509dfd3f7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b829e9-ad0b-4e40-bfea-89f1a6bc1a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13eadd8-5d4a-42df-9fca-b44c4ed01db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a94ff-a180-48aa-bd76-b6f61995e26d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15afa34-cb63-4f30-b709-3d2ef244136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705daf74-6a11-42a4-8844-73c80dd614d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0094bfef-9190-4e4d-a504-3326d5a2664d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12695594-db6d-4f2b-b37c-326042221a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0fde3-c987-4546-ba53-644fb6ca9035",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998301fd-04f8-4a0e-9fab-447c91e2b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59829e24-5793-4c72-b301-0de4c45905fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254aa030-1b3d-436f-bcb3-8e30e8012f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebd1e18-eb8b-490b-ae27-68d4ef59e6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347251d2-6889-4af9-8971-4c88d4e3b81f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad4b42-6de3-4440-a824-c285ac8b6009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f074cd-36d2-408a-8122-9473096312f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3c2cca-dd06-4b0e-9da6-2f649198a789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74309b61-332b-424f-8a26-684a3d1300d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e05ed0-3776-4f42-94bb-987b633940c3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d214da-ad93-48a0-b177-07dd24c34064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865fd43a-3003-402e-9d30-ff2337d6dfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a9a345-72dc-410b-bc9c-c9f7b849a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "548c7faf-b261-43af-a1ec-11d8cb73f932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c391fb-ece4-4416-afea-ec634c13a0fc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1db5111-ba0c-4020-ae2e-594911f2183f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0c44f2-feba-4948-81d8-4d65a5e96b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a428ad03-658f-4481-9683-77d81b7bb78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afbfcc8-b108-4174-a937-91d9854b234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b99d4-83ad-4cb8-be57-5eef3c963305",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b509d4aa-7479-469e-a739-62c0e2fb2fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067d91c8-7046-4f14-ac7a-f7b01cad2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114a824b-9b7d-4747-9025-16265e712f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab9d137-d83a-44ef-87cb-1f4a74ec68e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb86646-0aeb-4e35-8e71-1b3b6b14fe60",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e969df6-5aa3-4000-94b9-6392704d2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b29bb53-0484-4bd9-bdfc-e8866b823069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236f825-bdc5-4475-9b51-ad6b928b59f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8165725f-c913-4745-9f7e-1e19b576271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17cabdb-d4b9-4beb-b656-063a3e823b18",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8376e0-55e0-4584-8b6a-0ebba1583820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94d6af2-7d13-4191-9e68-2e0c3c1ea8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c39a176-7202-4fc6-ad6b-30f3113f12ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b56fbb-7eea-43c5-a1e0-83b0c6bcaefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c759d1b-060d-4ae5-b2d9-477a56c8c6bd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3206183b-8134-440e-a2c6-85231241f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75f04e6-0b9d-4db1-a800-801bc4850e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3decfb-c1e5-4113-a511-802891485745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb6542c-0a2e-4714-940c-61584a0abbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a4f92-10cf-4cc6-be48-0116ff0abdae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7f5985-98c7-4d28-862d-a028d127d6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59c960b-82c0-43a2-a958-db2dd2133664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a3aefe-6497-405b-98c0-b1f0deb49567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb05284-dc54-475f-b019-88cbea5a807e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5242733d-7dfc-41b3-b1fc-44a673df6c12",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92795aad-b8ef-4736-960b-7bc7d2a1b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc2df12-9b1c-421d-b294-4f5a2860bef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abdf566-c0c7-457b-a3c9-dd3498893428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced9683d-206c-46f0-8649-19129ee0149d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed116490-933a-43bd-8b53-1ff5e9435f72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e6e429-b956-4364-a33f-b2a3b4488bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be28b1c8-11ba-41fa-b298-ade0df81e3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83381ab-da2d-468b-b855-d8edf1efeeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7d1873-0583-436d-956f-098df7de8152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57530f4c-d75c-444d-8da5-17b87a51a580",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1605cb-a166-4cb8-a44b-456a92890132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dfafca-6b50-4d59-b8aa-1ae4090646a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc786152-01a5-4415-b67d-7fac054d5340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e1a7ae-0122-41a4-b6b4-da8b24b1c658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30df2051-f953-4711-9950-a1af65631f97",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60becaef-0ea8-4691-9210-0bd6d798b443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2be4c731-586d-43c0-b19b-cd0cd83d475f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9bf977-26f8-48be-afe0-0abdefbbf211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf62f00-3fde-496a-b955-e5af8321a522"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76e29850-91e9-40ea-b779-6dbd47e696ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24e363bf-7102-4cc5-9f7a-3c8d67c8efdc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cd2aed-096e-46b5-9281-59248c19bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf412a10-3219-4340-a5f4-571b021563b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72002ad-aac8-45fa-80e1-edacf348c259",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e314e6f-13ec-4f86-9806-205d274565ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40fe90a6-9c6a-4630-8ae6-99df2684288e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5848a499-6ffb-42a1-b03c-56c9f992803d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e50c17-c4b9-4fd2-a732-d5146703aefa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "235ee1fb-7539-42fc-aee4-bc8d19e06956"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b80441e-16da-4ab7-9946-3c11ec158751",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "086f1fb4-277b-49a9-bffa-c434a4f9fbe7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dd501fe-4c66-474a-8c45-05d489498f28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7834b41-39cd-4670-83a4-2e9ca557e3b6"
                }
              }
            ]
          },
          {
            "id": "504c8ee1-3a0a-4d77-9c71-8feced487683",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e864f184-0a50-4a0c-a955-71731445d4fd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a2ae3b6-35ef-4dcc-8805-4d60073b3980",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec361cb-d3b6-41e2-a502-c1fc588e7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0350bf6e-de1d-4e7e-802c-a4af274c1df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2d6691-6ccc-4776-9077-3047bcc8ee40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40133a3-963f-454f-af38-7886f703f144"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56944c2c-6c59-4935-bc28-31d028be54c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef7bd55e-b408-4feb-8022-d668a23acd41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b471a186-245a-4e12-9e55-b3b9d61d0a47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f8e1e2-1eab-4fb3-bef0-4642b91ff9c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "255f1f33-73a2-4e71-b174-ea8369919bdb"
                    }
                  }
                ]
              },
              {
                "id": "8b19452e-b958-4db0-af08-5fcf8f38cc97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31796b5-9792-46ee-9dfc-5d1e7b492902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e382c43d-e834-4062-bd58-7d15fff901ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85c97cdb-2d49-4e5a-a28c-94561d395c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bb67e91-2594-4d76-9615-54c39762e67f"
                    }
                  }
                ]
              },
              {
                "id": "cb6414e6-549b-4425-9ccd-9e3203f5de16",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a51d92b8-d14e-479b-8bc0-47dad5c7bdaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "304ac5a6-6f05-4617-8a33-1fe1e4df4b7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5d99c60-3405-4f71-bb06-7e374095853a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f72aa290-e8e5-4d82-aa14-8e134f9b4bb5"
                    }
                  }
                ]
              },
              {
                "id": "4cc831c7-2975-41c6-85f9-684baf4e8aba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ec153e-477f-44bf-986e-2e1e89e45fe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f39d8c8-c3df-4247-bb41-a81baa5c049b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d699baad-b012-4f9a-90a2-4f5430f71b51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "53faa57e-c3ad-4dad-85f1-ea96e63a677e"
                    }
                  }
                ]
              },
              {
                "id": "6519e214-c197-4cae-84b1-cc1430bb571a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca8ff894-3c90-4ac4-85eb-cbd759304e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56995f8b-6744-40ba-b830-8ddaa880e97c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b601074d-49a3-468f-b9e7-c5fc92e65513",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "13807199-884d-4179-8a25-bd0ce11579af"
                    }
                  }
                ]
              },
              {
                "id": "7c475b96-6ba5-4269-926e-9debd82bbf7b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90fd80a2-d1bf-4a15-98e0-9bebe85b27e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "affecc49-4d4b-4f40-b507-8ffd4f01942e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b98e6f7-3ffb-4943-9de8-9b9445994e08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25977ea5-d387-469a-8adb-94668786f866"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4653e4c-a0f3-4aa7-af55-757545611ab4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "774c9085-3c61-4d6c-852d-9fe5b91acadc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59ce6a08-c09c-4da1-b817-a147169515c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0bc6ad7-8c40-4bd9-93ff-992fe13acce3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd84cd07-c6fc-4144-8258-60a84df7636c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bbfc6d63-7161-40f1-a0dc-710473258038"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8101cb22-16e3-4473-8118-2bb2fc7816ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "764e90f4-efb0-4281-b02e-dff525fd023e"
            }
          }
        ]
      },
      {
        "id": "0f75243e-f2c7-4db8-a72a-c46dd1f64a44",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ec46bf46-2c2d-471a-a020-ec3abf9f96e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a1de218-6c2a-453b-bee8-2cc4a343f68a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31f53ca8-05c6-4809-a4d9-5320988e2029",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e411b3-622e-4e99-9023-138009702475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d26d9f-039e-4f25-bc24-6aad0e0b500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2847b791-d5b3-4389-a978-3a44a2f38094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc0470f-b55a-4f48-9efb-7529488c0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98065091-9f41-4d6b-9f03-991bc01eec65",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a39db4c-b2a2-414d-ba78-8736f12ebedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6093fe02-fcaf-412d-96f9-933fd63eb881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb5120d-cf2d-483b-93c2-6b6bb1bfed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf2d6da-6aef-4794-9688-536d8ef59525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396b1bf1-6a09-408c-bf26-e40db606ecc9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b8ad37-9710-42aa-94d0-d578aeda53ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c456b4-cf95-4fa9-9ec8-e0fe1f9fd9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89565844-e1c3-4e38-a78e-6e7bfe9d759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91ec2fa-3c05-4302-9706-137e0fa3ba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c687311-d857-4481-90f5-0182dbb48bcb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc05ba5-4e3f-45a5-9dae-5bb484a2a035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50cc5d0-5045-497b-bf25-314adc2680e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60dcc98-2c15-4d86-a374-46c5052b72fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd0a165-fe30-45a8-ae8e-534a4b8d98f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2db7f37-2eac-4a9c-8536-f0fe58d8420b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffbfcb8-983c-4eb8-8ccd-30492694c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ab1ef4-a782-4bdf-a405-e75262a3979b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc17d6c-17b9-4b32-9eda-0ed2e8a4ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7c3995-c708-41c6-86e2-a7ead3294448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8494140-2316-4ccf-82e6-69f616af068c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e492c-1c2b-41e8-9e72-11f0c48aeaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bba731-172a-4b2a-b0fe-85589d6e8aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7981f5f7-3988-4750-b185-919d1d06f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aefa8c91-398c-4f32-aa09-3cf44c86e1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2810766-62c0-46d8-8ff2-4a3f75b2c696",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590e7185-e1b6-48c4-a86f-a4f888d79201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c4f21f-348e-4f4d-8f53-d8e9a2bffebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc797f0-f36b-4608-b001-175b00fd9b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "046de508-eea8-46d1-8d0d-4691412bc999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f6b32-c574-41d8-866a-b838378542a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1596b41-64f4-47a4-95ca-c86f57243bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8360f00-31cf-4b57-9fa8-2fd7797006f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a8c17-6fdb-40ec-9d5c-77ad5e28f78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a87f4f-0542-41ef-ad1f-e3a63493ebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9abb983-da71-466e-8c7f-7a09eff205df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6c7ecb-c43f-44a7-a685-02e50758d223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0776da1d-1c53-40f3-9af3-29a9ae8d9c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a715121-8fae-45bc-850e-9fe61c8601a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28520900-44bb-4c7b-b02c-f8983841935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c83ed-7e55-426e-ac0f-d31cf62973a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb4cf51-93e6-4795-9114-b03d3321b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f909e0-4e52-4cd1-83d6-fef2a77bd73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a3718-d03b-43ca-9d5e-eb41dd341f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e63687-f937-4a58-b83d-09620996a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04954ca-8a3c-4a45-b5f2-ac8d1fcaf0c4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cbc5b4-2998-4285-9dbd-06940d2a5a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5505d8bc-051f-4b6d-b40d-69fa0e3c6a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a781251-7133-4217-aabe-d322250bf6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2dec66be-4cbb-4494-a099-f7d395e4196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b02fc1-a00a-4ada-a448-f7081897618c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5915cdc-acb9-4a16-9714-8a568e504a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be484006-cdfb-47a9-b540-bb53d37dc9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d0d83-53d0-4990-94c3-17c1cded67e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdef04ed-fb08-41a1-bd61-99da355568e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a67672-9bfb-4d1c-afc1-25da7051b65f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b558a-9e52-48ca-ba3e-9cf990942f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d36a4e4-ec1d-440e-8f7c-274e41576403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91574d45-caaf-45a4-9f8d-63bf8056657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bc07a3-e582-4e55-832e-0de31f468d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f573a7c-e74a-4d4e-8fd1-f2b2ad9fee9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fef5b69-4b7e-44de-8ec2-89f1085cdf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02891201-2ec6-463e-a1df-1d073d7bd579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636f727e-811a-4eb5-b1e5-045239931776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94cf768b-5447-4fbe-979b-95efc641e79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2b4eaf-19f0-46e1-9242-4496ba613081",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb975dbf-6b37-4482-8489-7eb94ca1e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304ff29f-4801-43b3-bd94-36eaec841078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5ded7a-741f-443e-a316-3254e5ceb5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fc93e7-624f-4e05-8c98-245c1c3b27c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb1c6ce-6f3e-4d76-83b0-b4f2ffb66523",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e65d00-c8aa-428c-960e-3b895f6b39ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39fe9c9-706d-4f2b-9e9e-5c12f6bb081d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63013c97-5308-455b-b68d-1c1cd266ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0567e7-b1f2-433c-a3a6-9c0dd0858fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1f175c-3feb-48f9-903a-499869ffce00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf36d0a-360d-41fa-92df-8e080cf092c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92f6be3-3a3e-4a7f-88f1-9a66a6972741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9876c662-911b-4035-8c20-d0b36337be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e90c5d0-df6f-4a2e-9ed2-54eb3abd1b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95969b01-929d-40b7-99e2-d1a4b2c93211",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b589bd56-b833-49ab-be83-498b6e7c0557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c582a1f-0e0c-487e-b714-6265cbbafa6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59374398-4e45-48e2-ad5f-e04d27030368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e357e73e-ce65-4720-8eb2-e608087d9b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22e292e-b293-49f9-8140-3ce58a10b73b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d95a665-695a-4bff-afd5-e719733a5fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c379d930-e20c-4919-bea7-34b711805864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaf52c1-ab75-4469-9e3b-3ee138c7d423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "129f8181-08c3-47ce-9cfc-59d1805bb860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc61ecc-c42f-43f0-a4eb-35d7ff02ea4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f0b407-41f8-457d-a49f-c6600494eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de5fb2c-fd83-457c-8d19-0fa5cd471ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abdac45-4d20-412e-a64b-fbc996863af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece4ead6-594b-4467-a47a-3665dcecc405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a6a7b5-7739-43c0-95e6-211c8cb247d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c5da40-9728-45a7-b68d-8a0af7f857a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebc3d93-98ec-442b-b8e2-48496e8ab991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c6694-322e-4d24-b8fe-065928cde9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7acb8d-fc72-470e-9437-985ebd02c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08772496-eac6-403d-a9b7-444d77c68b0b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582cf1b-eb0f-485a-8ea8-31049c9f5d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39b91f1-dba3-43af-bc8f-8973ac2a4716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afe45f1-c701-4734-9f7d-b22c01570b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c698649a-7e41-4a78-afcf-b63ba42fc4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44893b6c-0b4d-4c12-98c3-d76afa081890",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30e581-548b-4824-9382-2a31559278e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22198178-83f9-467d-ae93-0347f0443654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be07839a-7c41-4eca-a2b5-367e0d198ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beae6e01-99c9-424e-9035-8e4a3d44af29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0321e0c7-1a4e-4e09-a88e-7430906d14ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b8c04-d916-47cb-a901-c426fae1a671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b39370-1033-4953-9b22-7574900e97d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e231d37a-cf2b-49ec-8a8e-f9eb630baf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac2f502-8170-4b85-97ae-ff982d729c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac677acf-367c-4646-b81f-720aef6e317c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc8e33-9f25-49e3-baf9-69af86e523f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c3c1a9-c739-49de-8609-69c29785e877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ac02b2-6902-4718-90c3-cc12e53f7648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac7221d-1d7d-4661-bdcf-58c9e1395629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e2d0c8-4c9a-4b15-a509-86e5e1cf6429",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d053430e-7ec7-4067-b564-84b2c6699a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6c4482-d26f-4fde-be0f-d18ca738b57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e51106-cf88-45b1-80bf-a2c52076a829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "638077ea-5df1-44b0-981e-10455ed5a323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0101d393-76f3-4b5f-a68f-1bd2778f9e63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23f5c4-e280-4172-a4d0-0654965422df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24271abd-aebb-45dd-aa23-cdeb2ddf4974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45a7a21-f1bd-4a93-adb9-108c53f75e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac947e0f-57e5-49c1-a7d2-d528c74f30ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d04b7-72d5-4c37-8f05-431b7c952880",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609a2871-c574-4e8c-88cb-e643f14ef6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9044d46-1aa0-4ab6-96e7-0392ef7a3dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53a38f4-f00a-4bf7-b96b-789be413921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aba3df5-485e-467b-b79a-65f3dd70ba02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6fe5ae-924b-4407-93fd-3eb747f1e02e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135e98f-0478-4ee1-99ce-969bea1b2d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49899af3-e9b4-42a9-818d-e8afbb5c4907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff279760-cd81-4669-8d7c-6540c7e2e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbed4a39-eaa1-41d7-a4ca-e31a2ee21008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29fc31c-527e-41f5-8f0d-1e67c08136cc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576bae29-ae7f-41b5-93c1-e62cd60c861c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eef043-b9ea-4645-8c61-43879bcc4c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e75bd-c1ce-405b-8b11-e4d724ffa2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd48c381-2496-455e-ad33-b6f88891644d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8ad28c-87b0-4216-bbc8-967614fc56b3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f5c90a-4328-4a79-bb41-47b753e0e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b824a4-40f9-49fd-80ad-e804a5947341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf65d3-e3f8-4949-a860-7eefc0d689fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f971c231-774f-4976-8ca9-855630a3036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802cfd51-e732-4bf0-9c32-2bf72dc08e0a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b42a54f-ce5f-4962-8079-883e0a200aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3e7593-75d8-48a8-9a7e-d646ea964c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b3880-f25b-4dec-b7c1-8224b330f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d92150-5aa2-4163-bdef-4adf4591817a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3bb7157-3344-408e-b3fa-32da0fd388d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10d6b11f-87d4-4bb7-b523-6d8d6ecac1ad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fc0e38-b395-4dc1-b936-393f4edbf433",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a479899-a7fe-454a-8604-73656c5e1c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8358f473-47bf-48fc-a7eb-b9d860401a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "228cfbf0-6e34-480f-8692-df7a555f9ed3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90d6ab6f-e181-4a1b-8361-2ad3dd2ec0b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a704cd8b-9028-4deb-90ce-82d5f1a1d4a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f58a72-6092-4b3b-b17d-c99bc3a5c60c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72f51c1-db72-421d-9e6f-5bac8deef75c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4d3a8ba-b6b3-4839-8a3d-6bfb8668750c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd47cea7-11b9-4203-bed5-a941280ec327"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39b78a41-7454-4761-84ab-3b9e55f76d24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e28a2ed5-dae5-4943-9663-bcc47cc408dd"
            }
          }
        ]
      },
      {
        "id": "6bb42440-e61f-4485-8aee-c7b93159b758",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "34dffe13-9da7-48ff-bd70-4813bc0c0065",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c66177cb-a620-42c5-a703-484510c3b3df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d56da292-c4c5-4e59-b3df-34611e49f2b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675718fa-1eb3-4b62-b545-ea0d3d51a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56823f11-ebcd-4c5e-b016-ce743184ea79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f9826d-3c4f-483e-86cf-fbe5f3e3468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dccdc5-2ecb-4c08-b093-f076de4f4575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a79781-cc63-4bbb-974f-17be2d873f1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6156400c-7ecc-4026-bf44-47ef05eef3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27650a32-1469-4bcf-9403-7aaca309dee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27129df8-4bdd-471f-948e-f481e011ce71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc9730a-c1a4-4cd9-8c51-43cf411d0f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd10a19b-f9f5-425f-8e27-a8dc9febbfcf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcae5b80-aaf2-44b8-a50f-f40b7dd33a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbcbde9-e8a2-4e99-bfb1-18f6347e7e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd74937f-f6d0-46f4-9854-ce7dee301285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfe9576-9a5c-403a-a8fd-c46c005a11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bb8c46-d550-4eb1-96d8-1a87e90a70f9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380d1eef-6400-46ce-ac24-54d53799ad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807042a5-e2fa-473e-8ebd-14463eacb9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f2d6b2-a8ee-43b3-a0ec-5397b3eb9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a7de7-6093-4721-af6b-f58af81d66df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81161cf-b896-4084-a2ce-171b0f90db73",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d8a86d-214f-4ba2-9b4a-4e842918a019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae0a4b5-c599-4b8c-b497-4a7f30bd6a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cb4baf-9d99-47f2-bac1-fadc7180cb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b44599-638b-40cd-8b67-2ea7090457ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f424cb9-e4af-4e8c-8908-dfc46e228035",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d94b6d6-979e-4f86-8d01-29837560931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ced4d2f-a98c-4091-ad9b-8707cb97001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209cd22e-5650-4fbb-8ad0-5eea1242eb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4e2789-356f-4302-8329-093c48bf0a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4552c8-3721-48c8-9e22-247c66fcd09e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fa3c5e-ea8a-45ae-a062-0d6b0d466154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12eadb7-dda8-428e-8c6a-47099c70e5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6a7e82-183e-4014-b434-ddc1500e7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e23d640c-6c94-45c3-a028-f102d4a1afa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1001320d-c468-4df8-b9ca-ec5f0eaef987",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c84d4ed-dc2c-4aaa-b551-c468265558a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb971a6-c905-4074-8f26-bd1865c7e669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5cdb2b-6055-43e1-89f3-0f9a3375c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5ab5c8-fdcb-4ffd-a27d-9b72f082e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba276b2f-bce8-4857-a2a9-48b08ea1c1cc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d7929-867b-4094-807b-3c60336f37a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0123f6f5-8700-4a03-9f9c-590ee1765c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6214cd98-1b56-4e6f-954f-36083baf1fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94697964-1b20-4b11-b0d2-9d8dab682bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1972522-79f6-4b0f-aae0-6dc3b841c9f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec3f05b-90f5-4ee4-9750-e6266b022680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a029a4-10cb-4b49-8d15-22c1ed65090d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eae54b-af73-45fd-a525-c9210f9570da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1f11af-d5a8-45f6-a367-2b0f36eea35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7887a9a6-7c29-4cd0-a728-2066fb23f944",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d19493c-f56d-4574-ab59-cd59c2e11dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e66134-996c-4a5f-8bad-82872cc59f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a515738-0cae-4e97-ac06-cb6d04b8bb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e78bcc-0381-4aff-a3f3-d5fa3af67659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2d0e2f-136f-4d5b-bf8f-1c40be04204b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffd9935-80e4-4466-8a84-85d65b8d6a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94356aa-f1dd-445a-872d-76f335262ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac05eb9-ef26-4226-bc93-afa8b45c3d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91fbca6a-7630-411b-b90f-1d0de3ddc39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea4c3a9-33a0-4bec-a9ad-a1c0012e4301",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db301406-481d-4055-b175-7a66a10348de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f8a08d-7fac-4707-b364-bea57909cbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ceb30e-bcc7-41f7-85c2-80e33c93f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e84aed-b1a7-45f6-9b56-6a2da4bc638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d425448f-028d-47ef-a854-e7db4195a167",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8951c2c-b30a-4fde-85ad-9798275fefed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa44c97b-0ee4-4e14-9a87-9addb6d05594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3cf333-0e71-4c33-b573-b23ada274531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9297a534-af3d-4536-ba03-6f25a7300a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b581664-012c-4f5c-b534-b039681e99a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8f13dc-08e6-4d85-86b5-1727eac664f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8472366-6964-4e91-a388-e67c1c738169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8865d88-9eb6-4995-a712-ee386bf79071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d216e4-a0c0-491f-8486-bfe3bb63fb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bb3dc4-efe4-42cc-a0c1-aea0b131ffdb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbaba0c-16d5-4d29-99b4-aa0dd7c60bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b617073-5f14-4870-801c-7d35a2f58ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b66469-8196-4477-9d3b-bdc16069ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4270d2b4-02cc-4cdd-b662-cdc9e3cabed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee01968-fb22-4cb9-9575-7fb933722a70",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b935f1f3-4b37-42f1-87c9-8f12c2963c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aba69c-b4e2-406e-9c53-975466c9767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ebf2e6-e728-42b4-9770-94f87ad02ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0c93d3-8e40-442e-964f-8190902b96f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046166c1-82cf-4419-8536-85ac4bd6beb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921ff82f-6413-4aa4-ba3e-58230c599c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f27b74-b3b2-45a6-9fbb-1173c9b8462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb189bf7-58ab-4b4e-978e-760349a6d5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a59e7d-d438-4a4c-aba2-79310288c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5787eb5f-ebb7-4959-8268-da9d341697a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3e87da-2f67-4473-95bd-73429c6f92de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbc3cd3-6151-4f31-b57f-d5b5ced9a343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56266781-c36a-4417-a64a-8ade7a28f616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c545c9-1d09-419e-8d04-f97cc438a259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e812de76-2412-4648-a42b-08590cc85ebf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71db897-aa73-4005-9d47-d0f1395908dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a9ea0-6ede-4e40-b42d-1e9bbb92e282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646850d1-f9af-4ec7-aca1-6abe6950e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7500b8f-f0d3-4971-b34f-b4456a7dc795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9db1df3-5b0b-4d3f-a718-137b995aedaa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fa4823-ff3e-4250-8142-b804f0e97904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9ed8ed-c739-45f2-8865-366789a34a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b485ca6-c99c-4c08-b535-2905668e8d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf294a-9fb9-4b9e-920a-35da0a16c1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e124e728-9db3-4930-a748-79aff02659e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683e792-4a35-4990-aaee-d1e2ceb58564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbadb82-9a70-4472-b201-738d05fa3c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdb60e2-bb20-4dab-904f-9b3db97eae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf057eb-f69e-459c-9845-94a607db443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dd0d58-07cc-4cf6-ab9a-6350f206b064",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6cd5f9-f495-4b45-a32c-af4115752c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5837496b-6de2-4a3f-a2f0-d3b232e45e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f105aa-965b-4a52-be36-d07135d214cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3b5bb0-2685-4114-8ab5-0c9f2e2ba4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1395625-d7ed-4364-b603-909bbfd4f323",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26c47fc-7f9c-4cee-a331-aa1ef3815ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71351c88-5574-4fe7-8738-58e8479df7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f5ba91-98d0-486c-88a9-520b324f80d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e9ee7e-e61c-4edd-9e17-d93560f9c3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f653a0-268f-4b4f-9117-0eb6796c35a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51017177-72a1-46e2-8e30-15c24d071a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98240a22-9311-442f-8fa3-93b336407d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47cc0e3-4a3b-42c0-9def-c738a29077ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f01ea7-0a47-4a37-b98d-199c679281fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20229a7-8d28-4022-b95c-2243c048082c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8839981-94f5-4210-a859-fd5780d30afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dddd24-4a12-41da-b754-693ed4839f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdbe75b-ade5-4e32-8ad3-1bf3dc9615a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d3068f-4dd2-43f7-b062-ff08c8da6933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af646829-fb38-44da-9aff-4a703d215edd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9930eb-43aa-40da-b241-9297e936acc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753191df-8ff3-4a87-a683-1cacc8fba36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340431d1-c398-4569-afa7-e1deabc9e1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f65d74a-19d1-4fe6-9a29-730db052c8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d588c26e-fb64-4ed6-b1e8-1ea3b7c65090",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbce753-8db7-482a-a2f1-c1f57e6b9b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c1279-9194-4dbb-a47f-1dccc6ea99bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72381d94-9ef5-4a7c-bbe8-1491d3e07914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3553d774-ce07-4083-af71-17323f25463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e277af-df51-4af6-a31e-e0d5e86ccd71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ef76c2-f49b-4596-9e3f-cc7f452ed0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbe419f-7171-4c85-8c97-d3c426635210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d61a50-c4e5-465e-bbb4-4ca4e3ad841a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74461ea7-c16d-4f5c-98bf-92602ccffd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0a0ee5-9406-4756-858a-71f0fb5b5b81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed98e5-c982-4b9b-8319-8dbc927b161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25b2383-22b6-4a2d-8544-71816bfc4d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9c62c4-bc9c-4d9a-a74f-952f8a8114d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f01c40a-2d75-42ed-a4ae-16f163dfd726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319151cf-acf4-4ecb-ad3d-cf073fa96134",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2420762b-914c-45c4-8a9d-76d0203bc72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91f29e6-3d71-4653-8a1a-5c29848f1f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f2d11-5b9c-43a4-bf1d-6836a24f541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68599410-fe76-42e7-9189-3099b89b3426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0dab7-edac-4db7-9bb0-b73c8f3f39d3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ec91e2-e53b-4cf9-a57a-e979ecb0b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f29f4c-8b64-4988-ae86-bfd026e96c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fd2d2f-af94-4eda-b439-b719d9ea646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5280ab4-fbc9-43be-9c4c-23b94e30a987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc9fb36-5929-4c42-9d17-c0d4779bfd55",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379b7d89-4a42-4334-b4cb-ebf7e513d452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246d5ae1-7920-4e9a-bbca-f7ec82ff1a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c6128d-f98e-4efb-b807-7d5cd0db2a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6917c566-e6c8-44e7-a24f-12237b7436e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c595740d-f6e0-468c-a822-f4e60449aad4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624afd2e-bfc7-4621-82bd-5eb2feda1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e924b2ac-7cd1-49ad-9ee7-87257629f14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46982683-e7a7-4087-a378-01cdd4f81ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f35450-984f-44f2-bb1b-859445879685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1a75a-7b86-44e2-a32e-76a71ad8d241",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a2ec9-0af3-4d7f-9c7f-f2320c7c1a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d8dbdd-eeb9-414e-a96c-cfbe8eba0031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54986e9c-4c5d-4228-b5a5-c8240f54cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac696bf-08b0-46b3-b791-c87bfac689c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52422ade-37d3-4878-94ff-54997c16ed62",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f410b784-ea31-4b62-9e1e-29a8b00e7c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f357e48-a37f-4300-a8cf-1cb3c1335454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6be62a-7a82-4190-941a-0a17115deac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0e5504-9aa0-4ed2-91fb-ca23c9e7f46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d052b2-3350-4164-ab57-5687bb16954b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58255520-df49-4ef6-a419-ad011837dad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d216037a-1b04-4531-808e-c6dc5923496c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4829703-881e-4345-b434-2025e2055bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d81d51-fc25-4b68-b970-7bac16276e65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "108480f8-08de-4f2b-a566-c6b42e38c7ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fecd11dd-7de4-4b1a-a2ba-75112c12b098",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03200afc-f099-4b46-be29-70586dd37afd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6353c630-4d1d-45e5-a90c-d7ef87f97a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e844e1c-d5df-4522-9571-f7ee7f614186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d452cd-456a-4210-833a-81defcb345d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dd9554d-69d8-4a2f-b977-f9da502a8c30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d8e4af9-e03b-4546-8e9c-71a1b05dbfbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "626296b7-ae36-4182-96dd-05675cb29131",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96d81b94-737d-40cf-8b5c-44bbd8a87b4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4a6f9fb-bf20-4403-a402-97f881310f3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f29a96af-d1f5-4dab-bb85-e042d7c2a156"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "112834a0-487c-4f88-9392-a654626969b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bea63ecd-0959-4f56-848d-61532ff48224"
            }
          }
        ]
      },
      {
        "id": "4304e888-798f-4911-af56-24725524687b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fee44c60-42db-489a-b5c1-dc8eb1f78c97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dbd0d57-6361-4cb4-aa6c-beb10aceb62f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18974ae8-82fb-42fa-868e-71824952ef96",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae32fc17-c1b1-4255-ad54-22766aa2b0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d3b605-6064-4010-9fd9-3d0d0ccaa6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c848bc55-7016-4ec8-ad52-29376a5d343e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b46dbd-1496-4395-973d-fe9c8167411e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae0a225-920f-45b5-970f-e874faa3a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d0269-8912-489f-a7a9-ff2caa88894a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf31396-9e3c-4dc7-8e86-c4055bb48a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3fb4de-64d9-4a82-a924-ef206aedc1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0337d13-5b8f-4b99-ad88-bdd4bcf97587",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227ae3de-87d8-47a2-93e3-33ddd3554bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dc6fe5-3b38-4cb1-b584-cc9088d12feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc0ab5e-43ac-4410-bc10-afedfcedc4df",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e10a371-b735-4ab5-80f6-c17a04d3e91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f641f2-efca-4cbc-a90e-fe5c0c971f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb5cf07-e458-4d0a-b2ee-466f7541ff5c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fd7a47-4dc3-4f9f-894e-72d95d637b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990ef54c-41d6-44c9-b136-1d816cc31070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7a7149-5952-4a60-8deb-5308181f4c4f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea59c63-c2a5-4f9f-a3e7-d1112d23757d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a483810e-3b46-4919-a0e4-e4b7edbf9dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c97c5-c985-4ddd-88ea-a1410262cac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4c5e36-1601-4905-8586-e743b5d94ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc10d917-743f-491f-85b0-849bcfa4bdd4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99c2e6d-d3d9-4dc4-9cfa-f4cbefdb8b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f066b7e1-4945-42af-8e19-6a222fc94c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f405fa35-0203-4a0a-bd79-e455d5e0a2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d043a0f-aed6-4175-b0e2-006ee4258d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83530d7e-2f7e-445b-b3d7-dfa8c1dfe44a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a503c3ac-69dc-43ea-95a0-b6b533d642a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e4bd67-44df-4c6c-ba8c-853180527374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d746a2d6-7194-4665-a419-7799e72d148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3fe3b4-7e7b-4154-8b0c-e37de166c53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f047ba7e-67e2-4976-a774-e9abbd3f547e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d1830d-41ee-47da-ae10-b630564e8936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3680312-cbdb-4f78-b058-10261b67bdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97fe00d-3277-4c3c-9306-c547782cecde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7509ff4-6538-4823-bdd2-428040da323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2a2d0f-41bf-4769-9f44-313a92cd7600",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1e8199-66a2-4483-8042-4a83f992f3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cd0732-4d27-47b4-b8d1-a6c19370f565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b469c4e-2083-433b-a73c-641dfe0c5a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe70f0-d3c4-45e3-8030-4fe36391c511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01293718-20f6-46f2-8ae8-05e9312d67d3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527170a4-8440-4fa9-84e3-b44b0c7c5a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6944c281-2853-4b54-832d-9198e5555bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d3fbf8-9319-4d6d-9581-747dfa017a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df6f084-ab5b-43d6-831a-159d0ff8472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f4eca-569c-46dd-9077-263b3fc8ada5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9610c959-e824-4c18-ab7f-322ead2883c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762f6f70-f0de-428b-bab2-511214d76f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a35a94-fb27-4766-8a93-8cd9b02c38f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b25cbf3-597c-406a-b875-7c8108c03dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce29cd58-63ce-40fb-a4c8-3342f2cb7764",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aa1128-7c7d-46c2-bf11-ea5aa013ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6001b01-fba4-4fc6-8773-3339e4873d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7950d92f-5236-463d-a324-c82365aa51ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bb98c5-a897-4bbb-8ba0-968b2523509c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6113d350-d652-4820-8a64-a1585b58c6a7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b79b80-fefa-48bf-ba56-7db2f122c12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837a3d5a-23a9-4fd9-8d13-106481563b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20119f1-24d0-4ca7-8093-e9a3c75458c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be00871-ad9f-4da7-88e8-b1879d5cddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca9e03f-69ab-4bc8-bf38-c02c10730328",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03785d11-fc29-4727-a4bd-63182b327ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac49130f-91e8-4e6e-afd5-65d90127cf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fca714b-8c94-4b41-8ddb-441ffc4f600d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a26e86-5c5b-4e15-bf16-c78c40cde229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6451e829-6527-4e60-b632-637a2d1d6ea5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf15ff08-768e-4150-b805-0bada7ebdd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c97ccf6-2a7a-4b20-82e7-4ec20ccafaf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27580794-44cb-43fa-9405-631bd80fb27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1acdd98-3286-4f53-9eb5-1604c0196b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae13696c-3b55-4097-a59b-99345fd9f7fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30725bc8-2c8a-4917-8ac7-c66ce3945958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3cb54f-2b44-4325-b8ab-44e98887fa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eeda90-54fe-4c10-aacf-1afced859d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d03cb9-304d-4171-8f72-cdc3ba9d11cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c491896-6f1f-4357-9dd1-1a08d1cf61a3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23873f3-75d3-4df0-99d7-c88cef9223a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8237e587-8230-4217-b631-c3d834b1c887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9724be-ff96-4620-b941-5d7d976f0f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d195cff-b114-4947-9a81-daccc3e1228d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10812698-dc44-42df-a788-cea63cbbf6e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fc1688-bd08-4f89-9da9-004bf0b1dea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64418ac5-0ae2-408d-9174-37e94b48f8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812d01fb-5e09-41ac-8b69-e502b3293973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77901aae-a5c6-4cfd-b4d2-dd6ba63e04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2775f907-c01d-4441-881e-b010b9d97c48",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45691f44-f1a9-46f9-b4e1-3603d96f692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c98e07e-383b-44b0-b50f-1f2b34ae18aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caf963d-b7cf-4b2e-b072-56b202130dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce5190b-aee0-4a36-befc-af3022a36cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473c1b37-4fa8-442c-9f87-39194f272bbe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c3be74-0984-410b-a3a5-3f2b56f079d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fa182f-dd73-4a85-b3e6-904eff8fbac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ac69f0-5ad2-4419-9c29-4123ccee4cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00961bb8-79ab-4ee2-a865-5b1cf15b69ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9810d375-db70-4900-bbce-94c1c92ac7c2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0007e3e4-891c-4e20-a617-66e2f4a8ed91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b64074-d937-42ff-b789-b78ad17ed296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e3b07-0327-4f8e-8faf-bece9192fb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cce0cda-9bda-47ec-827c-6fcaf7a6b823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f463f7-5b5f-4603-88d2-8ad4b08bfea5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf01d2d2-e9e0-47d4-b49c-efef91899b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2700943-09c4-4c71-bd1b-52d57ea04ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feffedc-8dc2-428c-b04d-efb6fb6f3eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644fbfbf-c634-4146-9014-bec7e54d0a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9706b380-82e2-4d9b-916d-e4368470de8d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c86afb-4eb9-4a51-887e-795f20a754d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c04165-a4c6-41bb-9d8b-83ff8e1302b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1993728-350a-46a2-ab6a-66479deeb0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c91e276-e801-4e90-b54a-c527a753a7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e0df3c-bc96-4d0a-a2f3-d10565b96d11",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7261485-495d-404c-8812-a5e4a9865a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e15404-0258-43d9-9bec-0a099c387569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c202afe0-4c99-4086-b7c1-487cc07aee41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0542648-0837-457d-a03b-03e736516e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090d91b9-38b5-48ea-90c3-60e65786a0fa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3779ae-460b-4132-82d0-c33bf6ea1fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0605153c-23c4-4f79-9c5f-c83a012c0797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19b92aa-1f6b-4084-ac5c-ec55aa2d48cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b191833-5b90-445d-8988-a2ffb027245b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1eaaf-e590-4614-b149-6dd287b67072",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2258f70f-23a1-4d2e-9842-48ac1767d71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5dc103-1275-4bb2-ac44-a31aec83e4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d841483-8257-4334-951e-be53e32464e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5608c758-0ec4-4a8e-91de-cab713fee643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc1bfcf-5d99-45bc-9b27-413f6e543b4f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ef377-0553-4995-afab-fc85a2382c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fdc01ae-f93c-4944-8525-5311a3b49955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27651bbb-697d-4726-b755-21ca5c57bdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb052e24-816f-4870-980a-b4f8903c320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebfbd49-d7f0-495b-9b71-92c71487f7df",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599decef-c385-4200-8695-0fabd440aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e189d6f5-6bb5-482e-bf7e-97e95d456c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c92765-9c73-4c0d-9185-4239725973fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0db7673-e7c2-40a9-9f07-a0b2659be8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e123f5-c90d-4ae7-a03a-931e9f686a90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b064364-8c02-4049-9b35-b4f945239219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863d2d3f-05aa-4437-b398-4200023dc696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b09ae-58e3-48f9-90ea-65a3efcbb8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88db763d-4af7-4e89-a83b-d1a2f07205fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d81876-6dd6-4caa-a349-204b0e9feb86",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a07508-a0a7-4755-9536-17571ebe7bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e86c6d2-f959-46de-9216-55b3c1dc566e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cda5491-f90b-4a79-9336-5fb3704a550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41eb1651-03d0-48e6-96fa-6cadc9a6b985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6a5ce0-eb4e-44b0-a917-cfb0ace2735c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8ce6a2-ba77-4d4a-a5fd-dc71cbdffcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774964dc-32c6-4059-9f2e-146ba7489824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e5e131-d5e2-44fb-abfb-6339a8d797df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1816bd7-9399-4fad-89bc-d7b740d20615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466db0dd-c4bb-46fc-9e4d-c2bc65f5c607",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f16599-d84b-440a-a8c7-07af71d75e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816ccd52-5ac3-4485-b40f-64c72d31c416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51978180-8f3d-425d-bafe-b41bf1d4fdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b43258-73ad-4119-b9b2-90bdd20ce748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7482a831-4bfc-4129-8e2c-19452fd94d9a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf50bcc-63e9-40d8-b965-4185668db0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e251e0-fb2b-4eb0-936d-eaa6576e3f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2812357c-8475-48be-aea5-25882a01b9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f6f2b1-08fb-4787-9945-c9bfabb61192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb7427a-4f36-4fb3-9919-8646285379cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd84512-705c-4fc1-be77-075c0344dd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa3edab-a95e-403f-a9f9-622759a00d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef33392-a8c2-4b5b-871b-1b24be2413a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c7bea8-4778-4e67-9940-1331ac171cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a8c7a-cc30-4bd8-a089-f67da573de25",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1508f05-046b-4c2c-828a-0c362c746860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85324fd-d41a-4be6-93c5-731142cb4843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5d527c-396c-42b7-aae8-df12f57acc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ec4363-e4f5-4023-8b32-aacbfc9abc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc85d3d0-defa-42f9-bc20-b6f8b3679a57",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a68eaf-8279-466b-af02-fdec3ee253d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c353b2-9fa9-418c-bdf4-408d91a0df99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d080fe0f-b043-4682-aafe-a9b29e036b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47e51d2-9272-4956-ab28-f421db633216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471aa08d-208d-4741-8229-5262a2c19074",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca4f4dd-1f57-4855-94dc-06b76ed93a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e40ba1-cbfb-4dc1-8d7c-5b3cd0649d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb2af04-9bec-4c0d-8c18-07bd66f172ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6d3009-8cb1-413a-9e42-771a7e9174ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77dfe87-3c3a-4d08-a638-2ac513c06150",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9905e22-3438-40c2-9fa0-974182836c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5346c8-eb65-4104-bf39-2a4a2a3a8373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb713a62-498c-4c84-ae8b-a8b7ab5c711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad41852-cdc0-4f31-9a5c-907ba612e6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203ac24a-7d5f-4d59-88e9-a2d0f1f37ffd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc3d52-fc87-48f6-856a-d435facf23d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb81c3f-11f8-41e3-9d3d-b5a662edf6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f961ec-4c9d-4c44-80bd-a52ba29a8293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47acd31e-49a3-4baa-8aa3-df3bfcf8be5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cf2515-e9c9-4138-ae9d-b3bb78329fb5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cb9818-0330-4a7f-8ff4-dba4402d82c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a2824a-297e-4186-84e8-7315eb973277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb51b11-49a9-4ce8-a364-a285698eff30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c68d7c2-de24-4163-aeb8-8ffc38af75af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bf6621-ac9f-4e88-8b52-0c1715902a01",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c54fe-0736-41f6-8f76-9006467795eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cca7ae-cb2b-455d-b0c1-ba63dc59251f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff25937-1d8b-4783-a42e-02f4ebdad18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79cc58b-6f9e-4b90-a2b3-2eb301d50adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9170fb1-1380-4ef7-9ad7-4946075159d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41e419e-a880-4d75-b1c8-99d355d8106a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca36aba9-166f-4e54-9164-261327627dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e583f0c6-07a1-465b-a151-b59d78143daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be0cf18-069c-4781-8011-e449ef96df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f56fc95-2dc0-409f-81b4-19dfc4b7c029",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ecf68b-bafa-491a-96da-dbfab252d399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fa20b5-9e37-43aa-a759-b41fd0a3ee8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff95061-3c59-411f-840e-0cef9d8e9d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a27b69-a39b-487e-823d-50ff8f9bb7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6678e2-7334-4e7b-a59f-80ac00177941",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57888d0-23df-4913-be11-7ff3e74e6048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cc43fe-01b0-4440-b685-e37f8be89663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26a0596-0787-4baa-9498-e4a42eeb7878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7fd182-7b97-4743-9253-f875ec68960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6203fad8-f2a9-46ef-b022-44078b4b8070",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9bf98-288f-4724-bac6-1800b4405ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ff5ade-fec5-4cd7-b5ed-b05bff51d698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d56b7-38d9-46e8-aa07-5da178478425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55d4841-eedf-4350-b3e7-ac642e4adce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820217a6-cb19-4034-a2f9-87507def1295",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6269093-ba61-4e5c-9eef-fa68d5ae7da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dee7387-7121-4ca2-b2b4-0d2bf1124baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eca7ad1-29c1-4de1-bbee-a2736655e894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be307198-e5ae-4b0f-bf70-f258ffbbb30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20baf0-36d7-44b0-bde0-77dd4392cc67",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a96e20-fd10-4af8-b7a2-d4cd79812bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee85366-530e-4477-b0f9-43013eae2ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4f311f-cf94-4c9d-bc94-e767c51443b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c0858f-b5a5-4421-a171-e02858bd1c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440eac10-d54d-49de-9c32-1305b0f12e4c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e211c4-da13-43db-b8e7-6e01881033f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977e24fd-562b-4e4c-b3a1-9e026b61f070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd13109-5b29-42eb-8888-fdc519e76f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48353d5-3d75-4d3a-aa0c-1d111db3d66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc0f1d4-5a10-4c92-8c47-50aa5ce9a097",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdea947-72ab-4239-afe9-9e2204981cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927297a9-40ea-4fb6-b333-242d9ac8ad8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3672890a-b3f9-4f0d-b695-fc19d6126717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a935c817-f3d3-42e2-8fed-76c420e3ad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcea7fd-e0ab-490b-9b20-2d357f661814",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e390ce-b2cc-4ed2-abd6-8c7e7eef3f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63f2e1d-b3fd-47ac-8675-1670400c43f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f361b9-93a9-456f-bae8-431df853acd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33675475-843b-47d4-9fa7-6a52e732cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd66b314-b11d-41e2-815e-737d680c139d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7361370e-ecbe-42a0-9f15-993c9463f529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bb5846-41d7-4263-b8d3-03fcf4bc04df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d226aad-d604-4be1-b5a0-49b20640732d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6ab856-845c-46c8-9c0d-412fbf1bcded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e2951a-2ce0-4c38-abd4-3b5550131fa6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b891b5-4610-41c0-b80b-1ad2eceef9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae76935-b5cb-4196-bda9-5c7376e8c899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34362a30-7315-471c-a39b-27671ae850e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88787e9-c8aa-46df-9d54-43668d249831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07362ab4-5eee-4368-b168-0708d2aaf9c5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772ca743-b034-4669-9e12-dcdd3b656d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55765cca-1b68-4014-bafd-d8a91a03f9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dee22a7-852d-4bf9-a408-a7c987ef349a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605a5c61-c58f-4091-a797-d0aab404f035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9676c5c4-2120-4210-8d70-c6ff62bf7a1f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366f6099-7d93-4975-b1b7-64fbfc7bc30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775386bc-d14a-42ec-a57e-26dd8c9b8623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cc1767-b5f2-484b-89f0-52f4bc8c25aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c69d1f0-1c22-4f60-80a9-4f4a7b39cbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e853d9-e2d8-4143-b425-e30b0933fb27",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec66ab10-6837-4e1d-ad85-b7040d65de68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae789288-44c7-4d55-b2d4-58e81e9f2ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d982ce-5f88-404e-9963-763a93e24bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb805c1-f807-4a2b-8ad8-b07d784ba742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a659d-324a-4ac5-8de3-621ac9605a95",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194f1200-8b13-4676-bec4-33616e25f89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73350b79-1c8e-4d51-b187-f062c128d0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43535b7a-4e12-4a2e-8ec4-e45ec5d4fc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8311edb-da69-4c8d-84e0-156bbca196a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6013994-5ecf-40a3-a3c7-6e1fa39f3370",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f955281-b7b5-4287-ba8a-03a95e281671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a70874-2f4b-46c0-afad-dc648aa71519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f96b8d-4fb2-4de3-986f-8421362a2ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdad6ab-336c-428b-b788-0030067cdae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90181825-99f0-456f-ac78-d372eaad8d41",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dbadea-46b7-443b-8d25-8b1d3a883d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484cba6d-d373-4c97-81f2-f1c5d9e91a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d439061-dc0c-4150-8081-048ec43ebbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6644b-aa31-4a84-bedd-6a168f4ff01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57afac0d-5280-4a52-b828-d126d84c5adf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa71579-9c6f-434c-bd47-6a2c8f9135af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84743445-0f02-42f6-9c9f-b756141262ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ad4d47-d783-4919-a71e-139b605917cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ceeb55-a063-4bf4-890c-b97f0f6bec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7752aa36-db15-442b-be42-8e45d259b9a1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2d1cb9-ab9d-4600-ac95-69f31de9d4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b845467-25d4-4e3d-a1bb-ce4fca0e9234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e000dd-6e23-4015-a840-5f8d0d2e7fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad6f20e-c867-4db8-af0a-5d3b4ee93389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7644b7b-d079-4b7b-af0e-e8c25a1ba45f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c77957-801c-4527-a129-e1968254a64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6b9420-f003-4e0b-8514-83986d792819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179aeb2-ef2b-4ccc-baf7-14ef081bd30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da21ffee-b82c-4746-91f1-49bcec8210e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0e9df9-e6a5-4be1-a1d2-035237116a80",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3eb267-373f-4e06-b48d-5016fba67d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82bd9d70-a66e-4443-acd4-175c2a91a3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523b855-4206-43f7-9ced-5f6ceff6e6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97285dc-4148-479a-ab82-714921cc7239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898cd48-8a5c-483e-8fd5-b4fd5f4e14a4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a468b4-d385-4791-bd27-2f19169b24e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7c8929-363a-47fc-9b99-f6facd87f0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76210f9-ddfc-499e-adc5-648f022c3ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0445448a-125b-4aca-8e68-831ae23231ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53324f8c-900f-464b-aef6-76db0b667d2a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e6db3b-1958-449b-adf9-6a940a63e570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef42337a-65c4-44aa-85ea-9309c9882fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d76b321-1501-43b0-ba3a-bd92734f8c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6663a1-d35b-41ee-b2ad-06af3fbf62fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125d78cd-18f6-46e6-98ae-b9f2a29b0f74",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1194bd-0891-4858-a5d2-50d9310edf01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0abb83-f0d6-4cb9-bce0-1dca0d879b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2302d3e-f86b-4fd1-8cc0-b4e4abed1b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1abf501-ca69-42a5-b5ee-59318caca031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a22b84-d2aa-4983-8f10-1bf172b4b34b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1576a96c-6a5a-4e4c-8500-fcf5937b2266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8f14e2-b5a9-4387-885e-c5fff2362712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1e08ed-63c0-4db3-8bce-c2fbcaacbc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eaab04-2491-4c7b-865f-035dc664915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986fd1bd-fe99-4dd8-a66c-8ab4406c4a2c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1399bb1e-b1ac-4a94-baf2-7281a3e72d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b491421-224c-4d7c-9f43-20601fccd1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d9f3b-127e-423e-a85f-0c3cbcf1b22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2143acea-a710-44b2-ba31-3c6468c33926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973aacbf-ef08-434b-b64f-97be01c04cea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684083ab-baf8-48e4-afe3-68cb166fa16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58a9913-ae29-460b-9753-92a2dc387b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79248ea-96c4-4ea2-b533-ab6794dfe37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0717d2-3419-4452-a1cd-9844949c17bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d1b5d7-e025-447d-83d3-104e7a91bafc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89c0d84-947b-4e91-b23e-02980f6b4a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7622ba-e07d-41a7-9cde-6d31c60847d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f59655-d129-40c2-acc9-38f4269254ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cae562-c17a-49e9-969d-549da1a00767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b65a9-fe81-4ddb-9d07-2ccfb6d6d5b2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4999798c-09d4-4afd-b9f3-ee4f68db3f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c2a634-4fa2-4ab1-8e4e-30cc50aa4910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e531cf-16a0-4118-80eb-ce378b6d44a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec96165-86d9-4ace-9585-3902cb68a4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95855e21-d143-4c27-b31a-aca5c887328d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62e778f-046e-43ef-8b2e-615a55b46dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fed991-bd28-4327-a632-b5ebab295e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3c5f71-693b-4cc6-806e-3f5e2401fb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941efa63-f0b2-45ad-a149-a323bad9c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c23b76d-f04a-482d-959b-369e89cb1359",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0163ff5e-6d46-4fe9-b33f-541f9a810a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03cd5632-d88a-4776-b9c6-43aac73448cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87372f-2ff7-4e98-a7f6-f273c844fcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8140732b-6018-4a6e-a4b4-be78e9661148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f78d717-c392-463a-bd08-4e2d61988296",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753b8e9e-f710-43ce-83e6-ee36a65325b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f4c9ec-682f-43d7-8e55-a568ddfee9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1b16e6-6223-4be5-992c-4a0f5807b269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5adb91a-ba4b-4e0c-855a-5da2db505b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f790efa9-388c-45f2-a01e-92326a1ba8a9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a64d4ec-41b1-4506-8a87-0ec0786a4c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35a4fa3-aea8-438c-ab48-225138876deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497df192-4cec-4fc9-8319-86f8f1466dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f49c8c-1d3c-4a1d-8fbd-1937ea0fc1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc52d99-0938-4e59-be61-ba2299a1acbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36003e5-949a-44ff-94df-988baa18587c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de82df19-eebc-4fca-a931-fbbb2d2f242a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668e260-d9b9-4966-9809-4b1ee4466c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8ef7de-bfdd-46e1-8f29-23b4e3a85dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6a9a0-a4e5-450b-b98d-d71cd6905631",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ab41eb-43cd-416f-8d61-6b25b950bf8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d681b60-71f4-4c9c-a4d8-9575eefad3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d056dec-d2c5-4cc4-ab8b-e60056a16143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80f1db2-6550-49b4-b7a7-674c43064f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e94f8a-faab-4cb0-b3db-4642e4afbc36",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a31fb05-8ec3-491a-ac08-bfb8508cc2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9272a7a-859a-4eba-8c14-547b57a655ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357483dc-e3fd-4cba-ae4f-9f5096a7caff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fa3ea7-486f-49c2-b6a5-18cafc5dbae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb3cb64-6190-481e-8835-6ab4059f7e56",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9637b59f-6c73-4285-b586-95641a99cfee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c105dc6b-8a93-438b-8875-778e0b3f7ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e16f16-a4c0-41b1-840d-f48df28a55f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8732ac3-6994-48d1-9b95-1b0bdc52d1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82197c0-a223-46e1-89d4-60b68da58637",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da28f098-7ed3-4164-a692-c42bdb91d059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d99ece-9bd5-45a4-b257-9d1e666f83da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fc834a-2274-4b91-bd38-c5e5a12e1eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c15035f-b5f8-4ef3-b7e8-1ba32fd8ceda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d6b7a-f560-4984-a7ba-45a0e530d677",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aefd6b-e570-4d62-93c7-4e5a44bf31c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54ee961-6851-4ac8-a5b7-c4b36a73be06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad776493-ec81-444a-a48e-eb7492f183d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782a42d1-5e9c-49e5-9373-d9466239602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ef127d-100c-4866-be22-b7969e0af78b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060d8fa-4103-4ef2-8a52-075e141583af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7f2295-5901-4069-9bd9-8cad6d2f6244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7eb971-6478-4a15-86ac-77517746d75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f5f54-2d96-4db9-8cfd-b156e6ec1631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baf4157-1d8e-49c7-bdcd-67fb83774930",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07aaa0d-71f9-453f-b45b-d7c3368cd26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b75f437-9bc8-4684-9934-06ce4529cc22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6780ecb-de21-4a43-9bc0-216d393ead11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17822f51-1c34-4ee3-a8ea-4aa0dbbcde1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060e5f07-317c-47c9-83b9-e55896995ddf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5797d-be3f-419c-b40c-ab6100c0d0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a503c6-13d6-4396-97ec-1358ac2fb332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95fdd98-b344-4a03-ade4-b1876c9d9360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef24e51-ac1c-4923-a0ad-86b7ff898a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca705a8c-a06a-4819-8879-dbce26eb22be",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c987eb-6999-41c9-b0e5-fe2e946077e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f08a7e3-15ad-4abb-bb4a-410d0d54cd1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c135a00-526e-416c-93d0-e69f585c6c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898c8b22-434f-4819-bddf-4f30e916d0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50eaa6-3f19-47db-99cf-6fab075ee4dc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e19c9da-765c-4e5e-b880-8026277282c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154c3313-6af5-4ee0-816e-74e4f8b2b017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd585d5-fff3-4e8d-ab9d-704daaed02c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d621aa10-9b3b-43a1-bbe5-0ac80de11e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792dff98-d4fb-4eac-ac99-338d998be206",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ca46e6-65a5-4949-9c9e-0de5aeac368d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833fdf3d-e2be-4a7f-a8b6-6223924f9687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9e9c05-7534-4299-a09b-ce9d9eabf503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e09a898-2910-4a17-a2dc-38981aad4da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b3011-0013-44a4-b3cb-d8277c442b53",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a5d8c1-27cc-4ed5-a4fc-4bac0ea96117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd9e3fa-2235-4b4e-88c7-8d127e92d5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f013f3c-fb43-4cea-a5cb-8dace2f2adb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256a8f71-5946-4cee-bb9f-3dd81c1093a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de8150b-9539-4bdb-ad26-d545af1b5392",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6510c5e-9e9c-4fe0-9555-24ae01d4df17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2033ee66-b8b5-44d4-9300-1f515f6ec4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34eaee1-df46-4ae1-80ea-7f31289eef92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f19110-d2d4-4e35-ae42-ee9e470d4154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395160af-adf6-4557-bb09-3624666700b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c4df0b-1e34-4359-9456-9523e934cecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219c1a04-94cb-4bbd-a41b-3b0cd98fd8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6176415-4686-4833-b82d-b2f722b98c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ae37f9-aa35-4bb1-a689-8955e3983e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d55342-4649-4e78-a10c-c314dbacac7a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbe3ecb-8c0d-4682-8d2f-68fa491e4ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce7b5f84-8615-4e11-a5f8-f5bc0ee25955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf136aa-9e91-472f-b602-7b3deeb54fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15c8281-f601-4098-8455-96afe039305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4deba3-a6ba-4f2a-b886-e8bff17415d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12403127-249d-4651-98f2-c2d80f396a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58ab467-1629-41ed-952f-ee751de1d9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb9ea67-674e-4eaf-bf05-af0aac3c06aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b501eb-9dfd-4666-a68b-90503616c7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6cec59-554e-44be-b4ff-58dbb1232a13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0faccf-70c9-4afc-a2c1-8a5a5f550279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00315a64-c46a-4e38-bf36-a37669af929f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32c7ca7-f80b-4499-9672-52d0d24f8f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe8cfda-5aab-4d46-897e-7b23c47df478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8543677-2b47-4eed-9299-5be147fdf527",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0022547c-715f-442d-8e75-156ca3ef59b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb005d5e-f3a4-4b4b-9068-8bea993ab959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f824c3-3b4f-4644-96aa-c1716587f902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49336a3-0978-4758-95e1-b1ceceadfa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7d5296-324b-4cd4-b520-b7af8bd87542",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e781dec4-79e8-44be-b6a4-293a69019476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a728c0bf-421f-479e-b1fe-93ac61c3ad5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd252598-f8f8-42bc-ad64-81a036c65e05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a890ac-509f-4457-b994-5c74efa917d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5cccf-9d9f-46f9-9c59-54dfb62ed34a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0f1aa-aeef-4454-a3f4-974d468bace3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaffbff3-e2f0-4c52-9bcc-56964408f033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c70126-20f5-4f00-a900-c706f289a919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc755fda-a606-4b44-962f-f844b7634fe5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b082de22-0706-4628-9622-afe3a6de5eb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7270f1aa-b2bf-4fc7-8ac1-339c7bec2c56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e7cd0e-4895-417a-9034-730ab6be5a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "444e4c64-3f46-4cc3-846d-b5381ad5fea0"
                    }
                  }
                ]
              },
              {
                "id": "2ec16906-952d-499a-b280-504648899485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54c9349b-71fe-49e7-a2f7-1417fe0f2e16",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d76b0-4673-465a-b6a5-a5640b5f746c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e6bda1f5-87a5-4124-b313-b622c63c1bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db5029-70b5-484d-8c82-454db9d13bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f9f72da-8ac2-438c-adfa-57ad8497abda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b471272-5208-46c0-bd2b-551d652238f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1807d01-7859-4d07-957d-527e83d3e51e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0aef10c-1cac-4257-b38f-647dc2480aaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93dd440f-e5f0-466b-adf9-cbff5f34c7ae"
                    }
                  }
                ]
              },
              {
                "id": "f2e9cbb1-1e30-4d14-a5ca-d82dec8fda31",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3330e79-6fd5-4d4e-8757-f93fab060bfa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc5efca-1215-4758-97f8-75015256f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d05518a7-80a6-4565-8bde-a31ab08debb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6bec3d-ab8d-41fb-bd7b-ae75fcd3b75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb29d3d-9550-42ce-b609-cbefbde33491"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "177c5186-138a-44b2-8023-52d3c5ffdff2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf6445bd-28c2-4182-8c83-97293ddb31e5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "365f5948-e2be-4b85-ac60-7fc3e9f90009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e34f7b8-ec94-49bd-9ea8-b04515db157b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed3f33f1-ccb5-4662-9397-16afa993855d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "123c4fa8-d69f-43db-9bc3-6fdce1a4400a"
                    }
                  }
                ]
              },
              {
                "id": "ceb168a7-6e9e-4b68-8b04-940639061670",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0408eff6-2c04-4703-b7e7-5243acdcb944",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "da3bff6a-c3c9-4763-9108-5305424428fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f69f4780-1e98-462b-acdb-e88acbf08462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0695c0b8-b2d9-4d8c-b909-d0f0ffb603cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61ff4b13-0ebe-4ffd-a621-0f0869588fe7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7dd31164-8249-46a8-a881-507c8087186e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88d211cf-cbc1-423b-8236-efed6dd3cbd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04e84860-b5ae-4547-ae0f-38246414bdab"
            }
          }
        ]
      },
      {
        "id": "b31c92b7-eeb5-4321-817f-19b92983c796",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ddee8af7-74da-425c-901b-824c46af06af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2a4ac7f-1e06-45cf-8815-22f26ecf3405",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7e8de96-b09f-4b77-b973-7eea42e08cf0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d324462-728f-49ad-8a12-f4038bf1bc64",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a31fb1d-594c-4587-9104-9cae54ee8654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e5ebe1-271e-42ba-9690-06c7f0a623a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b234bed-1c4a-4afa-a143-5c7f7b4bd732"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f31a9f8-c4c1-4e9f-9cb5-011b1771e860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd89e627-fbef-4f8a-94b9-5611f9a64a5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd103ba-7092-4d93-9257-6fcaf68273f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee34e549-0b55-472d-9f8b-88302dd2c468"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3559f85-7f25-431c-a232-4a0a15e73f98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "49d899a4-ecf1-4eca-b777-4b2a2c60831b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eff64f0-0a60-481d-b751-f250571e582e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "902d9e08-2794-4840-9e86-26bfa1dd6571"
            }
          }
        ]
      },
      {
        "id": "9b9a6725-8b73-42db-82df-6c3a123870d1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6e285da-ce4b-4f9d-a727-851abaf6b1c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0daf6082-83ce-4ef8-bdde-c5efe49ecbf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d812ba2e-386e-4892-8f8d-7161f2c89943",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd41da0b-ef23-4b0e-8648-35ffdf6beddf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f631c8b-db97-4019-a0df-12c02f329045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8567cd96-e579-4b25-8fae-0063898b0b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f23727b5-1b47-431a-9e83-723630bd026d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1923f50a-6f5e-4910-ac24-83685efe64b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9467df4-5383-44fc-ac18-92c75e3dc2f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cbee188-dcc8-439b-8c95-76da64d2275a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a178de75-6bbf-4025-8809-87e6166bf3eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "912cf678-ab13-4809-bf61-51e62c66a6fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bde40ffe-b76e-40d9-9b64-c884f0796632"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1810aa49-cac2-42e3-bdee-edbd2bc35b17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35eb416c-9d88-4dda-8228-0a3d017e3b10"
            }
          }
        ]
      },
      {
        "id": "839d813b-87f7-45d0-86fc-0c8d85183d66",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1f7091bf-14fa-4dfa-b13a-f0898e497d79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc28fb60-255d-4741-9335-21fa3fb46624",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5a1c092-7b31-4f83-8845-4265286d9be6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92145f9-9008-4e59-8d64-b6985e228f67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2dbef44-a8b0-422a-a505-c3b8f731bde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff4cc08-6bcf-454a-ab98-6eacc8f35f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aeeceaa-7466-4311-8cf9-efd45d37e963"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0d22d8-4d57-4ec4-b105-af75d098fa2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eede0f4-373b-4a1b-adff-82cc2d7431a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adc73bbb-8606-47b9-98d6-581c59fb06d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20a567d2-d8e5-4a9e-9420-beb901c09139"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe67fdc-f6ca-4915-b1ba-17b6933c91f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "397cfadf-0796-4538-b869-4fb068054440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0046602-c970-4d6f-a2e4-bb7cacf4885c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74b1a486-8891-4065-bb4a-e5ebb91f5f28"
            }
          }
        ]
      },
      {
        "id": "f1fd375c-98e7-4178-afd7-36abcc4eaf5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26964d0c-a2c5-4247-95d2-df34ce0f86dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fd02387-7aed-4744-90ff-7f6daacc4330",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d469f42e-cb22-4e46-9968-c19784e47ad2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2e5fa03-4a1f-40f6-b758-52184ad4aa61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "170fc03a-3216-4d08-b6bd-003fdb193432",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.85964912280703,
      "responseMin": 17,
      "responseMax": 4705,
      "responseSd": 364.62776205746434,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698798976484,
      "completed": 1698799017522
    },
    "executions": [
      {
        "id": "17a2f7ff-f7aa-425d-b186-88775f34a917",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30413e70-32e7-43b8-bd46-8bd3f3bc7ab1",
          "httpRequestId": "21877c93-afdd-4ff0-b1cf-30a7a3b4bfed"
        },
        "item": {
          "id": "17a2f7ff-f7aa-425d-b186-88775f34a917",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9db4893a-ac87-44c2-b0f4-936d690986f1",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "1708ea6d-6458-4177-83ff-dd3b8efaf241",
        "cursor": {
          "ref": "6387959e-6cd9-472e-9438-50cd05bfa4a0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "27b1580e-e645-4c6c-a0f3-03d194e18cb1"
        },
        "item": {
          "id": "1708ea6d-6458-4177-83ff-dd3b8efaf241",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "93fd6e75-25ae-4644-bf5b-7f161217e3af",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "47ab0004-5a39-4720-9d71-abf6dbd7ac89",
        "cursor": {
          "ref": "8ab4f368-9273-491e-9e3a-330681ebd11f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b16da0ed-1835-459c-9d40-22cd2151b185"
        },
        "item": {
          "id": "47ab0004-5a39-4720-9d71-abf6dbd7ac89",
          "name": "did_json"
        },
        "response": {
          "id": "5f9fe031-976d-46bf-8b89-991df1dc9250",
          "status": "OK",
          "code": 200,
          "responseTime": 249,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff1f53e-10dc-4c59-a843-f095fd71f945",
        "cursor": {
          "ref": "6ef61410-30e8-4fe7-b674-09aa344b4648",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6b0b598-b972-4a4a-8ae9-cdd538eb4eaf"
        },
        "item": {
          "id": "cff1f53e-10dc-4c59-a843-f095fd71f945",
          "name": "did:invalid"
        },
        "response": {
          "id": "2f97e205-2dbd-4512-9411-3f4f98dddef7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 618,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff1f53e-10dc-4c59-a843-f095fd71f945",
        "cursor": {
          "ref": "6ef61410-30e8-4fe7-b674-09aa344b4648",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6b0b598-b972-4a4a-8ae9-cdd538eb4eaf"
        },
        "item": {
          "id": "cff1f53e-10dc-4c59-a843-f095fd71f945",
          "name": "did:invalid"
        },
        "response": {
          "id": "2f97e205-2dbd-4512-9411-3f4f98dddef7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 618,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8ea9c7-29a1-40a5-b444-28447c5795f3",
        "cursor": {
          "ref": "1058a50f-8cea-486d-aaea-d5dfc8137700",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "89cf57b7-18df-4d40-a56a-334bb3fc21bb"
        },
        "item": {
          "id": "1e8ea9c7-29a1-40a5-b444-28447c5795f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "884ba7fb-daa9-4954-9804-5432399d5eee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ee668-470d-4cad-ac41-4ac5d23de1d0",
        "cursor": {
          "ref": "a191f039-1765-4d16-9cfb-07f00cf8818f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "efe389a5-20da-49f6-9262-8e770fd713cd"
        },
        "item": {
          "id": "286ee668-470d-4cad-ac41-4ac5d23de1d0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ae2d83c6-dc22-419d-b22e-728cfefbe5d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f227d0b-bcf9-4219-8d38-5da53af29309",
        "cursor": {
          "ref": "0af57a5b-335f-4776-aa10-09afacce0201",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9f013512-aa01-406a-8be7-fe2882efc980"
        },
        "item": {
          "id": "4f227d0b-bcf9-4219-8d38-5da53af29309",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2f11be00-fde1-4b69-98c5-bbefd7aec708",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f39e0-d8e3-44dd-88b0-e8d06c6352bc",
        "cursor": {
          "ref": "10a19d7f-10c4-4d4d-b9da-9e482af602f7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ff162cf-73c2-4418-96c4-df38ce1fbfb7"
        },
        "item": {
          "id": "862f39e0-d8e3-44dd-88b0-e8d06c6352bc",
          "name": "identifiers"
        },
        "response": {
          "id": "bf25353c-5ca4-47f0-b961-264f97d86fa5",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa60a1-12fa-4b4d-8bcd-9485de3cd74b",
        "cursor": {
          "ref": "e9f57d49-a2b2-4e05-b96c-483c2ea641ba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "efb78f24-5663-4149-9ad1-b58d6ae608b4"
        },
        "item": {
          "id": "33fa60a1-12fa-4b4d-8bcd-9485de3cd74b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ce20004-c283-420b-be3e-93e71a1159c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04988c69-7977-4d0e-812e-9e3821ed1fbc",
        "cursor": {
          "ref": "6771e993-ea3b-45bc-9a03-97c29206f4d3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "16486e6a-c8e5-4cd0-8f4b-d584249bd2ca"
        },
        "item": {
          "id": "04988c69-7977-4d0e-812e-9e3821ed1fbc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d23c40ee-29cc-49a3-96b7-211edd8d7880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb192e49-e411-4e0e-b658-1199c1858e73",
        "cursor": {
          "ref": "c3b5ea2c-8a22-4800-8c4d-e7885764023c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "113f05d2-659f-4bdd-ac69-2ae28bfef951"
        },
        "item": {
          "id": "cb192e49-e411-4e0e-b658-1199c1858e73",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fbbf93f5-0313-4e87-9f9a-62485ccbca65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2e9900-6417-4b39-bb9c-0991ef79a3fa",
        "cursor": {
          "ref": "a531407a-fa49-4b9a-ad26-d4ce2b0fc875",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fc4fce9-337f-49f5-a460-da253a3aae1d"
        },
        "item": {
          "id": "bc2e9900-6417-4b39-bb9c-0991ef79a3fa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "80fd48fa-e6fe-477e-bcd2-46214048b54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470d3c78-0d37-42cb-9405-0bc350528019",
        "cursor": {
          "ref": "a82e6625-fef0-4bdd-8bad-3a6d1b67e08d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c674cc4f-61d2-4370-8a26-f7b0b0757c5e"
        },
        "item": {
          "id": "470d3c78-0d37-42cb-9405-0bc350528019",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "802e3835-e30c-4dca-9b50-72813c1e0aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa277741-6403-4cdd-a5ab-d00610ac268e",
        "cursor": {
          "ref": "62bf0686-fc75-479e-b04f-e12c75747c98",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee6a3fbe-8c25-4f09-9ced-724f4509a1d2"
        },
        "item": {
          "id": "aa277741-6403-4cdd-a5ab-d00610ac268e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c0a83d08-9561-439b-bf27-2d9c049b042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc3e134-5864-4944-a8a3-14c38f233c80",
        "cursor": {
          "ref": "c8dea1bf-3daf-45f1-9592-16738d509ebb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4b152f48-d90b-49e5-9d6a-6572c98c1c09"
        },
        "item": {
          "id": "0bc3e134-5864-4944-a8a3-14c38f233c80",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19b6d38d-b91f-439b-849f-fe7924821113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12671c4d-0157-4af3-8d8a-1fb418785770",
        "cursor": {
          "ref": "ec98caf2-786a-4c36-95e4-91464df4de98",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8600b374-5403-4ffe-a216-3fec519d0e27"
        },
        "item": {
          "id": "12671c4d-0157-4af3-8d8a-1fb418785770",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7ec79037-0e2b-4cdf-be11-3fad50bf2575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9095927b-b9a2-4468-b3d5-b0f2b604c80c",
        "cursor": {
          "ref": "2341e4b3-cd1b-4aa2-b114-0d5abfcf3fee",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af254751-4d09-4a6e-9507-4c9dbeaa3a46"
        },
        "item": {
          "id": "9095927b-b9a2-4468-b3d5-b0f2b604c80c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aef88d9d-f718-4c22-82bc-9d9733fd5dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc7461-6223-441d-a73b-35043cd4e19a",
        "cursor": {
          "ref": "b62c168b-bb25-481f-b68b-b1ccf923200f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8e6e2b17-5a2f-4e70-b9ec-62d37d5ffa8f"
        },
        "item": {
          "id": "aedc7461-6223-441d-a73b-35043cd4e19a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ab07b7ad-d179-4bc7-9175-95f8aa1201ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383ae75-e027-4e7a-9ad3-0f5224115ff8",
        "cursor": {
          "ref": "6d421e39-2cfc-4dbc-af1f-946b7543cfe1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2994885f-1aac-4c69-bb65-b6dc5b57868f"
        },
        "item": {
          "id": "8383ae75-e027-4e7a-9ad3-0f5224115ff8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "89fca69a-d6be-4c8b-b81f-d373733fb503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7d920d-5756-4386-9b39-904782af38fb",
        "cursor": {
          "ref": "cf32f549-ef8c-46cc-b1dc-bb0a6f747fa6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "96764e41-3b23-4690-ba50-80f6e4daa2d6"
        },
        "item": {
          "id": "2a7d920d-5756-4386-9b39-904782af38fb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a3cad4cd-5cfb-4581-87ad-c4c8b3ab6b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1676c8-5df8-48e2-8729-847d3409dd58",
        "cursor": {
          "ref": "0d3271b4-f14c-461d-906a-34893fc55eea",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5111f215-0ac0-4342-b443-2232971a8bf5"
        },
        "item": {
          "id": "1c1676c8-5df8-48e2-8729-847d3409dd58",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8f224d6-25b5-41f3-99c7-93d456633e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68938317-6624-4db7-9593-d685a99db8ce",
        "cursor": {
          "ref": "d387f96d-aa56-457c-b7fa-63a6c4b4ab9c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "94c0ff83-7198-4989-b490-b78743e56e78"
        },
        "item": {
          "id": "68938317-6624-4db7-9593-d685a99db8ce",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "64f05f75-3982-4718-baac-b0cb07b60bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2952b1d-2e5f-4c70-9fe6-2a8ea2f01c71",
        "cursor": {
          "ref": "30b039f7-aac8-4086-a06e-5daf22566695",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "821dfb3f-1ba5-4c17-8958-47ffa07e5beb"
        },
        "item": {
          "id": "e2952b1d-2e5f-4c70-9fe6-2a8ea2f01c71",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f876b69a-1593-4c91-8f30-6df6642b1aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1364f5-da8c-49dd-acea-655305400b05",
        "cursor": {
          "ref": "6603dbeb-27f9-4d99-bafb-f73a33b34440",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b2236a59-f1f2-44e7-9a29-474ffc953c46"
        },
        "item": {
          "id": "aa1364f5-da8c-49dd-acea-655305400b05",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a6367d8d-8823-4922-b172-b93c94c628c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253bd929-4db5-4c54-b193-4c2d6d74e8bb",
        "cursor": {
          "ref": "da7fbfe8-9385-4aa3-8192-518796b0f3de",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f67fbd5-52d4-4a63-9480-f49fc409b600"
        },
        "item": {
          "id": "253bd929-4db5-4c54-b193-4c2d6d74e8bb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a76bae00-1690-4f48-a730-08430953b687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a8a05-6693-46d3-8ab7-0dc2ae0d94d6",
        "cursor": {
          "ref": "5a145096-1720-4e7c-b2d2-892afe054658",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c01ebe65-5370-49db-9cee-61821352e7a0"
        },
        "item": {
          "id": "ce5a8a05-6693-46d3-8ab7-0dc2ae0d94d6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9500d808-3350-4742-aced-5045ba512fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eedc43-8f9a-449b-a62f-ae1e6c3dbc1b",
        "cursor": {
          "ref": "d6325b98-2071-4a34-ae01-236a0ca4fff1",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3874eb0b-1769-4f8b-941f-637dd057c3d1"
        },
        "item": {
          "id": "68eedc43-8f9a-449b-a62f-ae1e6c3dbc1b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a2c29d7-e81e-4df6-a432-b68da8c91483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc400b4-9cfb-410e-bd5b-69f5427fc00d",
        "cursor": {
          "ref": "d44b8259-99ef-4464-b263-38ade7c282f1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "508eb2dc-ff5f-4e21-8c86-1c8cffdd3443"
        },
        "item": {
          "id": "6dc400b4-9cfb-410e-bd5b-69f5427fc00d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b6558e16-806e-4c75-b23b-fc9082797e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e6ce52-d38c-4d3b-81db-46f73c0e1dad",
        "cursor": {
          "ref": "81008ed2-2f0c-4943-898d-7543eadd5420",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a62733ba-8098-4cc2-833a-bb69bc525e73"
        },
        "item": {
          "id": "c6e6ce52-d38c-4d3b-81db-46f73c0e1dad",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1131a894-86c1-432a-97b5-d2f15abb2c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d489ca5-6407-442e-b4cf-10b13c9ba926",
        "cursor": {
          "ref": "2266f21f-bc1a-4770-a770-e2f4b68575fa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1fa46890-0b22-4ca3-934f-6f02ed4b6b0a"
        },
        "item": {
          "id": "5d489ca5-6407-442e-b4cf-10b13c9ba926",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e1b509e-0c59-4e84-8545-a7571a96601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e97b259-17a5-4bb8-89d2-4ccbc7be5230",
        "cursor": {
          "ref": "4b6a253e-a5f6-4003-a1b4-77b1d717eaea",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8c34520f-bfa8-4af8-bbb0-d1f1da1db94a"
        },
        "item": {
          "id": "4e97b259-17a5-4bb8-89d2-4ccbc7be5230",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9aae5aa7-1987-4222-9a82-8b07e8db41bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459247d5-74ec-4a17-9e76-37517ae834d9",
        "cursor": {
          "ref": "1ab8bb52-a3bb-4546-9284-9b230a1972a0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "040bc024-2c7c-43ff-9ea6-3a0d51797ab4"
        },
        "item": {
          "id": "459247d5-74ec-4a17-9e76-37517ae834d9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ad1d1c7d-f9aa-4e1f-9c05-b8c3cfaa60a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f202ed-6380-441b-ba16-2ebe2dbe2320",
        "cursor": {
          "ref": "44091776-b000-4a5d-9ccc-7e2920c783f9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89cce698-5d45-4e83-a975-93d7d5cda65d"
        },
        "item": {
          "id": "98f202ed-6380-441b-ba16-2ebe2dbe2320",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a96d288c-cbc8-4235-ab48-8ef49351a745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070a4c77-01ac-4fda-aa91-8f32932398bc",
        "cursor": {
          "ref": "fea78701-f3ca-4bc4-afa6-1a0b34fa17a4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e0214190-6ece-45f8-997a-aa355dad2e09"
        },
        "item": {
          "id": "070a4c77-01ac-4fda-aa91-8f32932398bc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4c26d583-bb86-4fd8-abb6-13681b4ac624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3ec509-8466-4c2b-8c10-b4110d95a032",
        "cursor": {
          "ref": "518b8619-397c-4fa6-a3d1-e51c3385a62b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8512f234-342b-44ae-b95d-db3fff283b1d"
        },
        "item": {
          "id": "3b3ec509-8466-4c2b-8c10-b4110d95a032",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bf4a7d8c-1ded-44f7-bf0c-5c0c7be7931d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7444c3a-a536-40ea-a20c-789a0c54dd56",
        "cursor": {
          "ref": "665ab32f-6cbf-4fcc-9d36-d7af5a8956d2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a5265b65-6b73-4c33-8214-aa65a0e1b682"
        },
        "item": {
          "id": "d7444c3a-a536-40ea-a20c-789a0c54dd56",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6f2fa956-d8fb-4f5f-b31e-d31381790690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9decc162-5510-4ae5-972d-3525a89d50b2",
        "cursor": {
          "ref": "b114abb2-e66d-4dc2-bbe3-9d72a443ca4a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "10f44ef2-b5bd-4535-b197-17ec7baef159"
        },
        "item": {
          "id": "9decc162-5510-4ae5-972d-3525a89d50b2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6debdcef-ad13-4aab-a60b-87aa9f09021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0194a555-deb6-41df-be4e-fd13647873f2",
        "cursor": {
          "ref": "e5ee44bd-fbf4-44cc-9ee0-3d83c5306318",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc1782cf-c4d5-40a0-8109-208bfc10e454"
        },
        "item": {
          "id": "0194a555-deb6-41df-be4e-fd13647873f2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0947da1c-c3a4-46e6-b8c7-f49269e771d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fd04b0-05d7-4526-a8bc-52932da2a208",
        "cursor": {
          "ref": "e70cab29-f6e3-44e5-85f5-2c7ceb047c0e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3e00fdd0-65e4-48e9-87cd-34296f3eb8a9"
        },
        "item": {
          "id": "e4fd04b0-05d7-4526-a8bc-52932da2a208",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad62966c-3c43-4837-b089-212a32d9f6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82ef8f8-d07b-4ec9-ad11-07dd46e85fe7",
        "cursor": {
          "ref": "7cfa9da5-d1f7-4e91-9503-6ff7a9724e88",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e468de4-56e3-4691-a2cd-09d46495ff85"
        },
        "item": {
          "id": "f82ef8f8-d07b-4ec9-ad11-07dd46e85fe7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ec47f143-60af-43e5-9fcb-94216c51dbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457c3458-dcd8-48f5-863a-3007d9b165b4",
        "cursor": {
          "ref": "f22130bd-eda3-4012-b72d-a9558a038dda",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "54582713-e1a0-4646-8c32-17ffab61c174"
        },
        "item": {
          "id": "457c3458-dcd8-48f5-863a-3007d9b165b4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dbbce342-5de8-4c4b-9062-b0ed17290970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07e31a-d155-4e08-8df7-cfd120294172",
        "cursor": {
          "ref": "59be7d9b-7a48-42d7-abf1-bdffcef0ec84",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "23b2b4bd-0f90-434d-b1ab-c5a7eadd5a5f"
        },
        "item": {
          "id": "dc07e31a-d155-4e08-8df7-cfd120294172",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "888dd142-4675-4fdc-80f4-1ba979682b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec02cc2-13df-4488-85db-dcd076c0c09c",
        "cursor": {
          "ref": "d9e3b2f7-326d-48b4-8dd5-02c2f3293e5c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a18d388b-80d9-4e3d-8ec7-21024f7f09f8"
        },
        "item": {
          "id": "4ec02cc2-13df-4488-85db-dcd076c0c09c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ca816f2f-5695-4753-81fd-1acafb771c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f52b413-f2cb-4441-91b6-8da5d8f9bdda",
        "cursor": {
          "ref": "cd406995-16e4-4886-ba66-1c5d7f720619",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "482343b8-af02-4940-a94d-df2c65634c06"
        },
        "item": {
          "id": "2f52b413-f2cb-4441-91b6-8da5d8f9bdda",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a1acf6c-6ea5-4b0a-9814-c4db7c3298c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa3e04a-e765-485b-9456-6c0b53ae048f",
        "cursor": {
          "ref": "4c915b76-52bb-4a0c-81de-f1eb68e177d9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6291018d-1a10-4cde-8293-088bdc14a40c"
        },
        "item": {
          "id": "0aa3e04a-e765-485b-9456-6c0b53ae048f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cf21cd44-ec11-444c-b1b9-f77992ced95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7cb1d-838b-4d24-b5f0-d41b1d27d497",
        "cursor": {
          "ref": "259a7cae-fda1-4a71-ad2c-7ae946a80379",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b34b118f-ce13-4e55-9aa4-34bba350b7af"
        },
        "item": {
          "id": "9ed7cb1d-838b-4d24-b5f0-d41b1d27d497",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b40c7c8b-73df-4204-86fc-121903cac5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e23f88-d36c-4932-9fff-33a91fee152a",
        "cursor": {
          "ref": "a6c13c54-1521-42bb-874a-243e55e1ead0",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e5bfa934-d6d6-4785-8cbb-7f20d7d9110f"
        },
        "item": {
          "id": "a3e23f88-d36c-4932-9fff-33a91fee152a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "457391d3-d7f1-4b35-add3-b045f4e954f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3303f4-3326-4d35-91d7-18ea0e33a654",
        "cursor": {
          "ref": "290b566b-ab86-4ca9-b71b-929bfbdb5886",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5cb77c39-dd8f-4ab2-b736-4a93bc3ffca9"
        },
        "item": {
          "id": "da3303f4-3326-4d35-91d7-18ea0e33a654",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "947a56d2-c7da-48fb-ae3f-8a31736a9895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8cace-5866-4db5-bc2b-9d659efc8b93",
        "cursor": {
          "ref": "0b5c424a-fc44-44ef-8795-0a53ba08bba8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "997bef18-06e3-4c7d-98b0-a1d38fefb66d"
        },
        "item": {
          "id": "c9d8cace-5866-4db5-bc2b-9d659efc8b93",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "12345369-1703-4c7e-af27-e3e968b483b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d635ab94-4282-453d-afd6-c9e0889101f3",
        "cursor": {
          "ref": "968ee3d0-6662-4250-81ad-6d5fae7abc39",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "965ac6bc-b482-41b7-a02c-12ccf5a21fd2"
        },
        "item": {
          "id": "d635ab94-4282-453d-afd6-c9e0889101f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f54f7f17-c41d-4624-a359-2dfbac4c6d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb891f73-19d2-4404-b328-4e3311b3101f",
        "cursor": {
          "ref": "cc1c169d-698b-4570-b189-6174e5c3314f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "75fd707a-de5c-4523-819a-adab4b7b4ef3"
        },
        "item": {
          "id": "eb891f73-19d2-4404-b328-4e3311b3101f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76382bf1-f9d4-4454-b949-2cef3860b1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2412d6f8-5f44-4a17-a9e5-92160660745a",
        "cursor": {
          "ref": "a296adf3-7d2b-4073-95c8-14ea33b455b3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "43c57dd4-909b-432e-bb79-62c72d469cad"
        },
        "item": {
          "id": "2412d6f8-5f44-4a17-a9e5-92160660745a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "da191e47-b54b-4509-99fc-a318a51f05ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bc1089-304f-4e0e-8717-b335ab533d08",
        "cursor": {
          "ref": "c0166275-cc57-4834-8539-f974c1c13dc4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "adeace6d-ab57-42b4-8513-d7f0f32f1cb8"
        },
        "item": {
          "id": "30bc1089-304f-4e0e-8717-b335ab533d08",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7bbbe2b2-e691-42e0-a460-8d54797a57e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc6fad-468e-44f3-aa37-7446c345317a",
        "cursor": {
          "ref": "455ffb48-02b1-4e0c-9a02-1c5f3d46ed4d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5ba0c613-4d78-40ce-b6e7-466c5b1bf32d"
        },
        "item": {
          "id": "94bc6fad-468e-44f3-aa37-7446c345317a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2fee90e1-2ecd-4f21-b492-da9e48dc6b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c481d-c4d4-491f-864f-49f86b4dcfa2",
        "cursor": {
          "ref": "542fe6b3-c0b7-465e-82ab-6f296b765656",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "51f392fb-4e74-4239-8dc5-d9555d9e3344"
        },
        "item": {
          "id": "952c481d-c4d4-491f-864f-49f86b4dcfa2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9ca42d47-75a5-4bd3-8a97-e513f54c1c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e36735-b97a-48bf-8608-434702ff941d",
        "cursor": {
          "ref": "4e5dcbb6-575e-4c80-97a4-2f2392370ea8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "73efb19e-7393-40ab-b212-701605921f31"
        },
        "item": {
          "id": "37e36735-b97a-48bf-8608-434702ff941d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7568fe1b-343f-47b6-b9e0-3ae9a34c4948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b46fa9-03ab-4fb5-9020-a7a13d32e857",
        "cursor": {
          "ref": "5175cd1a-b101-4fc1-897b-14b0b6b412a1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "125ff3fc-6285-4c8e-b6d5-64005e54133f"
        },
        "item": {
          "id": "49b46fa9-03ab-4fb5-9020-a7a13d32e857",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "41dbb134-fc6a-4b51-bdd9-633e752f2db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdb38e7-e458-4ed9-a01c-821f1640b136",
        "cursor": {
          "ref": "61691ec0-d5d4-4be9-8cd0-fcfda8c5f1fb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7a8a4bea-0132-472c-95c2-513d07a35a0c"
        },
        "item": {
          "id": "5bdb38e7-e458-4ed9-a01c-821f1640b136",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "572bb72e-c5e1-4381-a234-2c65d7631b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d0dd9c-583f-47c1-a1a6-f92e84fae22d",
        "cursor": {
          "ref": "69255400-0d2c-4770-b894-2ec1589d8b94",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "631780a2-6635-4d05-967e-4abd2c1de192"
        },
        "item": {
          "id": "a4d0dd9c-583f-47c1-a1a6-f92e84fae22d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "53acc9d9-7906-4792-9945-84d10afe762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda219c6-c433-4caf-a8f2-ca0dd6865485",
        "cursor": {
          "ref": "ed70fdb8-d73c-4d3c-8fe2-e6f10619ab7e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5d55c441-e518-4cfd-b617-8158487c5c26"
        },
        "item": {
          "id": "bda219c6-c433-4caf-a8f2-ca0dd6865485",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bc0b932b-955b-4633-ac0e-ffed08f41f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fe25f3-819f-4a93-ab61-62fa93f9c91d",
        "cursor": {
          "ref": "e4a6f54c-4557-4452-acc3-baf847deabc5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f910de89-d147-40c0-a675-5ee5e970d13d"
        },
        "item": {
          "id": "e9fe25f3-819f-4a93-ab61-62fa93f9c91d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa810dc6-72e0-4d99-a539-d2536f2bb81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b203a312-969c-4d81-b6b2-6936e1194a8c",
        "cursor": {
          "ref": "072f6868-2ae4-454e-b8af-541752d376f8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5a8f57a1-12c2-4827-8757-9059a0562105"
        },
        "item": {
          "id": "b203a312-969c-4d81-b6b2-6936e1194a8c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7945760f-dfc6-4979-9489-9a7543435dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353de2cf-226d-4cd7-853b-a7f5783b77d2",
        "cursor": {
          "ref": "7e363964-3861-420f-bfb5-edae31fe239f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "daa8a849-89e2-4d07-af96-d107ef58bc3f"
        },
        "item": {
          "id": "353de2cf-226d-4cd7-853b-a7f5783b77d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c357932b-d14a-4943-b59e-3e60e1cc1c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a3b5fc-8d9a-4775-8103-1dbab9b238bc",
        "cursor": {
          "ref": "47e032b2-4e27-46ed-97f6-d1100b235d86",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0ae1822a-7268-4cb2-a22c-c10df87f9e96"
        },
        "item": {
          "id": "c9a3b5fc-8d9a-4775-8103-1dbab9b238bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5c6c4e2-fc62-4b8d-a991-054c90ab72f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2e1a92-8622-45a8-b479-b488e24df666",
        "cursor": {
          "ref": "f48fa36c-368b-4ff8-81ff-8aa2034c16c7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d4f3860-1388-4ed1-8ae5-653797fd7420"
        },
        "item": {
          "id": "fe2e1a92-8622-45a8-b479-b488e24df666",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "68ea75a0-a603-45b3-a3cf-441a8186845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5be42e-ff2f-4cf6-98bc-6b173b63079e",
        "cursor": {
          "ref": "9355ff6b-2c58-434d-8dac-1fa81fa4b80c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b4ed6d1c-d1a4-4d17-a8f5-492793e2168c"
        },
        "item": {
          "id": "ce5be42e-ff2f-4cf6-98bc-6b173b63079e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "afbcd055-63e5-4e4b-a5ac-0cda74d51eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff0069d-5bb8-4581-b673-3b3297fe3883",
        "cursor": {
          "ref": "83a311bd-abde-4c8b-a2f3-b14ad91372fd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c00130fa-206f-42df-833d-02bfbcc2457d"
        },
        "item": {
          "id": "0ff0069d-5bb8-4581-b673-3b3297fe3883",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b30d8141-1bc4-4f7c-a9d5-ea97665fe08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6ccb0b-1000-41c2-87f3-5f9e5633e31c",
        "cursor": {
          "ref": "e5ceaaed-21f6-46a6-87f6-28d48a196734",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a54a9495-2a07-4c5b-9dd6-5ab336864942"
        },
        "item": {
          "id": "3e6ccb0b-1000-41c2-87f3-5f9e5633e31c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "307b3219-fd91-468f-83bb-20ec99ff637f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0af0351-3590-40e7-847f-19fae51733b1",
        "cursor": {
          "ref": "90e21aff-4aa0-4c24-ab1c-5fb267b1aa32",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a37d7293-6043-400e-87e5-f91d63588e5e"
        },
        "item": {
          "id": "d0af0351-3590-40e7-847f-19fae51733b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f46e3852-9797-4beb-aa02-02e9de3c3bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d369ccd8-9aa0-4df0-9294-394e8e2ce5f1",
        "cursor": {
          "ref": "b996f25d-73e6-41a8-bc76-ad59847be950",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95907364-25a8-452e-aadc-2fd5a5d2e28c"
        },
        "item": {
          "id": "d369ccd8-9aa0-4df0-9294-394e8e2ce5f1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4258b2ba-69ce-48fb-bd95-6a2e81324d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41483df-fcdd-4f06-a41c-ea0291b6bc9f",
        "cursor": {
          "ref": "1afba5cb-e3ec-49e6-9a1c-1796849974fe",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a1fa50de-3e0f-42c7-88fa-5fd5b9ee98bf"
        },
        "item": {
          "id": "b41483df-fcdd-4f06-a41c-ea0291b6bc9f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "11751198-19ea-4276-a37f-322d63685820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045b95cb-c2f4-4175-941e-801dbc46a22f",
        "cursor": {
          "ref": "697c091d-4e41-4123-95f7-24169edb81a1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1927d88-5a3e-474d-a00c-86a4f3d00c26"
        },
        "item": {
          "id": "045b95cb-c2f4-4175-941e-801dbc46a22f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "feee1b35-698e-4682-bafe-d2a3ee2a3f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b92bc-5dca-46bc-8f62-f1d19c8cc929",
        "cursor": {
          "ref": "10b67aff-2875-4a24-94d4-d20f7577bbae",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e77b4d57-2733-4cfc-bf3c-8433f741e99e"
        },
        "item": {
          "id": "9e0b92bc-5dca-46bc-8f62-f1d19c8cc929",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "41d844ad-a2ef-43e1-b599-cf7f44fc8adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a374ee6e-83c9-4947-b88d-56d3e0ec571e",
        "cursor": {
          "ref": "3ec06e21-87a8-4413-b46c-e1d787d6607b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "edb6e655-8488-4502-8dfb-69270b9310d1"
        },
        "item": {
          "id": "a374ee6e-83c9-4947-b88d-56d3e0ec571e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9d2e34dc-1cb4-4679-8a9a-4501844ea359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57ecb57-f5e1-4d8c-9521-99d188f3df5b",
        "cursor": {
          "ref": "90cad395-e5f9-4f12-8e8d-62f41c93551e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5a4c45fb-bc5b-4c90-be35-2df5fb1770ac"
        },
        "item": {
          "id": "d57ecb57-f5e1-4d8c-9521-99d188f3df5b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "92034dc8-782b-4311-a9b9-3739b2b54cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bac11b2-b05d-4f06-a522-e42a90a9ec16",
        "cursor": {
          "ref": "4809340f-5744-4f45-80c2-5e995cac3246",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fc11c46d-0a9c-4005-986e-307298824201"
        },
        "item": {
          "id": "3bac11b2-b05d-4f06-a522-e42a90a9ec16",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4d1d37a6-4889-4d36-9ce0-2eb1f1f574b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22001c5-400f-4c8f-aa53-6629ecbe9448",
        "cursor": {
          "ref": "ba0b498c-0e77-4aaa-b2a7-6a1d44537fab",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cbf36da8-7efc-4a62-ad85-c2f904e224b0"
        },
        "item": {
          "id": "c22001c5-400f-4c8f-aa53-6629ecbe9448",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5427d064-4bb6-462d-8d1e-908e9571fcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68ee573-e93c-4079-add0-f24d389f4d29",
        "cursor": {
          "ref": "fb46274e-3d39-4ed3-9fa9-27860ca1647f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d59d28da-a5f1-4946-a7fc-85561a7caf62"
        },
        "item": {
          "id": "c68ee573-e93c-4079-add0-f24d389f4d29",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "964f44fe-78d8-4b2a-8530-7a6953748fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55251631-f4a9-4523-8a0d-ea5e5b21ec5b",
        "cursor": {
          "ref": "bea8fb52-3669-4cf4-8fba-335a4d91de64",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ef49dea4-c799-4644-b960-db58d4198b38"
        },
        "item": {
          "id": "55251631-f4a9-4523-8a0d-ea5e5b21ec5b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "491cd244-317a-497f-9a4b-ea0a007abd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef318725-7e11-495a-89bf-4c17135caf27",
        "cursor": {
          "ref": "8ef9a42f-77fe-41e8-9c68-0e9e60116bcb",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "380a6bf9-4400-49e6-b0f2-41bc2a3c8a34"
        },
        "item": {
          "id": "ef318725-7e11-495a-89bf-4c17135caf27",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9f0ae32-790b-49f1-a873-cb06ee06484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d99918-f450-4250-a15c-823de7cbd05d",
        "cursor": {
          "ref": "df2cc027-f859-4470-8fd2-f05f8eb8b7f4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b8fcf4d9-3bf0-4e80-b918-cb637eb01ddb"
        },
        "item": {
          "id": "d9d99918-f450-4250-a15c-823de7cbd05d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49d740dd-f0c1-4395-afa2-02053b49d5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcc19d1-85b1-48f6-a3d7-c1a3213f52d1",
        "cursor": {
          "ref": "6811f99e-83d9-4751-8975-8c6b01432c88",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d5d5e59f-5bcd-4b28-baa3-aa8887087f3a"
        },
        "item": {
          "id": "5dcc19d1-85b1-48f6-a3d7-c1a3213f52d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a220101e-9c01-4354-ac96-0aabc24f1048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e3c1a-3cd1-4324-b1dc-d12ac776c0bd",
        "cursor": {
          "ref": "5068684b-9c1a-4291-885d-9436f39d2549",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e0667816-44bd-4ee1-b029-30381c93bbdd"
        },
        "item": {
          "id": "602e3c1a-3cd1-4324-b1dc-d12ac776c0bd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ce6c1104-177a-48b3-b709-7bff78889f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b9e70-960d-4c05-8270-61219e2a5ee4",
        "cursor": {
          "ref": "10bebd19-d560-465d-a3d0-03b3663d1244",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69388302-052f-4d40-bb77-ef58971a035c"
        },
        "item": {
          "id": "9e6b9e70-960d-4c05-8270-61219e2a5ee4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7437afc7-b23d-424e-82b6-59da79e9de3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a498e-40a0-4f0b-8446-f94fede0f694",
        "cursor": {
          "ref": "7fee4edd-14c7-4719-b842-83c31caacce0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3fb3934d-bd34-4318-a462-eb2776506eec"
        },
        "item": {
          "id": "534a498e-40a0-4f0b-8446-f94fede0f694",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a0a7eea0-7360-4aea-98b2-39103fd25b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b6515-e1a2-4e0e-bece-83a8d1e430f7",
        "cursor": {
          "ref": "6fd2e844-2533-4512-a47d-d01e37d673fa",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6acd9a78-cb7c-40bc-a85c-e0a186df5ab6"
        },
        "item": {
          "id": "f26b6515-e1a2-4e0e-bece-83a8d1e430f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4c256168-ba1f-4421-8cd1-abcb57c19178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a94ff-a180-48aa-bd76-b6f61995e26d",
        "cursor": {
          "ref": "940dd1ce-3de6-4936-aeb4-b44cb9c840ad",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "03eacd5a-a752-46ad-888d-ddf851215f55"
        },
        "item": {
          "id": "417a94ff-a180-48aa-bd76-b6f61995e26d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "21558952-7dd1-4342-805b-bc175b539373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0fde3-c987-4546-ba53-644fb6ca9035",
        "cursor": {
          "ref": "fe61e452-94c7-452b-9af6-37ed7898ee9f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "204f58f0-0364-4a0f-9d36-ea4d18cfbe29"
        },
        "item": {
          "id": "15f0fde3-c987-4546-ba53-644fb6ca9035",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "47e9c37d-0106-497e-a723-56c9a5511ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347251d2-6889-4af9-8971-4c88d4e3b81f",
        "cursor": {
          "ref": "c94f5174-d52d-47ab-9aa0-7c1141125320",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2e16b223-f759-4bce-8534-a169c10d1a9e"
        },
        "item": {
          "id": "347251d2-6889-4af9-8971-4c88d4e3b81f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "395497b4-33b1-4a9f-b4e3-775b3f348ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e05ed0-3776-4f42-94bb-987b633940c3",
        "cursor": {
          "ref": "c08acba2-cd2c-494c-bba5-753a95215fd0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f538fd5f-5b32-47f4-9cc8-aa7ab76e3a10"
        },
        "item": {
          "id": "01e05ed0-3776-4f42-94bb-987b633940c3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7270fabc-2604-4d85-a62b-3140588fd4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c391fb-ece4-4416-afea-ec634c13a0fc",
        "cursor": {
          "ref": "e6da0fdc-06b9-43a5-a854-bebd2fe146df",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cf944ba6-7287-4b04-b16b-5eab841d1fca"
        },
        "item": {
          "id": "a8c391fb-ece4-4416-afea-ec634c13a0fc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "457a3b94-ff7b-4942-bf02-0191acc6800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b99d4-83ad-4cb8-be57-5eef3c963305",
        "cursor": {
          "ref": "a680594d-338b-4239-89ca-77099e87adde",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f791928a-67ed-411d-b989-8c5170ecd6d6"
        },
        "item": {
          "id": "383b99d4-83ad-4cb8-be57-5eef3c963305",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc069ce1-14cd-429e-ad73-1495fcb91cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb86646-0aeb-4e35-8e71-1b3b6b14fe60",
        "cursor": {
          "ref": "3b89b01c-c9f9-4dd4-b793-601d5ac99f55",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "678b65dc-6f37-4e28-8070-a054128e4a17"
        },
        "item": {
          "id": "6cb86646-0aeb-4e35-8e71-1b3b6b14fe60",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d1e130a-7890-43c6-9448-b1e929a0735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17cabdb-d4b9-4beb-b656-063a3e823b18",
        "cursor": {
          "ref": "49689427-d487-4214-b3db-3e046819ba66",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1fdf887b-b7f4-4eae-a9d5-0fc52c35afcd"
        },
        "item": {
          "id": "e17cabdb-d4b9-4beb-b656-063a3e823b18",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "80321d3b-1f80-4317-9a32-9bc99e0553a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c759d1b-060d-4ae5-b2d9-477a56c8c6bd",
        "cursor": {
          "ref": "09f706c9-f72c-4ac2-986c-ffafc3adfa38",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "113b7640-6c44-4b19-b16b-5e732f0214e7"
        },
        "item": {
          "id": "4c759d1b-060d-4ae5-b2d9-477a56c8c6bd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ad35c02-ac2a-4c86-af36-c9a4917962e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a4f92-10cf-4cc6-be48-0116ff0abdae",
        "cursor": {
          "ref": "f7e10a80-dd48-4c99-9434-4f5f7fae960e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "400a7b84-a281-4cab-9e96-1c7bb51082a9"
        },
        "item": {
          "id": "dd7a4f92-10cf-4cc6-be48-0116ff0abdae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e5d1f3b-082c-48bf-8eb2-3d847d5be38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5242733d-7dfc-41b3-b1fc-44a673df6c12",
        "cursor": {
          "ref": "bf27c7b8-26a3-46b0-96f5-3cbbfdb52f2f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "58ea0e17-9aa9-43bb-a3d7-95ceccc0ad32"
        },
        "item": {
          "id": "5242733d-7dfc-41b3-b1fc-44a673df6c12",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "659effbe-4216-4f25-900a-9cf6f982f950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed116490-933a-43bd-8b53-1ff5e9435f72",
        "cursor": {
          "ref": "2f162d10-3e16-4917-b517-60ec76307d40",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2847f41e-01e0-4000-b1a3-a5fb6e08c2a0"
        },
        "item": {
          "id": "ed116490-933a-43bd-8b53-1ff5e9435f72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "29e695c5-2500-48ce-8de4-6861d761b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57530f4c-d75c-444d-8da5-17b87a51a580",
        "cursor": {
          "ref": "ea9259c1-2fe2-4f96-985e-6a3d3fe0140e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5dd7e473-f549-48c6-82a4-d6d0953a7a3a"
        },
        "item": {
          "id": "57530f4c-d75c-444d-8da5-17b87a51a580",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c64e7e3f-e529-450b-a833-5b1e48982a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30df2051-f953-4711-9950-a1af65631f97",
        "cursor": {
          "ref": "1a31dfcb-19cb-4fbe-ae46-2e75369f3ef4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dedbc868-2ef8-4afb-80f6-b19eb186ae6d"
        },
        "item": {
          "id": "30df2051-f953-4711-9950-a1af65631f97",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1228bb56-167f-4ebe-9477-183419e597ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e363bf-7102-4cc5-9f7a-3c8d67c8efdc",
        "cursor": {
          "ref": "ec3a7b8f-f893-4563-a720-340a3b942d1a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "81f39327-62c3-42bd-813b-3d4e1cda4566"
        },
        "item": {
          "id": "24e363bf-7102-4cc5-9f7a-3c8d67c8efdc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e7741680-9f8a-464c-bcc1-18e82a569873",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2ae3b6-35ef-4dcc-8805-4d60073b3980",
        "cursor": {
          "ref": "cf4d7e62-2c57-499f-a07d-62426c645374",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "66498131-92ae-4204-85d6-2340605a9c59"
        },
        "item": {
          "id": "3a2ae3b6-35ef-4dcc-8805-4d60073b3980",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "95d09ae5-3a96-45dc-887f-5b856fdde24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "56944c2c-6c59-4935-bc28-31d028be54c0",
        "cursor": {
          "ref": "f2062e3c-3e94-42cd-b1dc-46724d9fe6d4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "32b81425-8f83-4eb9-820b-b9070779f375"
        },
        "item": {
          "id": "56944c2c-6c59-4935-bc28-31d028be54c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c0e4aef5-7e6c-476e-a787-bb8b8562e8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8b19452e-b958-4db0-af08-5fcf8f38cc97",
        "cursor": {
          "ref": "52c0ab63-b113-442f-827a-adbf07229fa0",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "daa526cd-e1b5-4456-b3bf-188801aea32a"
        },
        "item": {
          "id": "8b19452e-b958-4db0-af08-5fcf8f38cc97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b6377c17-019d-478b-a515-f680a87f9bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cb6414e6-549b-4425-9ccd-9e3203f5de16",
        "cursor": {
          "ref": "0d1c561a-b45f-43b8-8dc7-c1546b03db99",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8fef73f1-575d-4b90-8e85-e6a039ef79cc"
        },
        "item": {
          "id": "cb6414e6-549b-4425-9ccd-9e3203f5de16",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c2e8e38b-8aae-416d-9c0b-861b5815e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4cc831c7-2975-41c6-85f9-684baf4e8aba",
        "cursor": {
          "ref": "b177fb0c-e2ec-4b0d-8c34-04eacaa753f2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9cf8ddf6-a8d8-46f8-ad78-3ae863e8c402"
        },
        "item": {
          "id": "4cc831c7-2975-41c6-85f9-684baf4e8aba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fbbfa98d-4801-440a-99db-33799edf61e8",
          "status": "Created",
          "code": 201,
          "responseTime": 4705,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6519e214-c197-4cae-84b1-cc1430bb571a",
        "cursor": {
          "ref": "61043f46-3299-459a-b0d6-2a7a668fb73d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c0571b38-7087-487f-bba9-38b305785f6c"
        },
        "item": {
          "id": "6519e214-c197-4cae-84b1-cc1430bb571a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50adedc7-b30f-4ce9-a7c5-72038647a0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7c475b96-6ba5-4269-926e-9debd82bbf7b",
        "cursor": {
          "ref": "9b0151f2-77dc-4dc0-b3f5-47a6c88afe79",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0e77af80-8287-4df9-a833-c0519d958224"
        },
        "item": {
          "id": "7c475b96-6ba5-4269-926e-9debd82bbf7b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b49e6ace-b5f6-431d-9b29-bfdf1616b6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "31f53ca8-05c6-4809-a4d9-5320988e2029",
        "cursor": {
          "ref": "73185ca2-2cad-4299-8f94-c6e7f4cfc8f5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fa03da91-72b0-43de-bf63-43feee63f658"
        },
        "item": {
          "id": "31f53ca8-05c6-4809-a4d9-5320988e2029",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "46373b14-cbde-4410-96d9-17c131015659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98065091-9f41-4d6b-9f03-991bc01eec65",
        "cursor": {
          "ref": "a02fe253-1513-4619-9261-28ba69e93339",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b46ee474-e0d5-4cc1-9015-013f48c936c0"
        },
        "item": {
          "id": "98065091-9f41-4d6b-9f03-991bc01eec65",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbe9620e-51a2-4b5e-9366-2227ff4f0547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396b1bf1-6a09-408c-bf26-e40db606ecc9",
        "cursor": {
          "ref": "2b2474dd-b02f-4bd8-a384-860f34a74da0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "79f863aa-eeb4-4b80-a2b7-3f5aab2c9c91"
        },
        "item": {
          "id": "396b1bf1-6a09-408c-bf26-e40db606ecc9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fa203805-6944-4269-ad79-518ba237ebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c687311-d857-4481-90f5-0182dbb48bcb",
        "cursor": {
          "ref": "4769f476-1932-4560-8041-40adee07074f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b78cb660-ff2e-4dd4-a807-188147c52a2c"
        },
        "item": {
          "id": "1c687311-d857-4481-90f5-0182dbb48bcb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1456aa98-2d57-4946-9f28-4fc73249268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2db7f37-2eac-4a9c-8536-f0fe58d8420b",
        "cursor": {
          "ref": "a5c65ee3-7854-42b6-8954-b90d73521eca",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "578fa7ac-8211-409d-b306-7c5bb4178586"
        },
        "item": {
          "id": "a2db7f37-2eac-4a9c-8536-f0fe58d8420b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8856688d-17ce-4108-ab4f-9dff8179dc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8494140-2316-4ccf-82e6-69f616af068c",
        "cursor": {
          "ref": "c336aba5-cfe8-4d9a-854e-f8c3f2159d32",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cb2bb155-257b-4858-851d-f5bf875b0d9a"
        },
        "item": {
          "id": "d8494140-2316-4ccf-82e6-69f616af068c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e361fb7-f8ee-43e0-94d8-47fb7a23b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2810766-62c0-46d8-8ff2-4a3f75b2c696",
        "cursor": {
          "ref": "b43c3686-1f37-4688-a7ff-dae7ca5040d5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "695a64ee-545e-4ef9-9b25-6b362167c870"
        },
        "item": {
          "id": "e2810766-62c0-46d8-8ff2-4a3f75b2c696",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1a18b96-f02f-41dc-b122-b5aafa3f5d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f6b32-c574-41d8-866a-b838378542a3",
        "cursor": {
          "ref": "c0f1fd87-909a-4698-916c-d863142059b6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c703b6eb-7e94-4eca-8ae7-0c24cf9aff1a"
        },
        "item": {
          "id": "520f6b32-c574-41d8-866a-b838378542a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b3a6fb2-c2ae-45be-9431-a7dc39937ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9abb983-da71-466e-8c7f-7a09eff205df",
        "cursor": {
          "ref": "eea901e7-cad9-4fc3-99d5-7156f37e6c8d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9a13f9b4-8317-4916-b7ce-ccfd8f0556ac"
        },
        "item": {
          "id": "d9abb983-da71-466e-8c7f-7a09eff205df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb853b5a-1083-496f-af5b-afefa0150e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c83ed-7e55-426e-ac0f-d31cf62973a3",
        "cursor": {
          "ref": "8c9ca329-37c4-463a-9eae-0c794e8d8ba1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "75a9334c-fea0-4fa7-9eba-d08acfcf7359"
        },
        "item": {
          "id": "4e2c83ed-7e55-426e-ac0f-d31cf62973a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b896484e-f2ee-45b3-99b9-e5075d1f5055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04954ca-8a3c-4a45-b5f2-ac8d1fcaf0c4",
        "cursor": {
          "ref": "dca9309e-a000-44e7-9367-2b912593ecdf",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3dc24fd1-755f-49a8-804d-131b24ff47ec"
        },
        "item": {
          "id": "f04954ca-8a3c-4a45-b5f2-ac8d1fcaf0c4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9ad8a705-5200-4cc7-bb33-01a40ae8d6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b02fc1-a00a-4ada-a448-f7081897618c",
        "cursor": {
          "ref": "c0dacf03-f2d4-4881-888f-4186997bb0a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "58cdb0f0-4aa0-4e59-a32f-781f79447742"
        },
        "item": {
          "id": "b6b02fc1-a00a-4ada-a448-f7081897618c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b3b9e30-0e05-4572-8947-6bad2da5295d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a67672-9bfb-4d1c-afc1-25da7051b65f",
        "cursor": {
          "ref": "eb424740-09ee-4ef1-a8be-f7c20e2431fb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e587fa30-ae10-41ec-b641-50e71a589123"
        },
        "item": {
          "id": "d5a67672-9bfb-4d1c-afc1-25da7051b65f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0936ca05-95fa-4946-bd98-a3ebd0b273d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f573a7c-e74a-4d4e-8fd1-f2b2ad9fee9b",
        "cursor": {
          "ref": "06fc33f6-c47a-49b2-a179-334fffbe48de",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ba33c011-e03f-45bd-b2d5-e746baaaa9b2"
        },
        "item": {
          "id": "2f573a7c-e74a-4d4e-8fd1-f2b2ad9fee9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4f86a338-53c6-4b93-b955-21cbd8b357c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2b4eaf-19f0-46e1-9242-4496ba613081",
        "cursor": {
          "ref": "a07dd156-93f7-41bf-8f93-be39f019d9ea",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "77bb7f6b-46b2-4c16-9668-6e8cb796adfe"
        },
        "item": {
          "id": "ce2b4eaf-19f0-46e1-9242-4496ba613081",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1421caa3-76a2-44cc-b458-5519f35823b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb1c6ce-6f3e-4d76-83b0-b4f2ffb66523",
        "cursor": {
          "ref": "8109decd-fb87-4994-9839-69ce89330330",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4bd4db25-6f25-48bd-a16e-bd145d2e50a1"
        },
        "item": {
          "id": "5fb1c6ce-6f3e-4d76-83b0-b4f2ffb66523",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ce36a2f7-c8c7-49eb-93b7-6f755b2b5118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f175c-3feb-48f9-903a-499869ffce00",
        "cursor": {
          "ref": "d5d6d362-55ff-402d-8221-b0cfa88fe958",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b4f36cb1-71a3-4a58-a787-b97b4505f905"
        },
        "item": {
          "id": "9b1f175c-3feb-48f9-903a-499869ffce00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39c224b4-acb4-4044-8800-42751ee797fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95969b01-929d-40b7-99e2-d1a4b2c93211",
        "cursor": {
          "ref": "2c6b463c-8193-49bf-b39b-c117f846385b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6698620-0657-4956-9d99-dacbfa39487b"
        },
        "item": {
          "id": "95969b01-929d-40b7-99e2-d1a4b2c93211",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e9597ead-14f8-4e38-a5ce-d33d5065ae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22e292e-b293-49f9-8140-3ce58a10b73b",
        "cursor": {
          "ref": "b63af3dc-8c53-44b4-90a4-20d76cf58411",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "04cea783-361a-441e-9396-c8481e6e46bf"
        },
        "item": {
          "id": "b22e292e-b293-49f9-8140-3ce58a10b73b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85b42d6b-db7c-475f-85a2-a7db8bf5587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc61ecc-c42f-43f0-a4eb-35d7ff02ea4b",
        "cursor": {
          "ref": "995740a3-cfac-4ff1-9012-0dadb8495e05",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3a6ccfbd-782c-4cee-be25-04bc3d28bb25"
        },
        "item": {
          "id": "fbc61ecc-c42f-43f0-a4eb-35d7ff02ea4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6013a4e5-60a7-40e3-b200-02a9d2c7c791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a6a7b5-7739-43c0-95e6-211c8cb247d8",
        "cursor": {
          "ref": "f785b480-ccdd-4dd5-baff-1e5771b8d167",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "894bc06d-6c79-4430-ae8f-3e62b5253765"
        },
        "item": {
          "id": "58a6a7b5-7739-43c0-95e6-211c8cb247d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28636ccc-9a5e-47fb-9e02-5ddc4144d83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08772496-eac6-403d-a9b7-444d77c68b0b",
        "cursor": {
          "ref": "a5b47e4e-4fe9-4c5c-b78b-a52a7b91d0e2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "52b74ee9-026e-4d76-b4fc-6971bb26392e"
        },
        "item": {
          "id": "08772496-eac6-403d-a9b7-444d77c68b0b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f93d4c4-eb48-4c95-91c5-caf25de1f58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44893b6c-0b4d-4c12-98c3-d76afa081890",
        "cursor": {
          "ref": "92b533a4-47a9-4d04-a69d-bd7bc4ab8053",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a7ba4b7b-c49c-4513-ab0e-a2cc265cee4c"
        },
        "item": {
          "id": "44893b6c-0b4d-4c12-98c3-d76afa081890",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bcac1f22-cc5e-4e08-81ee-d28cfef0a7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0321e0c7-1a4e-4e09-a88e-7430906d14ab",
        "cursor": {
          "ref": "e7823bf5-b907-4790-9759-cb51a64d925a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6d07e42b-00c4-458a-b40a-ac01b9743b15"
        },
        "item": {
          "id": "0321e0c7-1a4e-4e09-a88e-7430906d14ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "884050fc-27f7-4f3e-8e54-eb7310d90241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac677acf-367c-4646-b81f-720aef6e317c",
        "cursor": {
          "ref": "46014ba4-fb68-42a8-8c11-1f518f0b6207",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "979e3034-e049-43a2-bea7-68d7e021d350"
        },
        "item": {
          "id": "ac677acf-367c-4646-b81f-720aef6e317c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b4f7f08-45f5-4b5f-8236-e1eb627abb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e2d0c8-4c9a-4b15-a509-86e5e1cf6429",
        "cursor": {
          "ref": "8e6b7f74-f9e3-4a84-8337-86510439b8c6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "780519cb-f1f4-451a-9893-9c6041f4b353"
        },
        "item": {
          "id": "70e2d0c8-4c9a-4b15-a509-86e5e1cf6429",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09146a99-3d9e-48d8-8185-f716dad0f26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0101d393-76f3-4b5f-a68f-1bd2778f9e63",
        "cursor": {
          "ref": "08e92b83-aefc-4548-ae7f-224121df157f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a726c891-4b50-4a2d-9be3-9ce09f88d072"
        },
        "item": {
          "id": "0101d393-76f3-4b5f-a68f-1bd2778f9e63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18d7127c-74da-4ee8-831f-dfbeb494858f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d04b7-72d5-4c37-8f05-431b7c952880",
        "cursor": {
          "ref": "e86ebc65-5fba-46be-8787-b5c00d6ea353",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6a4579ec-51cf-4e3a-bbfa-51c01e28226e"
        },
        "item": {
          "id": "856d04b7-72d5-4c37-8f05-431b7c952880",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a72bd80e-24a7-4b3a-a891-08774d8a10df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6fe5ae-924b-4407-93fd-3eb747f1e02e",
        "cursor": {
          "ref": "4b10e5fe-6300-407d-855c-146daaaa0cf2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "48e6b6b5-75c4-42a1-8813-cde8135dee3b"
        },
        "item": {
          "id": "3d6fe5ae-924b-4407-93fd-3eb747f1e02e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1bae5886-f3e0-4a7e-ba08-ecefb857ac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29fc31c-527e-41f5-8f0d-1e67c08136cc",
        "cursor": {
          "ref": "5d17848c-3a69-4c2d-b347-e5273923f1cb",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "94003ff4-fb1e-4b09-9dd6-dac8cf35c94b"
        },
        "item": {
          "id": "d29fc31c-527e-41f5-8f0d-1e67c08136cc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ae0912c4-0387-4e24-a765-351538903e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8ad28c-87b0-4216-bbc8-967614fc56b3",
        "cursor": {
          "ref": "83f26445-e647-4364-a359-e15f4ef85c38",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "468bd72e-883d-4f0d-ae43-8952513873cf"
        },
        "item": {
          "id": "4d8ad28c-87b0-4216-bbc8-967614fc56b3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c50678d-c5b2-4282-baf8-5eb5eb597357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802cfd51-e732-4bf0-9c32-2bf72dc08e0a",
        "cursor": {
          "ref": "ea3af3d2-5fb6-4c24-b5f9-96cb02f83dff",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ccb8e70b-e87d-487b-b481-632c60f2f9f5"
        },
        "item": {
          "id": "802cfd51-e732-4bf0-9c32-2bf72dc08e0a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7fc8932f-5112-4725-a6ef-d807fe816fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d6b11f-87d4-4bb7-b523-6d8d6ecac1ad",
        "cursor": {
          "ref": "566b63ca-23d4-4609-b457-6f822da7f5b7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a716ad59-81d6-4cc7-ab5d-7e576d396bf7"
        },
        "item": {
          "id": "10d6b11f-87d4-4bb7-b523-6d8d6ecac1ad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15bc394b-19f4-4389-ae70-13c44984642a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56da292-c4c5-4e59-b3df-34611e49f2b0",
        "cursor": {
          "ref": "3aa1d7ea-02d2-443b-9e4c-42df8c1a3daf",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f7ef395e-9876-4014-8cd5-44e3d2670a0d"
        },
        "item": {
          "id": "d56da292-c4c5-4e59-b3df-34611e49f2b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6ae507f1-4c3a-4d96-8e5d-ff4fdc76b26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a79781-cc63-4bbb-974f-17be2d873f1d",
        "cursor": {
          "ref": "b2837f57-9f30-42e1-9429-dd970e3a7c47",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "19e57d50-c902-42c7-ac11-c3a79672f240"
        },
        "item": {
          "id": "85a79781-cc63-4bbb-974f-17be2d873f1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "86544445-d745-4c57-aa4f-3fea6e81bbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd10a19b-f9f5-425f-8e27-a8dc9febbfcf",
        "cursor": {
          "ref": "9abdbe99-e0de-4e9b-93ec-f20661536793",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9dc7966d-2b01-45d1-ad4f-05ffe7d77762"
        },
        "item": {
          "id": "dd10a19b-f9f5-425f-8e27-a8dc9febbfcf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "85923612-107e-4df0-9b18-b90323817e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bb8c46-d550-4eb1-96d8-1a87e90a70f9",
        "cursor": {
          "ref": "336026b2-f03c-4a48-8367-df95684e815a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ccf833e1-adac-41a3-8f3e-cdf9f46ff50e"
        },
        "item": {
          "id": "11bb8c46-d550-4eb1-96d8-1a87e90a70f9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3878823d-39f9-4f45-948b-864c81b91aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81161cf-b896-4084-a2ce-171b0f90db73",
        "cursor": {
          "ref": "c7b0689b-f97d-46fe-9749-ae24756ba167",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c98a3cd8-9e9f-4b34-84b1-6bec1d92c21b"
        },
        "item": {
          "id": "f81161cf-b896-4084-a2ce-171b0f90db73",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c50d7b8d-5c68-419f-9cc0-8d6d3c32cb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f424cb9-e4af-4e8c-8908-dfc46e228035",
        "cursor": {
          "ref": "3b5053c9-0f32-4f03-9533-bd8b6192d0c5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c95deef0-bd5e-4de1-bdea-7ca485ee3851"
        },
        "item": {
          "id": "4f424cb9-e4af-4e8c-8908-dfc46e228035",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5bf0643f-5265-45a0-b518-bd01f8356737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4552c8-3721-48c8-9e22-247c66fcd09e",
        "cursor": {
          "ref": "a33feb37-02f4-46da-aca4-5b7ae0330a89",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0e8042e8-fcb9-4435-9652-fa6460e0c26e"
        },
        "item": {
          "id": "0f4552c8-3721-48c8-9e22-247c66fcd09e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3b5655cd-388c-42ce-b7f3-7079a8e1576f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1001320d-c468-4df8-b9ca-ec5f0eaef987",
        "cursor": {
          "ref": "1b0d239f-0679-4e7f-a574-db8189ba222a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "73a14b3f-36b0-40b2-ab53-d7ad94410040"
        },
        "item": {
          "id": "1001320d-c468-4df8-b9ca-ec5f0eaef987",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c8a4e3a3-4391-49ad-88ff-2c62404e5861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba276b2f-bce8-4857-a2a9-48b08ea1c1cc",
        "cursor": {
          "ref": "0d576cb8-7524-445d-83be-2f42984a22d8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6311a212-426d-4dcc-82de-8b2a2553074a"
        },
        "item": {
          "id": "ba276b2f-bce8-4857-a2a9-48b08ea1c1cc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f7447a9-765f-4f93-afda-503d21117a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1972522-79f6-4b0f-aae0-6dc3b841c9f8",
        "cursor": {
          "ref": "44a423c2-f515-43d8-b5cc-b48d188b1dc1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e24a2678-8ba6-4cb4-b7c8-087e18dcb6d7"
        },
        "item": {
          "id": "a1972522-79f6-4b0f-aae0-6dc3b841c9f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "976d4acb-f0be-478b-b98b-9fb1d89840c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7887a9a6-7c29-4cd0-a728-2066fb23f944",
        "cursor": {
          "ref": "9544f2d7-30a1-40d2-bda0-ad7ab3d4ead4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "083a6313-a632-4b1d-8ad5-8b58da7729b2"
        },
        "item": {
          "id": "7887a9a6-7c29-4cd0-a728-2066fb23f944",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a3039bb0-0c22-4b53-8ad1-485af3535819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2d0e2f-136f-4d5b-bf8f-1c40be04204b",
        "cursor": {
          "ref": "1a08d615-e982-485e-8e1c-8939e0e23a2e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bc3b7573-baf9-4420-909d-d28334676804"
        },
        "item": {
          "id": "2d2d0e2f-136f-4d5b-bf8f-1c40be04204b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1b847d61-df5c-4476-a3dc-068012bff773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4c3a9-33a0-4bec-a9ad-a1c0012e4301",
        "cursor": {
          "ref": "84255686-8075-4d0c-9b2c-c192f242f9ec",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f2b19df-94aa-48e3-ad77-f7ab65a87215"
        },
        "item": {
          "id": "6ea4c3a9-33a0-4bec-a9ad-a1c0012e4301",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "80727faf-a9c5-4efc-8341-9d310fb37799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d425448f-028d-47ef-a854-e7db4195a167",
        "cursor": {
          "ref": "6f587fe6-dee4-4950-a9af-60d0ea89546d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2264046f-4be9-4c19-8a18-fd7c6e96a02b"
        },
        "item": {
          "id": "d425448f-028d-47ef-a854-e7db4195a167",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b581810-9ea1-4cac-ae95-6cbd45ce5f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b581664-012c-4f5c-b534-b039681e99a7",
        "cursor": {
          "ref": "bdc8fb74-1612-41f3-b61e-dadfb81d1e13",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3dc61ccd-3b1a-49fb-8484-621dce3f439a"
        },
        "item": {
          "id": "4b581664-012c-4f5c-b534-b039681e99a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8ce30c12-f333-4531-8411-d22e201e2eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bb3dc4-efe4-42cc-a0c1-aea0b131ffdb",
        "cursor": {
          "ref": "3d1c437f-28a0-4ffd-86f2-7fdc5888c7b5",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "acae3b21-62d5-466e-b4c1-020a65b75065"
        },
        "item": {
          "id": "46bb3dc4-efe4-42cc-a0c1-aea0b131ffdb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e686113e-650d-4e82-beef-f84d2bf1ee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee01968-fb22-4cb9-9575-7fb933722a70",
        "cursor": {
          "ref": "13cebd66-fab1-4269-9dba-8695a5ab71f3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "772ef518-5cf1-4364-ae0d-60cfb100af84"
        },
        "item": {
          "id": "5ee01968-fb22-4cb9-9575-7fb933722a70",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3f50a7ca-d797-4965-8dfb-20a40c802557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046166c1-82cf-4419-8536-85ac4bd6beb3",
        "cursor": {
          "ref": "8780900e-2ffa-4132-9ebe-3b5e2de0fa3c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bd4df55f-43d9-4420-a390-35ee02594a26"
        },
        "item": {
          "id": "046166c1-82cf-4419-8536-85ac4bd6beb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9c9f2dc0-8494-4818-b041-36561ef97849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5787eb5f-ebb7-4959-8268-da9d341697a2",
        "cursor": {
          "ref": "b2d148df-d6a0-4dae-a2c6-b9d7a519ab8c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8967ca5b-5ba4-43f0-be90-8fcfcfca29bd"
        },
        "item": {
          "id": "5787eb5f-ebb7-4959-8268-da9d341697a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adbb0c49-cabe-49cf-879d-040b0a225e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e812de76-2412-4648-a42b-08590cc85ebf",
        "cursor": {
          "ref": "e5dd2c12-5a4f-4b37-88ec-298140e0bdc8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2cf5bf42-28e7-4ca0-be8b-de0cbd2aa1a5"
        },
        "item": {
          "id": "e812de76-2412-4648-a42b-08590cc85ebf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a4417290-1a00-4a2e-a53e-f7c2112db30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9db1df3-5b0b-4d3f-a718-137b995aedaa",
        "cursor": {
          "ref": "39dd853d-634f-4a11-a19c-795cef43b3b7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e41055b-88fa-4520-958e-2099fb2729d4"
        },
        "item": {
          "id": "f9db1df3-5b0b-4d3f-a718-137b995aedaa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b8695047-2582-4e3f-865f-6eadec8fd285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e124e728-9db3-4930-a748-79aff02659e1",
        "cursor": {
          "ref": "77dd3f40-cb5d-434e-b318-8e9fdee0f153",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "41c69ffb-12aa-4f53-945b-1c15b8d6260d"
        },
        "item": {
          "id": "e124e728-9db3-4930-a748-79aff02659e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "401b96c0-e284-4ca3-9557-29c20afcf144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dd0d58-07cc-4cf6-ab9a-6350f206b064",
        "cursor": {
          "ref": "2b0a6be1-c745-4cd1-acf8-4043b8d7fb50",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d35a25cc-89ec-4645-be0b-3dbf1252c8a2"
        },
        "item": {
          "id": "a2dd0d58-07cc-4cf6-ab9a-6350f206b064",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e9f069b5-f6fb-4835-ae41-5c8e2c07a13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1395625-d7ed-4364-b603-909bbfd4f323",
        "cursor": {
          "ref": "2c43a633-c608-4a8d-9eee-6efb80193ef0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "03484b76-e232-404c-8aa2-9fb359f8b1eb"
        },
        "item": {
          "id": "f1395625-d7ed-4364-b603-909bbfd4f323",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bc1c300f-946a-4394-b3c6-f8abcb4323bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f653a0-268f-4b4f-9117-0eb6796c35a6",
        "cursor": {
          "ref": "1ef4432b-da8f-4e38-9e99-114af5b2b9e5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d8fe8ea0-3e15-46f5-bd0c-6b57913fa2f4"
        },
        "item": {
          "id": "e6f653a0-268f-4b4f-9117-0eb6796c35a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "22f55770-6d91-4dbb-90d6-4eec0abb4032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20229a7-8d28-4022-b95c-2243c048082c",
        "cursor": {
          "ref": "a853bbc8-3f45-4b01-b9d7-59851ef86825",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9ab36a6-45a4-48ea-b7ba-776cd094865e"
        },
        "item": {
          "id": "a20229a7-8d28-4022-b95c-2243c048082c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2d5c58bd-dfac-4b20-9e9e-cc13801ce1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af646829-fb38-44da-9aff-4a703d215edd",
        "cursor": {
          "ref": "18be1947-3ab9-45c5-ad7a-4ef90b662776",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22eaadaf-c668-4527-af5b-8ed07c01eee1"
        },
        "item": {
          "id": "af646829-fb38-44da-9aff-4a703d215edd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "990c14e4-738b-4a49-8761-aeebbe232eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d588c26e-fb64-4ed6-b1e8-1ea3b7c65090",
        "cursor": {
          "ref": "2843c6df-faf0-482d-8929-54c039f2b11e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0ceb8541-66d0-438f-8fa3-73c221d258e0"
        },
        "item": {
          "id": "d588c26e-fb64-4ed6-b1e8-1ea3b7c65090",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "80bf34d3-8dd5-4d59-9e02-46d0976ee2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e277af-df51-4af6-a31e-e0d5e86ccd71",
        "cursor": {
          "ref": "5ea5ec5c-28e8-4c8d-a16f-4706c4ddb93b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6722c08-5349-40bc-826a-33e1fe483220"
        },
        "item": {
          "id": "42e277af-df51-4af6-a31e-e0d5e86ccd71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "35b37c38-3ef3-4796-847e-09d8d7c47d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0a0ee5-9406-4756-858a-71f0fb5b5b81",
        "cursor": {
          "ref": "092adcf2-2990-48bc-b3c1-bcf1185856c6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "47e7cc07-c4c5-4a6b-8727-65d154534046"
        },
        "item": {
          "id": "1c0a0ee5-9406-4756-858a-71f0fb5b5b81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbc28ffd-20dc-4b62-9b44-c2fda8e7dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319151cf-acf4-4ecb-ad3d-cf073fa96134",
        "cursor": {
          "ref": "106e3bc5-9be3-4391-af47-eafed602831f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aadadc4d-87d2-458c-acdd-17e6e03ba912"
        },
        "item": {
          "id": "319151cf-acf4-4ecb-ad3d-cf073fa96134",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f58997d-9082-40bd-9317-5f342572da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0dab7-edac-4db7-9bb0-b73c8f3f39d3",
        "cursor": {
          "ref": "fca437bd-a9b0-4d21-b471-ceb775ee4dd2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "10f24f94-83c8-4d31-b13c-120dfd5e5e82"
        },
        "item": {
          "id": "3ba0dab7-edac-4db7-9bb0-b73c8f3f39d3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "80cfc386-32cc-48d7-a0c7-9c6e5014bc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc9fb36-5929-4c42-9d17-c0d4779bfd55",
        "cursor": {
          "ref": "3e761885-91df-4992-8693-bb858736f8f5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "11ce259e-5d09-4a73-8f3b-7dc4ad5c10fc"
        },
        "item": {
          "id": "5fc9fb36-5929-4c42-9d17-c0d4779bfd55",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9c2444ba-f6ae-4275-b75a-1294b5ab4ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c595740d-f6e0-468c-a822-f4e60449aad4",
        "cursor": {
          "ref": "0039be7d-d064-43f2-bdc4-0a44ae2d740b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69ba37f5-3b41-4795-a774-fc2aea84d4d9"
        },
        "item": {
          "id": "c595740d-f6e0-468c-a822-f4e60449aad4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "945ef24b-d222-40c9-930d-fc06d6827089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1a75a-7b86-44e2-a32e-76a71ad8d241",
        "cursor": {
          "ref": "eceb1668-6088-4b72-941f-8bb07a6b701d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0859a53-2ccc-4e67-a7b0-887e97cbee9f"
        },
        "item": {
          "id": "b5c1a75a-7b86-44e2-a32e-76a71ad8d241",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "93fec9a5-30fb-4372-a68b-05fdea9ac493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52422ade-37d3-4878-94ff-54997c16ed62",
        "cursor": {
          "ref": "07a11a20-0664-4e56-9515-679a307f7043",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "05478ab2-0fb4-4ef3-9555-972a7bd006fc"
        },
        "item": {
          "id": "52422ade-37d3-4878-94ff-54997c16ed62",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a1d7dda8-62bd-41ce-9dc6-2e41f707b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d052b2-3350-4164-ab57-5687bb16954b",
        "cursor": {
          "ref": "0dcfaf38-cac7-4e56-b91e-dd4a29700c6b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6619af74-e9de-4f4c-a5b9-bb11838a5978"
        },
        "item": {
          "id": "a6d052b2-3350-4164-ab57-5687bb16954b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e7653997-6244-4466-9b7f-767d0c93ccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd11dd-7de4-4b1a-a2ba-75112c12b098",
        "cursor": {
          "ref": "56e16dbe-5ac4-48a0-9c6b-608bb41282d4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "073d0d0a-38a9-48c8-83a6-34ac1c8ed98e"
        },
        "item": {
          "id": "fecd11dd-7de4-4b1a-a2ba-75112c12b098",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "90a59c5e-9f20-4f55-9fb5-991bddf62c08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18974ae8-82fb-42fa-868e-71824952ef96",
        "cursor": {
          "ref": "9b4d77b3-32dd-40f9-a361-3ff26b7d39b0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0018de9e-a610-4f9d-b8d7-d6b7de521905"
        },
        "item": {
          "id": "18974ae8-82fb-42fa-868e-71824952ef96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5918f5aa-a726-4afa-9d6e-672a03f3bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c848bc55-7016-4ec8-ad52-29376a5d343e",
        "cursor": {
          "ref": "bd6be886-6edb-415c-ad21-659063eeab9f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1bed758c-d64d-4d14-bc13-233e59f72b5a"
        },
        "item": {
          "id": "c848bc55-7016-4ec8-ad52-29376a5d343e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f960cca-bddf-4d6d-aa20-5a96e4c97094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d0269-8912-489f-a7a9-ff2caa88894a",
        "cursor": {
          "ref": "df5f2851-fd33-4bfe-8783-0457f46064b6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8c5af8af-e806-407f-aa77-6c8cdc819edd"
        },
        "item": {
          "id": "7a4d0269-8912-489f-a7a9-ff2caa88894a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f9d7e016-8cd7-44b4-8b99-b93a84f96bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0337d13-5b8f-4b99-ad88-bdd4bcf97587",
        "cursor": {
          "ref": "73a85fc2-5cb4-46e9-b293-04a337796a25",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d33465d5-9c9a-4181-aace-b23998f2a159"
        },
        "item": {
          "id": "e0337d13-5b8f-4b99-ad88-bdd4bcf97587",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "716a80ef-0581-403b-a7a9-6216b60167f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc0ab5e-43ac-4410-bc10-afedfcedc4df",
        "cursor": {
          "ref": "7638825b-eb4d-4c7c-87f4-d306bb9fcd92",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "41fb0763-9411-457a-92b6-ea573ae71b1b"
        },
        "item": {
          "id": "3dc0ab5e-43ac-4410-bc10-afedfcedc4df",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9df85044-5224-462a-b82b-c9a23d2441a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb5cf07-e458-4d0a-b2ee-466f7541ff5c",
        "cursor": {
          "ref": "15d8f845-bf4d-48b9-a0d7-4341aa8498db",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "85d7a363-e66a-492e-9e7c-90e7867b0389"
        },
        "item": {
          "id": "1cb5cf07-e458-4d0a-b2ee-466f7541ff5c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0adf26d1-c850-4f7e-b0b1-8b8bad8ac889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7a7149-5952-4a60-8deb-5308181f4c4f",
        "cursor": {
          "ref": "4148265b-9eb0-4222-b8dc-f785f5b8f7e1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a75dd61b-56a1-4cf7-9d9e-f2a96ae7776a"
        },
        "item": {
          "id": "1b7a7149-5952-4a60-8deb-5308181f4c4f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "32bb8988-33dd-4dac-9118-81d8cdc69102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc10d917-743f-491f-85b0-849bcfa4bdd4",
        "cursor": {
          "ref": "2c2fbbc5-48e3-4e3c-afac-d5bec8a3edb4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "caec5bc9-28c3-428d-9a21-fd4c1833aadf"
        },
        "item": {
          "id": "bc10d917-743f-491f-85b0-849bcfa4bdd4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "68458927-7039-4a46-899f-c3ae7febd101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83530d7e-2f7e-445b-b3d7-dfa8c1dfe44a",
        "cursor": {
          "ref": "29eb66b0-061d-4655-8465-a50e56a1b61a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e2734a11-acef-44e4-8a15-d90cb92b2e15"
        },
        "item": {
          "id": "83530d7e-2f7e-445b-b3d7-dfa8c1dfe44a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9155ae06-1f26-4659-87b6-661207fe647e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f047ba7e-67e2-4976-a774-e9abbd3f547e",
        "cursor": {
          "ref": "7f9145cf-d0e6-4e56-bb9c-0c94e9d28a31",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d97c063-0df8-481d-853b-9034203f653d"
        },
        "item": {
          "id": "f047ba7e-67e2-4976-a774-e9abbd3f547e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d8818194-de42-4570-a0d5-c3e572167f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2a2d0f-41bf-4769-9f44-313a92cd7600",
        "cursor": {
          "ref": "0dc29cf8-be76-4ca3-8730-a3f9f7de85c3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a3935ae2-0894-403d-8040-bf7c513e054b"
        },
        "item": {
          "id": "9f2a2d0f-41bf-4769-9f44-313a92cd7600",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f7189059-4850-468d-bb95-812c7ecfe326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01293718-20f6-46f2-8ae8-05e9312d67d3",
        "cursor": {
          "ref": "9590ccd0-9871-4d90-8d45-5bbd14593bf5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7c039b98-03ca-47ea-ad4d-d387b9b0310e"
        },
        "item": {
          "id": "01293718-20f6-46f2-8ae8-05e9312d67d3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9d740ac5-17be-484f-8ea5-b5d8513963cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f4eca-569c-46dd-9077-263b3fc8ada5",
        "cursor": {
          "ref": "969aed35-c10b-4cab-9c6c-5cd4a1d5f602",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82d430da-9ae7-452c-9071-82a838f81dcc"
        },
        "item": {
          "id": "a80f4eca-569c-46dd-9077-263b3fc8ada5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4f459b3-94d0-4f51-9f2a-71fdd026e073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce29cd58-63ce-40fb-a4c8-3342f2cb7764",
        "cursor": {
          "ref": "f823a65e-43a6-4094-93d9-65dab9c29ab5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3cddfb5f-1f5c-49d0-abb2-c5220b080645"
        },
        "item": {
          "id": "ce29cd58-63ce-40fb-a4c8-3342f2cb7764",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fa7fe1be-9cc9-4faf-8b7f-0fa82554e8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6113d350-d652-4820-8a64-a1585b58c6a7",
        "cursor": {
          "ref": "d5fb5d26-110e-4a05-acf8-f281f67fa604",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "656d35e3-8980-4368-acd4-f5c5bdafa5ea"
        },
        "item": {
          "id": "6113d350-d652-4820-8a64-a1585b58c6a7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0a54f33a-40f1-4899-903d-342213184faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca9e03f-69ab-4bc8-bf38-c02c10730328",
        "cursor": {
          "ref": "357ea616-0dbb-45dc-90bf-b2bc5ce5988b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "92baf234-017d-4476-9972-1d23fb7fab8c"
        },
        "item": {
          "id": "6ca9e03f-69ab-4bc8-bf38-c02c10730328",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74a0da41-872a-4d12-b66c-49b47cfd6ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6451e829-6527-4e60-b632-637a2d1d6ea5",
        "cursor": {
          "ref": "fb9cf7bf-71b6-4757-a9fd-d003e1e6d8f6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "759ac624-c5cb-46ea-8fe8-b2b142757ebe"
        },
        "item": {
          "id": "6451e829-6527-4e60-b632-637a2d1d6ea5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dbbf5205-1707-4343-97d8-5523c762e870",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ae13696c-3b55-4097-a59b-99345fd9f7fc",
        "cursor": {
          "ref": "e1713e83-2392-47f0-aedc-1a5cf509ffd9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "871e4770-91b5-46f3-9e01-0a326129c638"
        },
        "item": {
          "id": "ae13696c-3b55-4097-a59b-99345fd9f7fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1d400ba8-a3c2-4c04-9f09-0daee722235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c491896-6f1f-4357-9dd1-1a08d1cf61a3",
        "cursor": {
          "ref": "d6f84899-7f76-4f68-806a-a3f67c84eed3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "25cc4402-8b98-4aea-b80d-de637abae05a"
        },
        "item": {
          "id": "8c491896-6f1f-4357-9dd1-1a08d1cf61a3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "44b774cc-8250-4a65-b4bc-0c5a5269bbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10812698-dc44-42df-a788-cea63cbbf6e6",
        "cursor": {
          "ref": "18fbf605-aea8-4859-83c4-4f41b70d7a08",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "058d682f-35d0-4d00-ae64-547063f62c33"
        },
        "item": {
          "id": "10812698-dc44-42df-a788-cea63cbbf6e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a3a535f6-b86b-4f6c-85ef-909ed970e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2775f907-c01d-4441-881e-b010b9d97c48",
        "cursor": {
          "ref": "59f5a2a2-b40f-429f-9fa6-6000a4b68991",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5245e7bf-8d61-4c0c-93e4-484dd3e89ff1"
        },
        "item": {
          "id": "2775f907-c01d-4441-881e-b010b9d97c48",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "55f17db8-c0a7-449e-8746-cd5c068b677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473c1b37-4fa8-442c-9f87-39194f272bbe",
        "cursor": {
          "ref": "9baa2b1d-adc2-4835-8519-dd4e8ab954a8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "13ceabd4-0ca1-4b81-9572-ccc42e480b4a"
        },
        "item": {
          "id": "473c1b37-4fa8-442c-9f87-39194f272bbe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e8650f7-a8f2-4247-a57a-0539d6a95f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9810d375-db70-4900-bbce-94c1c92ac7c2",
        "cursor": {
          "ref": "214f9564-3713-438e-8d99-87aa3aede411",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5448c98b-2856-4ecc-81f6-96ab2058a374"
        },
        "item": {
          "id": "9810d375-db70-4900-bbce-94c1c92ac7c2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "675f19f2-1b94-4705-9e3f-1d7975911006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f463f7-5b5f-4603-88d2-8ad4b08bfea5",
        "cursor": {
          "ref": "bf4e2ce4-d871-498f-9c20-3be04d6403f3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3b4bf83e-46c4-4bc8-b2c4-c1dd8a4c44a6"
        },
        "item": {
          "id": "85f463f7-5b5f-4603-88d2-8ad4b08bfea5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a70495d6-857f-4f83-899b-fd2fb10500f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9706b380-82e2-4d9b-916d-e4368470de8d",
        "cursor": {
          "ref": "68acbc79-4725-46fe-86a7-e91b881af351",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32b405b4-27b5-44a8-b234-c85ce338f05d"
        },
        "item": {
          "id": "9706b380-82e2-4d9b-916d-e4368470de8d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "afedf441-5333-4a02-82f8-4c2a3940d07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e0df3c-bc96-4d0a-a2f3-d10565b96d11",
        "cursor": {
          "ref": "0cae3ee2-4b66-489d-8e98-4fb33503c848",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6382b3b0-b8f3-4402-ab42-4f52871f12d8"
        },
        "item": {
          "id": "87e0df3c-bc96-4d0a-a2f3-d10565b96d11",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8966cda4-43ec-4614-b8e9-0242fb60726d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090d91b9-38b5-48ea-90c3-60e65786a0fa",
        "cursor": {
          "ref": "6d2bd0ec-1b6c-47fb-b121-1a6fafd89b62",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f5b03380-046e-47a4-9118-76d34cb6e64b"
        },
        "item": {
          "id": "090d91b9-38b5-48ea-90c3-60e65786a0fa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ff14e729-1200-409e-ba1a-48fe675dafa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1eaaf-e590-4614-b149-6dd287b67072",
        "cursor": {
          "ref": "197e81f3-7cb3-4171-9cb3-32af87cfa3d4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0821f3b8-02f6-4349-9279-dca18edf9d6a"
        },
        "item": {
          "id": "c8f1eaaf-e590-4614-b149-6dd287b67072",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1b19b394-0a73-4b65-bf38-f8db8615b253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc1bfcf-5d99-45bc-9b27-413f6e543b4f",
        "cursor": {
          "ref": "5ba17e0c-4aae-478f-89ba-810bb88e699a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9f51a212-5029-4e9f-b3a3-78667b57e72c"
        },
        "item": {
          "id": "2dc1bfcf-5d99-45bc-9b27-413f6e543b4f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7600a2bc-24f8-4db8-812e-864aeb936c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebfbd49-d7f0-495b-9b71-92c71487f7df",
        "cursor": {
          "ref": "1b7dce3f-9ff4-4916-b586-4b5f58582bea",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2e6f9422-f60e-4861-8ffb-e9ccd65eacd3"
        },
        "item": {
          "id": "eebfbd49-d7f0-495b-9b71-92c71487f7df",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "95155333-2c55-4224-bf4b-ceee1c29320d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e123f5-c90d-4ae7-a03a-931e9f686a90",
        "cursor": {
          "ref": "c4b634e0-c6c4-4915-bad1-2f91d5a458b3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "10473205-e1fb-4c4c-b1b6-ab01e1fd1448"
        },
        "item": {
          "id": "d0e123f5-c90d-4ae7-a03a-931e9f686a90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2700db00-df8c-4c86-b1ef-e25a9dec7957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d81876-6dd6-4caa-a349-204b0e9feb86",
        "cursor": {
          "ref": "477fa488-9d70-42e3-8140-0cd728e588af",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8b598345-d16c-4a6b-995d-85afe753f8ec"
        },
        "item": {
          "id": "29d81876-6dd6-4caa-a349-204b0e9feb86",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "746af538-691a-4375-9838-ab17d39ef3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6a5ce0-eb4e-44b0-a917-cfb0ace2735c",
        "cursor": {
          "ref": "2295263a-3feb-435d-8f9c-c6fe7a04c428",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a3adf55a-ede5-4d7d-b321-18d301b04110"
        },
        "item": {
          "id": "ed6a5ce0-eb4e-44b0-a917-cfb0ace2735c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "92cea25c-0ffc-407a-b293-d05f1dc1108e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466db0dd-c4bb-46fc-9e4d-c2bc65f5c607",
        "cursor": {
          "ref": "e8364ecc-ec3f-4f54-93b5-de4c00f54754",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1cb16198-3aec-4f59-828c-74a82661f5f9"
        },
        "item": {
          "id": "466db0dd-c4bb-46fc-9e4d-c2bc65f5c607",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41d1e31f-2d29-463c-b3e3-da8310a610a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7482a831-4bfc-4129-8e2c-19452fd94d9a",
        "cursor": {
          "ref": "c9d06dd2-d65e-40e1-9a3c-09431ec2cbfe",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b66c0b16-9f29-481b-82cc-ef59c9f0a0ac"
        },
        "item": {
          "id": "7482a831-4bfc-4129-8e2c-19452fd94d9a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1065951a-076a-46f3-bea5-017d5a861fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb7427a-4f36-4fb3-9919-8646285379cf",
        "cursor": {
          "ref": "fc09d0e9-ae8b-4f1b-8c76-e2d79e031ffa",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8fb26e00-c08e-4f32-9479-faa2db7028ed"
        },
        "item": {
          "id": "afb7427a-4f36-4fb3-9919-8646285379cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "626ffb53-d283-4d24-b21e-323aa491b065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a8c7a-cc30-4bd8-a089-f67da573de25",
        "cursor": {
          "ref": "0228f1ef-7cb0-41bd-b793-9589c9d99837",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6cdedff4-eec3-4980-96a6-925b6a71e6d3"
        },
        "item": {
          "id": "d87a8c7a-cc30-4bd8-a089-f67da573de25",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "178ca113-f359-40a8-a1e4-c3e863e6d638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc85d3d0-defa-42f9-bc20-b6f8b3679a57",
        "cursor": {
          "ref": "150bbb6b-3c41-4b26-a66b-c6a819328c8d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b16db356-46df-4078-9271-ff7587630a29"
        },
        "item": {
          "id": "cc85d3d0-defa-42f9-bc20-b6f8b3679a57",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22150183-c239-4861-8b68-310748fa5547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471aa08d-208d-4741-8229-5262a2c19074",
        "cursor": {
          "ref": "6ce97368-a257-4387-adfa-ba00ab20f007",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4c587c6a-fa65-46fa-8953-ad0736d53125"
        },
        "item": {
          "id": "471aa08d-208d-4741-8229-5262a2c19074",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6d8ee8fa-3f6e-4009-8d97-eeb6c5e6b7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77dfe87-3c3a-4d08-a638-2ac513c06150",
        "cursor": {
          "ref": "f0688696-e1f2-4b13-9528-fcbe24c484f1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fd5e486e-9195-4e8a-9229-c443c2f6227f"
        },
        "item": {
          "id": "a77dfe87-3c3a-4d08-a638-2ac513c06150",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f2ce1bce-98b4-4550-9c33-0b60fb28e10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203ac24a-7d5f-4d59-88e9-a2d0f1f37ffd",
        "cursor": {
          "ref": "a82e7eec-ca8c-49ed-bed4-f36ca6e43193",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8ebb16df-e720-478a-9495-669ee126a51d"
        },
        "item": {
          "id": "203ac24a-7d5f-4d59-88e9-a2d0f1f37ffd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fbb099f5-ad83-494d-bcae-fbcf3c842648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cf2515-e9c9-4138-ae9d-b3bb78329fb5",
        "cursor": {
          "ref": "8c0445ac-b7f9-4bbe-b721-f234e7b58c79",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "16693f44-96e5-4748-8ee6-9a4fe65df1f4"
        },
        "item": {
          "id": "76cf2515-e9c9-4138-ae9d-b3bb78329fb5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a272fc21-a9b8-43b9-b981-5922fda13ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bf6621-ac9f-4e88-8b52-0c1715902a01",
        "cursor": {
          "ref": "88383591-06e4-40e5-b73a-bad831bba199",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c9d7c025-5827-4e6e-9412-df25b728ff2c"
        },
        "item": {
          "id": "a5bf6621-ac9f-4e88-8b52-0c1715902a01",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cb057acc-7e6d-47f9-ae09-59f016fc8ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9170fb1-1380-4ef7-9ad7-4946075159d9",
        "cursor": {
          "ref": "d664afeb-d800-4278-bdaa-5f5f91a62719",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cad666c4-1605-441a-8331-89525eb4bec8"
        },
        "item": {
          "id": "b9170fb1-1380-4ef7-9ad7-4946075159d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e1ce0def-e8f9-4e43-a5ad-134c297944ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f56fc95-2dc0-409f-81b4-19dfc4b7c029",
        "cursor": {
          "ref": "61c0f02a-a170-44b0-92e7-0e77f71556ce",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "75e9d75d-9225-4259-b935-b537908ab3e3"
        },
        "item": {
          "id": "2f56fc95-2dc0-409f-81b4-19dfc4b7c029",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f594b782-c4ab-453a-a6cd-5c36b717d3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6678e2-7334-4e7b-a59f-80ac00177941",
        "cursor": {
          "ref": "1368ccc3-b845-4c50-9837-aafd146f4fd0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "da868707-8bdf-4766-ac4c-7a225771a463"
        },
        "item": {
          "id": "1a6678e2-7334-4e7b-a59f-80ac00177941",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "be2f81d7-4f62-468d-8f86-95e6c64773c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6203fad8-f2a9-46ef-b022-44078b4b8070",
        "cursor": {
          "ref": "297351b7-068a-4916-af4b-041fc1acb3fb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06e57ee8-1421-42fa-b1a8-8864b8b13ce9"
        },
        "item": {
          "id": "6203fad8-f2a9-46ef-b022-44078b4b8070",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "435560aa-640e-4f97-a748-c530409c74fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820217a6-cb19-4034-a2f9-87507def1295",
        "cursor": {
          "ref": "1672495e-3317-498a-8d37-b388ae4331f7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6cba5fe3-216c-48b6-a7ea-8897c38410b0"
        },
        "item": {
          "id": "820217a6-cb19-4034-a2f9-87507def1295",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f518350b-4af7-4457-b846-29f6a1e16915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20baf0-36d7-44b0-bde0-77dd4392cc67",
        "cursor": {
          "ref": "c22c3285-5c42-4804-9e7a-8dc5c1b18ff3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ba21424-ac51-44fb-ade5-ddae58cd456f"
        },
        "item": {
          "id": "9d20baf0-36d7-44b0-bde0-77dd4392cc67",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6a14572-24e3-42d3-acb6-3808783faf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440eac10-d54d-49de-9c32-1305b0f12e4c",
        "cursor": {
          "ref": "5748f9cc-d3bb-4401-b91a-6f7b1388f290",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b2885c24-4673-463e-bdaf-c25fc357fce2"
        },
        "item": {
          "id": "440eac10-d54d-49de-9c32-1305b0f12e4c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "83f10d67-1130-4423-8150-7fe44b3276d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc0f1d4-5a10-4c92-8c47-50aa5ce9a097",
        "cursor": {
          "ref": "e456719b-ae84-40ef-9d42-a4dd60c78062",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "629f7bd5-8fdb-4245-ba21-00a95d46f824"
        },
        "item": {
          "id": "0cc0f1d4-5a10-4c92-8c47-50aa5ce9a097",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0770ed40-0632-41bf-bf30-531f5ccd7458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcea7fd-e0ab-490b-9b20-2d357f661814",
        "cursor": {
          "ref": "be593a95-1417-4839-89c8-640b4ec36ecd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b3ee43d-fc17-4aed-847f-9565945b8354"
        },
        "item": {
          "id": "bdcea7fd-e0ab-490b-9b20-2d357f661814",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c11741a8-953a-4b0e-aa39-5f25b8b8533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd66b314-b11d-41e2-815e-737d680c139d",
        "cursor": {
          "ref": "c97496e8-c3d2-4b67-9c3a-b76a6e10047d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c44b1364-bac4-4191-b05f-515c0337908e"
        },
        "item": {
          "id": "fd66b314-b11d-41e2-815e-737d680c139d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f88c1125-d949-4b6b-a50c-9e659a96172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e2951a-2ce0-4c38-abd4-3b5550131fa6",
        "cursor": {
          "ref": "808e8fc2-02f7-43d6-8dea-036cef27cb8b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5413f519-126d-4972-bacf-f8509ae8e656"
        },
        "item": {
          "id": "87e2951a-2ce0-4c38-abd4-3b5550131fa6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87f72040-a22d-41b5-aea3-7fe03d8f48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07362ab4-5eee-4368-b168-0708d2aaf9c5",
        "cursor": {
          "ref": "34ca1444-57ee-4c03-b3f2-7ea62fd908a2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ab70f719-aa6d-4572-acb1-b254c815c707"
        },
        "item": {
          "id": "07362ab4-5eee-4368-b168-0708d2aaf9c5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "641c1c66-f564-48fa-ba1f-3430072b0fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9676c5c4-2120-4210-8d70-c6ff62bf7a1f",
        "cursor": {
          "ref": "f3d1ec93-d04f-46b9-bf97-e864f32939ab",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6eff18ea-4a4a-4860-b2cf-8c185c7c113d"
        },
        "item": {
          "id": "9676c5c4-2120-4210-8d70-c6ff62bf7a1f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc9a4de3-be17-4693-a3d0-a99bc964868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e853d9-e2d8-4143-b425-e30b0933fb27",
        "cursor": {
          "ref": "3949adb7-0684-4966-af82-3272958d0a8a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "07ae8068-0e3c-4d66-a9be-3cc8ea075c6e"
        },
        "item": {
          "id": "51e853d9-e2d8-4143-b425-e30b0933fb27",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "129bd7a4-48c7-4b79-88e8-d820f9ddaec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a659d-324a-4ac5-8de3-621ac9605a95",
        "cursor": {
          "ref": "2c5944b0-83d2-44d6-b02d-b7b2c740679c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b555d9dd-687e-441c-824e-f803330bfddf"
        },
        "item": {
          "id": "6a7a659d-324a-4ac5-8de3-621ac9605a95",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c7a3320-c160-4dbe-b15d-1fdab91900b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6013994-5ecf-40a3-a3c7-6e1fa39f3370",
        "cursor": {
          "ref": "decfa775-cc90-4b73-96f3-28817af179e6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc616fee-7587-4a97-a138-e82d2054ab06"
        },
        "item": {
          "id": "b6013994-5ecf-40a3-a3c7-6e1fa39f3370",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a95b93a9-58f7-4e37-9a39-2e93048c2ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90181825-99f0-456f-ac78-d372eaad8d41",
        "cursor": {
          "ref": "4d32550a-2dc1-4fdc-a1ac-fa98f3d48962",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fe7552cd-295c-4d13-9f94-b59b033549d6"
        },
        "item": {
          "id": "90181825-99f0-456f-ac78-d372eaad8d41",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "68dc2419-89dd-46d9-8e2b-5c1c8d29829c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57afac0d-5280-4a52-b828-d126d84c5adf",
        "cursor": {
          "ref": "b4bf5526-7ccb-4e74-bd20-76935a837e6d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "904ce985-556f-4636-9f39-9581a543e2ec"
        },
        "item": {
          "id": "57afac0d-5280-4a52-b828-d126d84c5adf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9b2d2799-3162-4288-acb3-f8d836740d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7752aa36-db15-442b-be42-8e45d259b9a1",
        "cursor": {
          "ref": "bc5d2eb0-a35e-4c84-9c11-014d02af4ff8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "efde4b5c-2ede-490b-9005-8f60affa4936"
        },
        "item": {
          "id": "7752aa36-db15-442b-be42-8e45d259b9a1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "302cb05b-fad2-42d2-acf7-5c4c1cf3d261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7644b7b-d079-4b7b-af0e-e8c25a1ba45f",
        "cursor": {
          "ref": "b78c3b87-a31c-4984-bdb1-cfd271f0a60b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9eb141f7-d6ba-4f6b-815d-d0b4984aaeb1"
        },
        "item": {
          "id": "c7644b7b-d079-4b7b-af0e-e8c25a1ba45f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "292c5fc6-0788-4080-a944-f39141a2a2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0e9df9-e6a5-4be1-a1d2-035237116a80",
        "cursor": {
          "ref": "7b14e5f3-36de-4e05-9e49-7da3eba98f02",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "29529bd9-2130-4eb8-ad6d-764a58a13ac5"
        },
        "item": {
          "id": "5d0e9df9-e6a5-4be1-a1d2-035237116a80",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d2e56f94-3a22-4eee-8555-1253085cc071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7898cd48-8a5c-483e-8fd5-b4fd5f4e14a4",
        "cursor": {
          "ref": "c27b67a5-5fa2-46f2-a7b2-ae5e304fa7ec",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "823bda28-19b6-44a3-abe1-5f1ba139fe08"
        },
        "item": {
          "id": "7898cd48-8a5c-483e-8fd5-b4fd5f4e14a4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b984817-2fe7-48b6-aced-c91040caf4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53324f8c-900f-464b-aef6-76db0b667d2a",
        "cursor": {
          "ref": "82432a83-f56d-4a7b-999e-d2dcd62fd585",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1aea510e-65f7-4e89-85fc-d5f677aad21e"
        },
        "item": {
          "id": "53324f8c-900f-464b-aef6-76db0b667d2a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3897d4a9-adc1-4d00-8b3e-49ed50c81bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125d78cd-18f6-46e6-98ae-b9f2a29b0f74",
        "cursor": {
          "ref": "1b1517ac-ec28-4554-bba6-e9d02f72378a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7a731c4-e3bb-4439-a8fd-d5cc2ef99163"
        },
        "item": {
          "id": "125d78cd-18f6-46e6-98ae-b9f2a29b0f74",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0a7e29b0-4e3e-4640-8c58-b00b53cf4ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a22b84-d2aa-4983-8f10-1bf172b4b34b",
        "cursor": {
          "ref": "a1773183-7536-4274-b836-6c6f46584c03",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3dfd6a7f-f089-4758-89a1-91436f2453b1"
        },
        "item": {
          "id": "65a22b84-d2aa-4983-8f10-1bf172b4b34b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f51a4150-3c59-4bb8-a373-09a5f580228a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fd1bd-fe99-4dd8-a66c-8ab4406c4a2c",
        "cursor": {
          "ref": "ea3e4145-74f7-415c-af01-5c5a44552dec",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1db6a60-903f-49f9-a0e4-0e756baed92d"
        },
        "item": {
          "id": "986fd1bd-fe99-4dd8-a66c-8ab4406c4a2c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c0a73ee8-3ab5-4b19-a9b9-10debfd8bb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973aacbf-ef08-434b-b64f-97be01c04cea",
        "cursor": {
          "ref": "8dea6424-7e4e-4856-a149-135245414cb8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ac1df404-cb3d-425a-a9d5-46fb382398f6"
        },
        "item": {
          "id": "973aacbf-ef08-434b-b64f-97be01c04cea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "270003fc-c45c-4727-a77f-f6f2ddc94e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d1b5d7-e025-447d-83d3-104e7a91bafc",
        "cursor": {
          "ref": "e0ebf8f5-e036-4328-aee3-7c8a7f5c0cc7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ee546a79-3ce3-4dea-8068-33b9d249992a"
        },
        "item": {
          "id": "d7d1b5d7-e025-447d-83d3-104e7a91bafc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ec5564d9-d9ef-4345-91cb-fcba6c6be468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b65a9-fe81-4ddb-9d07-2ccfb6d6d5b2",
        "cursor": {
          "ref": "4dd48218-f250-41e6-97e9-1591f515b4aa",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e370283d-cac4-4277-b36b-9e8d263d7a35"
        },
        "item": {
          "id": "1e1b65a9-fe81-4ddb-9d07-2ccfb6d6d5b2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0292d1f4-a999-442c-b447-660e30e13468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95855e21-d143-4c27-b31a-aca5c887328d",
        "cursor": {
          "ref": "2f0ab924-915d-40bf-94e2-affff5d448cd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0554f0e6-4fbe-4924-b6be-d71a5211400a"
        },
        "item": {
          "id": "95855e21-d143-4c27-b31a-aca5c887328d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9971a782-2d70-4397-891b-f8d9a62ede81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c23b76d-f04a-482d-959b-369e89cb1359",
        "cursor": {
          "ref": "21b146c1-bcbf-4370-ab8e-fd26c09f0ca7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5410f092-884a-4e9e-a927-b85239168d40"
        },
        "item": {
          "id": "4c23b76d-f04a-482d-959b-369e89cb1359",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e4248e73-2e04-4bdf-a63c-cdfc2d47a26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f78d717-c392-463a-bd08-4e2d61988296",
        "cursor": {
          "ref": "34f2ef17-905e-48e6-b385-4551f5d5ef6c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6ff4b3d9-e051-4f99-af31-3a460f54c24f"
        },
        "item": {
          "id": "5f78d717-c392-463a-bd08-4e2d61988296",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb4c676e-9509-46b9-b708-1f7f5aad34d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f790efa9-388c-45f2-a01e-92326a1ba8a9",
        "cursor": {
          "ref": "565ade8f-0199-4a0d-ad82-69f61f7ad127",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1b332c32-7525-49f4-9238-0442e9bf9adf"
        },
        "item": {
          "id": "f790efa9-388c-45f2-a01e-92326a1ba8a9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8d4d4fde-b41b-4594-bb4a-6c007512cde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc52d99-0938-4e59-be61-ba2299a1acbf",
        "cursor": {
          "ref": "35f4b463-7572-4d66-9225-c3a5dd7b7206",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "08ad0754-5224-4fa9-a8e4-219e519d9c2c"
        },
        "item": {
          "id": "0cc52d99-0938-4e59-be61-ba2299a1acbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f01fee9-8b6f-46b9-a9c5-247489cb7fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6a9a0-a4e5-450b-b98d-d71cd6905631",
        "cursor": {
          "ref": "a595219d-d3d3-4510-a366-15e0b426c059",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "390826db-43f7-406e-88dd-c4d004d3a24d"
        },
        "item": {
          "id": "96f6a9a0-a4e5-450b-b98d-d71cd6905631",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dce2b61c-c89e-46ca-968a-a6e097df7eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e94f8a-faab-4cb0-b3db-4642e4afbc36",
        "cursor": {
          "ref": "3ac5afad-a90e-43f3-85b9-541f96e48f7a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "324de454-2a01-4b04-956f-46954cdb7590"
        },
        "item": {
          "id": "66e94f8a-faab-4cb0-b3db-4642e4afbc36",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "410e43d6-d612-4e6d-94b9-2c918c45da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb3cb64-6190-481e-8835-6ab4059f7e56",
        "cursor": {
          "ref": "0af9933d-6b4a-4b29-8628-b17befc3c51d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fdc45419-e8af-4cd4-8b11-3aa8a571e88a"
        },
        "item": {
          "id": "1cb3cb64-6190-481e-8835-6ab4059f7e56",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4a5efa44-9767-48da-a9bc-1943821d7675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82197c0-a223-46e1-89d4-60b68da58637",
        "cursor": {
          "ref": "1f0f9883-8999-499c-b92b-ba131d46bdf3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "96693c8f-a252-417f-9c0d-e7b97bfd5d83"
        },
        "item": {
          "id": "c82197c0-a223-46e1-89d4-60b68da58637",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f13584e8-f7a2-435e-9805-575a64a3da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d6b7a-f560-4984-a7ba-45a0e530d677",
        "cursor": {
          "ref": "50a40339-a011-40a0-af26-99a269d8f992",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4d6541f7-927f-47e1-bedd-10ff5cfd5b0e"
        },
        "item": {
          "id": "240d6b7a-f560-4984-a7ba-45a0e530d677",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e540ab3f-e2e3-4e9e-b5bf-6039e0096661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ef127d-100c-4866-be22-b7969e0af78b",
        "cursor": {
          "ref": "cc053d41-4db5-45b4-8d93-4e07338e8136",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4fec903a-90c1-46cb-b286-dc29660aa2ed"
        },
        "item": {
          "id": "12ef127d-100c-4866-be22-b7969e0af78b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d048a3c6-98b2-4574-b2c3-66536289adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baf4157-1d8e-49c7-bdcd-67fb83774930",
        "cursor": {
          "ref": "7f399d7c-7f8e-4ed7-bdea-ba2f9cb886db",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "99476075-667f-4a37-a4f5-49fa6e4608dc"
        },
        "item": {
          "id": "8baf4157-1d8e-49c7-bdcd-67fb83774930",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e7e2f17-342d-42ce-9178-bd369fa6e250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060e5f07-317c-47c9-83b9-e55896995ddf",
        "cursor": {
          "ref": "8d82a56e-0f88-4866-9766-ba4380d35c47",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e58d4cfa-e1e6-42f3-8cb1-38332c32409c"
        },
        "item": {
          "id": "060e5f07-317c-47c9-83b9-e55896995ddf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b67af5d-5dab-4941-9ccc-62a9a3cf7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca705a8c-a06a-4819-8879-dbce26eb22be",
        "cursor": {
          "ref": "c1c06de7-11fd-4377-8875-81a892474ab7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "53b4cea5-d2f5-466b-a173-00f38a3db150"
        },
        "item": {
          "id": "ca705a8c-a06a-4819-8879-dbce26eb22be",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "64723aad-92fe-48a2-b48e-57351c4791a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50eaa6-3f19-47db-99cf-6fab075ee4dc",
        "cursor": {
          "ref": "b7cc012f-6da5-46c2-afaa-d9ad27febb3f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "16367ff5-2305-475a-b412-2b44d776a7f5"
        },
        "item": {
          "id": "da50eaa6-3f19-47db-99cf-6fab075ee4dc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8ce2f01-1b57-4cdd-b2e5-0c4c936175e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792dff98-d4fb-4eac-ac99-338d998be206",
        "cursor": {
          "ref": "84d5092d-f549-45b8-bfcd-e48417103572",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7c78d121-66c1-41b5-99db-d7474c36c9a9"
        },
        "item": {
          "id": "792dff98-d4fb-4eac-ac99-338d998be206",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4b0ba11b-43df-412c-8368-e4eeabed02a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b3011-0013-44a4-b3cb-d8277c442b53",
        "cursor": {
          "ref": "2d94564d-df03-4148-8438-6b198afca3f4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "58a88db2-26db-454c-8f50-0deafbfff503"
        },
        "item": {
          "id": "309b3011-0013-44a4-b3cb-d8277c442b53",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "285e8719-cc0e-466e-b052-48399c61c76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de8150b-9539-4bdb-ad26-d545af1b5392",
        "cursor": {
          "ref": "7d5077cc-70ae-4001-9975-4d7493587b9d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0e09eca2-104b-43a5-9946-9b3e2ca8b08a"
        },
        "item": {
          "id": "9de8150b-9539-4bdb-ad26-d545af1b5392",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8a9da2bd-75f8-442d-84d4-8dc466aa024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395160af-adf6-4557-bb09-3624666700b1",
        "cursor": {
          "ref": "e441b286-4276-4d55-93bf-9bdbfcf0e955",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e12ea185-25b6-4392-b70b-b597085dc528"
        },
        "item": {
          "id": "395160af-adf6-4557-bb09-3624666700b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ae85557e-f716-445e-881b-34ad5a6eda20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d55342-4649-4e78-a10c-c314dbacac7a",
        "cursor": {
          "ref": "1e29a21c-40d2-4039-b661-992aa26b5687",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cc72e9fa-412f-448d-b952-953e63d11644"
        },
        "item": {
          "id": "e3d55342-4649-4e78-a10c-c314dbacac7a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "304057d1-7941-4ce3-acc5-4cc557fb070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4deba3-a6ba-4f2a-b886-e8bff17415d2",
        "cursor": {
          "ref": "b538d999-a620-4b49-a1cb-090a827be7f0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ca34517c-4fb0-40e2-812b-1cc1d4ab3892"
        },
        "item": {
          "id": "1a4deba3-a6ba-4f2a-b886-e8bff17415d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c4045678-24dd-4a52-b313-0e7ce3267d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6cec59-554e-44be-b4ff-58dbb1232a13",
        "cursor": {
          "ref": "a3aa0d2d-0635-458b-996b-c868970a2109",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "312674b7-a785-442c-853c-eabb9456db10"
        },
        "item": {
          "id": "fe6cec59-554e-44be-b4ff-58dbb1232a13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0b79a2bf-712f-4822-ae5f-0db783e82dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8543677-2b47-4eed-9299-5be147fdf527",
        "cursor": {
          "ref": "2d4dec6f-37f2-44e1-beb7-9b5a70ecfb45",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7bdcc74a-4fdd-4a57-bb87-6c7b48e82b58"
        },
        "item": {
          "id": "c8543677-2b47-4eed-9299-5be147fdf527",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "85b295e0-38f1-4bb3-a828-46d94cae7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7d5296-324b-4cd4-b520-b7af8bd87542",
        "cursor": {
          "ref": "393335fe-ea92-4e4e-9d75-987547cc4e63",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f37b03a5-4e4f-4492-a975-a0a263a26740"
        },
        "item": {
          "id": "5c7d5296-324b-4cd4-b520-b7af8bd87542",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b8740350-17f8-4375-8db7-1eba39f7bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5cccf-9d9f-46f9-9c59-54dfb62ed34a",
        "cursor": {
          "ref": "b264992c-25da-4cd3-bf0f-ab7e1305bb94",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "85d9da9f-7fcc-4c06-8941-a64875be50ce"
        },
        "item": {
          "id": "1aa5cccf-9d9f-46f9-9c59-54dfb62ed34a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b0d4bf5b-f2e4-43b6-97ab-bc30b8e4f6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c9349b-71fe-49e7-a2f7-1417fe0f2e16",
        "cursor": {
          "ref": "e79873cb-ca7d-439e-ae90-95f48564e8fb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "40877ab8-5835-4bc7-8a01-f9ad00ebd894"
        },
        "item": {
          "id": "54c9349b-71fe-49e7-a2f7-1417fe0f2e16",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89b37ac3-12dd-4e3e-b3ff-8ca2bb686ee3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3330e79-6fd5-4d4e-8757-f93fab060bfa",
        "cursor": {
          "ref": "a1af8902-7120-41ed-8d7e-c931ca9faa2b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9abd567c-a3b9-4ba3-9b18-3fd118d8d257"
        },
        "item": {
          "id": "c3330e79-6fd5-4d4e-8757-f93fab060bfa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4241d639-25b7-4eae-ab2f-5c19431c4072",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6445bd-28c2-4182-8c83-97293ddb31e5",
        "cursor": {
          "ref": "a7a58d09-372a-4e7e-b8b9-5b321b920505",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c5b58cb1-6522-4b7b-a2f5-3c2fbc5f524c"
        },
        "item": {
          "id": "bf6445bd-28c2-4182-8c83-97293ddb31e5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "59e31358-7265-4f85-b567-d393db997ec4",
          "status": "OK",
          "code": 200,
          "responseTime": 3062,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb168a7-6e9e-4b68-8b04-940639061670",
        "cursor": {
          "ref": "45d6e456-3dcf-4c0c-aeea-d2d79d29b4f0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da9ed28b-0ba4-4ee3-8493-1a3e6ca313e6"
        },
        "item": {
          "id": "ceb168a7-6e9e-4b68-8b04-940639061670",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "650f2e54-feed-4330-a5e0-1a450432c205",
          "status": "OK",
          "code": 200,
          "responseTime": 2575,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e8de96-b09f-4b77-b973-7eea42e08cf0",
        "cursor": {
          "ref": "7ad29ac4-abb3-49ff-bbb8-80d1f73d7088",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6e9af6d1-abc8-4cb1-99b9-e67259811290"
        },
        "item": {
          "id": "d7e8de96-b09f-4b77-b973-7eea42e08cf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eef5db63-bf64-4fe7-b078-032822f88670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e8de96-b09f-4b77-b973-7eea42e08cf0",
        "cursor": {
          "ref": "7ad29ac4-abb3-49ff-bbb8-80d1f73d7088",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6e9af6d1-abc8-4cb1-99b9-e67259811290"
        },
        "item": {
          "id": "d7e8de96-b09f-4b77-b973-7eea42e08cf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eef5db63-bf64-4fe7-b078-032822f88670",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d812ba2e-386e-4892-8f8d-7161f2c89943",
        "cursor": {
          "ref": "05846c21-53bc-43be-9946-22fe360dbc5b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "febdb525-6b49-4531-8ee0-9955d373aa5d"
        },
        "item": {
          "id": "d812ba2e-386e-4892-8f8d-7161f2c89943",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ff9eac4-1525-495e-9ce7-b64eacc71b49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a1c092-7b31-4f83-8845-4265286d9be6",
        "cursor": {
          "ref": "9a754e75-2666-44a4-824f-aa29fd2abc74",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fc73c619-e98d-4087-88c0-13c4c7e135f7"
        },
        "item": {
          "id": "a5a1c092-7b31-4f83-8845-4265286d9be6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89a87541-4f44-4b3b-8ac0-76f7aa732e6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}